root - INFO - Importing Modules
root - DEBUG - Modules imported and log created in 18.12 seconds
root - INFO - Recording audio
root - DEBUG - Recording finished in 7.10 seconds
root - INFO - Preprocessing audio
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1039)
           2	LOAD_FAST(arg=0, lineno=1042)
           4	LOAD_CONST(arg=1, lineno=1042)
           6	BINARY_SUBSCR(arg=None, lineno=1042)
           8	LOAD_FAST(arg=0, lineno=1042)
          10	LOAD_CONST(arg=2, lineno=1042)
          12	BINARY_SUBSCR(arg=None, lineno=1042)
          14	COMPARE_OP(arg=4, lineno=1042)
          16	LOAD_FAST(arg=0, lineno=1042)
          18	LOAD_CONST(arg=1, lineno=1042)
          20	BINARY_SUBSCR(arg=None, lineno=1042)
          22	LOAD_FAST(arg=0, lineno=1042)
          24	LOAD_CONST(arg=3, lineno=1042)
          26	BINARY_SUBSCR(arg=None, lineno=1042)
          28	COMPARE_OP(arg=5, lineno=1042)
          30	BINARY_AND(arg=None, lineno=1042)
          32	RETURN_VALUE(arg=None, lineno=1042)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1039)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1042)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1042)
numba.core.byteflow - DEBUG - stack ['$x2.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1042)
numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1042)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1042)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1042)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=4, lineno=1042)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1042)
numba.core.byteflow - DEBUG - stack ['$14compare_op.6']
numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1042)
numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7']
numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1042)
numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7', '$const18.8']
numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1042)
numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9']
numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1042)
numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1042)
numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
numba.core.byteflow - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=5, lineno=1042)
numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
numba.core.byteflow - DEBUG - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1042)
numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$28compare_op.13']
numba.core.byteflow - DEBUG - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1042)
numba.core.byteflow - DEBUG - stack ['$30binary_and.14']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - keep phismap: {}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1045)
           2	LOAD_FAST(arg=0, lineno=1048)
           4	LOAD_CONST(arg=1, lineno=1048)
           6	BINARY_SUBSCR(arg=None, lineno=1048)
           8	LOAD_FAST(arg=0, lineno=1048)
          10	LOAD_CONST(arg=2, lineno=1048)
          12	BINARY_SUBSCR(arg=None, lineno=1048)
          14	COMPARE_OP(arg=0, lineno=1048)
          16	LOAD_FAST(arg=0, lineno=1048)
          18	LOAD_CONST(arg=1, lineno=1048)
          20	BINARY_SUBSCR(arg=None, lineno=1048)
          22	LOAD_FAST(arg=0, lineno=1048)
          24	LOAD_CONST(arg=3, lineno=1048)
          26	BINARY_SUBSCR(arg=None, lineno=1048)
          28	COMPARE_OP(arg=1, lineno=1048)
          30	BINARY_AND(arg=None, lineno=1048)
          32	RETURN_VALUE(arg=None, lineno=1048)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1045)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1048)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1048)
numba.core.byteflow - DEBUG - stack ['$x2.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1048)
numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=0, lineno=1048)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=2, lineno=1048)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=BINARY_SUBSCR(arg=None, lineno=1048)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$x8.3', '$const10.4']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=COMPARE_OP(arg=0, lineno=1048)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$12binary_subscr.5']
numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=1048)
numba.core.byteflow - DEBUG - stack ['$14compare_op.6']
numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1048)
numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7']
numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_SUBSCR(arg=None, lineno=1048)
numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$x16.7', '$const18.8']
numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=1048)
numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9']
numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=3, lineno=1048)
numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10']
numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1048)
numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$x22.10', '$const24.11']
numba.core.byteflow - DEBUG - dispatch pc=28, inst=COMPARE_OP(arg=1, lineno=1048)
numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$20binary_subscr.9', '$26binary_subscr.12']
numba.core.byteflow - DEBUG - dispatch pc=30, inst=BINARY_AND(arg=None, lineno=1048)
numba.core.byteflow - DEBUG - stack ['$14compare_op.6', '$28compare_op.13']
numba.core.byteflow - DEBUG - dispatch pc=32, inst=RETURN_VALUE(arg=None, lineno=1048)
numba.core.byteflow - DEBUG - stack ['$30binary_and.14']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - keep phismap: {}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$x8.3'}), (10, {'res': '$const10.4'}), (12, {'index': '$const10.4', 'target': '$x8.3', 'res': '$12binary_subscr.5'}), (14, {'lhs': '$6binary_subscr.2', 'rhs': '$12binary_subscr.5', 'res': '$14compare_op.6'}), (16, {'res': '$x16.7'}), (18, {'res': '$const18.8'}), (20, {'index': '$const18.8', 'target': '$x16.7', 'res': '$20binary_subscr.9'}), (22, {'res': '$x22.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$x22.10', 'res': '$26binary_subscr.12'}), (28, {'lhs': '$20binary_subscr.9', 'rhs': '$26binary_subscr.12', 'res': '$28compare_op.13'}), (30, {'lhs': '$14compare_op.6', 'rhs': '$28compare_op.13', 'res': '$30binary_and.14'}), (32, {'retval': '$30binary_and.14', 'castval': '$32return_value.15'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $const10.4 = const(int, -1)              ['$const10.4']
    $12binary_subscr.5 = getitem(value=x, index=$const10.4, fn=<built-in function getitem>) ['$12binary_subscr.5', '$const10.4', 'x']
    $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5 ['$12binary_subscr.5', '$14compare_op.6', '$6binary_subscr.2']
    $const18.8 = const(int, 0)               ['$const18.8']
    $20binary_subscr.9 = getitem(value=x, index=$const18.8, fn=<built-in function getitem>) ['$20binary_subscr.9', '$const18.8', 'x']
    $const24.11 = const(int, 1)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=x, index=$const24.11, fn=<built-in function getitem>) ['$26binary_subscr.12', '$const24.11', 'x']
    $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12 ['$20binary_subscr.9', '$26binary_subscr.12', '$28compare_op.13']
    $30binary_and.14 = $14compare_op.6 & $28compare_op.13 ['$14compare_op.6', '$28compare_op.13', '$30binary_and.14']
    $32return_value.15 = cast(value=$30binary_and.14) ['$30binary_and.14', '$32return_value.15']
    return $32return_value.15                ['$32return_value.15']

numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1051)
           2	LOAD_GLOBAL(arg=0, lineno=1065)
           4	LOAD_FAST(arg=0, lineno=1065)
           6	CALL_FUNCTION(arg=1, lineno=1065)
           8	LOAD_FAST(arg=1, lineno=1065)
          10	LOAD_CONST(arg=1, lineno=1065)
          12	LOAD_CONST(arg=1, lineno=1065)
          14	BUILD_SLICE(arg=2, lineno=1065)
          16	STORE_SUBSCR(arg=None, lineno=1065)
          18	LOAD_CONST(arg=1, lineno=1065)
          20	RETURN_VALUE(arg=None, lineno=1065)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1051)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1065)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1065)
numba.core.byteflow - DEBUG - stack ['$2load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=1065)
numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=1065)
numba.core.byteflow - DEBUG - stack ['$6call_function.2']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=1065)
numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=1065)
numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=BUILD_SLICE(arg=2, lineno=1065)
numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4', '$const12.5']
numba.core.byteflow - DEBUG - dispatch pc=16, inst=STORE_SUBSCR(arg=None, lineno=1065)
numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$14build_slice.7']
numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1065)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=1065)
numba.core.byteflow - DEBUG - stack ['$const18.8']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - keep phismap: {}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$x4.1'}), (6, {'func': '$2load_global.0', 'args': ['$x4.1'], 'res': '$6call_function.2'}), (8, {'res': '$y8.3'}), (10, {'res': '$const10.4'}), (12, {'res': '$const12.5'}), (14, {'start': '$const10.4', 'stop': '$const12.5', 'step': None, 'res': '$14build_slice.7', 'slicevar': '$14build_slice.6'}), (16, {'target': '$y8.3', 'index': '$14build_slice.7', 'value': '$6call_function.2'}), (18, {'res': '$const18.8'}), (20, {'retval': '$const18.8', 'castval': '$20return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x708758aa7400>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $const10.4 = const(NoneType, None)       ['$const10.4']
    $const12.5 = const(NoneType, None)       ['$const12.5']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1065), Var($const12.5, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4', '$const12.5']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    $const18.8 = const(NoneType, None)       ['$const18.8']
    $20return_value.9 = cast(value=$const18.8) ['$20return_value.9', '$const18.8']
    return $20return_value.9                 ['$20return_value.9']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087537139a0>
numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
numba.core.ssa - DEBUG - on stmt: y = arg(1, name=y)
numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x708758aa7400>)
numba.core.ssa - DEBUG - on stmt: $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $const10.4 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $const12.5 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $14build_slice.6 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1065), Var($const12.5, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: y[slice(None, None, None)] = $6call_function.2
numba.core.ssa - DEBUG - on stmt: $const18.8 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $20return_value.9 = cast(value=$const18.8)
numba.core.ssa - DEBUG - on stmt: return $20return_value.9
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$14build_slice.6': [(<numba.core.ir.Assign object at 0x7087537253c0>,
                                   0)],
             '$14build_slice.7': [(<numba.core.ir.Assign object at 0x7087537254e0>,
                                   0)],
             '$20return_value.9': [(<numba.core.ir.Assign object at 0x7087537258a0>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x708753724430>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x708753724d60>,
                                    0)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x708753724160>,
                             0)],
             '$const12.5': [(<numba.core.ir.Assign object at 0x708753725240>,
                             0)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x708753725720>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7087537246d0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7087537245b0>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7087537139a0>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_FAST(arg=0, lineno=2)
           4	LOAD_ATTR(arg=0, lineno=2)
           6	STORE_FAST(arg=1, lineno=2)
           8	LOAD_GLOBAL(arg=1, lineno=3)
          10	LOAD_ATTR(arg=2, lineno=3)
          12	LOAD_FAST(arg=1, lineno=3)
          14	LOAD_GLOBAL(arg=1, lineno=3)
          16	LOAD_ATTR(arg=3, lineno=3)
          18	LOAD_CONST(arg=1, lineno=3)
          20	CALL_FUNCTION_KW(arg=2, lineno=3)
          22	STORE_FAST(arg=2, lineno=3)
          24	LOAD_CONST(arg=2, lineno=4)
          26	LOAD_FAST(arg=2, lineno=4)
          28	LOAD_CONST(arg=0, lineno=4)
          30	LOAD_CONST(arg=3, lineno=4)
          32	BUILD_SLICE(arg=2, lineno=4)
          34	STORE_SUBSCR(arg=None, lineno=4)
          36	LOAD_CONST(arg=2, lineno=5)
          38	LOAD_FAST(arg=2, lineno=5)
          40	LOAD_CONST(arg=4, lineno=5)
          42	LOAD_CONST(arg=0, lineno=5)
          44	BUILD_SLICE(arg=2, lineno=5)
          46	STORE_SUBSCR(arg=None, lineno=5)
          48	LOAD_GLOBAL(arg=4, lineno=6)
          50	LOAD_GLOBAL(arg=5, lineno=6)
          52	LOAD_CONST(arg=2, lineno=6)
          54	LOAD_CONST(arg=4, lineno=6)
          56	CALL_FUNCTION(arg=2, lineno=6)
          58	UNARY_NEGATIVE(arg=None, lineno=6)
          60	LOAD_FAST(arg=1, lineno=6)
          62	LOAD_CONST(arg=2, lineno=6)
          64	BINARY_SUBSCR(arg=None, lineno=6)
          66	LOAD_GLOBAL(arg=6, lineno=6)
          68	LOAD_CONST(arg=2, lineno=6)
          70	LOAD_CONST(arg=3, lineno=6)
          72	CALL_FUNCTION(arg=2, lineno=6)
          74	BINARY_SUBTRACT(arg=None, lineno=6)
          76	CALL_FUNCTION(arg=2, lineno=6)
          78	GET_ITER(arg=None, lineno=6)
>         80	FOR_ITER(arg=4, lineno=6)
          82	STORE_FAST(arg=3, lineno=6)
          84	LOAD_CONST(arg=2, lineno=7)
          86	STORE_FAST(arg=4, lineno=7)
          88	JUMP_ABSOLUTE(arg=41, lineno=7)
>         90	LOAD_FAST(arg=2, lineno=8)
          92	RETURN_VALUE(arg=None, lineno=8)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=2)
numba.core.byteflow - DEBUG - stack ['$x2.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=STORE_FAST(arg=1, lineno=2)
numba.core.byteflow - DEBUG - stack ['$4load_attr.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_GLOBAL(arg=1, lineno=3)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_ATTR(arg=2, lineno=3)
numba.core.byteflow - DEBUG - stack ['$8load_global.2']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_GLOBAL(arg=1, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4']
numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_ATTR(arg=3, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$14load_global.5']
numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6']
numba.core.byteflow - DEBUG - dispatch pc=20, inst=CALL_FUNCTION_KW(arg=2, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6', '$const18.7']
numba.core.byteflow - DEBUG - dispatch pc=22, inst=STORE_FAST(arg=2, lineno=3)
numba.core.byteflow - DEBUG - stack ['$20call_function_kw.8']
numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=2, lineno=4)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=2, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9']
numba.core.byteflow - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=0, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10']
numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=3, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11']
numba.core.byteflow - DEBUG - dispatch pc=32, inst=BUILD_SLICE(arg=2, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11', '$const30.12']
numba.core.byteflow - DEBUG - dispatch pc=34, inst=STORE_SUBSCR(arg=None, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$32build_slice.14']
numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=2, lineno=5)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=2, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15']
numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16']
numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=0, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17']
numba.core.byteflow - DEBUG - dispatch pc=44, inst=BUILD_SLICE(arg=2, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17', '$const42.18']
numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_SUBSCR(arg=None, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$44build_slice.20']
numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_GLOBAL(arg=4, lineno=6)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=5, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21']
numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22']
numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=4, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23']
numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_FUNCTION(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23', '$const54.24']
numba.core.byteflow - DEBUG - dispatch pc=58, inst=UNARY_NEGATIVE(arg=None, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$56call_function.25']
numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_FAST(arg=1, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26']
numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_CONST(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27']
numba.core.byteflow - DEBUG - dispatch pc=64, inst=BINARY_SUBSCR(arg=None, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27', '$const62.28']
numba.core.byteflow - DEBUG - dispatch pc=66, inst=LOAD_GLOBAL(arg=6, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29']
numba.core.byteflow - DEBUG - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30']
numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=3, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31']
numba.core.byteflow - DEBUG - dispatch pc=72, inst=CALL_FUNCTION(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31', '$const70.32']
numba.core.byteflow - DEBUG - dispatch pc=74, inst=BINARY_SUBTRACT(arg=None, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$72call_function.33']
numba.core.byteflow - DEBUG - dispatch pc=76, inst=CALL_FUNCTION(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34']
numba.core.byteflow - DEBUG - dispatch pc=78, inst=GET_ITER(arg=None, lineno=6)
numba.core.byteflow - DEBUG - stack ['$76call_function.35']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$78get_iter.36',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi80.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=80, inst=FOR_ITER(arg=4, lineno=6)
numba.core.byteflow - DEBUG - stack ['$phi80.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=('$phi80.0', '$80for_iter.2'), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=82 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_FAST(arg=2, lineno=8)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=92, inst=RETURN_VALUE(arg=None, lineno=8)
numba.core.byteflow - DEBUG - stack ['$out090.0']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: ['$phi82.0', '$phi82.1']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=2)
numba.core.byteflow - DEBUG - dispatch pc=82, inst=STORE_FAST(arg=3, lineno=6)
numba.core.byteflow - DEBUG - stack ['$phi82.0', '$phi82.1']
numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_CONST(arg=2, lineno=7)
numba.core.byteflow - DEBUG - stack ['$phi82.0']
numba.core.byteflow - DEBUG - dispatch pc=86, inst=STORE_FAST(arg=4, lineno=7)
numba.core.byteflow - DEBUG - stack ['$phi82.0', '$const84.2']
numba.core.byteflow - DEBUG - dispatch pc=88, inst=JUMP_ABSOLUTE(arg=41, lineno=7)
numba.core.byteflow - DEBUG - stack ['$phi82.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$phi82.0',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=82 nstack_initial=2): {'$phi82.1'},
             State(pc_initial=90 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {'$phi80.0': State(pc_initial=0 nstack_initial=0),
 '$phi82.1': State(pc_initial=80 nstack_initial=1)}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi82.0', State(pc_initial=82 nstack_initial=2))},
             '$phi82.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
numba.core.byteflow - DEBUG - keep phismap: {'$phi80.0': {('$78get_iter.36', State(pc_initial=0 nstack_initial=0))},
 '$phi82.1': {('$80for_iter.2', State(pc_initial=80 nstack_initial=1))}}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi80.0': '$78get_iter.36'},
             State(pc_initial=80 nstack_initial=1): {'$phi82.1': '$80for_iter.2'}})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'item': '$x2.0', 'res': '$4load_attr.1'}), (6, {'value': '$4load_attr.1'}), (8, {'res': '$8load_global.2'}), (10, {'item': '$8load_global.2', 'res': '$10load_attr.3'}), (12, {'res': '$full_shape012.4'}), (14, {'res': '$14load_global.5'}), (16, {'item': '$14load_global.5', 'res': '$16load_attr.6'}), (18, {'res': '$const18.7'}), (20, {'func': '$10load_attr.3', 'args': ['$full_shape012.4', '$16load_attr.6'], 'names': '$const18.7', 'res': '$20call_function_kw.8'}), (22, {'value': '$20call_function_kw.8'}), (24, {'res': '$const24.9'}), (26, {'res': '$out026.10'}), (28, {'res': '$const28.11'}), (30, {'res': '$const30.12'}), (32, {'start': '$const28.11', 'stop': '$const30.12', 'step': None, 'res': '$32build_slice.14', 'slicevar': '$32build_slice.13'}), (34, {'target': '$out026.10', 'index': '$32build_slice.14', 'value': '$const24.9'}), (36, {'res': '$const36.15'}), (38, {'res': '$out038.16'}), (40, {'res': '$const40.17'}), (42, {'res': '$const42.18'}), (44, {'start': '$const40.17', 'stop': '$const42.18', 'step': None, 'res': '$44build_slice.20', 'slicevar': '$44build_slice.19'}), (46, {'target': '$out038.16', 'index': '$44build_slice.20', 'value': '$const36.15'}), (48, {'res': '$48load_global.21'}), (50, {'res': '$50load_global.22'}), (52, {'res': '$const52.23'}), (54, {'res': '$const54.24'}), (56, {'func': '$50load_global.22', 'args': ['$const52.23', '$const54.24'], 'res': '$56call_function.25'}), (58, {'value': '$56call_function.25', 'res': '$58unary_negative.26'}), (60, {'res': '$full_shape060.27'}), (62, {'res': '$const62.28'}), (64, {'index': '$const62.28', 'target': '$full_shape060.27', 'res': '$64binary_subscr.29'}), (66, {'res': '$66load_global.30'}), (68, {'res': '$const68.31'}), (70, {'res': '$const70.32'}), (72, {'func': '$66load_global.30', 'args': ['$const68.31', '$const70.32'], 'res': '$72call_function.33'}), (74, {'lhs': '$64binary_subscr.29', 'rhs': '$72call_function.33', 'res': '$74binary_subtract.34'}), (76, {'func': '$48load_global.21', 'args': ['$58unary_negative.26', '$74binary_subtract.34'], 'res': '$76call_function.35'}), (78, {'value': '$76call_function.35', 'res': '$78get_iter.36'})), outgoing_phis={'$phi80.0': '$78get_iter.36'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$78get_iter.36',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'iterator': '$phi80.0', 'pair': '$80for_iter.1', 'indval': '$80for_iter.2', 'pred': '$80for_iter.3'}),), outgoing_phis={'$phi82.1': '$80for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 82: ('$phi80.0', '$80for_iter.2')})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=2):
AdaptBlockInfo(insts=((82, {'value': '$phi82.1'}), (84, {'res': '$const84.2'}), (86, {'value': '$const84.2'}), (88, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi82.0',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$out090.0'}), (92, {'retval': '$out090.0', 'castval': '$92return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9 = const(int, 0)               ['$const24.9']
    $const28.11 = const(NoneType, None)      ['$const28.11']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11, $const30.12, func=$32build_slice.13, args=(Var($const28.11, <string>:4), Var($const30.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11', '$const30.12']
    out0[$32build_slice.14] = $const24.9     ['$32build_slice.14', '$const24.9', 'out0']
    $const36.15 = const(int, 0)              ['$const36.15']
    $const40.17 = const(int, -1)             ['$const40.17']
    $const42.18 = const(NoneType, None)      ['$const42.18']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17, $const42.18, func=$44build_slice.19, args=(Var($const40.17, <string>:5), Var($const42.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17', '$const42.18']
    out0[$44build_slice.20] = $const36.15    ['$44build_slice.20', '$const36.15', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23 = const(int, 0)              ['$const52.23']
    $const54.24 = const(int, -1)             ['$const54.24']
    $56call_function.25 = call $50load_global.22($const52.23, $const54.24, func=$50load_global.22, args=[Var($const52.23, <string>:6), Var($const54.24, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23', '$const54.24']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28 = const(int, 0)              ['$const62.28']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31 = const(int, 0)              ['$const68.31']
    $const70.32 = const(int, 1)              ['$const70.32']
    $72call_function.33 = call $66load_global.30($const68.31, $const70.32, func=$66load_global.30, args=[Var($const68.31, <string>:6), Var($const70.32, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31', '$const70.32']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x70875361eb30>
numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
numba.core.ssa - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
numba.core.ssa - DEBUG - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
numba.core.ssa - DEBUG - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $const24.9.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const28.11.1 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $const30.12.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: out0[$32build_slice.14.1] = $const24.9.1
numba.core.ssa - DEBUG - on stmt: $const36.15.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const40.17.1 = const(int, -1)
numba.core.ssa - DEBUG - on stmt: $const42.18.1 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: out0[$44build_slice.20.1] = $const36.15.1
numba.core.ssa - DEBUG - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
numba.core.ssa - DEBUG - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $const52.23.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const54.24.1 = const(int, -1)
numba.core.ssa - DEBUG - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
numba.core.ssa - DEBUG - on stmt: $const62.28.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
numba.core.ssa - DEBUG - on stmt: $const68.31.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const70.32.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
numba.core.ssa - DEBUG - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
numba.core.ssa - DEBUG - on stmt: $phi80.0.1 = $78get_iter.36.1
numba.core.ssa - DEBUG - on stmt: jump 80
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 80
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x70875361eb30>
numba.core.ssa - DEBUG - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
numba.core.ssa - DEBUG - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
numba.core.ssa - DEBUG - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
numba.core.ssa - DEBUG - on stmt: $phi82.1.1 = $80for_iter.2.1
numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3.1, 82, 92
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 82
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x70875361eb30>
numba.core.ssa - DEBUG - on stmt: index00 = $phi82.1.1
numba.core.ssa - DEBUG - on stmt: jump 90
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 92
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x70875361eb30>
numba.core.ssa - DEBUG - on stmt: $92return_value.1.1 = cast(value=out0)
numba.core.ssa - DEBUG - on stmt: return $92return_value.1.1
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 90
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x70875361eb30>
numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: stencil_index = $const4.1 + index00
numba.core.ssa - DEBUG - on stmt: $6binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $const10.4 = const(int, -1)
numba.core.ssa - DEBUG - on stmt: stencil_index.1 = $const10.4 + index00
numba.core.ssa - DEBUG - on stmt: $12binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5
numba.core.ssa - DEBUG - on stmt: $const18.8 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: stencil_index.2 = $const18.8 + index00
numba.core.ssa - DEBUG - on stmt: $20binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $const24.11 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: stencil_index.3 = $const24.11 + index00
numba.core.ssa - DEBUG - on stmt: $26binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12
numba.core.ssa - DEBUG - on stmt: $30binary_and.14 = $14compare_op.6 & $28compare_op.13
numba.core.ssa - DEBUG - on stmt: $32return_value.15 = cast(value=$30binary_and.14)
numba.core.ssa - DEBUG - on stmt: out0[index00] = $32return_value.15
numba.core.ssa - DEBUG - on stmt: jump 91
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 91
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x70875361eb30>
numba.core.ssa - DEBUG - on stmt: jump 80
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10load_attr.3.1': [(<numba.core.ir.Assign object at 0x708753801540>,
                                   0)],
             '$12binary_subscr.5': [(<numba.core.ir.Assign object at 0x7087537f7fd0>,
                                     90)],
             '$14compare_op.6': [(<numba.core.ir.Assign object at 0x7087537ed390>,
                                  90)],
             '$14load_global.5.1': [(<numba.core.ir.Assign object at 0x7087538012a0>,
                                     0)],
             '$16load_attr.6.1': [(<numba.core.ir.Assign object at 0x708753800fd0>,
                                   0)],
             '$20binary_subscr.9': [(<numba.core.ir.Assign object at 0x708753800250>,
                                     90)],
             '$26binary_subscr.12': [(<numba.core.ir.Assign object at 0x708753800490>,
                                      90)],
             '$28compare_op.13': [(<numba.core.ir.Assign object at 0x7087537f4880>,
                                   90)],
             '$30binary_and.14': [(<numba.core.ir.Assign object at 0x7087537f4a60>,
                                   90)],
             '$32build_slice.13.1': [(<numba.core.ir.Assign object at 0x7087538021d0>,
                                      0)],
             '$32build_slice.14.1': [(<numba.core.ir.Assign object at 0x7087538022f0>,
                                      0)],
             '$32return_value.15': [(<numba.core.ir.Assign object at 0x7087537f5510>,
                                     90)],
             '$44build_slice.19.1': [(<numba.core.ir.Assign object at 0x708753802ad0>,
                                      0)],
             '$44build_slice.20.1': [(<numba.core.ir.Assign object at 0x708753802bf0>,
                                      0)],
             '$48load_global.21.1': [(<numba.core.ir.Assign object at 0x708753802e30>,
                                      0)],
             '$50load_global.22.1': [(<numba.core.ir.Assign object at 0x708753802fb0>,
                                      0)],
             '$56call_function.25.1': [(<numba.core.ir.Assign object at 0x708753803490>,
                                        0)],
             '$58unary_negative.26.1': [(<numba.core.ir.Assign object at 0x7087538035b0>,
                                         0)],
             '$64binary_subscr.29.1': [(<numba.core.ir.Assign object at 0x708753803a00>,
                                        0)],
             '$66load_global.30.1': [(<numba.core.ir.Assign object at 0x708753803b50>,
                                      0)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x7087537f7d90>,
                                    90)],
             '$72call_function.33.1': [(<numba.core.ir.Assign object at 0x708753610070>,
                                        0)],
             '$74binary_subtract.34.1': [(<numba.core.ir.Assign object at 0x7087536101c0>,
                                          0)],
             '$76call_function.35.1': [(<numba.core.ir.Assign object at 0x708753610370>,
                                        0)],
             '$78get_iter.36.1': [(<numba.core.ir.Assign object at 0x708753610490>,
                                   0)],
             '$80for_iter.1.1': [(<numba.core.ir.Assign object at 0x708753610580>,
                                  80)],
             '$80for_iter.2.1': [(<numba.core.ir.Assign object at 0x7087536106a0>,
                                  80)],
             '$80for_iter.3.1': [(<numba.core.ir.Assign object at 0x7087536107c0>,
                                  80)],
             '$8load_global.2.1': [(<numba.core.ir.Assign object at 0x7087538016c0>,
                                    0)],
             '$92return_value.1.1': [(<numba.core.ir.Assign object at 0x7087536110f0>,
                                      92)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x7087537d3e50>,
                             90)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x7087537ed570>,
                             90)],
             '$const24.11': [(<numba.core.ir.Assign object at 0x7087537ef340>,
                              90)],
             '$const24.9.1': [(<numba.core.ir.Assign object at 0x708753800880>,
                               0)],
             '$const28.11.1': [(<numba.core.ir.Assign object at 0x708753800550>,
                                0)],
             '$const30.12.1': [(<numba.core.ir.Assign object at 0x708753802050>,
                                0)],
             '$const36.15.1': [(<numba.core.ir.Assign object at 0x708753802530>,
                                0)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x7087537d2860>,
                            90)],
             '$const40.17.1': [(<numba.core.ir.Assign object at 0x7087538027d0>,
                                0)],
             '$const42.18.1': [(<numba.core.ir.Assign object at 0x708753802950>,
                                0)],
             '$const52.23.1': [(<numba.core.ir.Assign object at 0x708753803130>,
                                0)],
             '$const54.24.1': [(<numba.core.ir.Assign object at 0x7087538032b0>,
                                0)],
             '$const62.28.1': [(<numba.core.ir.Assign object at 0x708753803850>,
                                0)],
             '$const68.31.1': [(<numba.core.ir.Assign object at 0x708753803cd0>,
                                0)],
             '$const70.32.1': [(<numba.core.ir.Assign object at 0x708753803e50>,
                                0)],
             '$phi80.0.1': [(<numba.core.ir.Assign object at 0x708753801a50>,
                             0)],
             '$phi82.1.1': [(<numba.core.ir.Assign object at 0x708753803760>,
                             80)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x708753801960>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x708753610a90>, 82)],
             'out0': [(<numba.core.ir.Assign object at 0x708753800b50>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7087537f73a0>,
                                90)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7087537f7f10>,
                                  90)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x708753800190>,
                                  90)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x7087538003d0>,
                                  90)],
             'x': [(<numba.core.ir.Assign object at 0x708753801c00>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x708753613790>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=4388)
           2	LOAD_GLOBAL(arg=0, lineno=4389)
           4	LOAD_FAST(arg=0, lineno=4389)
           6	LOAD_FAST(arg=1, lineno=4389)
           8	LOAD_DEREF(arg=0, lineno=4389)
          10	CALL_FUNCTION(arg=3, lineno=4389)
          12	RETURN_VALUE(arg=None, lineno=4389)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=4388)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4389)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4389)
numba.core.byteflow - DEBUG - stack ['$2load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4389)
numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$shape4.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_DEREF(arg=0, lineno=4389)
numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$shape4.1', '$dtype6.2']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=CALL_FUNCTION(arg=3, lineno=4389)
numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$shape4.1', '$dtype6.2', '$8load_deref.3']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4389)
numba.core.byteflow - DEBUG - stack ['$10call_function.4']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - keep phismap: {}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$shape4.1'}), (6, {'res': '$dtype6.2'}), (8, {'res': '$8load_deref.3'}), (10, {'func': '$2load_global.0', 'args': ['$shape4.1', '$dtype6.2', '$8load_deref.3'], 'res': '$10call_function.4'}), (12, {'retval': '$10call_function.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$2load_global.0']
    $8load_deref.3 = freevar(retty: array(bool, 1d, C)) ['$8load_deref.3']
    $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4388), Var(dtype, arrayobj.py:4388), Var($8load_deref.3, arrayobj.py:4389)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_deref.3', 'dtype', 'shape']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708753627760>
numba.core.ssa - DEBUG - on stmt: shape = arg(0, name=shape)
numba.core.ssa - DEBUG - on stmt: dtype = arg(1, name=dtype)
numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>)
numba.core.ssa - DEBUG - on stmt: $8load_deref.3 = freevar(retty: array(bool, 1d, C))
numba.core.ssa - DEBUG - on stmt: $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4388), Var(dtype, arrayobj.py:4388), Var($8load_deref.3, arrayobj.py:4389)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $12return_value.5 = cast(value=$10call_function.4)
numba.core.ssa - DEBUG - on stmt: return $12return_value.5
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10call_function.4': [(<numba.core.ir.Assign object at 0x7087536272e0>,
                                     0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x708753627400>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x708753624fa0>,
                                  0)],
             '$8load_deref.3': [(<numba.core.ir.Assign object at 0x708753627100>,
                                 0)],
             'dtype': [(<numba.core.ir.Assign object at 0x708753626860>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x708753626710>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x708753627760>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=4264)
           2	LOAD_FAST(arg=0, lineno=4267)
           4	LOAD_METHOD(arg=0, lineno=4267)
           6	LOAD_FAST(arg=1, lineno=4267)
           8	LOAD_FAST(arg=2, lineno=4267)
          10	CALL_METHOD(arg=2, lineno=4267)
          12	RETURN_VALUE(arg=None, lineno=4267)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=4264)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=4267)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_METHOD(arg=0, lineno=4267)
numba.core.byteflow - DEBUG - stack ['$arrtype2.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4267)
numba.core.byteflow - DEBUG - stack ['$4load_method.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=2, lineno=4267)
numba.core.byteflow - DEBUG - stack ['$4load_method.1', '$size6.2']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=CALL_METHOD(arg=2, lineno=4267)
numba.core.byteflow - DEBUG - stack ['$4load_method.1', '$size6.2', '$align8.3']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4267)
numba.core.byteflow - DEBUG - stack ['$10call_method.4']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - keep phismap: {}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$arrtype2.0'}), (4, {'item': '$arrtype2.0', 'res': '$4load_method.1'}), (6, {'res': '$size6.2'}), (8, {'res': '$align8.3'}), (10, {'func': '$4load_method.1', 'args': ['$size6.2', '$align8.3'], 'res': '$10call_method.4'}), (12, {'retval': '$10call_method.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    arrtype = arg(0, name=arrtype)           ['arrtype']
    size = arg(1, name=size)                 ['size']
    align = arg(2, name=align)               ['align']
    $4load_method.1 = getattr(value=arrtype, attr=_allocate) ['$4load_method.1', 'arrtype']
    $10call_method.4 = call $4load_method.1(size, align, func=$4load_method.1, args=[Var(size, arrayobj.py:4264), Var(align, arrayobj.py:4264)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', 'align', 'size']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x70875367a6b0>
numba.core.ssa - DEBUG - on stmt: arrtype = arg(0, name=arrtype)
numba.core.ssa - DEBUG - on stmt: size = arg(1, name=size)
numba.core.ssa - DEBUG - on stmt: align = arg(2, name=align)
numba.core.ssa - DEBUG - on stmt: $4load_method.1 = getattr(value=arrtype, attr=_allocate)
numba.core.ssa - DEBUG - on stmt: $10call_method.4 = call $4load_method.1(size, align, func=$4load_method.1, args=[Var(size, arrayobj.py:4264), Var(align, arrayobj.py:4264)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $12return_value.5 = cast(value=$10call_method.4)
numba.core.ssa - DEBUG - on stmt: return $12return_value.5
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10call_method.4': [(<numba.core.ir.Assign object at 0x708753679900>,
                                   0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x7087536799f0>,
                                    0)],
             '$4load_method.1': [(<numba.core.ir.Assign object at 0x7087536794b0>,
                                  0)],
             'align': [(<numba.core.ir.Assign object at 0x708753679210>, 0)],
             'arrtype': [(<numba.core.ir.Assign object at 0x7087536787c0>, 0)],
             'size': [(<numba.core.ir.Assign object at 0x708753678070>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x70875367a6b0>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=4259)
           2	LOAD_GLOBAL(arg=0, lineno=4260)
           4	LOAD_FAST(arg=1, lineno=4260)
           6	LOAD_FAST(arg=2, lineno=4260)
           8	CALL_FUNCTION(arg=2, lineno=4260)
          10	RETURN_VALUE(arg=None, lineno=4260)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=4259)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4260)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=4260)
numba.core.byteflow - DEBUG - stack ['$2load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=2, lineno=4260)
numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$allocsize4.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=CALL_FUNCTION(arg=2, lineno=4260)
numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$allocsize4.1', '$align6.2']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=RETURN_VALUE(arg=None, lineno=4260)
numba.core.byteflow - DEBUG - stack ['$8call_function.3']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - keep phismap: {}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$allocsize4.1'}), (6, {'res': '$align6.2'}), (8, {'func': '$2load_global.0', 'args': ['$allocsize4.1', '$align6.2'], 'res': '$8call_function.3'}), (10, {'retval': '$8call_function.3', 'castval': '$10return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    cls = arg(0, name=cls)                   ['cls']
    allocsize = arg(1, name=allocsize)       ['allocsize']
    align = arg(2, name=align)               ['align']
    $2load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>) ['$2load_global.0']
    $8call_function.3 = call $2load_global.0(allocsize, align, func=$2load_global.0, args=[Var(allocsize, arrayobj.py:4259), Var(align, arrayobj.py:4259)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'align', 'allocsize']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    return $10return_value.4                 ['$10return_value.4']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087537d2d70>
numba.core.ssa - DEBUG - on stmt: cls = arg(0, name=cls)
numba.core.ssa - DEBUG - on stmt: allocsize = arg(1, name=allocsize)
numba.core.ssa - DEBUG - on stmt: align = arg(2, name=align)
numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>)
numba.core.ssa - DEBUG - on stmt: $8call_function.3 = call $2load_global.0(allocsize, align, func=$2load_global.0, args=[Var(allocsize, arrayobj.py:4259), Var(align, arrayobj.py:4259)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $10return_value.4 = cast(value=$8call_function.3)
numba.core.ssa - DEBUG - on stmt: return $10return_value.4
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10return_value.4': [(<numba.core.ir.Assign object at 0x70875367bb80>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x70875367ab60>,
                                  0)],
             '$8call_function.3': [(<numba.core.ir.Assign object at 0x70875367ba60>,
                                    0)],
             'align': [(<numba.core.ir.Assign object at 0x70875367ab30>, 0)],
             'allocsize': [(<numba.core.ir.Assign object at 0x70875367b6a0>,
                            0)],
             'cls': [(<numba.core.ir.Assign object at 0x70875367b610>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7087537d2d70>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=200)
           2	LOAD_FAST(arg=0, lineno=201)
           4	LOAD_DEREF(arg=0, lineno=201)
           6	BINARY_SUBSCR(arg=None, lineno=201)
           8	RETURN_VALUE(arg=None, lineno=201)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=200)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=201)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_DEREF(arg=0, lineno=201)
numba.core.byteflow - DEBUG - stack ['$tup2.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=201)
numba.core.byteflow - DEBUG - stack ['$tup2.0', '$4load_deref.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=RETURN_VALUE(arg=None, lineno=201)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - keep phismap: {}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$tup2.0'}), (4, {'res': '$4load_deref.1'}), (6, {'index': '$4load_deref.1', 'target': '$tup2.0', 'res': '$6binary_subscr.2'}), (8, {'retval': '$6binary_subscr.2', 'castval': '$8return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    tup = arg(0, name=tup)                   ['tup']
    idx = arg(1, name=idx)                   ['idx']
    $4load_deref.1 = freevar(idx_val: 0)     ['$4load_deref.1']
    $6binary_subscr.2 = getitem(value=tup, index=$4load_deref.1, fn=<built-in function getitem>) ['$4load_deref.1', '$6binary_subscr.2', 'tup']
    $8return_value.3 = cast(value=$6binary_subscr.2) ['$6binary_subscr.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708753625810>
numba.core.ssa - DEBUG - on stmt: tup = arg(0, name=tup)
numba.core.ssa - DEBUG - on stmt: idx = arg(1, name=idx)
numba.core.ssa - DEBUG - on stmt: $4load_deref.1 = freevar(idx_val: 0)
numba.core.ssa - DEBUG - on stmt: $6binary_subscr.2 = static_getitem(value=tup, index=0, index_var=$4load_deref.1, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $8return_value.3 = cast(value=$6binary_subscr.2)
numba.core.ssa - DEBUG - on stmt: return $8return_value.3
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$4load_deref.1': [(<numba.core.ir.Assign object at 0x708753599f30>,
                                 0)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x70875359a770>,
                                    0)],
             '$8return_value.3': [(<numba.core.ir.Assign object at 0x70875359a230>,
                                   0)],
             'idx': [(<numba.core.ir.Assign object at 0x708753598ca0>, 0)],
             'tup': [(<numba.core.ir.Assign object at 0x7087535992d0>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x708753625810>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1051)
           2	LOAD_GLOBAL(arg=0, lineno=1065)
           4	LOAD_FAST(arg=0, lineno=1065)
           6	CALL_FUNCTION(arg=1, lineno=1065)
           8	LOAD_FAST(arg=1, lineno=1065)
          10	LOAD_CONST(arg=1, lineno=1065)
          12	LOAD_CONST(arg=1, lineno=1065)
          14	BUILD_SLICE(arg=2, lineno=1065)
          16	STORE_SUBSCR(arg=None, lineno=1065)
          18	LOAD_CONST(arg=1, lineno=1065)
          20	RETURN_VALUE(arg=None, lineno=1065)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1051)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1065)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1065)
numba.core.byteflow - DEBUG - stack ['$2load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=1065)
numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=1065)
numba.core.byteflow - DEBUG - stack ['$6call_function.2']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=1065)
numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=1065)
numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=BUILD_SLICE(arg=2, lineno=1065)
numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4', '$const12.5']
numba.core.byteflow - DEBUG - dispatch pc=16, inst=STORE_SUBSCR(arg=None, lineno=1065)
numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$14build_slice.7']
numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1065)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=1065)
numba.core.byteflow - DEBUG - stack ['$const18.8']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - keep phismap: {}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$x4.1'}), (6, {'func': '$2load_global.0', 'args': ['$x4.1'], 'res': '$6call_function.2'}), (8, {'res': '$y8.3'}), (10, {'res': '$const10.4'}), (12, {'res': '$const12.5'}), (14, {'start': '$const10.4', 'stop': '$const12.5', 'step': None, 'res': '$14build_slice.7', 'slicevar': '$14build_slice.6'}), (16, {'target': '$y8.3', 'index': '$14build_slice.7', 'value': '$6call_function.2'}), (18, {'res': '$const18.8'}), (20, {'retval': '$const18.8', 'castval': '$20return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x708758aa7400>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $const10.4 = const(NoneType, None)       ['$const10.4']
    $const12.5 = const(NoneType, None)       ['$const12.5']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1065), Var($const12.5, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4', '$const12.5']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    $const18.8 = const(NoneType, None)       ['$const18.8']
    $20return_value.9 = cast(value=$const18.8) ['$20return_value.9', '$const18.8']
    return $20return_value.9                 ['$20return_value.9']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708753726170>
numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
numba.core.ssa - DEBUG - on stmt: y = arg(1, name=y)
numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x708758aa7400>)
numba.core.ssa - DEBUG - on stmt: $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $const10.4 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $const12.5 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $14build_slice.6 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1065), Var($const12.5, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: y[slice(None, None, None)] = $6call_function.2
numba.core.ssa - DEBUG - on stmt: $const18.8 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $20return_value.9 = cast(value=$const18.8)
numba.core.ssa - DEBUG - on stmt: return $20return_value.9
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$14build_slice.6': [(<numba.core.ir.Assign object at 0x7087534eec20>,
                                   0)],
             '$14build_slice.7': [(<numba.core.ir.Assign object at 0x7087534ecd90>,
                                   0)],
             '$20return_value.9': [(<numba.core.ir.Assign object at 0x7087534ec970>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7087534eda80>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x7087534ecf40>,
                                    0)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x7087534ed0c0>,
                             0)],
             '$const12.5': [(<numba.core.ir.Assign object at 0x7087534eea70>,
                             0)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x7087534ecaf0>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7087534ed000>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7087534ee290>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x708753726170>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_FAST(arg=0, lineno=2)
           4	LOAD_ATTR(arg=0, lineno=2)
           6	STORE_FAST(arg=1, lineno=2)
           8	LOAD_GLOBAL(arg=1, lineno=3)
          10	LOAD_ATTR(arg=2, lineno=3)
          12	LOAD_FAST(arg=1, lineno=3)
          14	LOAD_GLOBAL(arg=1, lineno=3)
          16	LOAD_ATTR(arg=3, lineno=3)
          18	LOAD_CONST(arg=1, lineno=3)
          20	CALL_FUNCTION_KW(arg=2, lineno=3)
          22	STORE_FAST(arg=2, lineno=3)
          24	LOAD_CONST(arg=2, lineno=4)
          26	LOAD_FAST(arg=2, lineno=4)
          28	LOAD_CONST(arg=0, lineno=4)
          30	LOAD_CONST(arg=3, lineno=4)
          32	BUILD_SLICE(arg=2, lineno=4)
          34	STORE_SUBSCR(arg=None, lineno=4)
          36	LOAD_CONST(arg=2, lineno=5)
          38	LOAD_FAST(arg=2, lineno=5)
          40	LOAD_CONST(arg=4, lineno=5)
          42	LOAD_CONST(arg=0, lineno=5)
          44	BUILD_SLICE(arg=2, lineno=5)
          46	STORE_SUBSCR(arg=None, lineno=5)
          48	LOAD_GLOBAL(arg=4, lineno=6)
          50	LOAD_GLOBAL(arg=5, lineno=6)
          52	LOAD_CONST(arg=2, lineno=6)
          54	LOAD_CONST(arg=4, lineno=6)
          56	CALL_FUNCTION(arg=2, lineno=6)
          58	UNARY_NEGATIVE(arg=None, lineno=6)
          60	LOAD_FAST(arg=1, lineno=6)
          62	LOAD_CONST(arg=2, lineno=6)
          64	BINARY_SUBSCR(arg=None, lineno=6)
          66	LOAD_GLOBAL(arg=6, lineno=6)
          68	LOAD_CONST(arg=2, lineno=6)
          70	LOAD_CONST(arg=3, lineno=6)
          72	CALL_FUNCTION(arg=2, lineno=6)
          74	BINARY_SUBTRACT(arg=None, lineno=6)
          76	CALL_FUNCTION(arg=2, lineno=6)
          78	GET_ITER(arg=None, lineno=6)
>         80	FOR_ITER(arg=4, lineno=6)
          82	STORE_FAST(arg=3, lineno=6)
          84	LOAD_CONST(arg=2, lineno=7)
          86	STORE_FAST(arg=4, lineno=7)
          88	JUMP_ABSOLUTE(arg=41, lineno=7)
>         90	LOAD_FAST(arg=2, lineno=8)
          92	RETURN_VALUE(arg=None, lineno=8)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=2)
numba.core.byteflow - DEBUG - stack ['$x2.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=STORE_FAST(arg=1, lineno=2)
numba.core.byteflow - DEBUG - stack ['$4load_attr.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_GLOBAL(arg=1, lineno=3)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_ATTR(arg=2, lineno=3)
numba.core.byteflow - DEBUG - stack ['$8load_global.2']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_GLOBAL(arg=1, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4']
numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_ATTR(arg=3, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$14load_global.5']
numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6']
numba.core.byteflow - DEBUG - dispatch pc=20, inst=CALL_FUNCTION_KW(arg=2, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6', '$const18.7']
numba.core.byteflow - DEBUG - dispatch pc=22, inst=STORE_FAST(arg=2, lineno=3)
numba.core.byteflow - DEBUG - stack ['$20call_function_kw.8']
numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=2, lineno=4)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=2, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9']
numba.core.byteflow - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=0, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10']
numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=3, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11']
numba.core.byteflow - DEBUG - dispatch pc=32, inst=BUILD_SLICE(arg=2, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11', '$const30.12']
numba.core.byteflow - DEBUG - dispatch pc=34, inst=STORE_SUBSCR(arg=None, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$32build_slice.14']
numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=2, lineno=5)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=2, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15']
numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16']
numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=0, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17']
numba.core.byteflow - DEBUG - dispatch pc=44, inst=BUILD_SLICE(arg=2, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17', '$const42.18']
numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_SUBSCR(arg=None, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$44build_slice.20']
numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_GLOBAL(arg=4, lineno=6)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=5, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21']
numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22']
numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=4, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23']
numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_FUNCTION(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23', '$const54.24']
numba.core.byteflow - DEBUG - dispatch pc=58, inst=UNARY_NEGATIVE(arg=None, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$56call_function.25']
numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_FAST(arg=1, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26']
numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_CONST(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27']
numba.core.byteflow - DEBUG - dispatch pc=64, inst=BINARY_SUBSCR(arg=None, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27', '$const62.28']
numba.core.byteflow - DEBUG - dispatch pc=66, inst=LOAD_GLOBAL(arg=6, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29']
numba.core.byteflow - DEBUG - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30']
numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=3, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31']
numba.core.byteflow - DEBUG - dispatch pc=72, inst=CALL_FUNCTION(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31', '$const70.32']
numba.core.byteflow - DEBUG - dispatch pc=74, inst=BINARY_SUBTRACT(arg=None, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$72call_function.33']
numba.core.byteflow - DEBUG - dispatch pc=76, inst=CALL_FUNCTION(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34']
numba.core.byteflow - DEBUG - dispatch pc=78, inst=GET_ITER(arg=None, lineno=6)
numba.core.byteflow - DEBUG - stack ['$76call_function.35']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$78get_iter.36',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi80.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=80, inst=FOR_ITER(arg=4, lineno=6)
numba.core.byteflow - DEBUG - stack ['$phi80.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=('$phi80.0', '$80for_iter.2'), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=82 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_FAST(arg=2, lineno=8)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=92, inst=RETURN_VALUE(arg=None, lineno=8)
numba.core.byteflow - DEBUG - stack ['$out090.0']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: ['$phi82.0', '$phi82.1']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=2)
numba.core.byteflow - DEBUG - dispatch pc=82, inst=STORE_FAST(arg=3, lineno=6)
numba.core.byteflow - DEBUG - stack ['$phi82.0', '$phi82.1']
numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_CONST(arg=2, lineno=7)
numba.core.byteflow - DEBUG - stack ['$phi82.0']
numba.core.byteflow - DEBUG - dispatch pc=86, inst=STORE_FAST(arg=4, lineno=7)
numba.core.byteflow - DEBUG - stack ['$phi82.0', '$const84.2']
numba.core.byteflow - DEBUG - dispatch pc=88, inst=JUMP_ABSOLUTE(arg=41, lineno=7)
numba.core.byteflow - DEBUG - stack ['$phi82.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$phi82.0',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=82 nstack_initial=2): {'$phi82.1'},
             State(pc_initial=90 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {'$phi80.0': State(pc_initial=0 nstack_initial=0),
 '$phi82.1': State(pc_initial=80 nstack_initial=1)}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi82.0', State(pc_initial=82 nstack_initial=2))},
             '$phi82.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
numba.core.byteflow - DEBUG - keep phismap: {'$phi80.0': {('$78get_iter.36', State(pc_initial=0 nstack_initial=0))},
 '$phi82.1': {('$80for_iter.2', State(pc_initial=80 nstack_initial=1))}}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi80.0': '$78get_iter.36'},
             State(pc_initial=80 nstack_initial=1): {'$phi82.1': '$80for_iter.2'}})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'item': '$x2.0', 'res': '$4load_attr.1'}), (6, {'value': '$4load_attr.1'}), (8, {'res': '$8load_global.2'}), (10, {'item': '$8load_global.2', 'res': '$10load_attr.3'}), (12, {'res': '$full_shape012.4'}), (14, {'res': '$14load_global.5'}), (16, {'item': '$14load_global.5', 'res': '$16load_attr.6'}), (18, {'res': '$const18.7'}), (20, {'func': '$10load_attr.3', 'args': ['$full_shape012.4', '$16load_attr.6'], 'names': '$const18.7', 'res': '$20call_function_kw.8'}), (22, {'value': '$20call_function_kw.8'}), (24, {'res': '$const24.9'}), (26, {'res': '$out026.10'}), (28, {'res': '$const28.11'}), (30, {'res': '$const30.12'}), (32, {'start': '$const28.11', 'stop': '$const30.12', 'step': None, 'res': '$32build_slice.14', 'slicevar': '$32build_slice.13'}), (34, {'target': '$out026.10', 'index': '$32build_slice.14', 'value': '$const24.9'}), (36, {'res': '$const36.15'}), (38, {'res': '$out038.16'}), (40, {'res': '$const40.17'}), (42, {'res': '$const42.18'}), (44, {'start': '$const40.17', 'stop': '$const42.18', 'step': None, 'res': '$44build_slice.20', 'slicevar': '$44build_slice.19'}), (46, {'target': '$out038.16', 'index': '$44build_slice.20', 'value': '$const36.15'}), (48, {'res': '$48load_global.21'}), (50, {'res': '$50load_global.22'}), (52, {'res': '$const52.23'}), (54, {'res': '$const54.24'}), (56, {'func': '$50load_global.22', 'args': ['$const52.23', '$const54.24'], 'res': '$56call_function.25'}), (58, {'value': '$56call_function.25', 'res': '$58unary_negative.26'}), (60, {'res': '$full_shape060.27'}), (62, {'res': '$const62.28'}), (64, {'index': '$const62.28', 'target': '$full_shape060.27', 'res': '$64binary_subscr.29'}), (66, {'res': '$66load_global.30'}), (68, {'res': '$const68.31'}), (70, {'res': '$const70.32'}), (72, {'func': '$66load_global.30', 'args': ['$const68.31', '$const70.32'], 'res': '$72call_function.33'}), (74, {'lhs': '$64binary_subscr.29', 'rhs': '$72call_function.33', 'res': '$74binary_subtract.34'}), (76, {'func': '$48load_global.21', 'args': ['$58unary_negative.26', '$74binary_subtract.34'], 'res': '$76call_function.35'}), (78, {'value': '$76call_function.35', 'res': '$78get_iter.36'})), outgoing_phis={'$phi80.0': '$78get_iter.36'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$78get_iter.36',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'iterator': '$phi80.0', 'pair': '$80for_iter.1', 'indval': '$80for_iter.2', 'pred': '$80for_iter.3'}),), outgoing_phis={'$phi82.1': '$80for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 82: ('$phi80.0', '$80for_iter.2')})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=2):
AdaptBlockInfo(insts=((82, {'value': '$phi82.1'}), (84, {'res': '$const84.2'}), (86, {'value': '$const84.2'}), (88, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi82.0',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$out090.0'}), (92, {'retval': '$out090.0', 'castval': '$92return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9 = const(int, 0)               ['$const24.9']
    $const28.11 = const(NoneType, None)      ['$const28.11']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11, $const30.12, func=$32build_slice.13, args=(Var($const28.11, <string>:4), Var($const30.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11', '$const30.12']
    out0[$32build_slice.14] = $const24.9     ['$32build_slice.14', '$const24.9', 'out0']
    $const36.15 = const(int, 0)              ['$const36.15']
    $const40.17 = const(int, -1)             ['$const40.17']
    $const42.18 = const(NoneType, None)      ['$const42.18']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17, $const42.18, func=$44build_slice.19, args=(Var($const40.17, <string>:5), Var($const42.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17', '$const42.18']
    out0[$44build_slice.20] = $const36.15    ['$44build_slice.20', '$const36.15', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23 = const(int, 0)              ['$const52.23']
    $const54.24 = const(int, -1)             ['$const54.24']
    $56call_function.25 = call $50load_global.22($const52.23, $const54.24, func=$50load_global.22, args=[Var($const52.23, <string>:6), Var($const54.24, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23', '$const54.24']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28 = const(int, 0)              ['$const62.28']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31 = const(int, 0)              ['$const68.31']
    $const70.32 = const(int, 1)              ['$const70.32']
    $72call_function.33 = call $66load_global.30($const68.31, $const70.32, func=$66load_global.30, args=[Var($const68.31, <string>:6), Var($const70.32, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31', '$const70.32']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087533befb0>
numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
numba.core.ssa - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
numba.core.ssa - DEBUG - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
numba.core.ssa - DEBUG - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $const24.9.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const28.11.1 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $const30.12.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: out0[$32build_slice.14.1] = $const24.9.1
numba.core.ssa - DEBUG - on stmt: $const36.15.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const40.17.1 = const(int, -1)
numba.core.ssa - DEBUG - on stmt: $const42.18.1 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: out0[$44build_slice.20.1] = $const36.15.1
numba.core.ssa - DEBUG - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
numba.core.ssa - DEBUG - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $const52.23.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const54.24.1 = const(int, -1)
numba.core.ssa - DEBUG - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
numba.core.ssa - DEBUG - on stmt: $const62.28.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
numba.core.ssa - DEBUG - on stmt: $const68.31.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const70.32.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
numba.core.ssa - DEBUG - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
numba.core.ssa - DEBUG - on stmt: $phi80.0.1 = $78get_iter.36.1
numba.core.ssa - DEBUG - on stmt: jump 80
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 80
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087533befb0>
numba.core.ssa - DEBUG - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
numba.core.ssa - DEBUG - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
numba.core.ssa - DEBUG - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
numba.core.ssa - DEBUG - on stmt: $phi82.1.1 = $80for_iter.2.1
numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3.1, 82, 92
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 82
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087533befb0>
numba.core.ssa - DEBUG - on stmt: index00 = $phi82.1.1
numba.core.ssa - DEBUG - on stmt: jump 90
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 92
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087533befb0>
numba.core.ssa - DEBUG - on stmt: $92return_value.1.1 = cast(value=out0)
numba.core.ssa - DEBUG - on stmt: return $92return_value.1.1
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 90
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087533befb0>
numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: stencil_index = $const4.1 + index00
numba.core.ssa - DEBUG - on stmt: $6binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $const10.4 = const(int, -1)
numba.core.ssa - DEBUG - on stmt: stencil_index.1 = $const10.4 + index00
numba.core.ssa - DEBUG - on stmt: $12binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5
numba.core.ssa - DEBUG - on stmt: $const18.8 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: stencil_index.2 = $const18.8 + index00
numba.core.ssa - DEBUG - on stmt: $20binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $const24.11 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: stencil_index.3 = $const24.11 + index00
numba.core.ssa - DEBUG - on stmt: $26binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12
numba.core.ssa - DEBUG - on stmt: $30binary_and.14 = $14compare_op.6 & $28compare_op.13
numba.core.ssa - DEBUG - on stmt: $32return_value.15 = cast(value=$30binary_and.14)
numba.core.ssa - DEBUG - on stmt: out0[index00] = $32return_value.15
numba.core.ssa - DEBUG - on stmt: jump 91
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 91
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087533befb0>
numba.core.ssa - DEBUG - on stmt: jump 80
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10load_attr.3.1': [(<numba.core.ir.Assign object at 0x70875338ed10>,
                                   0)],
             '$12binary_subscr.5': [(<numba.core.ir.Assign object at 0x7087534ad630>,
                                     90)],
             '$14compare_op.6': [(<numba.core.ir.Assign object at 0x7087534bfbe0>,
                                  90)],
             '$14load_global.5.1': [(<numba.core.ir.Assign object at 0x70875338ea70>,
                                     0)],
             '$16load_attr.6.1': [(<numba.core.ir.Assign object at 0x70875338e8f0>,
                                   0)],
             '$20binary_subscr.9': [(<numba.core.ir.Assign object at 0x7087534ac400>,
                                     90)],
             '$26binary_subscr.12': [(<numba.core.ir.Assign object at 0x708753433ca0>,
                                      90)],
             '$28compare_op.13': [(<numba.core.ir.Assign object at 0x7087534bf1c0>,
                                   90)],
             '$30binary_and.14': [(<numba.core.ir.Assign object at 0x7087534be020>,
                                   90)],
             '$32build_slice.13.1': [(<numba.core.ir.Assign object at 0x70875338f820>,
                                      0)],
             '$32build_slice.14.1': [(<numba.core.ir.Assign object at 0x70875338f940>,
                                      0)],
             '$32return_value.15': [(<numba.core.ir.Assign object at 0x7087534af760>,
                                     90)],
             '$44build_slice.19.1': [(<numba.core.ir.Assign object at 0x7087533b8160>,
                                      0)],
             '$44build_slice.20.1': [(<numba.core.ir.Assign object at 0x7087533b8280>,
                                      0)],
             '$48load_global.21.1': [(<numba.core.ir.Assign object at 0x7087533b84c0>,
                                      0)],
             '$50load_global.22.1': [(<numba.core.ir.Assign object at 0x7087533b8640>,
                                      0)],
             '$56call_function.25.1': [(<numba.core.ir.Assign object at 0x7087533b8b20>,
                                        0)],
             '$58unary_negative.26.1': [(<numba.core.ir.Assign object at 0x7087533b8c40>,
                                         0)],
             '$64binary_subscr.29.1': [(<numba.core.ir.Assign object at 0x7087533b9090>,
                                        0)],
             '$66load_global.30.1': [(<numba.core.ir.Assign object at 0x7087533b91e0>,
                                      0)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x7087534afa60>,
                                    90)],
             '$72call_function.33.1': [(<numba.core.ir.Assign object at 0x7087533b96c0>,
                                        0)],
             '$74binary_subtract.34.1': [(<numba.core.ir.Assign object at 0x7087533b9810>,
                                          0)],
             '$76call_function.35.1': [(<numba.core.ir.Assign object at 0x7087533b99c0>,
                                        0)],
             '$78get_iter.36.1': [(<numba.core.ir.Assign object at 0x7087533b9ae0>,
                                   0)],
             '$80for_iter.1.1': [(<numba.core.ir.Assign object at 0x7087533b9bd0>,
                                  80)],
             '$80for_iter.2.1': [(<numba.core.ir.Assign object at 0x7087533b9cf0>,
                                  80)],
             '$80for_iter.3.1': [(<numba.core.ir.Assign object at 0x7087533b9e10>,
                                  80)],
             '$8load_global.2.1': [(<numba.core.ir.Assign object at 0x70875338ee90>,
                                    0)],
             '$92return_value.1.1': [(<numba.core.ir.Assign object at 0x7087533ba740>,
                                      92)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x7087534d0d60>,
                             90)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x7087534bf850>,
                             90)],
             '$const24.11': [(<numba.core.ir.Assign object at 0x7087534bd0f0>,
                              90)],
             '$const24.9.1': [(<numba.core.ir.Assign object at 0x70875338e1a0>,
                               0)],
             '$const28.11.1': [(<numba.core.ir.Assign object at 0x70875338ddb0>,
                                0)],
             '$const30.12.1': [(<numba.core.ir.Assign object at 0x70875338f6a0>,
                                0)],
             '$const36.15.1': [(<numba.core.ir.Assign object at 0x70875338fb80>,
                                0)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x7087534ec790>,
                            90)],
             '$const40.17.1': [(<numba.core.ir.Assign object at 0x70875338fe20>,
                                0)],
             '$const42.18.1': [(<numba.core.ir.Assign object at 0x70875338ffa0>,
                                0)],
             '$const52.23.1': [(<numba.core.ir.Assign object at 0x7087533b87c0>,
                                0)],
             '$const54.24.1': [(<numba.core.ir.Assign object at 0x7087533b8940>,
                                0)],
             '$const62.28.1': [(<numba.core.ir.Assign object at 0x7087533b8ee0>,
                                0)],
             '$const68.31.1': [(<numba.core.ir.Assign object at 0x7087533b9360>,
                                0)],
             '$const70.32.1': [(<numba.core.ir.Assign object at 0x7087533b94e0>,
                                0)],
             '$phi80.0.1': [(<numba.core.ir.Assign object at 0x70875338f220>,
                             0)],
             '$phi82.1.1': [(<numba.core.ir.Assign object at 0x7087533b8d60>,
                             80)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x70875338f130>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7087533ba0e0>, 82)],
             'out0': [(<numba.core.ir.Assign object at 0x70875338e320>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7087534ac790>,
                                90)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7087534af010>,
                                  90)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x7087534ac430>,
                                  90)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x708753433070>,
                                  90)],
             'x': [(<numba.core.ir.Assign object at 0x70875338f3d0>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7087533befb0>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1051)
           2	LOAD_GLOBAL(arg=0, lineno=1065)
           4	LOAD_FAST(arg=0, lineno=1065)
           6	CALL_FUNCTION(arg=1, lineno=1065)
           8	LOAD_FAST(arg=1, lineno=1065)
          10	LOAD_CONST(arg=1, lineno=1065)
          12	LOAD_CONST(arg=1, lineno=1065)
          14	BUILD_SLICE(arg=2, lineno=1065)
          16	STORE_SUBSCR(arg=None, lineno=1065)
          18	LOAD_CONST(arg=1, lineno=1065)
          20	RETURN_VALUE(arg=None, lineno=1065)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1051)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1065)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1065)
numba.core.byteflow - DEBUG - stack ['$2load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=1065)
numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=1065)
numba.core.byteflow - DEBUG - stack ['$6call_function.2']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=1065)
numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=1065)
numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=BUILD_SLICE(arg=2, lineno=1065)
numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4', '$const12.5']
numba.core.byteflow - DEBUG - dispatch pc=16, inst=STORE_SUBSCR(arg=None, lineno=1065)
numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$14build_slice.7']
numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1065)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=1065)
numba.core.byteflow - DEBUG - stack ['$const18.8']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - keep phismap: {}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$x4.1'}), (6, {'func': '$2load_global.0', 'args': ['$x4.1'], 'res': '$6call_function.2'}), (8, {'res': '$y8.3'}), (10, {'res': '$const10.4'}), (12, {'res': '$const12.5'}), (14, {'start': '$const10.4', 'stop': '$const12.5', 'step': None, 'res': '$14build_slice.7', 'slicevar': '$14build_slice.6'}), (16, {'target': '$y8.3', 'index': '$14build_slice.7', 'value': '$6call_function.2'}), (18, {'res': '$const18.8'}), (20, {'retval': '$const18.8', 'castval': '$20return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x708758aa7400>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $const10.4 = const(NoneType, None)       ['$const10.4']
    $const12.5 = const(NoneType, None)       ['$const12.5']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1065), Var($const12.5, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4', '$const12.5']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    $const18.8 = const(NoneType, None)       ['$const18.8']
    $20return_value.9 = cast(value=$const18.8) ['$20return_value.9', '$const18.8']
    return $20return_value.9                 ['$20return_value.9']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708753354760>
numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
numba.core.ssa - DEBUG - on stmt: y = arg(1, name=y)
numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x708758aa7400>)
numba.core.ssa - DEBUG - on stmt: $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $const10.4 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $const12.5 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $14build_slice.6 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1065), Var($const12.5, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: y[slice(None, None, None)] = $6call_function.2
numba.core.ssa - DEBUG - on stmt: $const18.8 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $20return_value.9 = cast(value=$const18.8)
numba.core.ssa - DEBUG - on stmt: return $20return_value.9
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$14build_slice.6': [(<numba.core.ir.Assign object at 0x708753610670>,
                                   0)],
             '$14build_slice.7': [(<numba.core.ir.Assign object at 0x7087536136a0>,
                                   0)],
             '$20return_value.9': [(<numba.core.ir.Assign object at 0x708753610b20>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x708753354ca0>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x708753610c10>,
                                    0)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x708753613490>,
                             0)],
             '$const12.5': [(<numba.core.ir.Assign object at 0x708753610250>,
                             0)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x708753613550>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x708753355180>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x708753354d60>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x708753354760>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_FAST(arg=0, lineno=2)
           4	LOAD_ATTR(arg=0, lineno=2)
           6	STORE_FAST(arg=1, lineno=2)
           8	LOAD_GLOBAL(arg=1, lineno=3)
          10	LOAD_ATTR(arg=2, lineno=3)
          12	LOAD_FAST(arg=1, lineno=3)
          14	LOAD_GLOBAL(arg=1, lineno=3)
          16	LOAD_ATTR(arg=3, lineno=3)
          18	LOAD_CONST(arg=1, lineno=3)
          20	CALL_FUNCTION_KW(arg=2, lineno=3)
          22	STORE_FAST(arg=2, lineno=3)
          24	LOAD_CONST(arg=2, lineno=4)
          26	LOAD_FAST(arg=2, lineno=4)
          28	LOAD_CONST(arg=0, lineno=4)
          30	LOAD_CONST(arg=3, lineno=4)
          32	BUILD_SLICE(arg=2, lineno=4)
          34	STORE_SUBSCR(arg=None, lineno=4)
          36	LOAD_CONST(arg=2, lineno=5)
          38	LOAD_FAST(arg=2, lineno=5)
          40	LOAD_CONST(arg=4, lineno=5)
          42	LOAD_CONST(arg=0, lineno=5)
          44	BUILD_SLICE(arg=2, lineno=5)
          46	STORE_SUBSCR(arg=None, lineno=5)
          48	LOAD_GLOBAL(arg=4, lineno=6)
          50	LOAD_GLOBAL(arg=5, lineno=6)
          52	LOAD_CONST(arg=2, lineno=6)
          54	LOAD_CONST(arg=4, lineno=6)
          56	CALL_FUNCTION(arg=2, lineno=6)
          58	UNARY_NEGATIVE(arg=None, lineno=6)
          60	LOAD_FAST(arg=1, lineno=6)
          62	LOAD_CONST(arg=2, lineno=6)
          64	BINARY_SUBSCR(arg=None, lineno=6)
          66	LOAD_GLOBAL(arg=6, lineno=6)
          68	LOAD_CONST(arg=2, lineno=6)
          70	LOAD_CONST(arg=3, lineno=6)
          72	CALL_FUNCTION(arg=2, lineno=6)
          74	BINARY_SUBTRACT(arg=None, lineno=6)
          76	CALL_FUNCTION(arg=2, lineno=6)
          78	GET_ITER(arg=None, lineno=6)
>         80	FOR_ITER(arg=4, lineno=6)
          82	STORE_FAST(arg=3, lineno=6)
          84	LOAD_CONST(arg=2, lineno=7)
          86	STORE_FAST(arg=4, lineno=7)
          88	JUMP_ABSOLUTE(arg=41, lineno=7)
>         90	LOAD_FAST(arg=2, lineno=8)
          92	RETURN_VALUE(arg=None, lineno=8)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=2)
numba.core.byteflow - DEBUG - stack ['$x2.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=STORE_FAST(arg=1, lineno=2)
numba.core.byteflow - DEBUG - stack ['$4load_attr.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_GLOBAL(arg=1, lineno=3)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_ATTR(arg=2, lineno=3)
numba.core.byteflow - DEBUG - stack ['$8load_global.2']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_GLOBAL(arg=1, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4']
numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_ATTR(arg=3, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$14load_global.5']
numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6']
numba.core.byteflow - DEBUG - dispatch pc=20, inst=CALL_FUNCTION_KW(arg=2, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6', '$const18.7']
numba.core.byteflow - DEBUG - dispatch pc=22, inst=STORE_FAST(arg=2, lineno=3)
numba.core.byteflow - DEBUG - stack ['$20call_function_kw.8']
numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=2, lineno=4)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=2, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9']
numba.core.byteflow - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=0, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10']
numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=3, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11']
numba.core.byteflow - DEBUG - dispatch pc=32, inst=BUILD_SLICE(arg=2, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11', '$const30.12']
numba.core.byteflow - DEBUG - dispatch pc=34, inst=STORE_SUBSCR(arg=None, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$32build_slice.14']
numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=2, lineno=5)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=2, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15']
numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16']
numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=0, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17']
numba.core.byteflow - DEBUG - dispatch pc=44, inst=BUILD_SLICE(arg=2, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17', '$const42.18']
numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_SUBSCR(arg=None, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$44build_slice.20']
numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_GLOBAL(arg=4, lineno=6)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=5, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21']
numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22']
numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=4, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23']
numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_FUNCTION(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23', '$const54.24']
numba.core.byteflow - DEBUG - dispatch pc=58, inst=UNARY_NEGATIVE(arg=None, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$56call_function.25']
numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_FAST(arg=1, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26']
numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_CONST(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27']
numba.core.byteflow - DEBUG - dispatch pc=64, inst=BINARY_SUBSCR(arg=None, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27', '$const62.28']
numba.core.byteflow - DEBUG - dispatch pc=66, inst=LOAD_GLOBAL(arg=6, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29']
numba.core.byteflow - DEBUG - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30']
numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=3, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31']
numba.core.byteflow - DEBUG - dispatch pc=72, inst=CALL_FUNCTION(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31', '$const70.32']
numba.core.byteflow - DEBUG - dispatch pc=74, inst=BINARY_SUBTRACT(arg=None, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$72call_function.33']
numba.core.byteflow - DEBUG - dispatch pc=76, inst=CALL_FUNCTION(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34']
numba.core.byteflow - DEBUG - dispatch pc=78, inst=GET_ITER(arg=None, lineno=6)
numba.core.byteflow - DEBUG - stack ['$76call_function.35']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$78get_iter.36',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi80.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=80, inst=FOR_ITER(arg=4, lineno=6)
numba.core.byteflow - DEBUG - stack ['$phi80.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=('$phi80.0', '$80for_iter.2'), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=82 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_FAST(arg=2, lineno=8)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=92, inst=RETURN_VALUE(arg=None, lineno=8)
numba.core.byteflow - DEBUG - stack ['$out090.0']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: ['$phi82.0', '$phi82.1']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=2)
numba.core.byteflow - DEBUG - dispatch pc=82, inst=STORE_FAST(arg=3, lineno=6)
numba.core.byteflow - DEBUG - stack ['$phi82.0', '$phi82.1']
numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_CONST(arg=2, lineno=7)
numba.core.byteflow - DEBUG - stack ['$phi82.0']
numba.core.byteflow - DEBUG - dispatch pc=86, inst=STORE_FAST(arg=4, lineno=7)
numba.core.byteflow - DEBUG - stack ['$phi82.0', '$const84.2']
numba.core.byteflow - DEBUG - dispatch pc=88, inst=JUMP_ABSOLUTE(arg=41, lineno=7)
numba.core.byteflow - DEBUG - stack ['$phi82.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$phi82.0',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=82 nstack_initial=2): {'$phi82.1'},
             State(pc_initial=90 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {'$phi80.0': State(pc_initial=0 nstack_initial=0),
 '$phi82.1': State(pc_initial=80 nstack_initial=1)}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi82.0', State(pc_initial=82 nstack_initial=2))},
             '$phi82.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
numba.core.byteflow - DEBUG - keep phismap: {'$phi80.0': {('$78get_iter.36', State(pc_initial=0 nstack_initial=0))},
 '$phi82.1': {('$80for_iter.2', State(pc_initial=80 nstack_initial=1))}}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi80.0': '$78get_iter.36'},
             State(pc_initial=80 nstack_initial=1): {'$phi82.1': '$80for_iter.2'}})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'item': '$x2.0', 'res': '$4load_attr.1'}), (6, {'value': '$4load_attr.1'}), (8, {'res': '$8load_global.2'}), (10, {'item': '$8load_global.2', 'res': '$10load_attr.3'}), (12, {'res': '$full_shape012.4'}), (14, {'res': '$14load_global.5'}), (16, {'item': '$14load_global.5', 'res': '$16load_attr.6'}), (18, {'res': '$const18.7'}), (20, {'func': '$10load_attr.3', 'args': ['$full_shape012.4', '$16load_attr.6'], 'names': '$const18.7', 'res': '$20call_function_kw.8'}), (22, {'value': '$20call_function_kw.8'}), (24, {'res': '$const24.9'}), (26, {'res': '$out026.10'}), (28, {'res': '$const28.11'}), (30, {'res': '$const30.12'}), (32, {'start': '$const28.11', 'stop': '$const30.12', 'step': None, 'res': '$32build_slice.14', 'slicevar': '$32build_slice.13'}), (34, {'target': '$out026.10', 'index': '$32build_slice.14', 'value': '$const24.9'}), (36, {'res': '$const36.15'}), (38, {'res': '$out038.16'}), (40, {'res': '$const40.17'}), (42, {'res': '$const42.18'}), (44, {'start': '$const40.17', 'stop': '$const42.18', 'step': None, 'res': '$44build_slice.20', 'slicevar': '$44build_slice.19'}), (46, {'target': '$out038.16', 'index': '$44build_slice.20', 'value': '$const36.15'}), (48, {'res': '$48load_global.21'}), (50, {'res': '$50load_global.22'}), (52, {'res': '$const52.23'}), (54, {'res': '$const54.24'}), (56, {'func': '$50load_global.22', 'args': ['$const52.23', '$const54.24'], 'res': '$56call_function.25'}), (58, {'value': '$56call_function.25', 'res': '$58unary_negative.26'}), (60, {'res': '$full_shape060.27'}), (62, {'res': '$const62.28'}), (64, {'index': '$const62.28', 'target': '$full_shape060.27', 'res': '$64binary_subscr.29'}), (66, {'res': '$66load_global.30'}), (68, {'res': '$const68.31'}), (70, {'res': '$const70.32'}), (72, {'func': '$66load_global.30', 'args': ['$const68.31', '$const70.32'], 'res': '$72call_function.33'}), (74, {'lhs': '$64binary_subscr.29', 'rhs': '$72call_function.33', 'res': '$74binary_subtract.34'}), (76, {'func': '$48load_global.21', 'args': ['$58unary_negative.26', '$74binary_subtract.34'], 'res': '$76call_function.35'}), (78, {'value': '$76call_function.35', 'res': '$78get_iter.36'})), outgoing_phis={'$phi80.0': '$78get_iter.36'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$78get_iter.36',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'iterator': '$phi80.0', 'pair': '$80for_iter.1', 'indval': '$80for_iter.2', 'pred': '$80for_iter.3'}),), outgoing_phis={'$phi82.1': '$80for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 82: ('$phi80.0', '$80for_iter.2')})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=2):
AdaptBlockInfo(insts=((82, {'value': '$phi82.1'}), (84, {'res': '$const84.2'}), (86, {'value': '$const84.2'}), (88, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi82.0',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$out090.0'}), (92, {'retval': '$out090.0', 'castval': '$92return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9 = const(int, 0)               ['$const24.9']
    $const28.11 = const(NoneType, None)      ['$const28.11']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11, $const30.12, func=$32build_slice.13, args=(Var($const28.11, <string>:4), Var($const30.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11', '$const30.12']
    out0[$32build_slice.14] = $const24.9     ['$32build_slice.14', '$const24.9', 'out0']
    $const36.15 = const(int, 0)              ['$const36.15']
    $const40.17 = const(int, -1)             ['$const40.17']
    $const42.18 = const(NoneType, None)      ['$const42.18']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17, $const42.18, func=$44build_slice.19, args=(Var($const40.17, <string>:5), Var($const42.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17', '$const42.18']
    out0[$44build_slice.20] = $const36.15    ['$44build_slice.20', '$const36.15', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23 = const(int, 0)              ['$const52.23']
    $const54.24 = const(int, -1)             ['$const54.24']
    $56call_function.25 = call $50load_global.22($const52.23, $const54.24, func=$50load_global.22, args=[Var($const52.23, <string>:6), Var($const54.24, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23', '$const54.24']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28 = const(int, 0)              ['$const62.28']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31 = const(int, 0)              ['$const68.31']
    $const70.32 = const(int, 1)              ['$const70.32']
    $72call_function.33 = call $66load_global.30($const68.31, $const70.32, func=$66load_global.30, args=[Var($const68.31, <string>:6), Var($const70.32, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31', '$const70.32']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708753407940>
numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
numba.core.ssa - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
numba.core.ssa - DEBUG - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
numba.core.ssa - DEBUG - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $const24.9.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const28.11.1 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $const30.12.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: out0[$32build_slice.14.1] = $const24.9.1
numba.core.ssa - DEBUG - on stmt: $const36.15.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const40.17.1 = const(int, -1)
numba.core.ssa - DEBUG - on stmt: $const42.18.1 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: out0[$44build_slice.20.1] = $const36.15.1
numba.core.ssa - DEBUG - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
numba.core.ssa - DEBUG - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $const52.23.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const54.24.1 = const(int, -1)
numba.core.ssa - DEBUG - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
numba.core.ssa - DEBUG - on stmt: $const62.28.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
numba.core.ssa - DEBUG - on stmt: $const68.31.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const70.32.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
numba.core.ssa - DEBUG - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
numba.core.ssa - DEBUG - on stmt: $phi80.0.1 = $78get_iter.36.1
numba.core.ssa - DEBUG - on stmt: jump 80
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 80
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708753407940>
numba.core.ssa - DEBUG - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
numba.core.ssa - DEBUG - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
numba.core.ssa - DEBUG - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
numba.core.ssa - DEBUG - on stmt: $phi82.1.1 = $80for_iter.2.1
numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3.1, 82, 92
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 82
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708753407940>
numba.core.ssa - DEBUG - on stmt: index00 = $phi82.1.1
numba.core.ssa - DEBUG - on stmt: jump 90
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 92
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708753407940>
numba.core.ssa - DEBUG - on stmt: $92return_value.1.1 = cast(value=out0)
numba.core.ssa - DEBUG - on stmt: return $92return_value.1.1
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 90
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708753407940>
numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: stencil_index = $const4.1 + index00
numba.core.ssa - DEBUG - on stmt: $6binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $const10.4 = const(int, -1)
numba.core.ssa - DEBUG - on stmt: stencil_index.1 = $const10.4 + index00
numba.core.ssa - DEBUG - on stmt: $12binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5
numba.core.ssa - DEBUG - on stmt: $const18.8 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: stencil_index.2 = $const18.8 + index00
numba.core.ssa - DEBUG - on stmt: $20binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $const24.11 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: stencil_index.3 = $const24.11 + index00
numba.core.ssa - DEBUG - on stmt: $26binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12
numba.core.ssa - DEBUG - on stmt: $30binary_and.14 = $14compare_op.6 & $28compare_op.13
numba.core.ssa - DEBUG - on stmt: $32return_value.15 = cast(value=$30binary_and.14)
numba.core.ssa - DEBUG - on stmt: out0[index00] = $32return_value.15
numba.core.ssa - DEBUG - on stmt: jump 91
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 91
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708753407940>
numba.core.ssa - DEBUG - on stmt: jump 80
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10load_attr.3.1': [(<numba.core.ir.Assign object at 0x7087534062f0>,
                                   0)],
             '$12binary_subscr.5': [(<numba.core.ir.Assign object at 0x708753725d80>,
                                     90)],
             '$14compare_op.6': [(<numba.core.ir.Assign object at 0x7087537d2500>,
                                  90)],
             '$14load_global.5.1': [(<numba.core.ir.Assign object at 0x708753406050>,
                                     0)],
             '$16load_attr.6.1': [(<numba.core.ir.Assign object at 0x708753405ed0>,
                                   0)],
             '$20binary_subscr.9': [(<numba.core.ir.Assign object at 0x7087537266b0>,
                                     90)],
             '$26binary_subscr.12': [(<numba.core.ir.Assign object at 0x708753727e50>,
                                      90)],
             '$28compare_op.13': [(<numba.core.ir.Assign object at 0x708753327040>,
                                   90)],
             '$30binary_and.14': [(<numba.core.ir.Assign object at 0x708753327010>,
                                   90)],
             '$32build_slice.13.1': [(<numba.core.ir.Assign object at 0x7087534069b0>,
                                      0)],
             '$32build_slice.14.1': [(<numba.core.ir.Assign object at 0x708753406ad0>,
                                      0)],
             '$32return_value.15': [(<numba.core.ir.Assign object at 0x708753325b40>,
                                     90)],
             '$44build_slice.19.1': [(<numba.core.ir.Assign object at 0x7087534072b0>,
                                      0)],
             '$44build_slice.20.1': [(<numba.core.ir.Assign object at 0x7087535cbdf0>,
                                      0)],
             '$48load_global.21.1': [(<numba.core.ir.Assign object at 0x7087535c98d0>,
                                      0)],
             '$50load_global.22.1': [(<numba.core.ir.Assign object at 0x7087535c96f0>,
                                      0)],
             '$56call_function.25.1': [(<numba.core.ir.Assign object at 0x708753355930>,
                                        0)],
             '$58unary_negative.26.1': [(<numba.core.ir.Assign object at 0x708753356710>,
                                         0)],
             '$64binary_subscr.29.1': [(<numba.core.ir.Assign object at 0x7087533570a0>,
                                        0)],
             '$66load_global.30.1': [(<numba.core.ir.Assign object at 0x708753356620>,
                                      0)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x708753726fe0>,
                                    90)],
             '$72call_function.33.1': [(<numba.core.ir.Assign object at 0x708753356d10>,
                                        0)],
             '$74binary_subtract.34.1': [(<numba.core.ir.Assign object at 0x708753357490>,
                                          0)],
             '$76call_function.35.1': [(<numba.core.ir.Assign object at 0x7087533576d0>,
                                        0)],
             '$78get_iter.36.1': [(<numba.core.ir.Assign object at 0x708753357af0>,
                                   0)],
             '$80for_iter.1.1': [(<numba.core.ir.Assign object at 0x708753355f90>,
                                  80)],
             '$80for_iter.2.1': [(<numba.core.ir.Assign object at 0x7087533561a0>,
                                  80)],
             '$80for_iter.3.1': [(<numba.core.ir.Assign object at 0x708753357f70>,
                                  80)],
             '$8load_global.2.1': [(<numba.core.ir.Assign object at 0x708753406470>,
                                    0)],
             '$92return_value.1.1': [(<numba.core.ir.Assign object at 0x708753356aa0>,
                                      92)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x708753802140>,
                             90)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x7087537d2bc0>,
                             90)],
             '$const24.11': [(<numba.core.ir.Assign object at 0x7087537d0520>,
                              90)],
             '$const24.9.1': [(<numba.core.ir.Assign object at 0x708753405690>,
                               0)],
             '$const28.11.1': [(<numba.core.ir.Assign object at 0x708753404250>,
                                0)],
             '$const30.12.1': [(<numba.core.ir.Assign object at 0x708753406830>,
                                0)],
             '$const36.15.1': [(<numba.core.ir.Assign object at 0x708753406d10>,
                                0)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x7087535c9cc0>,
                            90)],
             '$const40.17.1': [(<numba.core.ir.Assign object at 0x708753406fb0>,
                                0)],
             '$const42.18.1': [(<numba.core.ir.Assign object at 0x708753407130>,
                                0)],
             '$const52.23.1': [(<numba.core.ir.Assign object at 0x7087535ca9e0>,
                                0)],
             '$const54.24.1': [(<numba.core.ir.Assign object at 0x708753354070>,
                                0)],
             '$const62.28.1': [(<numba.core.ir.Assign object at 0x708753356860>,
                                0)],
             '$const68.31.1': [(<numba.core.ir.Assign object at 0x708753357040>,
                                0)],
             '$const70.32.1': [(<numba.core.ir.Assign object at 0x708753356d70>,
                                0)],
             '$phi80.0.1': [(<numba.core.ir.Assign object at 0x708753727d30>,
                             0)],
             '$phi82.1.1': [(<numba.core.ir.Assign object at 0x708753357910>,
                             80)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x708753406680>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x708753356530>, 82)],
             'out0': [(<numba.core.ir.Assign object at 0x708753405900>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x708753726bf0>,
                                90)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7087537262c0>,
                                  90)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x708753725c30>,
                                  90)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x708753727f70>,
                                  90)],
             'x': [(<numba.core.ir.Assign object at 0x708753324790>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x70875367a590>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1051)
           2	LOAD_GLOBAL(arg=0, lineno=1065)
           4	LOAD_FAST(arg=0, lineno=1065)
           6	CALL_FUNCTION(arg=1, lineno=1065)
           8	LOAD_FAST(arg=1, lineno=1065)
          10	LOAD_CONST(arg=1, lineno=1065)
          12	LOAD_CONST(arg=1, lineno=1065)
          14	BUILD_SLICE(arg=2, lineno=1065)
          16	STORE_SUBSCR(arg=None, lineno=1065)
          18	LOAD_CONST(arg=1, lineno=1065)
          20	RETURN_VALUE(arg=None, lineno=1065)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1051)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1065)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1065)
numba.core.byteflow - DEBUG - stack ['$2load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=1065)
numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=1065)
numba.core.byteflow - DEBUG - stack ['$6call_function.2']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=1065)
numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=1065)
numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=BUILD_SLICE(arg=2, lineno=1065)
numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4', '$const12.5']
numba.core.byteflow - DEBUG - dispatch pc=16, inst=STORE_SUBSCR(arg=None, lineno=1065)
numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$14build_slice.7']
numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1065)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=1065)
numba.core.byteflow - DEBUG - stack ['$const18.8']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - keep phismap: {}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$x4.1'}), (6, {'func': '$2load_global.0', 'args': ['$x4.1'], 'res': '$6call_function.2'}), (8, {'res': '$y8.3'}), (10, {'res': '$const10.4'}), (12, {'res': '$const12.5'}), (14, {'start': '$const10.4', 'stop': '$const12.5', 'step': None, 'res': '$14build_slice.7', 'slicevar': '$14build_slice.6'}), (16, {'target': '$y8.3', 'index': '$14build_slice.7', 'value': '$6call_function.2'}), (18, {'res': '$const18.8'}), (20, {'retval': '$const18.8', 'castval': '$20return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x708758aa7400>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $const10.4 = const(NoneType, None)       ['$const10.4']
    $const12.5 = const(NoneType, None)       ['$const12.5']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1065), Var($const12.5, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4', '$const12.5']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    $const18.8 = const(NoneType, None)       ['$const18.8']
    $20return_value.9 = cast(value=$const18.8) ['$20return_value.9', '$const18.8']
    return $20return_value.9                 ['$20return_value.9']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087536138e0>
numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
numba.core.ssa - DEBUG - on stmt: y = arg(1, name=y)
numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x708758aa7400>)
numba.core.ssa - DEBUG - on stmt: $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $const10.4 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $const12.5 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $14build_slice.6 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1065), Var($const12.5, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: y[slice(None, None, None)] = $6call_function.2
numba.core.ssa - DEBUG - on stmt: $const18.8 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $20return_value.9 = cast(value=$const18.8)
numba.core.ssa - DEBUG - on stmt: return $20return_value.9
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$14build_slice.6': [(<numba.core.ir.Assign object at 0x70875311a4a0>,
                                   0)],
             '$14build_slice.7': [(<numba.core.ir.Assign object at 0x70875311a5c0>,
                                   0)],
             '$20return_value.9': [(<numba.core.ir.Assign object at 0x70875311a980>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x708753119c60>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x708753119f60>,
                                    0)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x70875311a1a0>,
                             0)],
             '$const12.5': [(<numba.core.ir.Assign object at 0x70875311a320>,
                             0)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x70875311a800>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7087531193f0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x708753119180>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7087536138e0>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_FAST(arg=0, lineno=2)
           4	LOAD_ATTR(arg=0, lineno=2)
           6	STORE_FAST(arg=1, lineno=2)
           8	LOAD_GLOBAL(arg=1, lineno=3)
          10	LOAD_ATTR(arg=2, lineno=3)
          12	LOAD_FAST(arg=1, lineno=3)
          14	LOAD_GLOBAL(arg=1, lineno=3)
          16	LOAD_ATTR(arg=3, lineno=3)
          18	LOAD_CONST(arg=1, lineno=3)
          20	CALL_FUNCTION_KW(arg=2, lineno=3)
          22	STORE_FAST(arg=2, lineno=3)
          24	LOAD_CONST(arg=2, lineno=4)
          26	LOAD_FAST(arg=2, lineno=4)
          28	LOAD_CONST(arg=0, lineno=4)
          30	LOAD_CONST(arg=3, lineno=4)
          32	BUILD_SLICE(arg=2, lineno=4)
          34	STORE_SUBSCR(arg=None, lineno=4)
          36	LOAD_CONST(arg=2, lineno=5)
          38	LOAD_FAST(arg=2, lineno=5)
          40	LOAD_CONST(arg=4, lineno=5)
          42	LOAD_CONST(arg=0, lineno=5)
          44	BUILD_SLICE(arg=2, lineno=5)
          46	STORE_SUBSCR(arg=None, lineno=5)
          48	LOAD_GLOBAL(arg=4, lineno=6)
          50	LOAD_GLOBAL(arg=5, lineno=6)
          52	LOAD_CONST(arg=2, lineno=6)
          54	LOAD_CONST(arg=4, lineno=6)
          56	CALL_FUNCTION(arg=2, lineno=6)
          58	UNARY_NEGATIVE(arg=None, lineno=6)
          60	LOAD_FAST(arg=1, lineno=6)
          62	LOAD_CONST(arg=2, lineno=6)
          64	BINARY_SUBSCR(arg=None, lineno=6)
          66	LOAD_GLOBAL(arg=6, lineno=6)
          68	LOAD_CONST(arg=2, lineno=6)
          70	LOAD_CONST(arg=3, lineno=6)
          72	CALL_FUNCTION(arg=2, lineno=6)
          74	BINARY_SUBTRACT(arg=None, lineno=6)
          76	CALL_FUNCTION(arg=2, lineno=6)
          78	GET_ITER(arg=None, lineno=6)
>         80	FOR_ITER(arg=4, lineno=6)
          82	STORE_FAST(arg=3, lineno=6)
          84	LOAD_CONST(arg=2, lineno=7)
          86	STORE_FAST(arg=4, lineno=7)
          88	JUMP_ABSOLUTE(arg=41, lineno=7)
>         90	LOAD_FAST(arg=2, lineno=8)
          92	RETURN_VALUE(arg=None, lineno=8)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=2)
numba.core.byteflow - DEBUG - stack ['$x2.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=STORE_FAST(arg=1, lineno=2)
numba.core.byteflow - DEBUG - stack ['$4load_attr.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_GLOBAL(arg=1, lineno=3)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_ATTR(arg=2, lineno=3)
numba.core.byteflow - DEBUG - stack ['$8load_global.2']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_GLOBAL(arg=1, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4']
numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_ATTR(arg=3, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$14load_global.5']
numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6']
numba.core.byteflow - DEBUG - dispatch pc=20, inst=CALL_FUNCTION_KW(arg=2, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6', '$const18.7']
numba.core.byteflow - DEBUG - dispatch pc=22, inst=STORE_FAST(arg=2, lineno=3)
numba.core.byteflow - DEBUG - stack ['$20call_function_kw.8']
numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=2, lineno=4)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=2, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9']
numba.core.byteflow - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=0, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10']
numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=3, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11']
numba.core.byteflow - DEBUG - dispatch pc=32, inst=BUILD_SLICE(arg=2, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11', '$const30.12']
numba.core.byteflow - DEBUG - dispatch pc=34, inst=STORE_SUBSCR(arg=None, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$32build_slice.14']
numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=2, lineno=5)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=2, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15']
numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16']
numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=0, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17']
numba.core.byteflow - DEBUG - dispatch pc=44, inst=BUILD_SLICE(arg=2, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17', '$const42.18']
numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_SUBSCR(arg=None, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$44build_slice.20']
numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_GLOBAL(arg=4, lineno=6)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=5, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21']
numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22']
numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=4, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23']
numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_FUNCTION(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23', '$const54.24']
numba.core.byteflow - DEBUG - dispatch pc=58, inst=UNARY_NEGATIVE(arg=None, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$56call_function.25']
numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_FAST(arg=1, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26']
numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_CONST(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27']
numba.core.byteflow - DEBUG - dispatch pc=64, inst=BINARY_SUBSCR(arg=None, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27', '$const62.28']
numba.core.byteflow - DEBUG - dispatch pc=66, inst=LOAD_GLOBAL(arg=6, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29']
numba.core.byteflow - DEBUG - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30']
numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=3, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31']
numba.core.byteflow - DEBUG - dispatch pc=72, inst=CALL_FUNCTION(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31', '$const70.32']
numba.core.byteflow - DEBUG - dispatch pc=74, inst=BINARY_SUBTRACT(arg=None, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$72call_function.33']
numba.core.byteflow - DEBUG - dispatch pc=76, inst=CALL_FUNCTION(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34']
numba.core.byteflow - DEBUG - dispatch pc=78, inst=GET_ITER(arg=None, lineno=6)
numba.core.byteflow - DEBUG - stack ['$76call_function.35']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$78get_iter.36',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi80.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=80, inst=FOR_ITER(arg=4, lineno=6)
numba.core.byteflow - DEBUG - stack ['$phi80.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=('$phi80.0', '$80for_iter.2'), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=82 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_FAST(arg=2, lineno=8)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=92, inst=RETURN_VALUE(arg=None, lineno=8)
numba.core.byteflow - DEBUG - stack ['$out090.0']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: ['$phi82.0', '$phi82.1']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=2)
numba.core.byteflow - DEBUG - dispatch pc=82, inst=STORE_FAST(arg=3, lineno=6)
numba.core.byteflow - DEBUG - stack ['$phi82.0', '$phi82.1']
numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_CONST(arg=2, lineno=7)
numba.core.byteflow - DEBUG - stack ['$phi82.0']
numba.core.byteflow - DEBUG - dispatch pc=86, inst=STORE_FAST(arg=4, lineno=7)
numba.core.byteflow - DEBUG - stack ['$phi82.0', '$const84.2']
numba.core.byteflow - DEBUG - dispatch pc=88, inst=JUMP_ABSOLUTE(arg=41, lineno=7)
numba.core.byteflow - DEBUG - stack ['$phi82.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$phi82.0',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=82 nstack_initial=2): {'$phi82.1'},
             State(pc_initial=90 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {'$phi80.0': State(pc_initial=0 nstack_initial=0),
 '$phi82.1': State(pc_initial=80 nstack_initial=1)}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi82.0', State(pc_initial=82 nstack_initial=2))},
             '$phi82.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
numba.core.byteflow - DEBUG - keep phismap: {'$phi80.0': {('$78get_iter.36', State(pc_initial=0 nstack_initial=0))},
 '$phi82.1': {('$80for_iter.2', State(pc_initial=80 nstack_initial=1))}}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi80.0': '$78get_iter.36'},
             State(pc_initial=80 nstack_initial=1): {'$phi82.1': '$80for_iter.2'}})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'item': '$x2.0', 'res': '$4load_attr.1'}), (6, {'value': '$4load_attr.1'}), (8, {'res': '$8load_global.2'}), (10, {'item': '$8load_global.2', 'res': '$10load_attr.3'}), (12, {'res': '$full_shape012.4'}), (14, {'res': '$14load_global.5'}), (16, {'item': '$14load_global.5', 'res': '$16load_attr.6'}), (18, {'res': '$const18.7'}), (20, {'func': '$10load_attr.3', 'args': ['$full_shape012.4', '$16load_attr.6'], 'names': '$const18.7', 'res': '$20call_function_kw.8'}), (22, {'value': '$20call_function_kw.8'}), (24, {'res': '$const24.9'}), (26, {'res': '$out026.10'}), (28, {'res': '$const28.11'}), (30, {'res': '$const30.12'}), (32, {'start': '$const28.11', 'stop': '$const30.12', 'step': None, 'res': '$32build_slice.14', 'slicevar': '$32build_slice.13'}), (34, {'target': '$out026.10', 'index': '$32build_slice.14', 'value': '$const24.9'}), (36, {'res': '$const36.15'}), (38, {'res': '$out038.16'}), (40, {'res': '$const40.17'}), (42, {'res': '$const42.18'}), (44, {'start': '$const40.17', 'stop': '$const42.18', 'step': None, 'res': '$44build_slice.20', 'slicevar': '$44build_slice.19'}), (46, {'target': '$out038.16', 'index': '$44build_slice.20', 'value': '$const36.15'}), (48, {'res': '$48load_global.21'}), (50, {'res': '$50load_global.22'}), (52, {'res': '$const52.23'}), (54, {'res': '$const54.24'}), (56, {'func': '$50load_global.22', 'args': ['$const52.23', '$const54.24'], 'res': '$56call_function.25'}), (58, {'value': '$56call_function.25', 'res': '$58unary_negative.26'}), (60, {'res': '$full_shape060.27'}), (62, {'res': '$const62.28'}), (64, {'index': '$const62.28', 'target': '$full_shape060.27', 'res': '$64binary_subscr.29'}), (66, {'res': '$66load_global.30'}), (68, {'res': '$const68.31'}), (70, {'res': '$const70.32'}), (72, {'func': '$66load_global.30', 'args': ['$const68.31', '$const70.32'], 'res': '$72call_function.33'}), (74, {'lhs': '$64binary_subscr.29', 'rhs': '$72call_function.33', 'res': '$74binary_subtract.34'}), (76, {'func': '$48load_global.21', 'args': ['$58unary_negative.26', '$74binary_subtract.34'], 'res': '$76call_function.35'}), (78, {'value': '$76call_function.35', 'res': '$78get_iter.36'})), outgoing_phis={'$phi80.0': '$78get_iter.36'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$78get_iter.36',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'iterator': '$phi80.0', 'pair': '$80for_iter.1', 'indval': '$80for_iter.2', 'pred': '$80for_iter.3'}),), outgoing_phis={'$phi82.1': '$80for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 82: ('$phi80.0', '$80for_iter.2')})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=2):
AdaptBlockInfo(insts=((82, {'value': '$phi82.1'}), (84, {'res': '$const84.2'}), (86, {'value': '$const84.2'}), (88, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi82.0',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$out090.0'}), (92, {'retval': '$out090.0', 'castval': '$92return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9 = const(int, 0)               ['$const24.9']
    $const28.11 = const(NoneType, None)      ['$const28.11']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11, $const30.12, func=$32build_slice.13, args=(Var($const28.11, <string>:4), Var($const30.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11', '$const30.12']
    out0[$32build_slice.14] = $const24.9     ['$32build_slice.14', '$const24.9', 'out0']
    $const36.15 = const(int, 0)              ['$const36.15']
    $const40.17 = const(int, -1)             ['$const40.17']
    $const42.18 = const(NoneType, None)      ['$const42.18']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17, $const42.18, func=$44build_slice.19, args=(Var($const40.17, <string>:5), Var($const42.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17', '$const42.18']
    out0[$44build_slice.20] = $const36.15    ['$44build_slice.20', '$const36.15', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23 = const(int, 0)              ['$const52.23']
    $const54.24 = const(int, -1)             ['$const54.24']
    $56call_function.25 = call $50load_global.22($const52.23, $const54.24, func=$50load_global.22, args=[Var($const52.23, <string>:6), Var($const54.24, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23', '$const54.24']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28 = const(int, 0)              ['$const62.28']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31 = const(int, 0)              ['$const68.31']
    $const70.32 = const(int, 1)              ['$const70.32']
    $72call_function.33 = call $66load_global.30($const68.31, $const70.32, func=$66load_global.30, args=[Var($const68.31, <string>:6), Var($const70.32, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31', '$const70.32']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708753193790>
numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
numba.core.ssa - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
numba.core.ssa - DEBUG - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
numba.core.ssa - DEBUG - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $const24.9.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const28.11.1 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $const30.12.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: out0[$32build_slice.14.1] = $const24.9.1
numba.core.ssa - DEBUG - on stmt: $const36.15.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const40.17.1 = const(int, -1)
numba.core.ssa - DEBUG - on stmt: $const42.18.1 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: out0[$44build_slice.20.1] = $const36.15.1
numba.core.ssa - DEBUG - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
numba.core.ssa - DEBUG - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $const52.23.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const54.24.1 = const(int, -1)
numba.core.ssa - DEBUG - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
numba.core.ssa - DEBUG - on stmt: $const62.28.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
numba.core.ssa - DEBUG - on stmt: $const68.31.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const70.32.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
numba.core.ssa - DEBUG - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
numba.core.ssa - DEBUG - on stmt: $phi80.0.1 = $78get_iter.36.1
numba.core.ssa - DEBUG - on stmt: jump 80
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 80
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708753193790>
numba.core.ssa - DEBUG - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
numba.core.ssa - DEBUG - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
numba.core.ssa - DEBUG - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
numba.core.ssa - DEBUG - on stmt: $phi82.1.1 = $80for_iter.2.1
numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3.1, 82, 92
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 82
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708753193790>
numba.core.ssa - DEBUG - on stmt: index00 = $phi82.1.1
numba.core.ssa - DEBUG - on stmt: jump 90
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 92
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708753193790>
numba.core.ssa - DEBUG - on stmt: $92return_value.1.1 = cast(value=out0)
numba.core.ssa - DEBUG - on stmt: return $92return_value.1.1
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 90
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708753193790>
numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: stencil_index = $const4.1 + index00
numba.core.ssa - DEBUG - on stmt: $6binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $const10.4 = const(int, -1)
numba.core.ssa - DEBUG - on stmt: stencil_index.1 = $const10.4 + index00
numba.core.ssa - DEBUG - on stmt: $12binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5
numba.core.ssa - DEBUG - on stmt: $const18.8 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: stencil_index.2 = $const18.8 + index00
numba.core.ssa - DEBUG - on stmt: $20binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $const24.11 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: stencil_index.3 = $const24.11 + index00
numba.core.ssa - DEBUG - on stmt: $26binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12
numba.core.ssa - DEBUG - on stmt: $30binary_and.14 = $14compare_op.6 & $28compare_op.13
numba.core.ssa - DEBUG - on stmt: $32return_value.15 = cast(value=$30binary_and.14)
numba.core.ssa - DEBUG - on stmt: out0[index00] = $32return_value.15
numba.core.ssa - DEBUG - on stmt: jump 91
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 91
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708753193790>
numba.core.ssa - DEBUG - on stmt: jump 80
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10load_attr.3.1': [(<numba.core.ir.Assign object at 0x708753185090>,
                                   0)],
             '$12binary_subscr.5': [(<numba.core.ir.Assign object at 0x70875317f9a0>,
                                     90)],
             '$14compare_op.6': [(<numba.core.ir.Assign object at 0x708753170d60>,
                                  90)],
             '$14load_global.5.1': [(<numba.core.ir.Assign object at 0x708753184df0>,
                                     0)],
             '$16load_attr.6.1': [(<numba.core.ir.Assign object at 0x708753184c70>,
                                   0)],
             '$20binary_subscr.9': [(<numba.core.ir.Assign object at 0x70875317fbe0>,
                                     90)],
             '$26binary_subscr.12': [(<numba.core.ir.Assign object at 0x70875317fe20>,
                                      90)],
             '$28compare_op.13': [(<numba.core.ir.Assign object at 0x70875317c250>,
                                   90)],
             '$30binary_and.14': [(<numba.core.ir.Assign object at 0x70875317c430>,
                                   90)],
             '$32build_slice.13.1': [(<numba.core.ir.Assign object at 0x708753185ba0>,
                                      0)],
             '$32build_slice.14.1': [(<numba.core.ir.Assign object at 0x708753185cc0>,
                                      0)],
             '$32return_value.15': [(<numba.core.ir.Assign object at 0x70875317cee0>,
                                     90)],
             '$44build_slice.19.1': [(<numba.core.ir.Assign object at 0x7087531864a0>,
                                      0)],
             '$44build_slice.20.1': [(<numba.core.ir.Assign object at 0x7087531865c0>,
                                      0)],
             '$48load_global.21.1': [(<numba.core.ir.Assign object at 0x708753186800>,
                                      0)],
             '$50load_global.22.1': [(<numba.core.ir.Assign object at 0x708753186980>,
                                      0)],
             '$56call_function.25.1': [(<numba.core.ir.Assign object at 0x708753186e60>,
                                        0)],
             '$58unary_negative.26.1': [(<numba.core.ir.Assign object at 0x708753186f80>,
                                         0)],
             '$64binary_subscr.29.1': [(<numba.core.ir.Assign object at 0x7087531873d0>,
                                        0)],
             '$66load_global.30.1': [(<numba.core.ir.Assign object at 0x708753187520>,
                                      0)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x70875317f760>,
                                    90)],
             '$72call_function.33.1': [(<numba.core.ir.Assign object at 0x708753187a00>,
                                        0)],
             '$74binary_subtract.34.1': [(<numba.core.ir.Assign object at 0x708753187b50>,
                                          0)],
             '$76call_function.35.1': [(<numba.core.ir.Assign object at 0x708753187d00>,
                                        0)],
             '$78get_iter.36.1': [(<numba.core.ir.Assign object at 0x708753187e20>,
                                   0)],
             '$80for_iter.1.1': [(<numba.core.ir.Assign object at 0x708753187f10>,
                                  80)],
             '$80for_iter.2.1': [(<numba.core.ir.Assign object at 0x708753190070>,
                                  80)],
             '$80for_iter.3.1': [(<numba.core.ir.Assign object at 0x708753190190>,
                                  80)],
             '$8load_global.2.1': [(<numba.core.ir.Assign object at 0x708753185210>,
                                    0)],
             '$92return_value.1.1': [(<numba.core.ir.Assign object at 0x708753190ac0>,
                                      92)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x70875316b820>,
                             90)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x708753170f40>,
                             90)],
             '$const24.11': [(<numba.core.ir.Assign object at 0x708753172d10>,
                              90)],
             '$const24.9.1': [(<numba.core.ir.Assign object at 0x708753184520>,
                               0)],
             '$const28.11.1': [(<numba.core.ir.Assign object at 0x708753184130>,
                                0)],
             '$const30.12.1': [(<numba.core.ir.Assign object at 0x708753185a20>,
                                0)],
             '$const36.15.1': [(<numba.core.ir.Assign object at 0x708753185f00>,
                                0)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x70875311b640>,
                            90)],
             '$const40.17.1': [(<numba.core.ir.Assign object at 0x7087531861a0>,
                                0)],
             '$const42.18.1': [(<numba.core.ir.Assign object at 0x708753186320>,
                                0)],
             '$const52.23.1': [(<numba.core.ir.Assign object at 0x708753186b00>,
                                0)],
             '$const54.24.1': [(<numba.core.ir.Assign object at 0x708753186c80>,
                                0)],
             '$const62.28.1': [(<numba.core.ir.Assign object at 0x708753187220>,
                                0)],
             '$const68.31.1': [(<numba.core.ir.Assign object at 0x7087531876a0>,
                                0)],
             '$const70.32.1': [(<numba.core.ir.Assign object at 0x708753187820>,
                                0)],
             '$phi80.0.1': [(<numba.core.ir.Assign object at 0x7087531855a0>,
                             0)],
             '$phi82.1.1': [(<numba.core.ir.Assign object at 0x708753187130>,
                             80)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x7087531854b0>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x708753190460>, 82)],
             'out0': [(<numba.core.ir.Assign object at 0x7087531846a0>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x70875317ed70>,
                                90)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x70875317f8e0>,
                                  90)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x70875317fb20>,
                                  90)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x70875317fd60>,
                                  90)],
             'x': [(<numba.core.ir.Assign object at 0x708753185750>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x708753193790>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1051)
           2	LOAD_GLOBAL(arg=0, lineno=1065)
           4	LOAD_FAST(arg=0, lineno=1065)
           6	CALL_FUNCTION(arg=1, lineno=1065)
           8	LOAD_FAST(arg=1, lineno=1065)
          10	LOAD_CONST(arg=1, lineno=1065)
          12	LOAD_CONST(arg=1, lineno=1065)
          14	BUILD_SLICE(arg=2, lineno=1065)
          16	STORE_SUBSCR(arg=None, lineno=1065)
          18	LOAD_CONST(arg=1, lineno=1065)
          20	RETURN_VALUE(arg=None, lineno=1065)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1051)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1065)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1065)
numba.core.byteflow - DEBUG - stack ['$2load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=1065)
numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=1065)
numba.core.byteflow - DEBUG - stack ['$6call_function.2']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=1065)
numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=1065)
numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=BUILD_SLICE(arg=2, lineno=1065)
numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4', '$const12.5']
numba.core.byteflow - DEBUG - dispatch pc=16, inst=STORE_SUBSCR(arg=None, lineno=1065)
numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$14build_slice.7']
numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1065)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=1065)
numba.core.byteflow - DEBUG - stack ['$const18.8']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - keep phismap: {}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$x4.1'}), (6, {'func': '$2load_global.0', 'args': ['$x4.1'], 'res': '$6call_function.2'}), (8, {'res': '$y8.3'}), (10, {'res': '$const10.4'}), (12, {'res': '$const12.5'}), (14, {'start': '$const10.4', 'stop': '$const12.5', 'step': None, 'res': '$14build_slice.7', 'slicevar': '$14build_slice.6'}), (16, {'target': '$y8.3', 'index': '$14build_slice.7', 'value': '$6call_function.2'}), (18, {'res': '$const18.8'}), (20, {'retval': '$const18.8', 'castval': '$20return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x708758aa7400>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $const10.4 = const(NoneType, None)       ['$const10.4']
    $const12.5 = const(NoneType, None)       ['$const12.5']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1065), Var($const12.5, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4', '$const12.5']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    $const18.8 = const(NoneType, None)       ['$const18.8']
    $20return_value.9 = cast(value=$const18.8) ['$20return_value.9', '$const18.8']
    return $20return_value.9                 ['$20return_value.9']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708753119840>
numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
numba.core.ssa - DEBUG - on stmt: y = arg(1, name=y)
numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(_localmax_sten: <numba.stencils.stencil.StencilFunc object at 0x708758aa7400>)
numba.core.ssa - DEBUG - on stmt: $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1051)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $const10.4 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $const12.5 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $14build_slice.6 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1065), Var($const12.5, utils.py:1065)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: y[slice(None, None, None)] = $6call_function.2
numba.core.ssa - DEBUG - on stmt: $const18.8 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $20return_value.9 = cast(value=$const18.8)
numba.core.ssa - DEBUG - on stmt: return $20return_value.9
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$14build_slice.6': [(<numba.core.ir.Assign object at 0x70875311a0b0>,
                                   0)],
             '$14build_slice.7': [(<numba.core.ir.Assign object at 0x70875311ae00>,
                                   0)],
             '$20return_value.9': [(<numba.core.ir.Assign object at 0x7087530de560>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7087530de020>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x7087530dded0>,
                                    0)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x7087530ddb70>,
                             0)],
             '$const12.5': [(<numba.core.ir.Assign object at 0x7087530dd990>,
                             0)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x7087530ded10>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7087530deb00>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7087530de080>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x708753119840>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_FAST(arg=0, lineno=2)
           4	LOAD_ATTR(arg=0, lineno=2)
           6	STORE_FAST(arg=1, lineno=2)
           8	LOAD_GLOBAL(arg=1, lineno=3)
          10	LOAD_ATTR(arg=2, lineno=3)
          12	LOAD_FAST(arg=1, lineno=3)
          14	LOAD_GLOBAL(arg=1, lineno=3)
          16	LOAD_ATTR(arg=3, lineno=3)
          18	LOAD_CONST(arg=1, lineno=3)
          20	CALL_FUNCTION_KW(arg=2, lineno=3)
          22	STORE_FAST(arg=2, lineno=3)
          24	LOAD_CONST(arg=2, lineno=4)
          26	LOAD_FAST(arg=2, lineno=4)
          28	LOAD_CONST(arg=0, lineno=4)
          30	LOAD_CONST(arg=3, lineno=4)
          32	BUILD_SLICE(arg=2, lineno=4)
          34	STORE_SUBSCR(arg=None, lineno=4)
          36	LOAD_CONST(arg=2, lineno=5)
          38	LOAD_FAST(arg=2, lineno=5)
          40	LOAD_CONST(arg=4, lineno=5)
          42	LOAD_CONST(arg=0, lineno=5)
          44	BUILD_SLICE(arg=2, lineno=5)
          46	STORE_SUBSCR(arg=None, lineno=5)
          48	LOAD_GLOBAL(arg=4, lineno=6)
          50	LOAD_GLOBAL(arg=5, lineno=6)
          52	LOAD_CONST(arg=2, lineno=6)
          54	LOAD_CONST(arg=4, lineno=6)
          56	CALL_FUNCTION(arg=2, lineno=6)
          58	UNARY_NEGATIVE(arg=None, lineno=6)
          60	LOAD_FAST(arg=1, lineno=6)
          62	LOAD_CONST(arg=2, lineno=6)
          64	BINARY_SUBSCR(arg=None, lineno=6)
          66	LOAD_GLOBAL(arg=6, lineno=6)
          68	LOAD_CONST(arg=2, lineno=6)
          70	LOAD_CONST(arg=3, lineno=6)
          72	CALL_FUNCTION(arg=2, lineno=6)
          74	BINARY_SUBTRACT(arg=None, lineno=6)
          76	CALL_FUNCTION(arg=2, lineno=6)
          78	GET_ITER(arg=None, lineno=6)
>         80	FOR_ITER(arg=4, lineno=6)
          82	STORE_FAST(arg=3, lineno=6)
          84	LOAD_CONST(arg=2, lineno=7)
          86	STORE_FAST(arg=4, lineno=7)
          88	JUMP_ABSOLUTE(arg=41, lineno=7)
>         90	LOAD_FAST(arg=2, lineno=8)
          92	RETURN_VALUE(arg=None, lineno=8)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=2)
numba.core.byteflow - DEBUG - stack ['$x2.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=STORE_FAST(arg=1, lineno=2)
numba.core.byteflow - DEBUG - stack ['$4load_attr.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_GLOBAL(arg=1, lineno=3)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_ATTR(arg=2, lineno=3)
numba.core.byteflow - DEBUG - stack ['$8load_global.2']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_GLOBAL(arg=1, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4']
numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_ATTR(arg=3, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$14load_global.5']
numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6']
numba.core.byteflow - DEBUG - dispatch pc=20, inst=CALL_FUNCTION_KW(arg=2, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6', '$const18.7']
numba.core.byteflow - DEBUG - dispatch pc=22, inst=STORE_FAST(arg=2, lineno=3)
numba.core.byteflow - DEBUG - stack ['$20call_function_kw.8']
numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=2, lineno=4)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=2, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9']
numba.core.byteflow - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=0, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10']
numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=3, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11']
numba.core.byteflow - DEBUG - dispatch pc=32, inst=BUILD_SLICE(arg=2, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11', '$const30.12']
numba.core.byteflow - DEBUG - dispatch pc=34, inst=STORE_SUBSCR(arg=None, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$32build_slice.14']
numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=2, lineno=5)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=2, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15']
numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16']
numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=0, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17']
numba.core.byteflow - DEBUG - dispatch pc=44, inst=BUILD_SLICE(arg=2, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17', '$const42.18']
numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_SUBSCR(arg=None, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$44build_slice.20']
numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_GLOBAL(arg=4, lineno=6)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=5, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21']
numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22']
numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=4, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23']
numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_FUNCTION(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23', '$const54.24']
numba.core.byteflow - DEBUG - dispatch pc=58, inst=UNARY_NEGATIVE(arg=None, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$56call_function.25']
numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_FAST(arg=1, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26']
numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_CONST(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27']
numba.core.byteflow - DEBUG - dispatch pc=64, inst=BINARY_SUBSCR(arg=None, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27', '$const62.28']
numba.core.byteflow - DEBUG - dispatch pc=66, inst=LOAD_GLOBAL(arg=6, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29']
numba.core.byteflow - DEBUG - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30']
numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=3, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31']
numba.core.byteflow - DEBUG - dispatch pc=72, inst=CALL_FUNCTION(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31', '$const70.32']
numba.core.byteflow - DEBUG - dispatch pc=74, inst=BINARY_SUBTRACT(arg=None, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$72call_function.33']
numba.core.byteflow - DEBUG - dispatch pc=76, inst=CALL_FUNCTION(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34']
numba.core.byteflow - DEBUG - dispatch pc=78, inst=GET_ITER(arg=None, lineno=6)
numba.core.byteflow - DEBUG - stack ['$76call_function.35']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$78get_iter.36',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi80.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=80, inst=FOR_ITER(arg=4, lineno=6)
numba.core.byteflow - DEBUG - stack ['$phi80.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=('$phi80.0', '$80for_iter.2'), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=82 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_FAST(arg=2, lineno=8)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=92, inst=RETURN_VALUE(arg=None, lineno=8)
numba.core.byteflow - DEBUG - stack ['$out090.0']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: ['$phi82.0', '$phi82.1']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=2)
numba.core.byteflow - DEBUG - dispatch pc=82, inst=STORE_FAST(arg=3, lineno=6)
numba.core.byteflow - DEBUG - stack ['$phi82.0', '$phi82.1']
numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_CONST(arg=2, lineno=7)
numba.core.byteflow - DEBUG - stack ['$phi82.0']
numba.core.byteflow - DEBUG - dispatch pc=86, inst=STORE_FAST(arg=4, lineno=7)
numba.core.byteflow - DEBUG - stack ['$phi82.0', '$const84.2']
numba.core.byteflow - DEBUG - dispatch pc=88, inst=JUMP_ABSOLUTE(arg=41, lineno=7)
numba.core.byteflow - DEBUG - stack ['$phi82.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$phi82.0',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=82 nstack_initial=2): {'$phi82.1'},
             State(pc_initial=90 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {'$phi80.0': State(pc_initial=0 nstack_initial=0),
 '$phi82.1': State(pc_initial=80 nstack_initial=1)}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi82.0', State(pc_initial=82 nstack_initial=2))},
             '$phi82.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
numba.core.byteflow - DEBUG - keep phismap: {'$phi80.0': {('$78get_iter.36', State(pc_initial=0 nstack_initial=0))},
 '$phi82.1': {('$80for_iter.2', State(pc_initial=80 nstack_initial=1))}}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi80.0': '$78get_iter.36'},
             State(pc_initial=80 nstack_initial=1): {'$phi82.1': '$80for_iter.2'}})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'item': '$x2.0', 'res': '$4load_attr.1'}), (6, {'value': '$4load_attr.1'}), (8, {'res': '$8load_global.2'}), (10, {'item': '$8load_global.2', 'res': '$10load_attr.3'}), (12, {'res': '$full_shape012.4'}), (14, {'res': '$14load_global.5'}), (16, {'item': '$14load_global.5', 'res': '$16load_attr.6'}), (18, {'res': '$const18.7'}), (20, {'func': '$10load_attr.3', 'args': ['$full_shape012.4', '$16load_attr.6'], 'names': '$const18.7', 'res': '$20call_function_kw.8'}), (22, {'value': '$20call_function_kw.8'}), (24, {'res': '$const24.9'}), (26, {'res': '$out026.10'}), (28, {'res': '$const28.11'}), (30, {'res': '$const30.12'}), (32, {'start': '$const28.11', 'stop': '$const30.12', 'step': None, 'res': '$32build_slice.14', 'slicevar': '$32build_slice.13'}), (34, {'target': '$out026.10', 'index': '$32build_slice.14', 'value': '$const24.9'}), (36, {'res': '$const36.15'}), (38, {'res': '$out038.16'}), (40, {'res': '$const40.17'}), (42, {'res': '$const42.18'}), (44, {'start': '$const40.17', 'stop': '$const42.18', 'step': None, 'res': '$44build_slice.20', 'slicevar': '$44build_slice.19'}), (46, {'target': '$out038.16', 'index': '$44build_slice.20', 'value': '$const36.15'}), (48, {'res': '$48load_global.21'}), (50, {'res': '$50load_global.22'}), (52, {'res': '$const52.23'}), (54, {'res': '$const54.24'}), (56, {'func': '$50load_global.22', 'args': ['$const52.23', '$const54.24'], 'res': '$56call_function.25'}), (58, {'value': '$56call_function.25', 'res': '$58unary_negative.26'}), (60, {'res': '$full_shape060.27'}), (62, {'res': '$const62.28'}), (64, {'index': '$const62.28', 'target': '$full_shape060.27', 'res': '$64binary_subscr.29'}), (66, {'res': '$66load_global.30'}), (68, {'res': '$const68.31'}), (70, {'res': '$const70.32'}), (72, {'func': '$66load_global.30', 'args': ['$const68.31', '$const70.32'], 'res': '$72call_function.33'}), (74, {'lhs': '$64binary_subscr.29', 'rhs': '$72call_function.33', 'res': '$74binary_subtract.34'}), (76, {'func': '$48load_global.21', 'args': ['$58unary_negative.26', '$74binary_subtract.34'], 'res': '$76call_function.35'}), (78, {'value': '$76call_function.35', 'res': '$78get_iter.36'})), outgoing_phis={'$phi80.0': '$78get_iter.36'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$78get_iter.36',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'iterator': '$phi80.0', 'pair': '$80for_iter.1', 'indval': '$80for_iter.2', 'pred': '$80for_iter.3'}),), outgoing_phis={'$phi82.1': '$80for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 82: ('$phi80.0', '$80for_iter.2')})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=2):
AdaptBlockInfo(insts=((82, {'value': '$phi82.1'}), (84, {'res': '$const84.2'}), (86, {'value': '$const84.2'}), (88, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi82.0',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$out090.0'}), (92, {'retval': '$out090.0', 'castval': '$92return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9 = const(int, 0)               ['$const24.9']
    $const28.11 = const(NoneType, None)      ['$const28.11']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11, $const30.12, func=$32build_slice.13, args=(Var($const28.11, <string>:4), Var($const30.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11', '$const30.12']
    out0[$32build_slice.14] = $const24.9     ['$32build_slice.14', '$const24.9', 'out0']
    $const36.15 = const(int, 0)              ['$const36.15']
    $const40.17 = const(int, -1)             ['$const40.17']
    $const42.18 = const(NoneType, None)      ['$const42.18']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17, $const42.18, func=$44build_slice.19, args=(Var($const40.17, <string>:5), Var($const42.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17', '$const42.18']
    out0[$44build_slice.20] = $const36.15    ['$44build_slice.20', '$const36.15', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23 = const(int, 0)              ['$const52.23']
    $const54.24 = const(int, -1)             ['$const54.24']
    $56call_function.25 = call $50load_global.22($const52.23, $const54.24, func=$50load_global.22, args=[Var($const52.23, <string>:6), Var($const54.24, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23', '$const54.24']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28 = const(int, 0)              ['$const62.28']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31 = const(int, 0)              ['$const68.31']
    $const70.32 = const(int, 1)              ['$const70.32']
    $72call_function.33 = call $66load_global.30($const68.31, $const70.32, func=$66load_global.30, args=[Var($const68.31, <string>:6), Var($const70.32, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31', '$const70.32']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752f872e0>
numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
numba.core.ssa - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
numba.core.ssa - DEBUG - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
numba.core.ssa - DEBUG - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $const24.9.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const28.11.1 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $const30.12.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: out0[$32build_slice.14.1] = $const24.9.1
numba.core.ssa - DEBUG - on stmt: $const36.15.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const40.17.1 = const(int, -1)
numba.core.ssa - DEBUG - on stmt: $const42.18.1 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: out0[$44build_slice.20.1] = $const36.15.1
numba.core.ssa - DEBUG - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
numba.core.ssa - DEBUG - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $const52.23.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const54.24.1 = const(int, -1)
numba.core.ssa - DEBUG - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
numba.core.ssa - DEBUG - on stmt: $const62.28.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
numba.core.ssa - DEBUG - on stmt: $const68.31.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const70.32.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
numba.core.ssa - DEBUG - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
numba.core.ssa - DEBUG - on stmt: $phi80.0.1 = $78get_iter.36.1
numba.core.ssa - DEBUG - on stmt: jump 80
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 80
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752f872e0>
numba.core.ssa - DEBUG - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
numba.core.ssa - DEBUG - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
numba.core.ssa - DEBUG - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
numba.core.ssa - DEBUG - on stmt: $phi82.1.1 = $80for_iter.2.1
numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3.1, 82, 92
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 82
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752f872e0>
numba.core.ssa - DEBUG - on stmt: index00 = $phi82.1.1
numba.core.ssa - DEBUG - on stmt: jump 90
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 92
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752f872e0>
numba.core.ssa - DEBUG - on stmt: $92return_value.1.1 = cast(value=out0)
numba.core.ssa - DEBUG - on stmt: return $92return_value.1.1
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 90
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752f872e0>
numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: stencil_index = $const4.1 + index00
numba.core.ssa - DEBUG - on stmt: $6binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $const10.4 = const(int, -1)
numba.core.ssa - DEBUG - on stmt: stencil_index.1 = $const10.4 + index00
numba.core.ssa - DEBUG - on stmt: $12binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $14compare_op.6 = $6binary_subscr.2 > $12binary_subscr.5
numba.core.ssa - DEBUG - on stmt: $const18.8 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: stencil_index.2 = $const18.8 + index00
numba.core.ssa - DEBUG - on stmt: $20binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $const24.11 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: stencil_index.3 = $const24.11 + index00
numba.core.ssa - DEBUG - on stmt: $26binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $28compare_op.13 = $20binary_subscr.9 >= $26binary_subscr.12
numba.core.ssa - DEBUG - on stmt: $30binary_and.14 = $14compare_op.6 & $28compare_op.13
numba.core.ssa - DEBUG - on stmt: $32return_value.15 = cast(value=$30binary_and.14)
numba.core.ssa - DEBUG - on stmt: out0[index00] = $32return_value.15
numba.core.ssa - DEBUG - on stmt: jump 91
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 91
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752f872e0>
numba.core.ssa - DEBUG - on stmt: jump 80
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10load_attr.3.1': [(<numba.core.ir.Assign object at 0x708752f7b100>,
                                   0)],
             '$12binary_subscr.5': [(<numba.core.ir.Assign object at 0x708752f7ab00>,
                                     90)],
             '$14compare_op.6': [(<numba.core.ir.Assign object at 0x7087530b6fb0>,
                                  90)],
             '$14load_global.5.1': [(<numba.core.ir.Assign object at 0x708753057070>,
                                     0)],
             '$16load_attr.6.1': [(<numba.core.ir.Assign object at 0x7087530b8160>,
                                   0)],
             '$20binary_subscr.9': [(<numba.core.ir.Assign object at 0x708752f7ad40>,
                                     90)],
             '$26binary_subscr.12': [(<numba.core.ir.Assign object at 0x708752f7af80>,
                                      90)],
             '$28compare_op.13': [(<numba.core.ir.Assign object at 0x708753057ac0>,
                                   90)],
             '$30binary_and.14': [(<numba.core.ir.Assign object at 0x708753056740>,
                                   90)],
             '$32build_slice.13.1': [(<numba.core.ir.Assign object at 0x7087530b8d00>,
                                      0)],
             '$32build_slice.14.1': [(<numba.core.ir.Assign object at 0x7087530b8e20>,
                                      0)],
             '$32return_value.15': [(<numba.core.ir.Assign object at 0x7087530577c0>,
                                     90)],
             '$44build_slice.19.1': [(<numba.core.ir.Assign object at 0x7087530b9600>,
                                      0)],
             '$44build_slice.20.1': [(<numba.core.ir.Assign object at 0x7087530b9720>,
                                      0)],
             '$48load_global.21.1': [(<numba.core.ir.Assign object at 0x7087530b9960>,
                                      0)],
             '$50load_global.22.1': [(<numba.core.ir.Assign object at 0x7087530b9ae0>,
                                      0)],
             '$56call_function.25.1': [(<numba.core.ir.Assign object at 0x7087530b9fc0>,
                                        0)],
             '$58unary_negative.26.1': [(<numba.core.ir.Assign object at 0x7087530ba0e0>,
                                         0)],
             '$64binary_subscr.29.1': [(<numba.core.ir.Assign object at 0x7087530ba530>,
                                        0)],
             '$66load_global.30.1': [(<numba.core.ir.Assign object at 0x7087530ba680>,
                                      0)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x708752f7a8c0>,
                                    90)],
             '$72call_function.33.1': [(<numba.core.ir.Assign object at 0x7087530bab60>,
                                        0)],
             '$74binary_subtract.34.1': [(<numba.core.ir.Assign object at 0x7087530bacb0>,
                                          0)],
             '$76call_function.35.1': [(<numba.core.ir.Assign object at 0x7087530bae60>,
                                        0)],
             '$78get_iter.36.1': [(<numba.core.ir.Assign object at 0x7087530baf80>,
                                   0)],
             '$80for_iter.1.1': [(<numba.core.ir.Assign object at 0x7087530bb070>,
                                  80)],
             '$80for_iter.2.1': [(<numba.core.ir.Assign object at 0x7087530bb190>,
                                  80)],
             '$80for_iter.3.1': [(<numba.core.ir.Assign object at 0x7087530bb2b0>,
                                  80)],
             '$8load_global.2.1': [(<numba.core.ir.Assign object at 0x708752f7b310>,
                                    0)],
             '$92return_value.1.1': [(<numba.core.ir.Assign object at 0x7087530bbbe0>,
                                      92)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x7087530c3610>,
                             90)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x7087530b66e0>,
                             90)],
             '$const24.11': [(<numba.core.ir.Assign object at 0x7087530b4730>,
                              90)],
             '$const24.9.1': [(<numba.core.ir.Assign object at 0x7087530b8760>,
                               0)],
             '$const28.11.1': [(<numba.core.ir.Assign object at 0x7087530b8a00>,
                                0)],
             '$const30.12.1': [(<numba.core.ir.Assign object at 0x7087530b8b80>,
                                0)],
             '$const36.15.1': [(<numba.core.ir.Assign object at 0x7087530b9060>,
                                0)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x7087530c2ef0>,
                            90)],
             '$const40.17.1': [(<numba.core.ir.Assign object at 0x7087530b9300>,
                                0)],
             '$const42.18.1': [(<numba.core.ir.Assign object at 0x7087530b9480>,
                                0)],
             '$const52.23.1': [(<numba.core.ir.Assign object at 0x7087530b9c60>,
                                0)],
             '$const54.24.1': [(<numba.core.ir.Assign object at 0x7087530b9de0>,
                                0)],
             '$const62.28.1': [(<numba.core.ir.Assign object at 0x7087530ba380>,
                                0)],
             '$const68.31.1': [(<numba.core.ir.Assign object at 0x7087530ba800>,
                                0)],
             '$const70.32.1': [(<numba.core.ir.Assign object at 0x7087530ba980>,
                                0)],
             '$phi80.0.1': [(<numba.core.ir.Assign object at 0x708752f7b8e0>,
                             0)],
             '$phi82.1.1': [(<numba.core.ir.Assign object at 0x7087530ba200>,
                             80)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x708752f7b700>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7087530bb580>, 82)],
             'out0': [(<numba.core.ir.Assign object at 0x7087530b85e0>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x708753056590>,
                                90)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x708752f7aa40>,
                                  90)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x708752f7ac80>,
                                  90)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x708752f7aec0>,
                                  90)],
             'x': [(<numba.core.ir.Assign object at 0x708752f7b9a0>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x708752f872e0>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1068)
           2	LOAD_GLOBAL(arg=0, lineno=1082)
           4	LOAD_FAST(arg=0, lineno=1082)
           6	CALL_FUNCTION(arg=1, lineno=1082)
           8	LOAD_FAST(arg=1, lineno=1082)
          10	LOAD_CONST(arg=1, lineno=1082)
          12	LOAD_CONST(arg=1, lineno=1082)
          14	BUILD_SLICE(arg=2, lineno=1082)
          16	STORE_SUBSCR(arg=None, lineno=1082)
          18	LOAD_CONST(arg=1, lineno=1082)
          20	RETURN_VALUE(arg=None, lineno=1082)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1068)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1082)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1082)
numba.core.byteflow - DEBUG - stack ['$2load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=1082)
numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=1082)
numba.core.byteflow - DEBUG - stack ['$6call_function.2']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=1082)
numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=1082)
numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=BUILD_SLICE(arg=2, lineno=1082)
numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4', '$const12.5']
numba.core.byteflow - DEBUG - dispatch pc=16, inst=STORE_SUBSCR(arg=None, lineno=1082)
numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$14build_slice.7']
numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1082)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=1082)
numba.core.byteflow - DEBUG - stack ['$const18.8']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - keep phismap: {}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$x4.1'}), (6, {'func': '$2load_global.0', 'args': ['$x4.1'], 'res': '$6call_function.2'}), (8, {'res': '$y8.3'}), (10, {'res': '$const10.4'}), (12, {'res': '$const12.5'}), (14, {'start': '$const10.4', 'stop': '$const12.5', 'step': None, 'res': '$14build_slice.7', 'slicevar': '$14build_slice.6'}), (16, {'target': '$y8.3', 'index': '$14build_slice.7', 'value': '$6call_function.2'}), (18, {'res': '$const18.8'}), (20, {'retval': '$const18.8', 'castval': '$20return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x708758aa7580>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $const10.4 = const(NoneType, None)       ['$const10.4']
    $const12.5 = const(NoneType, None)       ['$const12.5']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1082), Var($const12.5, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4', '$const12.5']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    $const18.8 = const(NoneType, None)       ['$const18.8']
    $20return_value.9 = cast(value=$const18.8) ['$20return_value.9', '$const18.8']
    return $20return_value.9                 ['$20return_value.9']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752df3010>
numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
numba.core.ssa - DEBUG - on stmt: y = arg(1, name=y)
numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x708758aa7580>)
numba.core.ssa - DEBUG - on stmt: $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $const10.4 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $const12.5 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $14build_slice.6 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1082), Var($const12.5, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: y[slice(None, None, None)] = $6call_function.2
numba.core.ssa - DEBUG - on stmt: $const18.8 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $20return_value.9 = cast(value=$const18.8)
numba.core.ssa - DEBUG - on stmt: return $20return_value.9
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$14build_slice.6': [(<numba.core.ir.Assign object at 0x708752c0c5e0>,
                                   0)],
             '$14build_slice.7': [(<numba.core.ir.Assign object at 0x708752c0c700>,
                                   0)],
             '$20return_value.9': [(<numba.core.ir.Assign object at 0x708752c0cac0>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x708752df3d60>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x708752c0c0a0>,
                                    0)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x708752c0c2e0>,
                             0)],
             '$const12.5': [(<numba.core.ir.Assign object at 0x708752c0c460>,
                             0)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x708752c0c940>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x708752df2f20>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x708752df30a0>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x708752df3010>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_FAST(arg=0, lineno=2)
           4	LOAD_ATTR(arg=0, lineno=2)
           6	STORE_FAST(arg=1, lineno=2)
           8	LOAD_GLOBAL(arg=1, lineno=3)
          10	LOAD_ATTR(arg=2, lineno=3)
          12	LOAD_FAST(arg=1, lineno=3)
          14	LOAD_GLOBAL(arg=1, lineno=3)
          16	LOAD_ATTR(arg=3, lineno=3)
          18	LOAD_CONST(arg=1, lineno=3)
          20	CALL_FUNCTION_KW(arg=2, lineno=3)
          22	STORE_FAST(arg=2, lineno=3)
          24	LOAD_CONST(arg=2, lineno=4)
          26	LOAD_FAST(arg=2, lineno=4)
          28	LOAD_CONST(arg=0, lineno=4)
          30	LOAD_CONST(arg=3, lineno=4)
          32	BUILD_SLICE(arg=2, lineno=4)
          34	STORE_SUBSCR(arg=None, lineno=4)
          36	LOAD_CONST(arg=2, lineno=5)
          38	LOAD_FAST(arg=2, lineno=5)
          40	LOAD_CONST(arg=4, lineno=5)
          42	LOAD_CONST(arg=0, lineno=5)
          44	BUILD_SLICE(arg=2, lineno=5)
          46	STORE_SUBSCR(arg=None, lineno=5)
          48	LOAD_GLOBAL(arg=4, lineno=6)
          50	LOAD_GLOBAL(arg=5, lineno=6)
          52	LOAD_CONST(arg=2, lineno=6)
          54	LOAD_CONST(arg=4, lineno=6)
          56	CALL_FUNCTION(arg=2, lineno=6)
          58	UNARY_NEGATIVE(arg=None, lineno=6)
          60	LOAD_FAST(arg=1, lineno=6)
          62	LOAD_CONST(arg=2, lineno=6)
          64	BINARY_SUBSCR(arg=None, lineno=6)
          66	LOAD_GLOBAL(arg=6, lineno=6)
          68	LOAD_CONST(arg=2, lineno=6)
          70	LOAD_CONST(arg=3, lineno=6)
          72	CALL_FUNCTION(arg=2, lineno=6)
          74	BINARY_SUBTRACT(arg=None, lineno=6)
          76	CALL_FUNCTION(arg=2, lineno=6)
          78	GET_ITER(arg=None, lineno=6)
>         80	FOR_ITER(arg=4, lineno=6)
          82	STORE_FAST(arg=3, lineno=6)
          84	LOAD_CONST(arg=2, lineno=7)
          86	STORE_FAST(arg=4, lineno=7)
          88	JUMP_ABSOLUTE(arg=41, lineno=7)
>         90	LOAD_FAST(arg=2, lineno=8)
          92	RETURN_VALUE(arg=None, lineno=8)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=2)
numba.core.byteflow - DEBUG - stack ['$x2.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=STORE_FAST(arg=1, lineno=2)
numba.core.byteflow - DEBUG - stack ['$4load_attr.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_GLOBAL(arg=1, lineno=3)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_ATTR(arg=2, lineno=3)
numba.core.byteflow - DEBUG - stack ['$8load_global.2']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_GLOBAL(arg=1, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4']
numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_ATTR(arg=3, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$14load_global.5']
numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6']
numba.core.byteflow - DEBUG - dispatch pc=20, inst=CALL_FUNCTION_KW(arg=2, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6', '$const18.7']
numba.core.byteflow - DEBUG - dispatch pc=22, inst=STORE_FAST(arg=2, lineno=3)
numba.core.byteflow - DEBUG - stack ['$20call_function_kw.8']
numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=2, lineno=4)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=2, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9']
numba.core.byteflow - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=0, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10']
numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=3, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11']
numba.core.byteflow - DEBUG - dispatch pc=32, inst=BUILD_SLICE(arg=2, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11', '$const30.12']
numba.core.byteflow - DEBUG - dispatch pc=34, inst=STORE_SUBSCR(arg=None, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$32build_slice.14']
numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=2, lineno=5)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=2, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15']
numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16']
numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=0, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17']
numba.core.byteflow - DEBUG - dispatch pc=44, inst=BUILD_SLICE(arg=2, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17', '$const42.18']
numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_SUBSCR(arg=None, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$44build_slice.20']
numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_GLOBAL(arg=4, lineno=6)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=5, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21']
numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22']
numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=4, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23']
numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_FUNCTION(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23', '$const54.24']
numba.core.byteflow - DEBUG - dispatch pc=58, inst=UNARY_NEGATIVE(arg=None, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$56call_function.25']
numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_FAST(arg=1, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26']
numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_CONST(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27']
numba.core.byteflow - DEBUG - dispatch pc=64, inst=BINARY_SUBSCR(arg=None, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27', '$const62.28']
numba.core.byteflow - DEBUG - dispatch pc=66, inst=LOAD_GLOBAL(arg=6, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29']
numba.core.byteflow - DEBUG - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30']
numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=3, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31']
numba.core.byteflow - DEBUG - dispatch pc=72, inst=CALL_FUNCTION(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31', '$const70.32']
numba.core.byteflow - DEBUG - dispatch pc=74, inst=BINARY_SUBTRACT(arg=None, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$72call_function.33']
numba.core.byteflow - DEBUG - dispatch pc=76, inst=CALL_FUNCTION(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34']
numba.core.byteflow - DEBUG - dispatch pc=78, inst=GET_ITER(arg=None, lineno=6)
numba.core.byteflow - DEBUG - stack ['$76call_function.35']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$78get_iter.36',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi80.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=80, inst=FOR_ITER(arg=4, lineno=6)
numba.core.byteflow - DEBUG - stack ['$phi80.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=('$phi80.0', '$80for_iter.2'), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=82 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_FAST(arg=2, lineno=8)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=92, inst=RETURN_VALUE(arg=None, lineno=8)
numba.core.byteflow - DEBUG - stack ['$out090.0']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: ['$phi82.0', '$phi82.1']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=2)
numba.core.byteflow - DEBUG - dispatch pc=82, inst=STORE_FAST(arg=3, lineno=6)
numba.core.byteflow - DEBUG - stack ['$phi82.0', '$phi82.1']
numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_CONST(arg=2, lineno=7)
numba.core.byteflow - DEBUG - stack ['$phi82.0']
numba.core.byteflow - DEBUG - dispatch pc=86, inst=STORE_FAST(arg=4, lineno=7)
numba.core.byteflow - DEBUG - stack ['$phi82.0', '$const84.2']
numba.core.byteflow - DEBUG - dispatch pc=88, inst=JUMP_ABSOLUTE(arg=41, lineno=7)
numba.core.byteflow - DEBUG - stack ['$phi82.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$phi82.0',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=82 nstack_initial=2): {'$phi82.1'},
             State(pc_initial=90 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {'$phi80.0': State(pc_initial=0 nstack_initial=0),
 '$phi82.1': State(pc_initial=80 nstack_initial=1)}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi82.0', State(pc_initial=82 nstack_initial=2))},
             '$phi82.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
numba.core.byteflow - DEBUG - keep phismap: {'$phi80.0': {('$78get_iter.36', State(pc_initial=0 nstack_initial=0))},
 '$phi82.1': {('$80for_iter.2', State(pc_initial=80 nstack_initial=1))}}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi80.0': '$78get_iter.36'},
             State(pc_initial=80 nstack_initial=1): {'$phi82.1': '$80for_iter.2'}})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'item': '$x2.0', 'res': '$4load_attr.1'}), (6, {'value': '$4load_attr.1'}), (8, {'res': '$8load_global.2'}), (10, {'item': '$8load_global.2', 'res': '$10load_attr.3'}), (12, {'res': '$full_shape012.4'}), (14, {'res': '$14load_global.5'}), (16, {'item': '$14load_global.5', 'res': '$16load_attr.6'}), (18, {'res': '$const18.7'}), (20, {'func': '$10load_attr.3', 'args': ['$full_shape012.4', '$16load_attr.6'], 'names': '$const18.7', 'res': '$20call_function_kw.8'}), (22, {'value': '$20call_function_kw.8'}), (24, {'res': '$const24.9'}), (26, {'res': '$out026.10'}), (28, {'res': '$const28.11'}), (30, {'res': '$const30.12'}), (32, {'start': '$const28.11', 'stop': '$const30.12', 'step': None, 'res': '$32build_slice.14', 'slicevar': '$32build_slice.13'}), (34, {'target': '$out026.10', 'index': '$32build_slice.14', 'value': '$const24.9'}), (36, {'res': '$const36.15'}), (38, {'res': '$out038.16'}), (40, {'res': '$const40.17'}), (42, {'res': '$const42.18'}), (44, {'start': '$const40.17', 'stop': '$const42.18', 'step': None, 'res': '$44build_slice.20', 'slicevar': '$44build_slice.19'}), (46, {'target': '$out038.16', 'index': '$44build_slice.20', 'value': '$const36.15'}), (48, {'res': '$48load_global.21'}), (50, {'res': '$50load_global.22'}), (52, {'res': '$const52.23'}), (54, {'res': '$const54.24'}), (56, {'func': '$50load_global.22', 'args': ['$const52.23', '$const54.24'], 'res': '$56call_function.25'}), (58, {'value': '$56call_function.25', 'res': '$58unary_negative.26'}), (60, {'res': '$full_shape060.27'}), (62, {'res': '$const62.28'}), (64, {'index': '$const62.28', 'target': '$full_shape060.27', 'res': '$64binary_subscr.29'}), (66, {'res': '$66load_global.30'}), (68, {'res': '$const68.31'}), (70, {'res': '$const70.32'}), (72, {'func': '$66load_global.30', 'args': ['$const68.31', '$const70.32'], 'res': '$72call_function.33'}), (74, {'lhs': '$64binary_subscr.29', 'rhs': '$72call_function.33', 'res': '$74binary_subtract.34'}), (76, {'func': '$48load_global.21', 'args': ['$58unary_negative.26', '$74binary_subtract.34'], 'res': '$76call_function.35'}), (78, {'value': '$76call_function.35', 'res': '$78get_iter.36'})), outgoing_phis={'$phi80.0': '$78get_iter.36'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$78get_iter.36',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'iterator': '$phi80.0', 'pair': '$80for_iter.1', 'indval': '$80for_iter.2', 'pred': '$80for_iter.3'}),), outgoing_phis={'$phi82.1': '$80for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 82: ('$phi80.0', '$80for_iter.2')})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=2):
AdaptBlockInfo(insts=((82, {'value': '$phi82.1'}), (84, {'res': '$const84.2'}), (86, {'value': '$const84.2'}), (88, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi82.0',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$out090.0'}), (92, {'retval': '$out090.0', 'castval': '$92return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9 = const(int, 0)               ['$const24.9']
    $const28.11 = const(NoneType, None)      ['$const28.11']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11, $const30.12, func=$32build_slice.13, args=(Var($const28.11, <string>:4), Var($const30.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11', '$const30.12']
    out0[$32build_slice.14] = $const24.9     ['$32build_slice.14', '$const24.9', 'out0']
    $const36.15 = const(int, 0)              ['$const36.15']
    $const40.17 = const(int, -1)             ['$const40.17']
    $const42.18 = const(NoneType, None)      ['$const42.18']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17, $const42.18, func=$44build_slice.19, args=(Var($const40.17, <string>:5), Var($const42.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17', '$const42.18']
    out0[$44build_slice.20] = $const36.15    ['$44build_slice.20', '$const36.15', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23 = const(int, 0)              ['$const52.23']
    $const54.24 = const(int, -1)             ['$const54.24']
    $56call_function.25 = call $50load_global.22($const52.23, $const54.24, func=$50load_global.22, args=[Var($const52.23, <string>:6), Var($const54.24, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23', '$const54.24']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28 = const(int, 0)              ['$const62.28']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31 = const(int, 0)              ['$const68.31']
    $const70.32 = const(int, 1)              ['$const70.32']
    $72call_function.33 = call $66load_global.30($const68.31, $const70.32, func=$66load_global.30, args=[Var($const68.31, <string>:6), Var($const70.32, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31', '$const70.32']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752ebf160>
numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
numba.core.ssa - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
numba.core.ssa - DEBUG - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
numba.core.ssa - DEBUG - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $const24.9.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const28.11.1 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $const30.12.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: out0[$32build_slice.14.1] = $const24.9.1
numba.core.ssa - DEBUG - on stmt: $const36.15.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const40.17.1 = const(int, -1)
numba.core.ssa - DEBUG - on stmt: $const42.18.1 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: out0[$44build_slice.20.1] = $const36.15.1
numba.core.ssa - DEBUG - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
numba.core.ssa - DEBUG - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $const52.23.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const54.24.1 = const(int, -1)
numba.core.ssa - DEBUG - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
numba.core.ssa - DEBUG - on stmt: $const62.28.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
numba.core.ssa - DEBUG - on stmt: $const68.31.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const70.32.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
numba.core.ssa - DEBUG - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
numba.core.ssa - DEBUG - on stmt: $phi80.0.1 = $78get_iter.36.1
numba.core.ssa - DEBUG - on stmt: jump 80
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 80
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752ebf160>
numba.core.ssa - DEBUG - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
numba.core.ssa - DEBUG - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
numba.core.ssa - DEBUG - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
numba.core.ssa - DEBUG - on stmt: $phi82.1.1 = $80for_iter.2.1
numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3.1, 82, 92
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 82
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752ebf160>
numba.core.ssa - DEBUG - on stmt: index00 = $phi82.1.1
numba.core.ssa - DEBUG - on stmt: jump 90
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 92
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752ebf160>
numba.core.ssa - DEBUG - on stmt: $92return_value.1.1 = cast(value=out0)
numba.core.ssa - DEBUG - on stmt: return $92return_value.1.1
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 90
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752ebf160>
numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: stencil_index = $const4.1 + index00
numba.core.ssa - DEBUG - on stmt: $6binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $const10.4 = const(int, -1)
numba.core.ssa - DEBUG - on stmt: stencil_index.1 = $const10.4 + index00
numba.core.ssa - DEBUG - on stmt: $12binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5
numba.core.ssa - DEBUG - on stmt: $const18.8 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: stencil_index.2 = $const18.8 + index00
numba.core.ssa - DEBUG - on stmt: $20binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $const24.11 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: stencil_index.3 = $const24.11 + index00
numba.core.ssa - DEBUG - on stmt: $26binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12
numba.core.ssa - DEBUG - on stmt: $30binary_and.14 = $14compare_op.6 & $28compare_op.13
numba.core.ssa - DEBUG - on stmt: $32return_value.15 = cast(value=$30binary_and.14)
numba.core.ssa - DEBUG - on stmt: out0[index00] = $32return_value.15
numba.core.ssa - DEBUG - on stmt: jump 91
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 91
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752ebf160>
numba.core.ssa - DEBUG - on stmt: jump 80
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10load_attr.3.1': [(<numba.core.ir.Assign object at 0x708752dc00d0>,
                                   0)],
             '$12binary_subscr.5': [(<numba.core.ir.Assign object at 0x708752dc1870>,
                                     90)],
             '$14compare_op.6': [(<numba.core.ir.Assign object at 0x708752df09d0>,
                                  90)],
             '$14load_global.5.1': [(<numba.core.ir.Assign object at 0x708752dc0940>,
                                     0)],
             '$16load_attr.6.1': [(<numba.core.ir.Assign object at 0x708752dc0d00>,
                                   0)],
             '$20binary_subscr.9': [(<numba.core.ir.Assign object at 0x708752dc1ab0>,
                                     90)],
             '$26binary_subscr.12': [(<numba.core.ir.Assign object at 0x708752dc1cf0>,
                                      90)],
             '$28compare_op.13': [(<numba.core.ir.Assign object at 0x708752edb880>,
                                   90)],
             '$30binary_and.14': [(<numba.core.ir.Assign object at 0x708752ed92a0>,
                                   90)],
             '$32build_slice.13.1': [(<numba.core.ir.Assign object at 0x708752dadc00>,
                                      0)],
             '$32build_slice.14.1': [(<numba.core.ir.Assign object at 0x708752dadcf0>,
                                      0)],
             '$32return_value.15': [(<numba.core.ir.Assign object at 0x708752ed8d60>,
                                     90)],
             '$44build_slice.19.1': [(<numba.core.ir.Assign object at 0x708752daec80>,
                                      0)],
             '$44build_slice.20.1': [(<numba.core.ir.Assign object at 0x708752daee00>,
                                      0)],
             '$48load_global.21.1': [(<numba.core.ir.Assign object at 0x708752daed10>,
                                      0)],
             '$50load_global.22.1': [(<numba.core.ir.Assign object at 0x708752dae920>,
                                      0)],
             '$56call_function.25.1': [(<numba.core.ir.Assign object at 0x708752dadc30>,
                                        0)],
             '$58unary_negative.26.1': [(<numba.core.ir.Assign object at 0x708752dae2c0>,
                                         0)],
             '$64binary_subscr.29.1': [(<numba.core.ir.Assign object at 0x708752dade10>,
                                        0)],
             '$66load_global.30.1': [(<numba.core.ir.Assign object at 0x708752dafb50>,
                                      0)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x708752dc16f0>,
                                    90)],
             '$72call_function.33.1': [(<numba.core.ir.Assign object at 0x708752daccd0>,
                                        0)],
             '$74binary_subtract.34.1': [(<numba.core.ir.Assign object at 0x708752dadd50>,
                                          0)],
             '$76call_function.35.1': [(<numba.core.ir.Assign object at 0x708752dacf70>,
                                        0)],
             '$78get_iter.36.1': [(<numba.core.ir.Assign object at 0x708752daeaa0>,
                                   0)],
             '$80for_iter.1.1': [(<numba.core.ir.Assign object at 0x708752daeb60>,
                                  80)],
             '$80for_iter.2.1': [(<numba.core.ir.Assign object at 0x708752f0b760>,
                                  80)],
             '$80for_iter.3.1': [(<numba.core.ir.Assign object at 0x708752ef2020>,
                                  80)],
             '$8load_global.2.1': [(<numba.core.ir.Assign object at 0x708752dc03d0>,
                                    0)],
             '$92return_value.1.1': [(<numba.core.ir.Assign object at 0x708752d6e410>,
                                      92)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x708752df2200>,
                             90)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x708752df0550>,
                             90)],
             '$const24.11': [(<numba.core.ir.Assign object at 0x708752edae00>,
                              90)],
             '$const24.9.1': [(<numba.core.ir.Assign object at 0x708752dafe80>,
                               0)],
             '$const28.11.1': [(<numba.core.ir.Assign object at 0x708752dae710>,
                                0)],
             '$const30.12.1': [(<numba.core.ir.Assign object at 0x708752daf9a0>,
                                0)],
             '$const36.15.1': [(<numba.core.ir.Assign object at 0x708752daf580>,
                                0)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x708752c0e6e0>,
                            90)],
             '$const40.17.1': [(<numba.core.ir.Assign object at 0x708752daf460>,
                                0)],
             '$const42.18.1': [(<numba.core.ir.Assign object at 0x708752daf280>,
                                0)],
             '$const52.23.1': [(<numba.core.ir.Assign object at 0x708752dae6b0>,
                                0)],
             '$const54.24.1': [(<numba.core.ir.Assign object at 0x708752daec20>,
                                0)],
             '$const62.28.1': [(<numba.core.ir.Assign object at 0x708752dae080>,
                                0)],
             '$const68.31.1': [(<numba.core.ir.Assign object at 0x708752dadd20>,
                                0)],
             '$const70.32.1': [(<numba.core.ir.Assign object at 0x708752dae5f0>,
                                0)],
             '$phi80.0.1': [(<numba.core.ir.Assign object at 0x708752dc1150>,
                             0)],
             '$phi82.1.1': [(<numba.core.ir.Assign object at 0x708752dae200>,
                             80)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x708752dc0400>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x708752d1bd60>, 82)],
             'out0': [(<numba.core.ir.Assign object at 0x708752dc3460>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x708752dc2740>,
                                90)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x708752dc1570>,
                                  90)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x708752dc19f0>,
                                  90)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x708752dc1c30>,
                                  90)],
             'x': [(<numba.core.ir.Assign object at 0x708752dc00a0>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x708752d6e050>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1068)
           2	LOAD_GLOBAL(arg=0, lineno=1082)
           4	LOAD_FAST(arg=0, lineno=1082)
           6	CALL_FUNCTION(arg=1, lineno=1082)
           8	LOAD_FAST(arg=1, lineno=1082)
          10	LOAD_CONST(arg=1, lineno=1082)
          12	LOAD_CONST(arg=1, lineno=1082)
          14	BUILD_SLICE(arg=2, lineno=1082)
          16	STORE_SUBSCR(arg=None, lineno=1082)
          18	LOAD_CONST(arg=1, lineno=1082)
          20	RETURN_VALUE(arg=None, lineno=1082)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1068)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1082)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1082)
numba.core.byteflow - DEBUG - stack ['$2load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=1082)
numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=1082)
numba.core.byteflow - DEBUG - stack ['$6call_function.2']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=1082)
numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=1082)
numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=BUILD_SLICE(arg=2, lineno=1082)
numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4', '$const12.5']
numba.core.byteflow - DEBUG - dispatch pc=16, inst=STORE_SUBSCR(arg=None, lineno=1082)
numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$14build_slice.7']
numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1082)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=1082)
numba.core.byteflow - DEBUG - stack ['$const18.8']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - keep phismap: {}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$x4.1'}), (6, {'func': '$2load_global.0', 'args': ['$x4.1'], 'res': '$6call_function.2'}), (8, {'res': '$y8.3'}), (10, {'res': '$const10.4'}), (12, {'res': '$const12.5'}), (14, {'start': '$const10.4', 'stop': '$const12.5', 'step': None, 'res': '$14build_slice.7', 'slicevar': '$14build_slice.6'}), (16, {'target': '$y8.3', 'index': '$14build_slice.7', 'value': '$6call_function.2'}), (18, {'res': '$const18.8'}), (20, {'retval': '$const18.8', 'castval': '$20return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x708758aa7580>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $const10.4 = const(NoneType, None)       ['$const10.4']
    $const12.5 = const(NoneType, None)       ['$const12.5']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1082), Var($const12.5, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4', '$const12.5']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    $const18.8 = const(NoneType, None)       ['$const18.8']
    $20return_value.9 = cast(value=$const18.8) ['$20return_value.9', '$const18.8']
    return $20return_value.9                 ['$20return_value.9']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752c0cbe0>
numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
numba.core.ssa - DEBUG - on stmt: y = arg(1, name=y)
numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x708758aa7580>)
numba.core.ssa - DEBUG - on stmt: $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $const10.4 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $const12.5 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $14build_slice.6 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1082), Var($const12.5, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: y[slice(None, None, None)] = $6call_function.2
numba.core.ssa - DEBUG - on stmt: $const18.8 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $20return_value.9 = cast(value=$const18.8)
numba.core.ssa - DEBUG - on stmt: return $20return_value.9
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$14build_slice.6': [(<numba.core.ir.Assign object at 0x708752c42590>,
                                   0)],
             '$14build_slice.7': [(<numba.core.ir.Assign object at 0x708752c42740>,
                                   0)],
             '$20return_value.9': [(<numba.core.ir.Assign object at 0x708752c428f0>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x708752c400a0>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x708752c41060>,
                                    0)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x708752c416c0>,
                             0)],
             '$const12.5': [(<numba.core.ir.Assign object at 0x708752c42410>,
                             0)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x708752c428c0>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x708752c40820>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x708752c40af0>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x708752c0cbe0>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_FAST(arg=0, lineno=2)
           4	LOAD_ATTR(arg=0, lineno=2)
           6	STORE_FAST(arg=1, lineno=2)
           8	LOAD_GLOBAL(arg=1, lineno=3)
          10	LOAD_ATTR(arg=2, lineno=3)
          12	LOAD_FAST(arg=1, lineno=3)
          14	LOAD_GLOBAL(arg=1, lineno=3)
          16	LOAD_ATTR(arg=3, lineno=3)
          18	LOAD_CONST(arg=1, lineno=3)
          20	CALL_FUNCTION_KW(arg=2, lineno=3)
          22	STORE_FAST(arg=2, lineno=3)
          24	LOAD_CONST(arg=2, lineno=4)
          26	LOAD_FAST(arg=2, lineno=4)
          28	LOAD_CONST(arg=0, lineno=4)
          30	LOAD_CONST(arg=3, lineno=4)
          32	BUILD_SLICE(arg=2, lineno=4)
          34	STORE_SUBSCR(arg=None, lineno=4)
          36	LOAD_CONST(arg=2, lineno=5)
          38	LOAD_FAST(arg=2, lineno=5)
          40	LOAD_CONST(arg=4, lineno=5)
          42	LOAD_CONST(arg=0, lineno=5)
          44	BUILD_SLICE(arg=2, lineno=5)
          46	STORE_SUBSCR(arg=None, lineno=5)
          48	LOAD_GLOBAL(arg=4, lineno=6)
          50	LOAD_GLOBAL(arg=5, lineno=6)
          52	LOAD_CONST(arg=2, lineno=6)
          54	LOAD_CONST(arg=4, lineno=6)
          56	CALL_FUNCTION(arg=2, lineno=6)
          58	UNARY_NEGATIVE(arg=None, lineno=6)
          60	LOAD_FAST(arg=1, lineno=6)
          62	LOAD_CONST(arg=2, lineno=6)
          64	BINARY_SUBSCR(arg=None, lineno=6)
          66	LOAD_GLOBAL(arg=6, lineno=6)
          68	LOAD_CONST(arg=2, lineno=6)
          70	LOAD_CONST(arg=3, lineno=6)
          72	CALL_FUNCTION(arg=2, lineno=6)
          74	BINARY_SUBTRACT(arg=None, lineno=6)
          76	CALL_FUNCTION(arg=2, lineno=6)
          78	GET_ITER(arg=None, lineno=6)
>         80	FOR_ITER(arg=4, lineno=6)
          82	STORE_FAST(arg=3, lineno=6)
          84	LOAD_CONST(arg=2, lineno=7)
          86	STORE_FAST(arg=4, lineno=7)
          88	JUMP_ABSOLUTE(arg=41, lineno=7)
>         90	LOAD_FAST(arg=2, lineno=8)
          92	RETURN_VALUE(arg=None, lineno=8)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=2)
numba.core.byteflow - DEBUG - stack ['$x2.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=STORE_FAST(arg=1, lineno=2)
numba.core.byteflow - DEBUG - stack ['$4load_attr.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_GLOBAL(arg=1, lineno=3)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_ATTR(arg=2, lineno=3)
numba.core.byteflow - DEBUG - stack ['$8load_global.2']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_GLOBAL(arg=1, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4']
numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_ATTR(arg=3, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$14load_global.5']
numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6']
numba.core.byteflow - DEBUG - dispatch pc=20, inst=CALL_FUNCTION_KW(arg=2, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6', '$const18.7']
numba.core.byteflow - DEBUG - dispatch pc=22, inst=STORE_FAST(arg=2, lineno=3)
numba.core.byteflow - DEBUG - stack ['$20call_function_kw.8']
numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=2, lineno=4)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=2, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9']
numba.core.byteflow - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=0, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10']
numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=3, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11']
numba.core.byteflow - DEBUG - dispatch pc=32, inst=BUILD_SLICE(arg=2, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11', '$const30.12']
numba.core.byteflow - DEBUG - dispatch pc=34, inst=STORE_SUBSCR(arg=None, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$32build_slice.14']
numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=2, lineno=5)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=2, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15']
numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16']
numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=0, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17']
numba.core.byteflow - DEBUG - dispatch pc=44, inst=BUILD_SLICE(arg=2, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17', '$const42.18']
numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_SUBSCR(arg=None, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$44build_slice.20']
numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_GLOBAL(arg=4, lineno=6)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=5, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21']
numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22']
numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=4, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23']
numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_FUNCTION(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23', '$const54.24']
numba.core.byteflow - DEBUG - dispatch pc=58, inst=UNARY_NEGATIVE(arg=None, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$56call_function.25']
numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_FAST(arg=1, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26']
numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_CONST(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27']
numba.core.byteflow - DEBUG - dispatch pc=64, inst=BINARY_SUBSCR(arg=None, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27', '$const62.28']
numba.core.byteflow - DEBUG - dispatch pc=66, inst=LOAD_GLOBAL(arg=6, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29']
numba.core.byteflow - DEBUG - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30']
numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=3, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31']
numba.core.byteflow - DEBUG - dispatch pc=72, inst=CALL_FUNCTION(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31', '$const70.32']
numba.core.byteflow - DEBUG - dispatch pc=74, inst=BINARY_SUBTRACT(arg=None, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$72call_function.33']
numba.core.byteflow - DEBUG - dispatch pc=76, inst=CALL_FUNCTION(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34']
numba.core.byteflow - DEBUG - dispatch pc=78, inst=GET_ITER(arg=None, lineno=6)
numba.core.byteflow - DEBUG - stack ['$76call_function.35']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$78get_iter.36',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi80.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=80, inst=FOR_ITER(arg=4, lineno=6)
numba.core.byteflow - DEBUG - stack ['$phi80.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=('$phi80.0', '$80for_iter.2'), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=82 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_FAST(arg=2, lineno=8)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=92, inst=RETURN_VALUE(arg=None, lineno=8)
numba.core.byteflow - DEBUG - stack ['$out090.0']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: ['$phi82.0', '$phi82.1']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=2)
numba.core.byteflow - DEBUG - dispatch pc=82, inst=STORE_FAST(arg=3, lineno=6)
numba.core.byteflow - DEBUG - stack ['$phi82.0', '$phi82.1']
numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_CONST(arg=2, lineno=7)
numba.core.byteflow - DEBUG - stack ['$phi82.0']
numba.core.byteflow - DEBUG - dispatch pc=86, inst=STORE_FAST(arg=4, lineno=7)
numba.core.byteflow - DEBUG - stack ['$phi82.0', '$const84.2']
numba.core.byteflow - DEBUG - dispatch pc=88, inst=JUMP_ABSOLUTE(arg=41, lineno=7)
numba.core.byteflow - DEBUG - stack ['$phi82.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$phi82.0',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=82 nstack_initial=2): {'$phi82.1'},
             State(pc_initial=90 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {'$phi80.0': State(pc_initial=0 nstack_initial=0),
 '$phi82.1': State(pc_initial=80 nstack_initial=1)}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi82.0', State(pc_initial=82 nstack_initial=2))},
             '$phi82.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
numba.core.byteflow - DEBUG - keep phismap: {'$phi80.0': {('$78get_iter.36', State(pc_initial=0 nstack_initial=0))},
 '$phi82.1': {('$80for_iter.2', State(pc_initial=80 nstack_initial=1))}}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi80.0': '$78get_iter.36'},
             State(pc_initial=80 nstack_initial=1): {'$phi82.1': '$80for_iter.2'}})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'item': '$x2.0', 'res': '$4load_attr.1'}), (6, {'value': '$4load_attr.1'}), (8, {'res': '$8load_global.2'}), (10, {'item': '$8load_global.2', 'res': '$10load_attr.3'}), (12, {'res': '$full_shape012.4'}), (14, {'res': '$14load_global.5'}), (16, {'item': '$14load_global.5', 'res': '$16load_attr.6'}), (18, {'res': '$const18.7'}), (20, {'func': '$10load_attr.3', 'args': ['$full_shape012.4', '$16load_attr.6'], 'names': '$const18.7', 'res': '$20call_function_kw.8'}), (22, {'value': '$20call_function_kw.8'}), (24, {'res': '$const24.9'}), (26, {'res': '$out026.10'}), (28, {'res': '$const28.11'}), (30, {'res': '$const30.12'}), (32, {'start': '$const28.11', 'stop': '$const30.12', 'step': None, 'res': '$32build_slice.14', 'slicevar': '$32build_slice.13'}), (34, {'target': '$out026.10', 'index': '$32build_slice.14', 'value': '$const24.9'}), (36, {'res': '$const36.15'}), (38, {'res': '$out038.16'}), (40, {'res': '$const40.17'}), (42, {'res': '$const42.18'}), (44, {'start': '$const40.17', 'stop': '$const42.18', 'step': None, 'res': '$44build_slice.20', 'slicevar': '$44build_slice.19'}), (46, {'target': '$out038.16', 'index': '$44build_slice.20', 'value': '$const36.15'}), (48, {'res': '$48load_global.21'}), (50, {'res': '$50load_global.22'}), (52, {'res': '$const52.23'}), (54, {'res': '$const54.24'}), (56, {'func': '$50load_global.22', 'args': ['$const52.23', '$const54.24'], 'res': '$56call_function.25'}), (58, {'value': '$56call_function.25', 'res': '$58unary_negative.26'}), (60, {'res': '$full_shape060.27'}), (62, {'res': '$const62.28'}), (64, {'index': '$const62.28', 'target': '$full_shape060.27', 'res': '$64binary_subscr.29'}), (66, {'res': '$66load_global.30'}), (68, {'res': '$const68.31'}), (70, {'res': '$const70.32'}), (72, {'func': '$66load_global.30', 'args': ['$const68.31', '$const70.32'], 'res': '$72call_function.33'}), (74, {'lhs': '$64binary_subscr.29', 'rhs': '$72call_function.33', 'res': '$74binary_subtract.34'}), (76, {'func': '$48load_global.21', 'args': ['$58unary_negative.26', '$74binary_subtract.34'], 'res': '$76call_function.35'}), (78, {'value': '$76call_function.35', 'res': '$78get_iter.36'})), outgoing_phis={'$phi80.0': '$78get_iter.36'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$78get_iter.36',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'iterator': '$phi80.0', 'pair': '$80for_iter.1', 'indval': '$80for_iter.2', 'pred': '$80for_iter.3'}),), outgoing_phis={'$phi82.1': '$80for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 82: ('$phi80.0', '$80for_iter.2')})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=2):
AdaptBlockInfo(insts=((82, {'value': '$phi82.1'}), (84, {'res': '$const84.2'}), (86, {'value': '$const84.2'}), (88, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi82.0',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$out090.0'}), (92, {'retval': '$out090.0', 'castval': '$92return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9 = const(int, 0)               ['$const24.9']
    $const28.11 = const(NoneType, None)      ['$const28.11']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11, $const30.12, func=$32build_slice.13, args=(Var($const28.11, <string>:4), Var($const30.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11', '$const30.12']
    out0[$32build_slice.14] = $const24.9     ['$32build_slice.14', '$const24.9', 'out0']
    $const36.15 = const(int, 0)              ['$const36.15']
    $const40.17 = const(int, -1)             ['$const40.17']
    $const42.18 = const(NoneType, None)      ['$const42.18']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17, $const42.18, func=$44build_slice.19, args=(Var($const40.17, <string>:5), Var($const42.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17', '$const42.18']
    out0[$44build_slice.20] = $const36.15    ['$44build_slice.20', '$const36.15', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23 = const(int, 0)              ['$const52.23']
    $const54.24 = const(int, -1)             ['$const54.24']
    $56call_function.25 = call $50load_global.22($const52.23, $const54.24, func=$50load_global.22, args=[Var($const52.23, <string>:6), Var($const54.24, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23', '$const54.24']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28 = const(int, 0)              ['$const62.28']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31 = const(int, 0)              ['$const68.31']
    $const70.32 = const(int, 1)              ['$const70.32']
    $72call_function.33 = call $66load_global.30($const68.31, $const70.32, func=$66load_global.30, args=[Var($const68.31, <string>:6), Var($const70.32, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31', '$const70.32']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752fe0d00>
numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
numba.core.ssa - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
numba.core.ssa - DEBUG - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
numba.core.ssa - DEBUG - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $const24.9.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const28.11.1 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $const30.12.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: out0[$32build_slice.14.1] = $const24.9.1
numba.core.ssa - DEBUG - on stmt: $const36.15.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const40.17.1 = const(int, -1)
numba.core.ssa - DEBUG - on stmt: $const42.18.1 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: out0[$44build_slice.20.1] = $const36.15.1
numba.core.ssa - DEBUG - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
numba.core.ssa - DEBUG - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $const52.23.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const54.24.1 = const(int, -1)
numba.core.ssa - DEBUG - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
numba.core.ssa - DEBUG - on stmt: $const62.28.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
numba.core.ssa - DEBUG - on stmt: $const68.31.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const70.32.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
numba.core.ssa - DEBUG - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
numba.core.ssa - DEBUG - on stmt: $phi80.0.1 = $78get_iter.36.1
numba.core.ssa - DEBUG - on stmt: jump 80
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 80
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752fe0d00>
numba.core.ssa - DEBUG - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
numba.core.ssa - DEBUG - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
numba.core.ssa - DEBUG - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
numba.core.ssa - DEBUG - on stmt: $phi82.1.1 = $80for_iter.2.1
numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3.1, 82, 92
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 82
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752fe0d00>
numba.core.ssa - DEBUG - on stmt: index00 = $phi82.1.1
numba.core.ssa - DEBUG - on stmt: jump 90
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 92
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752fe0d00>
numba.core.ssa - DEBUG - on stmt: $92return_value.1.1 = cast(value=out0)
numba.core.ssa - DEBUG - on stmt: return $92return_value.1.1
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 90
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752fe0d00>
numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: stencil_index = $const4.1 + index00
numba.core.ssa - DEBUG - on stmt: $6binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $const10.4 = const(int, -1)
numba.core.ssa - DEBUG - on stmt: stencil_index.1 = $const10.4 + index00
numba.core.ssa - DEBUG - on stmt: $12binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5
numba.core.ssa - DEBUG - on stmt: $const18.8 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: stencil_index.2 = $const18.8 + index00
numba.core.ssa - DEBUG - on stmt: $20binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $const24.11 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: stencil_index.3 = $const24.11 + index00
numba.core.ssa - DEBUG - on stmt: $26binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12
numba.core.ssa - DEBUG - on stmt: $30binary_and.14 = $14compare_op.6 & $28compare_op.13
numba.core.ssa - DEBUG - on stmt: $32return_value.15 = cast(value=$30binary_and.14)
numba.core.ssa - DEBUG - on stmt: out0[index00] = $32return_value.15
numba.core.ssa - DEBUG - on stmt: jump 91
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 91
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752fe0d00>
numba.core.ssa - DEBUG - on stmt: jump 80
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10load_attr.3.1': [(<numba.core.ir.Assign object at 0x708752ebc9a0>,
                                   0)],
             '$12binary_subscr.5': [(<numba.core.ir.Assign object at 0x708752ebdc30>,
                                     90)],
             '$14compare_op.6': [(<numba.core.ir.Assign object at 0x708752d907f0>,
                                  90)],
             '$14load_global.5.1': [(<numba.core.ir.Assign object at 0x708752ebee30>,
                                     0)],
             '$16load_attr.6.1': [(<numba.core.ir.Assign object at 0x708752eabaf0>,
                                   0)],
             '$20binary_subscr.9': [(<numba.core.ir.Assign object at 0x708752ebd840>,
                                     90)],
             '$26binary_subscr.12': [(<numba.core.ir.Assign object at 0x708752ebcdc0>,
                                      90)],
             '$28compare_op.13': [(<numba.core.ir.Assign object at 0x708752d6df00>,
                                   90)],
             '$30binary_and.14': [(<numba.core.ir.Assign object at 0x708752d6fe80>,
                                   90)],
             '$32build_slice.13.1': [(<numba.core.ir.Assign object at 0x708752eab2b0>,
                                      0)],
             '$32build_slice.14.1': [(<numba.core.ir.Assign object at 0x708752eab370>,
                                      0)],
             '$32return_value.15': [(<numba.core.ir.Assign object at 0x7087530b5240>,
                                     90)],
             '$44build_slice.19.1': [(<numba.core.ir.Assign object at 0x708752eaad70>,
                                      0)],
             '$44build_slice.20.1': [(<numba.core.ir.Assign object at 0x708752ea87f0>,
                                      0)],
             '$48load_global.21.1': [(<numba.core.ir.Assign object at 0x708752eaa260>,
                                      0)],
             '$50load_global.22.1': [(<numba.core.ir.Assign object at 0x708752ea88b0>,
                                      0)],
             '$56call_function.25.1': [(<numba.core.ir.Assign object at 0x708752ea9330>,
                                        0)],
             '$58unary_negative.26.1': [(<numba.core.ir.Assign object at 0x708752ea92d0>,
                                         0)],
             '$64binary_subscr.29.1': [(<numba.core.ir.Assign object at 0x708752ea99c0>,
                                        0)],
             '$66load_global.30.1': [(<numba.core.ir.Assign object at 0x708752ea9b10>,
                                      0)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x708752ebdab0>,
                                    90)],
             '$72call_function.33.1': [(<numba.core.ir.Assign object at 0x708752eaa710>,
                                        0)],
             '$74binary_subtract.34.1': [(<numba.core.ir.Assign object at 0x708752ea96f0>,
                                          0)],
             '$76call_function.35.1': [(<numba.core.ir.Assign object at 0x708752ea9420>,
                                        0)],
             '$78get_iter.36.1': [(<numba.core.ir.Assign object at 0x708752ea8040>,
                                   0)],
             '$80for_iter.1.1': [(<numba.core.ir.Assign object at 0x708752ea8460>,
                                  80)],
             '$80for_iter.2.1': [(<numba.core.ir.Assign object at 0x708752ea8370>,
                                  80)],
             '$80for_iter.3.1': [(<numba.core.ir.Assign object at 0x708752ea82e0>,
                                  80)],
             '$8load_global.2.1': [(<numba.core.ir.Assign object at 0x708752ebca00>,
                                    0)],
             '$92return_value.1.1': [(<numba.core.ir.Assign object at 0x708752eab940>,
                                      92)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x708752d823b0>,
                             90)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x708752d93250>,
                             90)],
             '$const24.11': [(<numba.core.ir.Assign object at 0x708752d93280>,
                              90)],
             '$const24.9.1': [(<numba.core.ir.Assign object at 0x708752eabe80>,
                               0)],
             '$const28.11.1': [(<numba.core.ir.Assign object at 0x708752eaa8c0>,
                                0)],
             '$const30.12.1': [(<numba.core.ir.Assign object at 0x708752eab5b0>,
                                0)],
             '$const36.15.1': [(<numba.core.ir.Assign object at 0x708752eab010>,
                                0)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x708752d81f00>,
                            90)],
             '$const40.17.1': [(<numba.core.ir.Assign object at 0x708752eaace0>,
                                0)],
             '$const42.18.1': [(<numba.core.ir.Assign object at 0x708752eaabc0>,
                                0)],
             '$const52.23.1': [(<numba.core.ir.Assign object at 0x708752ea9ea0>,
                                0)],
             '$const54.24.1': [(<numba.core.ir.Assign object at 0x708752eaa020>,
                                0)],
             '$const62.28.1': [(<numba.core.ir.Assign object at 0x708752eaa500>,
                                0)],
             '$const68.31.1': [(<numba.core.ir.Assign object at 0x708752ea8910>,
                                0)],
             '$const70.32.1': [(<numba.core.ir.Assign object at 0x708752eaa4a0>,
                                0)],
             '$phi80.0.1': [(<numba.core.ir.Assign object at 0x708752ebc5b0>,
                             0)],
             '$phi82.1.1': [(<numba.core.ir.Assign object at 0x708752ea9060>,
                             80)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x708752ebc790>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x708752ea8d60>, 82)],
             'out0': [(<numba.core.ir.Assign object at 0x708752eabdc0>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x708752ebef20>,
                                90)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x708752ebdfc0>,
                                  90)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x708752ebf7f0>,
                                  90)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x708752ebdd80>,
                                  90)],
             'x': [(<numba.core.ir.Assign object at 0x708752ebc820>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x708752e3ca00>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1068)
           2	LOAD_GLOBAL(arg=0, lineno=1082)
           4	LOAD_FAST(arg=0, lineno=1082)
           6	CALL_FUNCTION(arg=1, lineno=1082)
           8	LOAD_FAST(arg=1, lineno=1082)
          10	LOAD_CONST(arg=1, lineno=1082)
          12	LOAD_CONST(arg=1, lineno=1082)
          14	BUILD_SLICE(arg=2, lineno=1082)
          16	STORE_SUBSCR(arg=None, lineno=1082)
          18	LOAD_CONST(arg=1, lineno=1082)
          20	RETURN_VALUE(arg=None, lineno=1082)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1068)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1082)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1082)
numba.core.byteflow - DEBUG - stack ['$2load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=1082)
numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=1082)
numba.core.byteflow - DEBUG - stack ['$6call_function.2']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=1082)
numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=1082)
numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=BUILD_SLICE(arg=2, lineno=1082)
numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4', '$const12.5']
numba.core.byteflow - DEBUG - dispatch pc=16, inst=STORE_SUBSCR(arg=None, lineno=1082)
numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$14build_slice.7']
numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1082)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=1082)
numba.core.byteflow - DEBUG - stack ['$const18.8']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - keep phismap: {}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$x4.1'}), (6, {'func': '$2load_global.0', 'args': ['$x4.1'], 'res': '$6call_function.2'}), (8, {'res': '$y8.3'}), (10, {'res': '$const10.4'}), (12, {'res': '$const12.5'}), (14, {'start': '$const10.4', 'stop': '$const12.5', 'step': None, 'res': '$14build_slice.7', 'slicevar': '$14build_slice.6'}), (16, {'target': '$y8.3', 'index': '$14build_slice.7', 'value': '$6call_function.2'}), (18, {'res': '$const18.8'}), (20, {'retval': '$const18.8', 'castval': '$20return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x708758aa7580>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $const10.4 = const(NoneType, None)       ['$const10.4']
    $const12.5 = const(NoneType, None)       ['$const12.5']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1082), Var($const12.5, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4', '$const12.5']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    $const18.8 = const(NoneType, None)       ['$const18.8']
    $20return_value.9 = cast(value=$const18.8) ['$20return_value.9', '$const18.8']
    return $20return_value.9                 ['$20return_value.9']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087532e3400>
numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
numba.core.ssa - DEBUG - on stmt: y = arg(1, name=y)
numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x708758aa7580>)
numba.core.ssa - DEBUG - on stmt: $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $const10.4 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $const12.5 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $14build_slice.6 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1082), Var($const12.5, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: y[slice(None, None, None)] = $6call_function.2
numba.core.ssa - DEBUG - on stmt: $const18.8 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $20return_value.9 = cast(value=$const18.8)
numba.core.ssa - DEBUG - on stmt: return $20return_value.9
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$14build_slice.6': [(<numba.core.ir.Assign object at 0x70875317e530>,
                                   0)],
             '$14build_slice.7': [(<numba.core.ir.Assign object at 0x70875317d8a0>,
                                   0)],
             '$20return_value.9': [(<numba.core.ir.Assign object at 0x70875317e470>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x70875317f640>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x70875317ff10>,
                                    0)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x70875317e380>,
                             0)],
             '$const12.5': [(<numba.core.ir.Assign object at 0x70875317eef0>,
                             0)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x70875317c490>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7087532e2620>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x7087532e3010>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x70875317cee0>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_FAST(arg=0, lineno=2)
           4	LOAD_ATTR(arg=0, lineno=2)
           6	STORE_FAST(arg=1, lineno=2)
           8	LOAD_GLOBAL(arg=1, lineno=3)
          10	LOAD_ATTR(arg=2, lineno=3)
          12	LOAD_FAST(arg=1, lineno=3)
          14	LOAD_GLOBAL(arg=1, lineno=3)
          16	LOAD_ATTR(arg=3, lineno=3)
          18	LOAD_CONST(arg=1, lineno=3)
          20	CALL_FUNCTION_KW(arg=2, lineno=3)
          22	STORE_FAST(arg=2, lineno=3)
          24	LOAD_CONST(arg=2, lineno=4)
          26	LOAD_FAST(arg=2, lineno=4)
          28	LOAD_CONST(arg=0, lineno=4)
          30	LOAD_CONST(arg=3, lineno=4)
          32	BUILD_SLICE(arg=2, lineno=4)
          34	STORE_SUBSCR(arg=None, lineno=4)
          36	LOAD_CONST(arg=2, lineno=5)
          38	LOAD_FAST(arg=2, lineno=5)
          40	LOAD_CONST(arg=4, lineno=5)
          42	LOAD_CONST(arg=0, lineno=5)
          44	BUILD_SLICE(arg=2, lineno=5)
          46	STORE_SUBSCR(arg=None, lineno=5)
          48	LOAD_GLOBAL(arg=4, lineno=6)
          50	LOAD_GLOBAL(arg=5, lineno=6)
          52	LOAD_CONST(arg=2, lineno=6)
          54	LOAD_CONST(arg=4, lineno=6)
          56	CALL_FUNCTION(arg=2, lineno=6)
          58	UNARY_NEGATIVE(arg=None, lineno=6)
          60	LOAD_FAST(arg=1, lineno=6)
          62	LOAD_CONST(arg=2, lineno=6)
          64	BINARY_SUBSCR(arg=None, lineno=6)
          66	LOAD_GLOBAL(arg=6, lineno=6)
          68	LOAD_CONST(arg=2, lineno=6)
          70	LOAD_CONST(arg=3, lineno=6)
          72	CALL_FUNCTION(arg=2, lineno=6)
          74	BINARY_SUBTRACT(arg=None, lineno=6)
          76	CALL_FUNCTION(arg=2, lineno=6)
          78	GET_ITER(arg=None, lineno=6)
>         80	FOR_ITER(arg=4, lineno=6)
          82	STORE_FAST(arg=3, lineno=6)
          84	LOAD_CONST(arg=2, lineno=7)
          86	STORE_FAST(arg=4, lineno=7)
          88	JUMP_ABSOLUTE(arg=41, lineno=7)
>         90	LOAD_FAST(arg=2, lineno=8)
          92	RETURN_VALUE(arg=None, lineno=8)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=2)
numba.core.byteflow - DEBUG - stack ['$x2.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=STORE_FAST(arg=1, lineno=2)
numba.core.byteflow - DEBUG - stack ['$4load_attr.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_GLOBAL(arg=1, lineno=3)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_ATTR(arg=2, lineno=3)
numba.core.byteflow - DEBUG - stack ['$8load_global.2']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_GLOBAL(arg=1, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4']
numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_ATTR(arg=3, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$14load_global.5']
numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6']
numba.core.byteflow - DEBUG - dispatch pc=20, inst=CALL_FUNCTION_KW(arg=2, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6', '$const18.7']
numba.core.byteflow - DEBUG - dispatch pc=22, inst=STORE_FAST(arg=2, lineno=3)
numba.core.byteflow - DEBUG - stack ['$20call_function_kw.8']
numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=2, lineno=4)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=2, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9']
numba.core.byteflow - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=0, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10']
numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=3, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11']
numba.core.byteflow - DEBUG - dispatch pc=32, inst=BUILD_SLICE(arg=2, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11', '$const30.12']
numba.core.byteflow - DEBUG - dispatch pc=34, inst=STORE_SUBSCR(arg=None, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$32build_slice.14']
numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=2, lineno=5)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=2, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15']
numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16']
numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=0, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17']
numba.core.byteflow - DEBUG - dispatch pc=44, inst=BUILD_SLICE(arg=2, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17', '$const42.18']
numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_SUBSCR(arg=None, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$44build_slice.20']
numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_GLOBAL(arg=4, lineno=6)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=5, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21']
numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22']
numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=4, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23']
numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_FUNCTION(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23', '$const54.24']
numba.core.byteflow - DEBUG - dispatch pc=58, inst=UNARY_NEGATIVE(arg=None, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$56call_function.25']
numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_FAST(arg=1, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26']
numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_CONST(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27']
numba.core.byteflow - DEBUG - dispatch pc=64, inst=BINARY_SUBSCR(arg=None, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27', '$const62.28']
numba.core.byteflow - DEBUG - dispatch pc=66, inst=LOAD_GLOBAL(arg=6, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29']
numba.core.byteflow - DEBUG - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30']
numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=3, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31']
numba.core.byteflow - DEBUG - dispatch pc=72, inst=CALL_FUNCTION(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31', '$const70.32']
numba.core.byteflow - DEBUG - dispatch pc=74, inst=BINARY_SUBTRACT(arg=None, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$72call_function.33']
numba.core.byteflow - DEBUG - dispatch pc=76, inst=CALL_FUNCTION(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34']
numba.core.byteflow - DEBUG - dispatch pc=78, inst=GET_ITER(arg=None, lineno=6)
numba.core.byteflow - DEBUG - stack ['$76call_function.35']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$78get_iter.36',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi80.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=80, inst=FOR_ITER(arg=4, lineno=6)
numba.core.byteflow - DEBUG - stack ['$phi80.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=('$phi80.0', '$80for_iter.2'), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=82 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_FAST(arg=2, lineno=8)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=92, inst=RETURN_VALUE(arg=None, lineno=8)
numba.core.byteflow - DEBUG - stack ['$out090.0']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: ['$phi82.0', '$phi82.1']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=2)
numba.core.byteflow - DEBUG - dispatch pc=82, inst=STORE_FAST(arg=3, lineno=6)
numba.core.byteflow - DEBUG - stack ['$phi82.0', '$phi82.1']
numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_CONST(arg=2, lineno=7)
numba.core.byteflow - DEBUG - stack ['$phi82.0']
numba.core.byteflow - DEBUG - dispatch pc=86, inst=STORE_FAST(arg=4, lineno=7)
numba.core.byteflow - DEBUG - stack ['$phi82.0', '$const84.2']
numba.core.byteflow - DEBUG - dispatch pc=88, inst=JUMP_ABSOLUTE(arg=41, lineno=7)
numba.core.byteflow - DEBUG - stack ['$phi82.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$phi82.0',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=82 nstack_initial=2): {'$phi82.1'},
             State(pc_initial=90 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {'$phi80.0': State(pc_initial=0 nstack_initial=0),
 '$phi82.1': State(pc_initial=80 nstack_initial=1)}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi82.0', State(pc_initial=82 nstack_initial=2))},
             '$phi82.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
numba.core.byteflow - DEBUG - keep phismap: {'$phi80.0': {('$78get_iter.36', State(pc_initial=0 nstack_initial=0))},
 '$phi82.1': {('$80for_iter.2', State(pc_initial=80 nstack_initial=1))}}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi80.0': '$78get_iter.36'},
             State(pc_initial=80 nstack_initial=1): {'$phi82.1': '$80for_iter.2'}})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'item': '$x2.0', 'res': '$4load_attr.1'}), (6, {'value': '$4load_attr.1'}), (8, {'res': '$8load_global.2'}), (10, {'item': '$8load_global.2', 'res': '$10load_attr.3'}), (12, {'res': '$full_shape012.4'}), (14, {'res': '$14load_global.5'}), (16, {'item': '$14load_global.5', 'res': '$16load_attr.6'}), (18, {'res': '$const18.7'}), (20, {'func': '$10load_attr.3', 'args': ['$full_shape012.4', '$16load_attr.6'], 'names': '$const18.7', 'res': '$20call_function_kw.8'}), (22, {'value': '$20call_function_kw.8'}), (24, {'res': '$const24.9'}), (26, {'res': '$out026.10'}), (28, {'res': '$const28.11'}), (30, {'res': '$const30.12'}), (32, {'start': '$const28.11', 'stop': '$const30.12', 'step': None, 'res': '$32build_slice.14', 'slicevar': '$32build_slice.13'}), (34, {'target': '$out026.10', 'index': '$32build_slice.14', 'value': '$const24.9'}), (36, {'res': '$const36.15'}), (38, {'res': '$out038.16'}), (40, {'res': '$const40.17'}), (42, {'res': '$const42.18'}), (44, {'start': '$const40.17', 'stop': '$const42.18', 'step': None, 'res': '$44build_slice.20', 'slicevar': '$44build_slice.19'}), (46, {'target': '$out038.16', 'index': '$44build_slice.20', 'value': '$const36.15'}), (48, {'res': '$48load_global.21'}), (50, {'res': '$50load_global.22'}), (52, {'res': '$const52.23'}), (54, {'res': '$const54.24'}), (56, {'func': '$50load_global.22', 'args': ['$const52.23', '$const54.24'], 'res': '$56call_function.25'}), (58, {'value': '$56call_function.25', 'res': '$58unary_negative.26'}), (60, {'res': '$full_shape060.27'}), (62, {'res': '$const62.28'}), (64, {'index': '$const62.28', 'target': '$full_shape060.27', 'res': '$64binary_subscr.29'}), (66, {'res': '$66load_global.30'}), (68, {'res': '$const68.31'}), (70, {'res': '$const70.32'}), (72, {'func': '$66load_global.30', 'args': ['$const68.31', '$const70.32'], 'res': '$72call_function.33'}), (74, {'lhs': '$64binary_subscr.29', 'rhs': '$72call_function.33', 'res': '$74binary_subtract.34'}), (76, {'func': '$48load_global.21', 'args': ['$58unary_negative.26', '$74binary_subtract.34'], 'res': '$76call_function.35'}), (78, {'value': '$76call_function.35', 'res': '$78get_iter.36'})), outgoing_phis={'$phi80.0': '$78get_iter.36'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$78get_iter.36',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'iterator': '$phi80.0', 'pair': '$80for_iter.1', 'indval': '$80for_iter.2', 'pred': '$80for_iter.3'}),), outgoing_phis={'$phi82.1': '$80for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 82: ('$phi80.0', '$80for_iter.2')})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=2):
AdaptBlockInfo(insts=((82, {'value': '$phi82.1'}), (84, {'res': '$const84.2'}), (86, {'value': '$const84.2'}), (88, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi82.0',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$out090.0'}), (92, {'retval': '$out090.0', 'castval': '$92return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9 = const(int, 0)               ['$const24.9']
    $const28.11 = const(NoneType, None)      ['$const28.11']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11, $const30.12, func=$32build_slice.13, args=(Var($const28.11, <string>:4), Var($const30.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11', '$const30.12']
    out0[$32build_slice.14] = $const24.9     ['$32build_slice.14', '$const24.9', 'out0']
    $const36.15 = const(int, 0)              ['$const36.15']
    $const40.17 = const(int, -1)             ['$const40.17']
    $const42.18 = const(NoneType, None)      ['$const42.18']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17, $const42.18, func=$44build_slice.19, args=(Var($const40.17, <string>:5), Var($const42.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17', '$const42.18']
    out0[$44build_slice.20] = $const36.15    ['$44build_slice.20', '$const36.15', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23 = const(int, 0)              ['$const52.23']
    $const54.24 = const(int, -1)             ['$const54.24']
    $56call_function.25 = call $50load_global.22($const52.23, $const54.24, func=$50load_global.22, args=[Var($const52.23, <string>:6), Var($const54.24, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23', '$const54.24']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28 = const(int, 0)              ['$const62.28']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31 = const(int, 0)              ['$const68.31']
    $const70.32 = const(int, 1)              ['$const70.32']
    $72call_function.33 = call $66load_global.30($const68.31, $const70.32, func=$66load_global.30, args=[Var($const68.31, <string>:6), Var($const70.32, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31', '$const70.32']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708753250b50>
numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
numba.core.ssa - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
numba.core.ssa - DEBUG - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
numba.core.ssa - DEBUG - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $const24.9.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const28.11.1 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $const30.12.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: out0[$32build_slice.14.1] = $const24.9.1
numba.core.ssa - DEBUG - on stmt: $const36.15.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const40.17.1 = const(int, -1)
numba.core.ssa - DEBUG - on stmt: $const42.18.1 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: out0[$44build_slice.20.1] = $const36.15.1
numba.core.ssa - DEBUG - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
numba.core.ssa - DEBUG - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $const52.23.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const54.24.1 = const(int, -1)
numba.core.ssa - DEBUG - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
numba.core.ssa - DEBUG - on stmt: $const62.28.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
numba.core.ssa - DEBUG - on stmt: $const68.31.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const70.32.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
numba.core.ssa - DEBUG - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
numba.core.ssa - DEBUG - on stmt: $phi80.0.1 = $78get_iter.36.1
numba.core.ssa - DEBUG - on stmt: jump 80
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 80
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708753250b50>
numba.core.ssa - DEBUG - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
numba.core.ssa - DEBUG - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
numba.core.ssa - DEBUG - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
numba.core.ssa - DEBUG - on stmt: $phi82.1.1 = $80for_iter.2.1
numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3.1, 82, 92
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 82
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708753250b50>
numba.core.ssa - DEBUG - on stmt: index00 = $phi82.1.1
numba.core.ssa - DEBUG - on stmt: jump 90
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 92
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708753250b50>
numba.core.ssa - DEBUG - on stmt: $92return_value.1.1 = cast(value=out0)
numba.core.ssa - DEBUG - on stmt: return $92return_value.1.1
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 90
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708753250b50>
numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: stencil_index = $const4.1 + index00
numba.core.ssa - DEBUG - on stmt: $6binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $const10.4 = const(int, -1)
numba.core.ssa - DEBUG - on stmt: stencil_index.1 = $const10.4 + index00
numba.core.ssa - DEBUG - on stmt: $12binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5
numba.core.ssa - DEBUG - on stmt: $const18.8 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: stencil_index.2 = $const18.8 + index00
numba.core.ssa - DEBUG - on stmt: $20binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $const24.11 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: stencil_index.3 = $const24.11 + index00
numba.core.ssa - DEBUG - on stmt: $26binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12
numba.core.ssa - DEBUG - on stmt: $30binary_and.14 = $14compare_op.6 & $28compare_op.13
numba.core.ssa - DEBUG - on stmt: $32return_value.15 = cast(value=$30binary_and.14)
numba.core.ssa - DEBUG - on stmt: out0[index00] = $32return_value.15
numba.core.ssa - DEBUG - on stmt: jump 91
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 91
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708753250b50>
numba.core.ssa - DEBUG - on stmt: jump 80
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10load_attr.3.1': [(<numba.core.ir.Assign object at 0x7087531509a0>,
                                   0)],
             '$12binary_subscr.5': [(<numba.core.ir.Assign object at 0x708753152410>,
                                     90)],
             '$14compare_op.6': [(<numba.core.ir.Assign object at 0x708752d69cc0>,
                                  90)],
             '$14load_global.5.1': [(<numba.core.ir.Assign object at 0x708753151060>,
                                     0)],
             '$16load_attr.6.1': [(<numba.core.ir.Assign object at 0x708753150dc0>,
                                   0)],
             '$20binary_subscr.9': [(<numba.core.ir.Assign object at 0x7087531523e0>,
                                     90)],
             '$26binary_subscr.12': [(<numba.core.ir.Assign object at 0x708753151600>,
                                      90)],
             '$28compare_op.13': [(<numba.core.ir.Assign object at 0x708753169540>,
                                   90)],
             '$30binary_and.14': [(<numba.core.ir.Assign object at 0x70875316a830>,
                                   90)],
             '$32build_slice.13.1': [(<numba.core.ir.Assign object at 0x708753150b50>,
                                      0)],
             '$32build_slice.14.1': [(<numba.core.ir.Assign object at 0x708753151cf0>,
                                      0)],
             '$32return_value.15': [(<numba.core.ir.Assign object at 0x70875316a410>,
                                     90)],
             '$44build_slice.19.1': [(<numba.core.ir.Assign object at 0x708753325780>,
                                      0)],
             '$44build_slice.20.1': [(<numba.core.ir.Assign object at 0x708753325870>,
                                      0)],
             '$48load_global.21.1': [(<numba.core.ir.Assign object at 0x708753326e60>,
                                      0)],
             '$50load_global.22.1': [(<numba.core.ir.Assign object at 0x708753324eb0>,
                                      0)],
             '$56call_function.25.1': [(<numba.core.ir.Assign object at 0x708753727d90>,
                                        0)],
             '$58unary_negative.26.1': [(<numba.core.ir.Assign object at 0x7087537259c0>,
                                         0)],
             '$64binary_subscr.29.1': [(<numba.core.ir.Assign object at 0x7087536248b0>,
                                        0)],
             '$66load_global.30.1': [(<numba.core.ir.Assign object at 0x7087536254e0>,
                                      0)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x708753153730>,
                                    90)],
             '$72call_function.33.1': [(<numba.core.ir.Assign object at 0x70875331bbb0>,
                                        0)],
             '$74binary_subtract.34.1': [(<numba.core.ir.Assign object at 0x70875331bca0>,
                                          0)],
             '$76call_function.35.1': [(<numba.core.ir.Assign object at 0x70875331bac0>,
                                        0)],
             '$78get_iter.36.1': [(<numba.core.ir.Assign object at 0x70875331bb80>,
                                   0)],
             '$80for_iter.1.1': [(<numba.core.ir.Assign object at 0x70875331b880>,
                                  80)],
             '$80for_iter.2.1': [(<numba.core.ir.Assign object at 0x70875331b9d0>,
                                  80)],
             '$80for_iter.3.1': [(<numba.core.ir.Assign object at 0x70875331b490>,
                                  80)],
             '$8load_global.2.1': [(<numba.core.ir.Assign object at 0x708753152020>,
                                    0)],
             '$92return_value.1.1': [(<numba.core.ir.Assign object at 0x70875331af80>,
                                      92)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x708752f785b0>,
                             90)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x708752f42fe0>,
                             90)],
             '$const24.11': [(<numba.core.ir.Assign object at 0x708753168d00>,
                              90)],
             '$const24.9.1': [(<numba.core.ir.Assign object at 0x708753150e80>,
                               0)],
             '$const28.11.1': [(<numba.core.ir.Assign object at 0x708753152110>,
                                0)],
             '$const30.12.1': [(<numba.core.ir.Assign object at 0x708753150e50>,
                                0)],
             '$const36.15.1': [(<numba.core.ir.Assign object at 0x7087533279d0>,
                                0)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x708753054c10>,
                            90)],
             '$const40.17.1': [(<numba.core.ir.Assign object at 0x708753326f80>,
                                0)],
             '$const42.18.1': [(<numba.core.ir.Assign object at 0x708753324160>,
                                0)],
             '$const52.23.1': [(<numba.core.ir.Assign object at 0x708753324910>,
                                0)],
             '$const54.24.1': [(<numba.core.ir.Assign object at 0x708753724310>,
                                0)],
             '$const62.28.1': [(<numba.core.ir.Assign object at 0x708753726290>,
                                0)],
             '$const68.31.1': [(<numba.core.ir.Assign object at 0x708753624610>,
                                0)],
             '$const70.32.1': [(<numba.core.ir.Assign object at 0x708753318040>,
                                0)],
             '$phi80.0.1': [(<numba.core.ir.Assign object at 0x708753327190>,
                             0)],
             '$phi82.1.1': [(<numba.core.ir.Assign object at 0x708753151a20>,
                             80)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x708753151ff0>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x708753319120>, 82)],
             'out0': [(<numba.core.ir.Assign object at 0x7087531514b0>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x708753152590>,
                                90)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x7087531524d0>,
                                  90)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x708753152290>,
                                  90)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x708753152140>,
                                  90)],
             'x': [(<numba.core.ir.Assign object at 0x708753150460>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7087538016f0>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1068)
           2	LOAD_GLOBAL(arg=0, lineno=1082)
           4	LOAD_FAST(arg=0, lineno=1082)
           6	CALL_FUNCTION(arg=1, lineno=1082)
           8	LOAD_FAST(arg=1, lineno=1082)
          10	LOAD_CONST(arg=1, lineno=1082)
          12	LOAD_CONST(arg=1, lineno=1082)
          14	BUILD_SLICE(arg=2, lineno=1082)
          16	STORE_SUBSCR(arg=None, lineno=1082)
          18	LOAD_CONST(arg=1, lineno=1082)
          20	RETURN_VALUE(arg=None, lineno=1082)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1068)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1082)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1082)
numba.core.byteflow - DEBUG - stack ['$2load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=1082)
numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=1082)
numba.core.byteflow - DEBUG - stack ['$6call_function.2']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=1082)
numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=1082)
numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=BUILD_SLICE(arg=2, lineno=1082)
numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4', '$const12.5']
numba.core.byteflow - DEBUG - dispatch pc=16, inst=STORE_SUBSCR(arg=None, lineno=1082)
numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$14build_slice.7']
numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1082)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=1082)
numba.core.byteflow - DEBUG - stack ['$const18.8']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - keep phismap: {}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$x4.1'}), (6, {'func': '$2load_global.0', 'args': ['$x4.1'], 'res': '$6call_function.2'}), (8, {'res': '$y8.3'}), (10, {'res': '$const10.4'}), (12, {'res': '$const12.5'}), (14, {'start': '$const10.4', 'stop': '$const12.5', 'step': None, 'res': '$14build_slice.7', 'slicevar': '$14build_slice.6'}), (16, {'target': '$y8.3', 'index': '$14build_slice.7', 'value': '$6call_function.2'}), (18, {'res': '$const18.8'}), (20, {'retval': '$const18.8', 'castval': '$20return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x708758aa7580>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $const10.4 = const(NoneType, None)       ['$const10.4']
    $const12.5 = const(NoneType, None)       ['$const12.5']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1082), Var($const12.5, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4', '$const12.5']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    $const18.8 = const(NoneType, None)       ['$const18.8']
    $20return_value.9 = cast(value=$const18.8) ['$20return_value.9', '$const18.8']
    return $20return_value.9                 ['$20return_value.9']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752d82c20>
numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
numba.core.ssa - DEBUG - on stmt: y = arg(1, name=y)
numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x708758aa7580>)
numba.core.ssa - DEBUG - on stmt: $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $const10.4 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $const12.5 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $14build_slice.6 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1082), Var($const12.5, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: y[slice(None, None, None)] = $6call_function.2
numba.core.ssa - DEBUG - on stmt: $const18.8 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $20return_value.9 = cast(value=$const18.8)
numba.core.ssa - DEBUG - on stmt: return $20return_value.9
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$14build_slice.6': [(<numba.core.ir.Assign object at 0x708752c8d0c0>,
                                   0)],
             '$14build_slice.7': [(<numba.core.ir.Assign object at 0x708752c8d1b0>,
                                   0)],
             '$20return_value.9': [(<numba.core.ir.Assign object at 0x708752c8d570>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x708752c8c9a0>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x708752c8cb50>,
                                    0)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x708752c8cd90>,
                             0)],
             '$const12.5': [(<numba.core.ir.Assign object at 0x708752c8cf10>,
                             0)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x708752c8d3c0>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x708752c8c1f0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x708752c8de10>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x708752d82c20>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_FAST(arg=0, lineno=2)
           4	LOAD_ATTR(arg=0, lineno=2)
           6	STORE_FAST(arg=1, lineno=2)
           8	LOAD_GLOBAL(arg=1, lineno=3)
          10	LOAD_ATTR(arg=2, lineno=3)
          12	LOAD_FAST(arg=1, lineno=3)
          14	LOAD_GLOBAL(arg=1, lineno=3)
          16	LOAD_ATTR(arg=3, lineno=3)
          18	LOAD_CONST(arg=1, lineno=3)
          20	CALL_FUNCTION_KW(arg=2, lineno=3)
          22	STORE_FAST(arg=2, lineno=3)
          24	LOAD_CONST(arg=2, lineno=4)
          26	LOAD_FAST(arg=2, lineno=4)
          28	LOAD_CONST(arg=0, lineno=4)
          30	LOAD_CONST(arg=3, lineno=4)
          32	BUILD_SLICE(arg=2, lineno=4)
          34	STORE_SUBSCR(arg=None, lineno=4)
          36	LOAD_CONST(arg=2, lineno=5)
          38	LOAD_FAST(arg=2, lineno=5)
          40	LOAD_CONST(arg=4, lineno=5)
          42	LOAD_CONST(arg=0, lineno=5)
          44	BUILD_SLICE(arg=2, lineno=5)
          46	STORE_SUBSCR(arg=None, lineno=5)
          48	LOAD_GLOBAL(arg=4, lineno=6)
          50	LOAD_GLOBAL(arg=5, lineno=6)
          52	LOAD_CONST(arg=2, lineno=6)
          54	LOAD_CONST(arg=4, lineno=6)
          56	CALL_FUNCTION(arg=2, lineno=6)
          58	UNARY_NEGATIVE(arg=None, lineno=6)
          60	LOAD_FAST(arg=1, lineno=6)
          62	LOAD_CONST(arg=2, lineno=6)
          64	BINARY_SUBSCR(arg=None, lineno=6)
          66	LOAD_GLOBAL(arg=6, lineno=6)
          68	LOAD_CONST(arg=2, lineno=6)
          70	LOAD_CONST(arg=3, lineno=6)
          72	CALL_FUNCTION(arg=2, lineno=6)
          74	BINARY_SUBTRACT(arg=None, lineno=6)
          76	CALL_FUNCTION(arg=2, lineno=6)
          78	GET_ITER(arg=None, lineno=6)
>         80	FOR_ITER(arg=4, lineno=6)
          82	STORE_FAST(arg=3, lineno=6)
          84	LOAD_CONST(arg=2, lineno=7)
          86	STORE_FAST(arg=4, lineno=7)
          88	JUMP_ABSOLUTE(arg=41, lineno=7)
>         90	LOAD_FAST(arg=2, lineno=8)
          92	RETURN_VALUE(arg=None, lineno=8)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=2)
numba.core.byteflow - DEBUG - stack ['$x2.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=STORE_FAST(arg=1, lineno=2)
numba.core.byteflow - DEBUG - stack ['$4load_attr.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_GLOBAL(arg=1, lineno=3)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_ATTR(arg=2, lineno=3)
numba.core.byteflow - DEBUG - stack ['$8load_global.2']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_GLOBAL(arg=1, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4']
numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_ATTR(arg=3, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$14load_global.5']
numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6']
numba.core.byteflow - DEBUG - dispatch pc=20, inst=CALL_FUNCTION_KW(arg=2, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6', '$const18.7']
numba.core.byteflow - DEBUG - dispatch pc=22, inst=STORE_FAST(arg=2, lineno=3)
numba.core.byteflow - DEBUG - stack ['$20call_function_kw.8']
numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=2, lineno=4)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=2, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9']
numba.core.byteflow - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=0, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10']
numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=3, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11']
numba.core.byteflow - DEBUG - dispatch pc=32, inst=BUILD_SLICE(arg=2, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11', '$const30.12']
numba.core.byteflow - DEBUG - dispatch pc=34, inst=STORE_SUBSCR(arg=None, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$32build_slice.14']
numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=2, lineno=5)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=2, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15']
numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16']
numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=0, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17']
numba.core.byteflow - DEBUG - dispatch pc=44, inst=BUILD_SLICE(arg=2, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17', '$const42.18']
numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_SUBSCR(arg=None, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$44build_slice.20']
numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_GLOBAL(arg=4, lineno=6)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=5, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21']
numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22']
numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=4, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23']
numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_FUNCTION(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23', '$const54.24']
numba.core.byteflow - DEBUG - dispatch pc=58, inst=UNARY_NEGATIVE(arg=None, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$56call_function.25']
numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_FAST(arg=1, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26']
numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_CONST(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27']
numba.core.byteflow - DEBUG - dispatch pc=64, inst=BINARY_SUBSCR(arg=None, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27', '$const62.28']
numba.core.byteflow - DEBUG - dispatch pc=66, inst=LOAD_GLOBAL(arg=6, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29']
numba.core.byteflow - DEBUG - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30']
numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=3, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31']
numba.core.byteflow - DEBUG - dispatch pc=72, inst=CALL_FUNCTION(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31', '$const70.32']
numba.core.byteflow - DEBUG - dispatch pc=74, inst=BINARY_SUBTRACT(arg=None, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$72call_function.33']
numba.core.byteflow - DEBUG - dispatch pc=76, inst=CALL_FUNCTION(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34']
numba.core.byteflow - DEBUG - dispatch pc=78, inst=GET_ITER(arg=None, lineno=6)
numba.core.byteflow - DEBUG - stack ['$76call_function.35']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$78get_iter.36',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi80.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=80, inst=FOR_ITER(arg=4, lineno=6)
numba.core.byteflow - DEBUG - stack ['$phi80.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=('$phi80.0', '$80for_iter.2'), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=82 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_FAST(arg=2, lineno=8)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=92, inst=RETURN_VALUE(arg=None, lineno=8)
numba.core.byteflow - DEBUG - stack ['$out090.0']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: ['$phi82.0', '$phi82.1']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=2)
numba.core.byteflow - DEBUG - dispatch pc=82, inst=STORE_FAST(arg=3, lineno=6)
numba.core.byteflow - DEBUG - stack ['$phi82.0', '$phi82.1']
numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_CONST(arg=2, lineno=7)
numba.core.byteflow - DEBUG - stack ['$phi82.0']
numba.core.byteflow - DEBUG - dispatch pc=86, inst=STORE_FAST(arg=4, lineno=7)
numba.core.byteflow - DEBUG - stack ['$phi82.0', '$const84.2']
numba.core.byteflow - DEBUG - dispatch pc=88, inst=JUMP_ABSOLUTE(arg=41, lineno=7)
numba.core.byteflow - DEBUG - stack ['$phi82.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$phi82.0',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=82 nstack_initial=2): {'$phi82.1'},
             State(pc_initial=90 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {'$phi80.0': State(pc_initial=0 nstack_initial=0),
 '$phi82.1': State(pc_initial=80 nstack_initial=1)}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi82.0', State(pc_initial=82 nstack_initial=2))},
             '$phi82.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
numba.core.byteflow - DEBUG - keep phismap: {'$phi80.0': {('$78get_iter.36', State(pc_initial=0 nstack_initial=0))},
 '$phi82.1': {('$80for_iter.2', State(pc_initial=80 nstack_initial=1))}}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi80.0': '$78get_iter.36'},
             State(pc_initial=80 nstack_initial=1): {'$phi82.1': '$80for_iter.2'}})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'item': '$x2.0', 'res': '$4load_attr.1'}), (6, {'value': '$4load_attr.1'}), (8, {'res': '$8load_global.2'}), (10, {'item': '$8load_global.2', 'res': '$10load_attr.3'}), (12, {'res': '$full_shape012.4'}), (14, {'res': '$14load_global.5'}), (16, {'item': '$14load_global.5', 'res': '$16load_attr.6'}), (18, {'res': '$const18.7'}), (20, {'func': '$10load_attr.3', 'args': ['$full_shape012.4', '$16load_attr.6'], 'names': '$const18.7', 'res': '$20call_function_kw.8'}), (22, {'value': '$20call_function_kw.8'}), (24, {'res': '$const24.9'}), (26, {'res': '$out026.10'}), (28, {'res': '$const28.11'}), (30, {'res': '$const30.12'}), (32, {'start': '$const28.11', 'stop': '$const30.12', 'step': None, 'res': '$32build_slice.14', 'slicevar': '$32build_slice.13'}), (34, {'target': '$out026.10', 'index': '$32build_slice.14', 'value': '$const24.9'}), (36, {'res': '$const36.15'}), (38, {'res': '$out038.16'}), (40, {'res': '$const40.17'}), (42, {'res': '$const42.18'}), (44, {'start': '$const40.17', 'stop': '$const42.18', 'step': None, 'res': '$44build_slice.20', 'slicevar': '$44build_slice.19'}), (46, {'target': '$out038.16', 'index': '$44build_slice.20', 'value': '$const36.15'}), (48, {'res': '$48load_global.21'}), (50, {'res': '$50load_global.22'}), (52, {'res': '$const52.23'}), (54, {'res': '$const54.24'}), (56, {'func': '$50load_global.22', 'args': ['$const52.23', '$const54.24'], 'res': '$56call_function.25'}), (58, {'value': '$56call_function.25', 'res': '$58unary_negative.26'}), (60, {'res': '$full_shape060.27'}), (62, {'res': '$const62.28'}), (64, {'index': '$const62.28', 'target': '$full_shape060.27', 'res': '$64binary_subscr.29'}), (66, {'res': '$66load_global.30'}), (68, {'res': '$const68.31'}), (70, {'res': '$const70.32'}), (72, {'func': '$66load_global.30', 'args': ['$const68.31', '$const70.32'], 'res': '$72call_function.33'}), (74, {'lhs': '$64binary_subscr.29', 'rhs': '$72call_function.33', 'res': '$74binary_subtract.34'}), (76, {'func': '$48load_global.21', 'args': ['$58unary_negative.26', '$74binary_subtract.34'], 'res': '$76call_function.35'}), (78, {'value': '$76call_function.35', 'res': '$78get_iter.36'})), outgoing_phis={'$phi80.0': '$78get_iter.36'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$78get_iter.36',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'iterator': '$phi80.0', 'pair': '$80for_iter.1', 'indval': '$80for_iter.2', 'pred': '$80for_iter.3'}),), outgoing_phis={'$phi82.1': '$80for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 82: ('$phi80.0', '$80for_iter.2')})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=2):
AdaptBlockInfo(insts=((82, {'value': '$phi82.1'}), (84, {'res': '$const84.2'}), (86, {'value': '$const84.2'}), (88, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi82.0',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$out090.0'}), (92, {'retval': '$out090.0', 'castval': '$92return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9 = const(int, 0)               ['$const24.9']
    $const28.11 = const(NoneType, None)      ['$const28.11']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11, $const30.12, func=$32build_slice.13, args=(Var($const28.11, <string>:4), Var($const30.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11', '$const30.12']
    out0[$32build_slice.14] = $const24.9     ['$32build_slice.14', '$const24.9', 'out0']
    $const36.15 = const(int, 0)              ['$const36.15']
    $const40.17 = const(int, -1)             ['$const40.17']
    $const42.18 = const(NoneType, None)      ['$const42.18']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17, $const42.18, func=$44build_slice.19, args=(Var($const40.17, <string>:5), Var($const42.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17', '$const42.18']
    out0[$44build_slice.20] = $const36.15    ['$44build_slice.20', '$const36.15', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23 = const(int, 0)              ['$const52.23']
    $const54.24 = const(int, -1)             ['$const54.24']
    $56call_function.25 = call $50load_global.22($const52.23, $const54.24, func=$50load_global.22, args=[Var($const52.23, <string>:6), Var($const54.24, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23', '$const54.24']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28 = const(int, 0)              ['$const62.28']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31 = const(int, 0)              ['$const68.31']
    $const70.32 = const(int, 1)              ['$const70.32']
    $72call_function.33 = call $66load_global.30($const68.31, $const70.32, func=$66load_global.30, args=[Var($const68.31, <string>:6), Var($const70.32, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31', '$const70.32']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752c69cf0>
numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
numba.core.ssa - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
numba.core.ssa - DEBUG - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
numba.core.ssa - DEBUG - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $const24.9.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const28.11.1 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $const30.12.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: out0[$32build_slice.14.1] = $const24.9.1
numba.core.ssa - DEBUG - on stmt: $const36.15.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const40.17.1 = const(int, -1)
numba.core.ssa - DEBUG - on stmt: $const42.18.1 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: out0[$44build_slice.20.1] = $const36.15.1
numba.core.ssa - DEBUG - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
numba.core.ssa - DEBUG - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $const52.23.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const54.24.1 = const(int, -1)
numba.core.ssa - DEBUG - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
numba.core.ssa - DEBUG - on stmt: $const62.28.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
numba.core.ssa - DEBUG - on stmt: $const68.31.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const70.32.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
numba.core.ssa - DEBUG - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
numba.core.ssa - DEBUG - on stmt: $phi80.0.1 = $78get_iter.36.1
numba.core.ssa - DEBUG - on stmt: jump 80
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 80
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752c69cf0>
numba.core.ssa - DEBUG - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
numba.core.ssa - DEBUG - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
numba.core.ssa - DEBUG - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
numba.core.ssa - DEBUG - on stmt: $phi82.1.1 = $80for_iter.2.1
numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3.1, 82, 92
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 82
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752c69cf0>
numba.core.ssa - DEBUG - on stmt: index00 = $phi82.1.1
numba.core.ssa - DEBUG - on stmt: jump 90
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 92
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752c69cf0>
numba.core.ssa - DEBUG - on stmt: $92return_value.1.1 = cast(value=out0)
numba.core.ssa - DEBUG - on stmt: return $92return_value.1.1
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 90
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752c69cf0>
numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: stencil_index = $const4.1 + index00
numba.core.ssa - DEBUG - on stmt: $6binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $const10.4 = const(int, -1)
numba.core.ssa - DEBUG - on stmt: stencil_index.1 = $const10.4 + index00
numba.core.ssa - DEBUG - on stmt: $12binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5
numba.core.ssa - DEBUG - on stmt: $const18.8 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: stencil_index.2 = $const18.8 + index00
numba.core.ssa - DEBUG - on stmt: $20binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $const24.11 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: stencil_index.3 = $const24.11 + index00
numba.core.ssa - DEBUG - on stmt: $26binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12
numba.core.ssa - DEBUG - on stmt: $30binary_and.14 = $14compare_op.6 & $28compare_op.13
numba.core.ssa - DEBUG - on stmt: $32return_value.15 = cast(value=$30binary_and.14)
numba.core.ssa - DEBUG - on stmt: out0[index00] = $32return_value.15
numba.core.ssa - DEBUG - on stmt: jump 91
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 91
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752c69cf0>
numba.core.ssa - DEBUG - on stmt: jump 80
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10load_attr.3.1': [(<numba.core.ir.Assign object at 0x70875341b0d0>,
                                   0)],
             '$12binary_subscr.5': [(<numba.core.ir.Assign object at 0x7087534182e0>,
                                     90)],
             '$14compare_op.6': [(<numba.core.ir.Assign object at 0x708753555e40>,
                                  90)],
             '$14load_global.5.1': [(<numba.core.ir.Assign object at 0x70875341aec0>,
                                     0)],
             '$16load_attr.6.1': [(<numba.core.ir.Assign object at 0x7087534184c0>,
                                   0)],
             '$20binary_subscr.9': [(<numba.core.ir.Assign object at 0x70875341ab60>,
                                     90)],
             '$26binary_subscr.12': [(<numba.core.ir.Assign object at 0x70875341b7c0>,
                                      90)],
             '$28compare_op.13': [(<numba.core.ir.Assign object at 0x708753555150>,
                                   90)],
             '$30binary_and.14': [(<numba.core.ir.Assign object at 0x708753556f80>,
                                   90)],
             '$32build_slice.13.1': [(<numba.core.ir.Assign object at 0x70875341bd30>,
                                      0)],
             '$32build_slice.14.1': [(<numba.core.ir.Assign object at 0x70875341a140>,
                                      0)],
             '$32return_value.15': [(<numba.core.ir.Assign object at 0x7087533c3dc0>,
                                     90)],
             '$44build_slice.19.1': [(<numba.core.ir.Assign object at 0x70875341a860>,
                                      0)],
             '$44build_slice.20.1': [(<numba.core.ir.Assign object at 0x70875341a440>,
                                      0)],
             '$48load_global.21.1': [(<numba.core.ir.Assign object at 0x70875341b970>,
                                      0)],
             '$50load_global.22.1': [(<numba.core.ir.Assign object at 0x708753419b40>,
                                      0)],
             '$56call_function.25.1': [(<numba.core.ir.Assign object at 0x708753418f40>,
                                        0)],
             '$58unary_negative.26.1': [(<numba.core.ir.Assign object at 0x70875341aef0>,
                                         0)],
             '$64binary_subscr.29.1': [(<numba.core.ir.Assign object at 0x7087534ee230>,
                                        0)],
             '$66load_global.30.1': [(<numba.core.ir.Assign object at 0x708752d57d60>,
                                      0)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x7087533c1cf0>,
                                    90)],
             '$72call_function.33.1': [(<numba.core.ir.Assign object at 0x708752d57e20>,
                                        0)],
             '$74binary_subtract.34.1': [(<numba.core.ir.Assign object at 0x708752d55a80>,
                                          0)],
             '$76call_function.35.1': [(<numba.core.ir.Assign object at 0x708752d55ba0>,
                                        0)],
             '$78get_iter.36.1': [(<numba.core.ir.Assign object at 0x708752d55990>,
                                   0)],
             '$80for_iter.1.1': [(<numba.core.ir.Assign object at 0x708752d544f0>,
                                  80)],
             '$80for_iter.2.1': [(<numba.core.ir.Assign object at 0x708752d54400>,
                                  80)],
             '$80for_iter.3.1': [(<numba.core.ir.Assign object at 0x708752d54310>,
                                  80)],
             '$8load_global.2.1': [(<numba.core.ir.Assign object at 0x70875341a560>,
                                    0)],
             '$92return_value.1.1': [(<numba.core.ir.Assign object at 0x708752c69630>,
                                      92)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x7087534d1270>,
                             90)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x708753555990>,
                             90)],
             '$const24.11': [(<numba.core.ir.Assign object at 0x708753555300>,
                              90)],
             '$const24.9.1': [(<numba.core.ir.Assign object at 0x708753418970>,
                               0)],
             '$const28.11.1': [(<numba.core.ir.Assign object at 0x70875341b8b0>,
                                0)],
             '$const30.12.1': [(<numba.core.ir.Assign object at 0x708753419c30>,
                                0)],
             '$const36.15.1': [(<numba.core.ir.Assign object at 0x708753419f30>,
                                0)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x708752c8ccd0>,
                            90)],
             '$const40.17.1': [(<numba.core.ir.Assign object at 0x70875341aad0>,
                                0)],
             '$const42.18.1': [(<numba.core.ir.Assign object at 0x70875341aa40>,
                                0)],
             '$const52.23.1': [(<numba.core.ir.Assign object at 0x708753419330>,
                                0)],
             '$const54.24.1': [(<numba.core.ir.Assign object at 0x708753418fa0>,
                                0)],
             '$const62.28.1': [(<numba.core.ir.Assign object at 0x70875341b040>,
                                0)],
             '$const68.31.1': [(<numba.core.ir.Assign object at 0x708752d56440>,
                                0)],
             '$const70.32.1': [(<numba.core.ir.Assign object at 0x708752d56da0>,
                                0)],
             '$phi80.0.1': [(<numba.core.ir.Assign object at 0x708753418160>,
                             0)],
             '$phi82.1.1': [(<numba.core.ir.Assign object at 0x7087534196f0>,
                             80)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x70875341b3a0>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x708752d55b70>, 82)],
             'out0': [(<numba.core.ir.Assign object at 0x7087534188b0>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x7087533c01c0>,
                                90)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x708753419f90>,
                                  90)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x70875341ad10>,
                                  90)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x7087534183a0>,
                                  90)],
             'x': [(<numba.core.ir.Assign object at 0x70875341a710>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x708752c69cf0>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1068)
           2	LOAD_GLOBAL(arg=0, lineno=1082)
           4	LOAD_FAST(arg=0, lineno=1082)
           6	CALL_FUNCTION(arg=1, lineno=1082)
           8	LOAD_FAST(arg=1, lineno=1082)
          10	LOAD_CONST(arg=1, lineno=1082)
          12	LOAD_CONST(arg=1, lineno=1082)
          14	BUILD_SLICE(arg=2, lineno=1082)
          16	STORE_SUBSCR(arg=None, lineno=1082)
          18	LOAD_CONST(arg=1, lineno=1082)
          20	RETURN_VALUE(arg=None, lineno=1082)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1068)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1082)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1082)
numba.core.byteflow - DEBUG - stack ['$2load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=1082)
numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=1082)
numba.core.byteflow - DEBUG - stack ['$6call_function.2']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=1082)
numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_CONST(arg=1, lineno=1082)
numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=BUILD_SLICE(arg=2, lineno=1082)
numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$const10.4', '$const12.5']
numba.core.byteflow - DEBUG - dispatch pc=16, inst=STORE_SUBSCR(arg=None, lineno=1082)
numba.core.byteflow - DEBUG - stack ['$6call_function.2', '$y8.3', '$14build_slice.7']
numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=1082)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=1082)
numba.core.byteflow - DEBUG - stack ['$const18.8']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - keep phismap: {}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$x4.1'}), (6, {'func': '$2load_global.0', 'args': ['$x4.1'], 'res': '$6call_function.2'}), (8, {'res': '$y8.3'}), (10, {'res': '$const10.4'}), (12, {'res': '$const12.5'}), (14, {'start': '$const10.4', 'stop': '$const12.5', 'step': None, 'res': '$14build_slice.7', 'slicevar': '$14build_slice.6'}), (16, {'target': '$y8.3', 'index': '$14build_slice.7', 'value': '$6call_function.2'}), (18, {'res': '$const18.8'}), (20, {'retval': '$const18.8', 'castval': '$20return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    y = arg(1, name=y)                       ['y']
    $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x708758aa7580>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'x']
    $const10.4 = const(NoneType, None)       ['$const10.4']
    $const12.5 = const(NoneType, None)       ['$const12.5']
    $14build_slice.6 = global(slice: <class 'slice'>) ['$14build_slice.6']
    $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1082), Var($const12.5, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None) ['$14build_slice.6', '$14build_slice.7', '$const10.4', '$const12.5']
    y[$14build_slice.7] = $6call_function.2  ['$14build_slice.7', '$6call_function.2', 'y']
    $const18.8 = const(NoneType, None)       ['$const18.8']
    $20return_value.9 = cast(value=$const18.8) ['$20return_value.9', '$const18.8']
    return $20return_value.9                 ['$20return_value.9']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x70875311dae0>
numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
numba.core.ssa - DEBUG - on stmt: y = arg(1, name=y)
numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(_localmin_sten: <numba.stencils.stencil.StencilFunc object at 0x708758aa7580>)
numba.core.ssa - DEBUG - on stmt: $6call_function.2 = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, utils.py:1068)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $const10.4 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $const12.5 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $14build_slice.6 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $14build_slice.7 = call $14build_slice.6($const10.4, $const12.5, func=$14build_slice.6, args=(Var($const10.4, utils.py:1082), Var($const12.5, utils.py:1082)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: y[slice(None, None, None)] = $6call_function.2
numba.core.ssa - DEBUG - on stmt: $const18.8 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $20return_value.9 = cast(value=$const18.8)
numba.core.ssa - DEBUG - on stmt: return $20return_value.9
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$14build_slice.6': [(<numba.core.ir.Assign object at 0x70875336f370>,
                                   0)],
             '$14build_slice.7': [(<numba.core.ir.Assign object at 0x70875336ff40>,
                                   0)],
             '$20return_value.9': [(<numba.core.ir.Assign object at 0x70875336ed70>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x70875313b8e0>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x70875313bbe0>,
                                    0)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x70875313be20>,
                             0)],
             '$const12.5': [(<numba.core.ir.Assign object at 0x70875313bfa0>,
                             0)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x70875336e7a0>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x70875313b220>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x70875313b2b0>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x70875311dae0>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1)
           2	LOAD_FAST(arg=0, lineno=2)
           4	LOAD_ATTR(arg=0, lineno=2)
           6	STORE_FAST(arg=1, lineno=2)
           8	LOAD_GLOBAL(arg=1, lineno=3)
          10	LOAD_ATTR(arg=2, lineno=3)
          12	LOAD_FAST(arg=1, lineno=3)
          14	LOAD_GLOBAL(arg=1, lineno=3)
          16	LOAD_ATTR(arg=3, lineno=3)
          18	LOAD_CONST(arg=1, lineno=3)
          20	CALL_FUNCTION_KW(arg=2, lineno=3)
          22	STORE_FAST(arg=2, lineno=3)
          24	LOAD_CONST(arg=2, lineno=4)
          26	LOAD_FAST(arg=2, lineno=4)
          28	LOAD_CONST(arg=0, lineno=4)
          30	LOAD_CONST(arg=3, lineno=4)
          32	BUILD_SLICE(arg=2, lineno=4)
          34	STORE_SUBSCR(arg=None, lineno=4)
          36	LOAD_CONST(arg=2, lineno=5)
          38	LOAD_FAST(arg=2, lineno=5)
          40	LOAD_CONST(arg=4, lineno=5)
          42	LOAD_CONST(arg=0, lineno=5)
          44	BUILD_SLICE(arg=2, lineno=5)
          46	STORE_SUBSCR(arg=None, lineno=5)
          48	LOAD_GLOBAL(arg=4, lineno=6)
          50	LOAD_GLOBAL(arg=5, lineno=6)
          52	LOAD_CONST(arg=2, lineno=6)
          54	LOAD_CONST(arg=4, lineno=6)
          56	CALL_FUNCTION(arg=2, lineno=6)
          58	UNARY_NEGATIVE(arg=None, lineno=6)
          60	LOAD_FAST(arg=1, lineno=6)
          62	LOAD_CONST(arg=2, lineno=6)
          64	BINARY_SUBSCR(arg=None, lineno=6)
          66	LOAD_GLOBAL(arg=6, lineno=6)
          68	LOAD_CONST(arg=2, lineno=6)
          70	LOAD_CONST(arg=3, lineno=6)
          72	CALL_FUNCTION(arg=2, lineno=6)
          74	BINARY_SUBTRACT(arg=None, lineno=6)
          76	CALL_FUNCTION(arg=2, lineno=6)
          78	GET_ITER(arg=None, lineno=6)
>         80	FOR_ITER(arg=4, lineno=6)
          82	STORE_FAST(arg=3, lineno=6)
          84	LOAD_CONST(arg=2, lineno=7)
          86	STORE_FAST(arg=4, lineno=7)
          88	JUMP_ABSOLUTE(arg=41, lineno=7)
>         90	LOAD_FAST(arg=2, lineno=8)
          92	RETURN_VALUE(arg=None, lineno=8)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=2)
numba.core.byteflow - DEBUG - stack ['$x2.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=STORE_FAST(arg=1, lineno=2)
numba.core.byteflow - DEBUG - stack ['$4load_attr.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_GLOBAL(arg=1, lineno=3)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_ATTR(arg=2, lineno=3)
numba.core.byteflow - DEBUG - stack ['$8load_global.2']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_GLOBAL(arg=1, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4']
numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_ATTR(arg=3, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$14load_global.5']
numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=1, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6']
numba.core.byteflow - DEBUG - dispatch pc=20, inst=CALL_FUNCTION_KW(arg=2, lineno=3)
numba.core.byteflow - DEBUG - stack ['$10load_attr.3', '$full_shape012.4', '$16load_attr.6', '$const18.7']
numba.core.byteflow - DEBUG - dispatch pc=22, inst=STORE_FAST(arg=2, lineno=3)
numba.core.byteflow - DEBUG - stack ['$20call_function_kw.8']
numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=2, lineno=4)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=2, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9']
numba.core.byteflow - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=0, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10']
numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=3, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11']
numba.core.byteflow - DEBUG - dispatch pc=32, inst=BUILD_SLICE(arg=2, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$const28.11', '$const30.12']
numba.core.byteflow - DEBUG - dispatch pc=34, inst=STORE_SUBSCR(arg=None, lineno=4)
numba.core.byteflow - DEBUG - stack ['$const24.9', '$out026.10', '$32build_slice.14']
numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=2, lineno=5)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=2, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15']
numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=4, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16']
numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_CONST(arg=0, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17']
numba.core.byteflow - DEBUG - dispatch pc=44, inst=BUILD_SLICE(arg=2, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$const40.17', '$const42.18']
numba.core.byteflow - DEBUG - dispatch pc=46, inst=STORE_SUBSCR(arg=None, lineno=5)
numba.core.byteflow - DEBUG - stack ['$const36.15', '$out038.16', '$44build_slice.20']
numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_GLOBAL(arg=4, lineno=6)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=5, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21']
numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_CONST(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22']
numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=4, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23']
numba.core.byteflow - DEBUG - dispatch pc=56, inst=CALL_FUNCTION(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$50load_global.22', '$const52.23', '$const54.24']
numba.core.byteflow - DEBUG - dispatch pc=58, inst=UNARY_NEGATIVE(arg=None, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$56call_function.25']
numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_FAST(arg=1, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26']
numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_CONST(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27']
numba.core.byteflow - DEBUG - dispatch pc=64, inst=BINARY_SUBSCR(arg=None, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$full_shape060.27', '$const62.28']
numba.core.byteflow - DEBUG - dispatch pc=66, inst=LOAD_GLOBAL(arg=6, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29']
numba.core.byteflow - DEBUG - dispatch pc=68, inst=LOAD_CONST(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30']
numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=3, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31']
numba.core.byteflow - DEBUG - dispatch pc=72, inst=CALL_FUNCTION(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$66load_global.30', '$const68.31', '$const70.32']
numba.core.byteflow - DEBUG - dispatch pc=74, inst=BINARY_SUBTRACT(arg=None, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$64binary_subscr.29', '$72call_function.33']
numba.core.byteflow - DEBUG - dispatch pc=76, inst=CALL_FUNCTION(arg=2, lineno=6)
numba.core.byteflow - DEBUG - stack ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34']
numba.core.byteflow - DEBUG - dispatch pc=78, inst=GET_ITER(arg=None, lineno=6)
numba.core.byteflow - DEBUG - stack ['$76call_function.35']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$78get_iter.36',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi80.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=80, inst=FOR_ITER(arg=4, lineno=6)
numba.core.byteflow - DEBUG - stack ['$phi80.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=90, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=('$phi80.0', '$80for_iter.2'), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=90 nstack_initial=0), State(pc_initial=82 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=90 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_FAST(arg=2, lineno=8)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=92, inst=RETURN_VALUE(arg=None, lineno=8)
numba.core.byteflow - DEBUG - stack ['$out090.0']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: ['$phi82.0', '$phi82.1']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=2)
numba.core.byteflow - DEBUG - dispatch pc=82, inst=STORE_FAST(arg=3, lineno=6)
numba.core.byteflow - DEBUG - stack ['$phi82.0', '$phi82.1']
numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_CONST(arg=2, lineno=7)
numba.core.byteflow - DEBUG - stack ['$phi82.0']
numba.core.byteflow - DEBUG - dispatch pc=86, inst=STORE_FAST(arg=4, lineno=7)
numba.core.byteflow - DEBUG - stack ['$phi82.0', '$const84.2']
numba.core.byteflow - DEBUG - dispatch pc=88, inst=JUMP_ABSOLUTE(arg=41, lineno=7)
numba.core.byteflow - DEBUG - stack ['$phi82.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$phi82.0',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=82 nstack_initial=2): {'$phi82.1'},
             State(pc_initial=90 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {'$phi80.0': State(pc_initial=0 nstack_initial=0),
 '$phi82.1': State(pc_initial=80 nstack_initial=1)}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi82.0', State(pc_initial=82 nstack_initial=2))},
             '$phi82.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi80.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.36',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
numba.core.byteflow - DEBUG - keep phismap: {'$phi80.0': {('$78get_iter.36', State(pc_initial=0 nstack_initial=0))},
 '$phi82.1': {('$80for_iter.2', State(pc_initial=80 nstack_initial=1))}}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi80.0': '$78get_iter.36'},
             State(pc_initial=80 nstack_initial=1): {'$phi82.1': '$80for_iter.2'}})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'item': '$x2.0', 'res': '$4load_attr.1'}), (6, {'value': '$4load_attr.1'}), (8, {'res': '$8load_global.2'}), (10, {'item': '$8load_global.2', 'res': '$10load_attr.3'}), (12, {'res': '$full_shape012.4'}), (14, {'res': '$14load_global.5'}), (16, {'item': '$14load_global.5', 'res': '$16load_attr.6'}), (18, {'res': '$const18.7'}), (20, {'func': '$10load_attr.3', 'args': ['$full_shape012.4', '$16load_attr.6'], 'names': '$const18.7', 'res': '$20call_function_kw.8'}), (22, {'value': '$20call_function_kw.8'}), (24, {'res': '$const24.9'}), (26, {'res': '$out026.10'}), (28, {'res': '$const28.11'}), (30, {'res': '$const30.12'}), (32, {'start': '$const28.11', 'stop': '$const30.12', 'step': None, 'res': '$32build_slice.14', 'slicevar': '$32build_slice.13'}), (34, {'target': '$out026.10', 'index': '$32build_slice.14', 'value': '$const24.9'}), (36, {'res': '$const36.15'}), (38, {'res': '$out038.16'}), (40, {'res': '$const40.17'}), (42, {'res': '$const42.18'}), (44, {'start': '$const40.17', 'stop': '$const42.18', 'step': None, 'res': '$44build_slice.20', 'slicevar': '$44build_slice.19'}), (46, {'target': '$out038.16', 'index': '$44build_slice.20', 'value': '$const36.15'}), (48, {'res': '$48load_global.21'}), (50, {'res': '$50load_global.22'}), (52, {'res': '$const52.23'}), (54, {'res': '$const54.24'}), (56, {'func': '$50load_global.22', 'args': ['$const52.23', '$const54.24'], 'res': '$56call_function.25'}), (58, {'value': '$56call_function.25', 'res': '$58unary_negative.26'}), (60, {'res': '$full_shape060.27'}), (62, {'res': '$const62.28'}), (64, {'index': '$const62.28', 'target': '$full_shape060.27', 'res': '$64binary_subscr.29'}), (66, {'res': '$66load_global.30'}), (68, {'res': '$const68.31'}), (70, {'res': '$const70.32'}), (72, {'func': '$66load_global.30', 'args': ['$const68.31', '$const70.32'], 'res': '$72call_function.33'}), (74, {'lhs': '$64binary_subscr.29', 'rhs': '$72call_function.33', 'res': '$74binary_subtract.34'}), (76, {'func': '$48load_global.21', 'args': ['$58unary_negative.26', '$74binary_subtract.34'], 'res': '$76call_function.35'}), (78, {'value': '$76call_function.35', 'res': '$78get_iter.36'})), outgoing_phis={'$phi80.0': '$78get_iter.36'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$78get_iter.36',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'iterator': '$phi80.0', 'pair': '$80for_iter.1', 'indval': '$80for_iter.2', 'pred': '$80for_iter.3'}),), outgoing_phis={'$phi82.1': '$80for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={90: (), 82: ('$phi80.0', '$80for_iter.2')})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=2):
AdaptBlockInfo(insts=((82, {'value': '$phi82.1'}), (84, {'res': '$const84.2'}), (86, {'value': '$const84.2'}), (88, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi82.0',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=90 nstack_initial=0):
AdaptBlockInfo(insts=((90, {'res': '$out090.0'}), (92, {'retval': '$out090.0', 'castval': '$92return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    full_shape0 = getattr(value=x, attr=shape) ['full_shape0', 'x']
    $8load_global.2 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.2']
    $10load_attr.3 = getattr(value=$8load_global.2, attr=empty) ['$10load_attr.3', '$8load_global.2']
    $14load_global.5 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$14load_global.5']
    $16load_attr.6 = getattr(value=$14load_global.5, attr=bool_) ['$14load_global.5', '$16load_attr.6']
    out0 = call $10load_attr.3(full_shape0, func=$10load_attr.3, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6, <string>:3))], vararg=None, varkwarg=None, target=None) ['$10load_attr.3', '$16load_attr.6', 'full_shape0', 'out0']
    $const24.9 = const(int, 0)               ['$const24.9']
    $const28.11 = const(NoneType, None)      ['$const28.11']
    $const30.12 = const(int, 1)              ['$const30.12']
    $32build_slice.13 = global(slice: <class 'slice'>) ['$32build_slice.13']
    $32build_slice.14 = call $32build_slice.13($const28.11, $const30.12, func=$32build_slice.13, args=(Var($const28.11, <string>:4), Var($const30.12, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None) ['$32build_slice.13', '$32build_slice.14', '$const28.11', '$const30.12']
    out0[$32build_slice.14] = $const24.9     ['$32build_slice.14', '$const24.9', 'out0']
    $const36.15 = const(int, 0)              ['$const36.15']
    $const40.17 = const(int, -1)             ['$const40.17']
    $const42.18 = const(NoneType, None)      ['$const42.18']
    $44build_slice.19 = global(slice: <class 'slice'>) ['$44build_slice.19']
    $44build_slice.20 = call $44build_slice.19($const40.17, $const42.18, func=$44build_slice.19, args=(Var($const40.17, <string>:5), Var($const42.18, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None) ['$44build_slice.19', '$44build_slice.20', '$const40.17', '$const42.18']
    out0[$44build_slice.20] = $const36.15    ['$44build_slice.20', '$const36.15', 'out0']
    $48load_global.21 = global(range: <class 'range'>) ['$48load_global.21']
    $50load_global.22 = global(min: <built-in function min>) ['$50load_global.22']
    $const52.23 = const(int, 0)              ['$const52.23']
    $const54.24 = const(int, -1)             ['$const54.24']
    $56call_function.25 = call $50load_global.22($const52.23, $const54.24, func=$50load_global.22, args=[Var($const52.23, <string>:6), Var($const54.24, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.22', '$56call_function.25', '$const52.23', '$const54.24']
    $58unary_negative.26 = unary(fn=<built-in function neg>, value=$56call_function.25) ['$56call_function.25', '$58unary_negative.26']
    $const62.28 = const(int, 0)              ['$const62.28']
    $64binary_subscr.29 = getitem(value=full_shape0, index=$const62.28, fn=<built-in function getitem>) ['$64binary_subscr.29', '$const62.28', 'full_shape0']
    $66load_global.30 = global(max: <built-in function max>) ['$66load_global.30']
    $const68.31 = const(int, 0)              ['$const68.31']
    $const70.32 = const(int, 1)              ['$const70.32']
    $72call_function.33 = call $66load_global.30($const68.31, $const70.32, func=$66load_global.30, args=[Var($const68.31, <string>:6), Var($const70.32, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.30', '$72call_function.33', '$const68.31', '$const70.32']
    $74binary_subtract.34 = $64binary_subscr.29 - $72call_function.33 ['$64binary_subscr.29', '$72call_function.33', '$74binary_subtract.34']
    $76call_function.35 = call $48load_global.21($58unary_negative.26, $74binary_subtract.34, func=$48load_global.21, args=[Var($58unary_negative.26, <string>:6), Var($74binary_subtract.34, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None) ['$48load_global.21', '$58unary_negative.26', '$74binary_subtract.34', '$76call_function.35']
    $78get_iter.36 = getiter(value=$76call_function.35) ['$76call_function.35', '$78get_iter.36']
    $phi80.0 = $78get_iter.36                ['$78get_iter.36', '$phi80.0']
    jump 80                                  []
label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 90             ['$80for_iter.3']
label 82:
    index00 = $phi82.1                       ['$phi82.1', 'index00']
    __sentinel__0 = const(int, 0)            ['__sentinel__0']
    jump 80                                  []
label 90:
    $92return_value.1 = cast(value=out0)     ['$92return_value.1', 'out0']
    return $92return_value.1                 ['$92return_value.1']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087531391e0>
numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
numba.core.ssa - DEBUG - on stmt: full_shape0 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $8load_global.2.1 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $10load_attr.3.1 = getattr(value=$8load_global.2.1, attr=empty)
numba.core.ssa - DEBUG - on stmt: $14load_global.5.1 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $16load_attr.6.1 = getattr(value=$14load_global.5.1, attr=bool_)
numba.core.ssa - DEBUG - on stmt: out0 = call $10load_attr.3.1(full_shape0, func=$10load_attr.3.1, args=[Var(full_shape0, <string>:2)], kws=[('dtype', Var($16load_attr.6.1, <string>:3))], vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $const24.9.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const28.11.1 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $const30.12.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $32build_slice.13.1 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $32build_slice.14.1 = call $32build_slice.13.1($const28.11.1, $const30.12.1, func=$32build_slice.13.1, args=(Var($const28.11.1, <string>:4), Var($const30.12.1, <string>:4)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: out0[$32build_slice.14.1] = $const24.9.1
numba.core.ssa - DEBUG - on stmt: $const36.15.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const40.17.1 = const(int, -1)
numba.core.ssa - DEBUG - on stmt: $const42.18.1 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $44build_slice.19.1 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $44build_slice.20.1 = call $44build_slice.19.1($const40.17.1, $const42.18.1, func=$44build_slice.19.1, args=(Var($const40.17.1, <string>:5), Var($const42.18.1, <string>:5)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: out0[$44build_slice.20.1] = $const36.15.1
numba.core.ssa - DEBUG - on stmt: $48load_global.21.1 = global(range: <class 'range'>)
numba.core.ssa - DEBUG - on stmt: $50load_global.22.1 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $const52.23.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const54.24.1 = const(int, -1)
numba.core.ssa - DEBUG - on stmt: $56call_function.25.1 = call $50load_global.22.1($const52.23.1, $const54.24.1, func=$50load_global.22.1, args=[Var($const52.23.1, <string>:6), Var($const54.24.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $58unary_negative.26.1 = unary(fn=<built-in function neg>, value=$56call_function.25.1)
numba.core.ssa - DEBUG - on stmt: $const62.28.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $64binary_subscr.29.1 = getitem(value=full_shape0, index=$const62.28.1, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $66load_global.30.1 = global(max: <built-in function max>)
numba.core.ssa - DEBUG - on stmt: $const68.31.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const70.32.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $72call_function.33.1 = call $66load_global.30.1($const68.31.1, $const70.32.1, func=$66load_global.30.1, args=[Var($const68.31.1, <string>:6), Var($const70.32.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $74binary_subtract.34.1 = $64binary_subscr.29.1 - $72call_function.33.1
numba.core.ssa - DEBUG - on stmt: $76call_function.35.1 = call $48load_global.21.1($58unary_negative.26.1, $74binary_subtract.34.1, func=$48load_global.21.1, args=[Var($58unary_negative.26.1, <string>:6), Var($74binary_subtract.34.1, <string>:6)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $78get_iter.36.1 = getiter(value=$76call_function.35.1)
numba.core.ssa - DEBUG - on stmt: $phi80.0.1 = $78get_iter.36.1
numba.core.ssa - DEBUG - on stmt: jump 80
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 80
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087531391e0>
numba.core.ssa - DEBUG - on stmt: $80for_iter.1.1 = iternext(value=$phi80.0.1)
numba.core.ssa - DEBUG - on stmt: $80for_iter.2.1 = pair_first(value=$80for_iter.1.1)
numba.core.ssa - DEBUG - on stmt: $80for_iter.3.1 = pair_second(value=$80for_iter.1.1)
numba.core.ssa - DEBUG - on stmt: $phi82.1.1 = $80for_iter.2.1
numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3.1, 82, 92
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 82
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087531391e0>
numba.core.ssa - DEBUG - on stmt: index00 = $phi82.1.1
numba.core.ssa - DEBUG - on stmt: jump 90
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 92
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087531391e0>
numba.core.ssa - DEBUG - on stmt: $92return_value.1.1 = cast(value=out0)
numba.core.ssa - DEBUG - on stmt: return $92return_value.1.1
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 90
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087531391e0>
numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: stencil_index = $const4.1 + index00
numba.core.ssa - DEBUG - on stmt: $6binary_subscr.2 = getitem(value=x, index=stencil_index, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $const10.4 = const(int, -1)
numba.core.ssa - DEBUG - on stmt: stencil_index.1 = $const10.4 + index00
numba.core.ssa - DEBUG - on stmt: $12binary_subscr.5 = getitem(value=x, index=stencil_index.1, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $14compare_op.6 = $6binary_subscr.2 < $12binary_subscr.5
numba.core.ssa - DEBUG - on stmt: $const18.8 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: stencil_index.2 = $const18.8 + index00
numba.core.ssa - DEBUG - on stmt: $20binary_subscr.9 = getitem(value=x, index=stencil_index.2, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $const24.11 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: stencil_index.3 = $const24.11 + index00
numba.core.ssa - DEBUG - on stmt: $26binary_subscr.12 = getitem(value=x, index=stencil_index.3, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $28compare_op.13 = $20binary_subscr.9 <= $26binary_subscr.12
numba.core.ssa - DEBUG - on stmt: $30binary_and.14 = $14compare_op.6 & $28compare_op.13
numba.core.ssa - DEBUG - on stmt: $32return_value.15 = cast(value=$30binary_and.14)
numba.core.ssa - DEBUG - on stmt: out0[index00] = $32return_value.15
numba.core.ssa - DEBUG - on stmt: jump 91
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 91
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087531391e0>
numba.core.ssa - DEBUG - on stmt: jump 80
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10load_attr.3.1': [(<numba.core.ir.Assign object at 0x70875332ed70>,
                                   0)],
             '$12binary_subscr.5': [(<numba.core.ir.Assign object at 0x70875332d870>,
                                     90)],
             '$14compare_op.6': [(<numba.core.ir.Assign object at 0x70875332abf0>,
                                  90)],
             '$14load_global.5.1': [(<numba.core.ir.Assign object at 0x70875332e980>,
                                     0)],
             '$16load_attr.6.1': [(<numba.core.ir.Assign object at 0x70875332e800>,
                                   0)],
             '$20binary_subscr.9': [(<numba.core.ir.Assign object at 0x70875332dab0>,
                                     90)],
             '$26binary_subscr.12': [(<numba.core.ir.Assign object at 0x70875332dcf0>,
                                      90)],
             '$28compare_op.13': [(<numba.core.ir.Assign object at 0x7087533660e0>,
                                   90)],
             '$30binary_and.14': [(<numba.core.ir.Assign object at 0x7087533662c0>,
                                   90)],
             '$32build_slice.13.1': [(<numba.core.ir.Assign object at 0x70875332fa30>,
                                      0)],
             '$32build_slice.14.1': [(<numba.core.ir.Assign object at 0x70875332fb50>,
                                      0)],
             '$32return_value.15': [(<numba.core.ir.Assign object at 0x708753366d70>,
                                     90)],
             '$44build_slice.19.1': [(<numba.core.ir.Assign object at 0x708753360370>,
                                      0)],
             '$44build_slice.20.1': [(<numba.core.ir.Assign object at 0x708753360490>,
                                      0)],
             '$48load_global.21.1': [(<numba.core.ir.Assign object at 0x7087533606d0>,
                                      0)],
             '$50load_global.22.1': [(<numba.core.ir.Assign object at 0x708753360850>,
                                      0)],
             '$56call_function.25.1': [(<numba.core.ir.Assign object at 0x708753360d30>,
                                        0)],
             '$58unary_negative.26.1': [(<numba.core.ir.Assign object at 0x708753360e50>,
                                         0)],
             '$64binary_subscr.29.1': [(<numba.core.ir.Assign object at 0x7087533612a0>,
                                        0)],
             '$66load_global.30.1': [(<numba.core.ir.Assign object at 0x7087533613f0>,
                                      0)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x70875332d630>,
                                    90)],
             '$72call_function.33.1': [(<numba.core.ir.Assign object at 0x7087533618d0>,
                                        0)],
             '$74binary_subtract.34.1': [(<numba.core.ir.Assign object at 0x708753361a20>,
                                          0)],
             '$76call_function.35.1': [(<numba.core.ir.Assign object at 0x708753361bd0>,
                                        0)],
             '$78get_iter.36.1': [(<numba.core.ir.Assign object at 0x708753361cf0>,
                                   0)],
             '$80for_iter.1.1': [(<numba.core.ir.Assign object at 0x708753361de0>,
                                  80)],
             '$80for_iter.2.1': [(<numba.core.ir.Assign object at 0x708753361f00>,
                                  80)],
             '$80for_iter.3.1': [(<numba.core.ir.Assign object at 0x708753362020>,
                                  80)],
             '$8load_global.2.1': [(<numba.core.ir.Assign object at 0x70875332eef0>,
                                    0)],
             '$92return_value.1.1': [(<numba.core.ir.Assign object at 0x708753362950>,
                                      92)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x7087533298a0>,
                             90)],
             '$const18.8': [(<numba.core.ir.Assign object at 0x70875332add0>,
                             90)],
             '$const24.11': [(<numba.core.ir.Assign object at 0x708753364be0>,
                              90)],
             '$const24.9.1': [(<numba.core.ir.Assign object at 0x70875332e0b0>,
                               0)],
             '$const28.11.1': [(<numba.core.ir.Assign object at 0x70875332dd80>,
                                0)],
             '$const30.12.1': [(<numba.core.ir.Assign object at 0x70875332f8b0>,
                                0)],
             '$const36.15.1': [(<numba.core.ir.Assign object at 0x70875332fd90>,
                                0)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x70875336fa00>,
                            90)],
             '$const40.17.1': [(<numba.core.ir.Assign object at 0x708753360070>,
                                0)],
             '$const42.18.1': [(<numba.core.ir.Assign object at 0x7087533601f0>,
                                0)],
             '$const52.23.1': [(<numba.core.ir.Assign object at 0x7087533609d0>,
                                0)],
             '$const54.24.1': [(<numba.core.ir.Assign object at 0x708753360b50>,
                                0)],
             '$const62.28.1': [(<numba.core.ir.Assign object at 0x7087533610f0>,
                                0)],
             '$const68.31.1': [(<numba.core.ir.Assign object at 0x708753361570>,
                                0)],
             '$const70.32.1': [(<numba.core.ir.Assign object at 0x7087533616f0>,
                                0)],
             '$phi80.0.1': [(<numba.core.ir.Assign object at 0x70875332f280>,
                             0)],
             '$phi82.1.1': [(<numba.core.ir.Assign object at 0x708753360f70>,
                             80)],
             'full_shape0': [(<numba.core.ir.Assign object at 0x70875332f190>,
                              0)],
             'index00': [(<numba.core.ir.Assign object at 0x7087533622f0>, 82)],
             'out0': [(<numba.core.ir.Assign object at 0x70875332e230>, 0)],
             'stencil_index': [(<numba.core.ir.Assign object at 0x70875332cc40>,
                                90)],
             'stencil_index.1': [(<numba.core.ir.Assign object at 0x70875332d7b0>,
                                  90)],
             'stencil_index.2': [(<numba.core.ir.Assign object at 0x70875332d9f0>,
                                  90)],
             'stencil_index.3': [(<numba.core.ir.Assign object at 0x70875332dc30>,
                                  90)],
             'x': [(<numba.core.ir.Assign object at 0x70875332f430>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7087531391e0>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1209)
           2	LOAD_FAST(arg=0, lineno=1221)
           4	LOAD_CONST(arg=1, lineno=1221)
           6	BINARY_SUBSCR(arg=None, lineno=1221)
           8	LOAD_GLOBAL(arg=0, lineno=1221)
          10	LOAD_METHOD(arg=1, lineno=1221)
          12	LOAD_FAST(arg=0, lineno=1221)
          14	LOAD_CONST(arg=2, lineno=1221)
          16	LOAD_GLOBAL(arg=2, lineno=1221)
          18	LOAD_FAST(arg=2, lineno=1221)
          20	LOAD_FAST(arg=0, lineno=1221)
          22	LOAD_ATTR(arg=3, lineno=1221)
          24	LOAD_CONST(arg=1, lineno=1221)
          26	BINARY_SUBSCR(arg=None, lineno=1221)
          28	CALL_FUNCTION(arg=2, lineno=1221)
          30	BUILD_SLICE(arg=2, lineno=1221)
          32	BINARY_SUBSCR(arg=None, lineno=1221)
          34	CALL_METHOD(arg=1, lineno=1221)
          36	COMPARE_OP(arg=5, lineno=1221)
          38	LOAD_FAST(arg=7, lineno=1221)
          40	LOAD_CONST(arg=1, lineno=1221)
          42	STORE_SUBSCR(arg=None, lineno=1221)
          44	LOAD_FAST(arg=7, lineno=1222)
          46	LOAD_CONST(arg=1, lineno=1222)
          48	DUP_TOP_TWO(arg=None, lineno=1222)
          50	BINARY_SUBSCR(arg=None, lineno=1222)
          52	LOAD_FAST(arg=0, lineno=1222)
          54	LOAD_CONST(arg=1, lineno=1222)
          56	BINARY_SUBSCR(arg=None, lineno=1222)
          58	LOAD_GLOBAL(arg=0, lineno=1222)
          60	LOAD_METHOD(arg=4, lineno=1222)
          62	LOAD_FAST(arg=0, lineno=1222)
          64	LOAD_CONST(arg=2, lineno=1222)
          66	LOAD_GLOBAL(arg=2, lineno=1222)
          68	LOAD_FAST(arg=4, lineno=1222)
          70	LOAD_FAST(arg=0, lineno=1222)
          72	LOAD_ATTR(arg=3, lineno=1222)
          74	LOAD_CONST(arg=1, lineno=1222)
          76	BINARY_SUBSCR(arg=None, lineno=1222)
          78	CALL_FUNCTION(arg=2, lineno=1222)
          80	BUILD_SLICE(arg=2, lineno=1222)
          82	BINARY_SUBSCR(arg=None, lineno=1222)
          84	CALL_METHOD(arg=1, lineno=1222)
          86	LOAD_FAST(arg=5, lineno=1222)
          88	BINARY_ADD(arg=None, lineno=1222)
          90	COMPARE_OP(arg=5, lineno=1222)
          92	INPLACE_AND(arg=None, lineno=1222)
          94	ROT_THREE(arg=None, lineno=1222)
          96	STORE_SUBSCR(arg=None, lineno=1222)
          98	LOAD_FAST(arg=7, lineno=1224)
         100	LOAD_CONST(arg=1, lineno=1224)
         102	BINARY_SUBSCR(arg=None, lineno=1224)
         104	POP_JUMP_IF_FALSE(arg=59, lineno=1224)
         106	LOAD_FAST(arg=6, lineno=1225)
         108	LOAD_CONST(arg=3, lineno=1225)
         110	BINARY_ADD(arg=None, lineno=1225)
         112	STORE_FAST(arg=8, lineno=1225)
         114	JUMP_FORWARD(arg=2, lineno=1225)
>        116	LOAD_CONST(arg=3, lineno=1227)
         118	STORE_FAST(arg=8, lineno=1227)
>        120	LOAD_FAST(arg=8, lineno=1229)
         122	LOAD_FAST(arg=0, lineno=1229)
         124	LOAD_ATTR(arg=3, lineno=1229)
         126	LOAD_CONST(arg=1, lineno=1229)
         128	BINARY_SUBSCR(arg=None, lineno=1229)
         130	COMPARE_OP(arg=0, lineno=1229)
         132	POP_JUMP_IF_FALSE(arg=167, lineno=1229)
>        134	LOAD_GLOBAL(arg=0, lineno=1230)
         136	LOAD_METHOD(arg=1, lineno=1230)
         138	LOAD_FAST(arg=0, lineno=1230)
         140	LOAD_GLOBAL(arg=1, lineno=1230)
         142	LOAD_CONST(arg=1, lineno=1230)
         144	LOAD_FAST(arg=8, lineno=1230)
         146	LOAD_FAST(arg=1, lineno=1230)
         148	BINARY_SUBTRACT(arg=None, lineno=1230)
         150	CALL_FUNCTION(arg=2, lineno=1230)
         152	LOAD_GLOBAL(arg=2, lineno=1230)
         154	LOAD_FAST(arg=8, lineno=1230)
         156	LOAD_FAST(arg=2, lineno=1230)
         158	BINARY_ADD(arg=None, lineno=1230)
         160	LOAD_FAST(arg=0, lineno=1230)
         162	LOAD_ATTR(arg=3, lineno=1230)
         164	LOAD_CONST(arg=1, lineno=1230)
         166	BINARY_SUBSCR(arg=None, lineno=1230)
         168	CALL_FUNCTION(arg=2, lineno=1230)
         170	BUILD_SLICE(arg=2, lineno=1230)
         172	BINARY_SUBSCR(arg=None, lineno=1230)
         174	CALL_METHOD(arg=1, lineno=1230)
         176	STORE_FAST(arg=9, lineno=1230)
         178	LOAD_FAST(arg=0, lineno=1233)
         180	LOAD_FAST(arg=8, lineno=1233)
         182	BINARY_SUBSCR(arg=None, lineno=1233)
         184	LOAD_FAST(arg=9, lineno=1233)
         186	COMPARE_OP(arg=2, lineno=1233)
         188	LOAD_FAST(arg=7, lineno=1233)
         190	LOAD_FAST(arg=8, lineno=1233)
         192	STORE_SUBSCR(arg=None, lineno=1233)
         194	LOAD_FAST(arg=7, lineno=1235)
         196	LOAD_FAST(arg=8, lineno=1235)
         198	BINARY_SUBSCR(arg=None, lineno=1235)
         200	POP_JUMP_IF_TRUE(arg=107, lineno=1235)
         202	LOAD_FAST(arg=8, lineno=1236)
         204	LOAD_CONST(arg=3, lineno=1236)
         206	INPLACE_ADD(arg=None, lineno=1236)
         208	STORE_FAST(arg=8, lineno=1236)
         210	JUMP_ABSOLUTE(arg=61, lineno=1237)
>        212	LOAD_GLOBAL(arg=0, lineno=1239)
         214	LOAD_METHOD(arg=4, lineno=1239)
         216	LOAD_FAST(arg=0, lineno=1239)
         218	LOAD_GLOBAL(arg=1, lineno=1239)
         220	LOAD_CONST(arg=1, lineno=1239)
         222	LOAD_FAST(arg=8, lineno=1239)
         224	LOAD_FAST(arg=3, lineno=1239)
         226	BINARY_SUBTRACT(arg=None, lineno=1239)
         228	CALL_FUNCTION(arg=2, lineno=1239)
         230	LOAD_GLOBAL(arg=2, lineno=1239)
         232	LOAD_FAST(arg=8, lineno=1239)
         234	LOAD_FAST(arg=4, lineno=1239)
         236	BINARY_ADD(arg=None, lineno=1239)
         238	LOAD_FAST(arg=0, lineno=1239)
         240	LOAD_ATTR(arg=3, lineno=1239)
         242	LOAD_CONST(arg=1, lineno=1239)
         244	BINARY_SUBSCR(arg=None, lineno=1239)
         246	CALL_FUNCTION(arg=2, lineno=1239)
         248	BUILD_SLICE(arg=2, lineno=1239)
         250	BINARY_SUBSCR(arg=None, lineno=1239)
         252	CALL_METHOD(arg=1, lineno=1239)
         254	STORE_FAST(arg=10, lineno=1239)
         256	LOAD_FAST(arg=7, lineno=1240)
         258	LOAD_FAST(arg=8, lineno=1240)
         260	DUP_TOP_TWO(arg=None, lineno=1240)
         262	BINARY_SUBSCR(arg=None, lineno=1240)
         264	LOAD_FAST(arg=0, lineno=1240)
         266	LOAD_FAST(arg=8, lineno=1240)
         268	BINARY_SUBSCR(arg=None, lineno=1240)
         270	LOAD_FAST(arg=10, lineno=1240)
         272	LOAD_FAST(arg=5, lineno=1240)
         274	BINARY_ADD(arg=None, lineno=1240)
         276	COMPARE_OP(arg=5, lineno=1240)
         278	INPLACE_AND(arg=None, lineno=1240)
         280	ROT_THREE(arg=None, lineno=1240)
         282	STORE_SUBSCR(arg=None, lineno=1240)
         284	LOAD_FAST(arg=7, lineno=1242)
         286	LOAD_FAST(arg=8, lineno=1242)
         288	BINARY_SUBSCR(arg=None, lineno=1242)
         290	POP_JUMP_IF_TRUE(arg=152, lineno=1242)
         292	LOAD_FAST(arg=8, lineno=1243)
         294	LOAD_CONST(arg=3, lineno=1243)
         296	INPLACE_ADD(arg=None, lineno=1243)
         298	STORE_FAST(arg=8, lineno=1243)
         300	JUMP_ABSOLUTE(arg=61, lineno=1244)
>        302	LOAD_FAST(arg=8, lineno=1247)
         304	LOAD_FAST(arg=6, lineno=1247)
         306	LOAD_CONST(arg=3, lineno=1247)
         308	BINARY_ADD(arg=None, lineno=1247)
         310	INPLACE_ADD(arg=None, lineno=1247)
         312	STORE_FAST(arg=8, lineno=1247)
         314	LOAD_FAST(arg=8, lineno=1229)
         316	LOAD_FAST(arg=0, lineno=1229)
         318	LOAD_ATTR(arg=3, lineno=1229)
         320	LOAD_CONST(arg=1, lineno=1229)
         322	BINARY_SUBSCR(arg=None, lineno=1229)
         324	COMPARE_OP(arg=0, lineno=1229)
         326	POP_JUMP_IF_TRUE(arg=68, lineno=1229)
         328	LOAD_CONST(arg=2, lineno=1229)
         330	RETURN_VALUE(arg=None, lineno=1229)
>        332	LOAD_CONST(arg=2, lineno=1229)
         334	RETURN_VALUE(arg=None, lineno=1229)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1209)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1221)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$x2.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_GLOBAL(arg=0, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_METHOD(arg=1, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$8load_global.3']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5']
numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_GLOBAL(arg=2, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6']
numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=2, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7']
numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=0, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7', '$post_max18.8']
numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_ATTR(arg=3, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7', '$post_max18.8', '$x20.9']
numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=1, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7', '$post_max18.8', '$22load_attr.10']
numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7', '$post_max18.8', '$22load_attr.10', '$const24.11']
numba.core.byteflow - DEBUG - dispatch pc=28, inst=CALL_FUNCTION(arg=2, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7', '$post_max18.8', '$26binary_subscr.12']
numba.core.byteflow - DEBUG - dispatch pc=30, inst=BUILD_SLICE(arg=2, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$28call_function.13']
numba.core.byteflow - DEBUG - dispatch pc=32, inst=BINARY_SUBSCR(arg=None, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$30build_slice.15']
numba.core.byteflow - DEBUG - dispatch pc=34, inst=CALL_METHOD(arg=1, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$32binary_subscr.16']
numba.core.byteflow - DEBUG - dispatch pc=36, inst=COMPARE_OP(arg=5, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$34call_method.17']
numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=7, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$36compare_op.18']
numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$36compare_op.18', '$peaks38.19']
numba.core.byteflow - DEBUG - dispatch pc=42, inst=STORE_SUBSCR(arg=None, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$36compare_op.18', '$peaks38.19', '$const40.20']
numba.core.byteflow - DEBUG - dispatch pc=44, inst=LOAD_FAST(arg=7, lineno=1222)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=46, inst=LOAD_CONST(arg=1, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21']
numba.core.byteflow - DEBUG - dispatch pc=48, inst=DUP_TOP_TWO(arg=None, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22']
numba.core.byteflow - DEBUG - dispatch pc=50, inst=BINARY_SUBSCR(arg=None, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$48dup_top_two.23', '$48dup_top_two.24']
numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25']
numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$x52.26']
numba.core.byteflow - DEBUG - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$x52.26', '$const54.27']
numba.core.byteflow - DEBUG - dispatch pc=58, inst=LOAD_GLOBAL(arg=0, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28']
numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_METHOD(arg=4, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$58load_global.29']
numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=0, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30']
numba.core.byteflow - DEBUG - dispatch pc=64, inst=LOAD_CONST(arg=2, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31']
numba.core.byteflow - DEBUG - dispatch pc=66, inst=LOAD_GLOBAL(arg=2, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32']
numba.core.byteflow - DEBUG - dispatch pc=68, inst=LOAD_FAST(arg=4, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33']
numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_FAST(arg=0, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33', '$post_avg68.34']
numba.core.byteflow - DEBUG - dispatch pc=72, inst=LOAD_ATTR(arg=3, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33', '$post_avg68.34', '$x70.35']
numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_CONST(arg=1, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33', '$post_avg68.34', '$72load_attr.36']
numba.core.byteflow - DEBUG - dispatch pc=76, inst=BINARY_SUBSCR(arg=None, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33', '$post_avg68.34', '$72load_attr.36', '$const74.37']
numba.core.byteflow - DEBUG - dispatch pc=78, inst=CALL_FUNCTION(arg=2, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33', '$post_avg68.34', '$76binary_subscr.38']
numba.core.byteflow - DEBUG - dispatch pc=80, inst=BUILD_SLICE(arg=2, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$78call_function.39']
numba.core.byteflow - DEBUG - dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$80build_slice.41']
numba.core.byteflow - DEBUG - dispatch pc=84, inst=CALL_METHOD(arg=1, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$82binary_subscr.42']
numba.core.byteflow - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=5, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$84call_method.43']
numba.core.byteflow - DEBUG - dispatch pc=88, inst=BINARY_ADD(arg=None, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$84call_method.43', '$delta86.44']
numba.core.byteflow - DEBUG - dispatch pc=90, inst=COMPARE_OP(arg=5, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$88binary_add.45']
numba.core.byteflow - DEBUG - dispatch pc=92, inst=INPLACE_AND(arg=None, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$90compare_op.46']
numba.core.byteflow - DEBUG - dispatch pc=94, inst=ROT_THREE(arg=None, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$92inplace_and.47']
numba.core.byteflow - DEBUG - dispatch pc=96, inst=STORE_SUBSCR(arg=None, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$92inplace_and.47', '$peaks44.21', '$const46.22']
numba.core.byteflow - DEBUG - dispatch pc=98, inst=LOAD_FAST(arg=7, lineno=1224)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=1, lineno=1224)
numba.core.byteflow - DEBUG - stack ['$peaks98.48']
numba.core.byteflow - DEBUG - dispatch pc=102, inst=BINARY_SUBSCR(arg=None, lineno=1224)
numba.core.byteflow - DEBUG - stack ['$peaks98.48', '$const100.49']
numba.core.byteflow - DEBUG - dispatch pc=104, inst=POP_JUMP_IF_FALSE(arg=59, lineno=1224)
numba.core.byteflow - DEBUG - stack ['$102binary_subscr.50']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0), Edge(pc=116, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=116 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=106 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=106, inst=LOAD_FAST(arg=6, lineno=1225)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=3, lineno=1225)
numba.core.byteflow - DEBUG - stack ['$wait106.0']
numba.core.byteflow - DEBUG - dispatch pc=110, inst=BINARY_ADD(arg=None, lineno=1225)
numba.core.byteflow - DEBUG - stack ['$wait106.0', '$const108.1']
numba.core.byteflow - DEBUG - dispatch pc=112, inst=STORE_FAST(arg=8, lineno=1225)
numba.core.byteflow - DEBUG - stack ['$110binary_add.2']
numba.core.byteflow - DEBUG - dispatch pc=114, inst=JUMP_FORWARD(arg=2, lineno=1225)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=120, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=116 nstack_initial=0), State(pc_initial=120 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=116 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=116, inst=LOAD_CONST(arg=3, lineno=1227)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=118, inst=STORE_FAST(arg=8, lineno=1227)
numba.core.byteflow - DEBUG - stack ['$const116.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=120, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=120 nstack_initial=0), State(pc_initial=120 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=120 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=120, inst=LOAD_FAST(arg=8, lineno=1229)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=122, inst=LOAD_FAST(arg=0, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$n120.0']
numba.core.byteflow - DEBUG - dispatch pc=124, inst=LOAD_ATTR(arg=3, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$n120.0', '$x122.1']
numba.core.byteflow - DEBUG - dispatch pc=126, inst=LOAD_CONST(arg=1, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$n120.0', '$124load_attr.2']
numba.core.byteflow - DEBUG - dispatch pc=128, inst=BINARY_SUBSCR(arg=None, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$n120.0', '$124load_attr.2', '$const126.3']
numba.core.byteflow - DEBUG - dispatch pc=130, inst=COMPARE_OP(arg=0, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$n120.0', '$128binary_subscr.4']
numba.core.byteflow - DEBUG - dispatch pc=132, inst=POP_JUMP_IF_FALSE(arg=167, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$130compare_op.5']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=134, stack=(), blockstack=(), npush=0), Edge(pc=332, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=120 nstack_initial=0), State(pc_initial=134 nstack_initial=0), State(pc_initial=332 nstack_initial=0)])
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=134 nstack_initial=0), State(pc_initial=332 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=134 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=134, inst=LOAD_GLOBAL(arg=0, lineno=1230)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=136, inst=LOAD_METHOD(arg=1, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$134load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=138, inst=LOAD_FAST(arg=0, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1']
numba.core.byteflow - DEBUG - dispatch pc=140, inst=LOAD_GLOBAL(arg=1, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2']
numba.core.byteflow - DEBUG - dispatch pc=142, inst=LOAD_CONST(arg=1, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$140load_global.3']
numba.core.byteflow - DEBUG - dispatch pc=144, inst=LOAD_FAST(arg=8, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$140load_global.3', '$const142.4']
numba.core.byteflow - DEBUG - dispatch pc=146, inst=LOAD_FAST(arg=1, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$140load_global.3', '$const142.4', '$n144.5']
numba.core.byteflow - DEBUG - dispatch pc=148, inst=BINARY_SUBTRACT(arg=None, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$140load_global.3', '$const142.4', '$n144.5', '$pre_max146.6']
numba.core.byteflow - DEBUG - dispatch pc=150, inst=CALL_FUNCTION(arg=2, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$140load_global.3', '$const142.4', '$148binary_subtract.7']
numba.core.byteflow - DEBUG - dispatch pc=152, inst=LOAD_GLOBAL(arg=2, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$150call_function.8']
numba.core.byteflow - DEBUG - dispatch pc=154, inst=LOAD_FAST(arg=8, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9']
numba.core.byteflow - DEBUG - dispatch pc=156, inst=LOAD_FAST(arg=2, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$n154.10']
numba.core.byteflow - DEBUG - dispatch pc=158, inst=BINARY_ADD(arg=None, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$n154.10', '$post_max156.11']
numba.core.byteflow - DEBUG - dispatch pc=160, inst=LOAD_FAST(arg=0, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$158binary_add.12']
numba.core.byteflow - DEBUG - dispatch pc=162, inst=LOAD_ATTR(arg=3, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$158binary_add.12', '$x160.13']
numba.core.byteflow - DEBUG - dispatch pc=164, inst=LOAD_CONST(arg=1, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$158binary_add.12', '$162load_attr.14']
numba.core.byteflow - DEBUG - dispatch pc=166, inst=BINARY_SUBSCR(arg=None, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$158binary_add.12', '$162load_attr.14', '$const164.15']
numba.core.byteflow - DEBUG - dispatch pc=168, inst=CALL_FUNCTION(arg=2, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$158binary_add.12', '$166binary_subscr.16']
numba.core.byteflow - DEBUG - dispatch pc=170, inst=BUILD_SLICE(arg=2, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$168call_function.17']
numba.core.byteflow - DEBUG - dispatch pc=172, inst=BINARY_SUBSCR(arg=None, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$170build_slice.19']
numba.core.byteflow - DEBUG - dispatch pc=174, inst=CALL_METHOD(arg=1, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$172binary_subscr.20']
numba.core.byteflow - DEBUG - dispatch pc=176, inst=STORE_FAST(arg=9, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$174call_method.21']
numba.core.byteflow - DEBUG - dispatch pc=178, inst=LOAD_FAST(arg=0, lineno=1233)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=180, inst=LOAD_FAST(arg=8, lineno=1233)
numba.core.byteflow - DEBUG - stack ['$x178.22']
numba.core.byteflow - DEBUG - dispatch pc=182, inst=BINARY_SUBSCR(arg=None, lineno=1233)
numba.core.byteflow - DEBUG - stack ['$x178.22', '$n180.23']
numba.core.byteflow - DEBUG - dispatch pc=184, inst=LOAD_FAST(arg=9, lineno=1233)
numba.core.byteflow - DEBUG - stack ['$182binary_subscr.24']
numba.core.byteflow - DEBUG - dispatch pc=186, inst=COMPARE_OP(arg=2, lineno=1233)
numba.core.byteflow - DEBUG - stack ['$182binary_subscr.24', '$maxn184.25']
numba.core.byteflow - DEBUG - dispatch pc=188, inst=LOAD_FAST(arg=7, lineno=1233)
numba.core.byteflow - DEBUG - stack ['$186compare_op.26']
numba.core.byteflow - DEBUG - dispatch pc=190, inst=LOAD_FAST(arg=8, lineno=1233)
numba.core.byteflow - DEBUG - stack ['$186compare_op.26', '$peaks188.27']
numba.core.byteflow - DEBUG - dispatch pc=192, inst=STORE_SUBSCR(arg=None, lineno=1233)
numba.core.byteflow - DEBUG - stack ['$186compare_op.26', '$peaks188.27', '$n190.28']
numba.core.byteflow - DEBUG - dispatch pc=194, inst=LOAD_FAST(arg=7, lineno=1235)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=196, inst=LOAD_FAST(arg=8, lineno=1235)
numba.core.byteflow - DEBUG - stack ['$peaks194.29']
numba.core.byteflow - DEBUG - dispatch pc=198, inst=BINARY_SUBSCR(arg=None, lineno=1235)
numba.core.byteflow - DEBUG - stack ['$peaks194.29', '$n196.30']
numba.core.byteflow - DEBUG - dispatch pc=200, inst=POP_JUMP_IF_TRUE(arg=107, lineno=1235)
numba.core.byteflow - DEBUG - stack ['$198binary_subscr.31']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=202, stack=(), blockstack=(), npush=0), Edge(pc=212, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=332 nstack_initial=0), State(pc_initial=202 nstack_initial=0), State(pc_initial=212 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=332 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=332, inst=LOAD_CONST(arg=2, lineno=1229)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=334, inst=RETURN_VALUE(arg=None, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$const332.0']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=202 nstack_initial=0), State(pc_initial=212 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=202 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=202, inst=LOAD_FAST(arg=8, lineno=1236)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=204, inst=LOAD_CONST(arg=3, lineno=1236)
numba.core.byteflow - DEBUG - stack ['$n202.0']
numba.core.byteflow - DEBUG - dispatch pc=206, inst=INPLACE_ADD(arg=None, lineno=1236)
numba.core.byteflow - DEBUG - stack ['$n202.0', '$const204.1']
numba.core.byteflow - DEBUG - dispatch pc=208, inst=STORE_FAST(arg=8, lineno=1236)
numba.core.byteflow - DEBUG - stack ['$206inplace_add.2']
numba.core.byteflow - DEBUG - dispatch pc=210, inst=JUMP_ABSOLUTE(arg=61, lineno=1237)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=120, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=212 nstack_initial=0), State(pc_initial=120 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=212 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=212, inst=LOAD_GLOBAL(arg=0, lineno=1239)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=214, inst=LOAD_METHOD(arg=4, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$212load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=216, inst=LOAD_FAST(arg=0, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1']
numba.core.byteflow - DEBUG - dispatch pc=218, inst=LOAD_GLOBAL(arg=1, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2']
numba.core.byteflow - DEBUG - dispatch pc=220, inst=LOAD_CONST(arg=1, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$218load_global.3']
numba.core.byteflow - DEBUG - dispatch pc=222, inst=LOAD_FAST(arg=8, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$218load_global.3', '$const220.4']
numba.core.byteflow - DEBUG - dispatch pc=224, inst=LOAD_FAST(arg=3, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$218load_global.3', '$const220.4', '$n222.5']
numba.core.byteflow - DEBUG - dispatch pc=226, inst=BINARY_SUBTRACT(arg=None, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$218load_global.3', '$const220.4', '$n222.5', '$pre_avg224.6']
numba.core.byteflow - DEBUG - dispatch pc=228, inst=CALL_FUNCTION(arg=2, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$218load_global.3', '$const220.4', '$226binary_subtract.7']
numba.core.byteflow - DEBUG - dispatch pc=230, inst=LOAD_GLOBAL(arg=2, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$228call_function.8']
numba.core.byteflow - DEBUG - dispatch pc=232, inst=LOAD_FAST(arg=8, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9']
numba.core.byteflow - DEBUG - dispatch pc=234, inst=LOAD_FAST(arg=4, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$n232.10']
numba.core.byteflow - DEBUG - dispatch pc=236, inst=BINARY_ADD(arg=None, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$n232.10', '$post_avg234.11']
numba.core.byteflow - DEBUG - dispatch pc=238, inst=LOAD_FAST(arg=0, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$236binary_add.12']
numba.core.byteflow - DEBUG - dispatch pc=240, inst=LOAD_ATTR(arg=3, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$236binary_add.12', '$x238.13']
numba.core.byteflow - DEBUG - dispatch pc=242, inst=LOAD_CONST(arg=1, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$236binary_add.12', '$240load_attr.14']
numba.core.byteflow - DEBUG - dispatch pc=244, inst=BINARY_SUBSCR(arg=None, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$236binary_add.12', '$240load_attr.14', '$const242.15']
numba.core.byteflow - DEBUG - dispatch pc=246, inst=CALL_FUNCTION(arg=2, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$236binary_add.12', '$244binary_subscr.16']
numba.core.byteflow - DEBUG - dispatch pc=248, inst=BUILD_SLICE(arg=2, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$246call_function.17']
numba.core.byteflow - DEBUG - dispatch pc=250, inst=BINARY_SUBSCR(arg=None, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$248build_slice.19']
numba.core.byteflow - DEBUG - dispatch pc=252, inst=CALL_METHOD(arg=1, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$250binary_subscr.20']
numba.core.byteflow - DEBUG - dispatch pc=254, inst=STORE_FAST(arg=10, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$252call_method.21']
numba.core.byteflow - DEBUG - dispatch pc=256, inst=LOAD_FAST(arg=7, lineno=1240)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=258, inst=LOAD_FAST(arg=8, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22']
numba.core.byteflow - DEBUG - dispatch pc=260, inst=DUP_TOP_TWO(arg=None, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23']
numba.core.byteflow - DEBUG - dispatch pc=262, inst=BINARY_SUBSCR(arg=None, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23', '$260dup_top_two.24', '$260dup_top_two.25']
numba.core.byteflow - DEBUG - dispatch pc=264, inst=LOAD_FAST(arg=0, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26']
numba.core.byteflow - DEBUG - dispatch pc=266, inst=LOAD_FAST(arg=8, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$x264.27']
numba.core.byteflow - DEBUG - dispatch pc=268, inst=BINARY_SUBSCR(arg=None, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$x264.27', '$n266.28']
numba.core.byteflow - DEBUG - dispatch pc=270, inst=LOAD_FAST(arg=10, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$268binary_subscr.29']
numba.core.byteflow - DEBUG - dispatch pc=272, inst=LOAD_FAST(arg=5, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$268binary_subscr.29', '$avgn270.30']
numba.core.byteflow - DEBUG - dispatch pc=274, inst=BINARY_ADD(arg=None, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$268binary_subscr.29', '$avgn270.30', '$delta272.31']
numba.core.byteflow - DEBUG - dispatch pc=276, inst=COMPARE_OP(arg=5, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$268binary_subscr.29', '$274binary_add.32']
numba.core.byteflow - DEBUG - dispatch pc=278, inst=INPLACE_AND(arg=None, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$276compare_op.33']
numba.core.byteflow - DEBUG - dispatch pc=280, inst=ROT_THREE(arg=None, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23', '$278inplace_and.34']
numba.core.byteflow - DEBUG - dispatch pc=282, inst=STORE_SUBSCR(arg=None, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$278inplace_and.34', '$peaks256.22', '$n258.23']
numba.core.byteflow - DEBUG - dispatch pc=284, inst=LOAD_FAST(arg=7, lineno=1242)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=286, inst=LOAD_FAST(arg=8, lineno=1242)
numba.core.byteflow - DEBUG - stack ['$peaks284.35']
numba.core.byteflow - DEBUG - dispatch pc=288, inst=BINARY_SUBSCR(arg=None, lineno=1242)
numba.core.byteflow - DEBUG - stack ['$peaks284.35', '$n286.36']
numba.core.byteflow - DEBUG - dispatch pc=290, inst=POP_JUMP_IF_TRUE(arg=152, lineno=1242)
numba.core.byteflow - DEBUG - stack ['$288binary_subscr.37']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=292, stack=(), blockstack=(), npush=0), Edge(pc=302, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=120 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=292 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=292, inst=LOAD_FAST(arg=8, lineno=1243)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=294, inst=LOAD_CONST(arg=3, lineno=1243)
numba.core.byteflow - DEBUG - stack ['$n292.0']
numba.core.byteflow - DEBUG - dispatch pc=296, inst=INPLACE_ADD(arg=None, lineno=1243)
numba.core.byteflow - DEBUG - stack ['$n292.0', '$const294.1']
numba.core.byteflow - DEBUG - dispatch pc=298, inst=STORE_FAST(arg=8, lineno=1243)
numba.core.byteflow - DEBUG - stack ['$296inplace_add.2']
numba.core.byteflow - DEBUG - dispatch pc=300, inst=JUMP_ABSOLUTE(arg=61, lineno=1244)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=120, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=302 nstack_initial=0), State(pc_initial=120 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=302 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=302, inst=LOAD_FAST(arg=8, lineno=1247)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=304, inst=LOAD_FAST(arg=6, lineno=1247)
numba.core.byteflow - DEBUG - stack ['$n302.0']
numba.core.byteflow - DEBUG - dispatch pc=306, inst=LOAD_CONST(arg=3, lineno=1247)
numba.core.byteflow - DEBUG - stack ['$n302.0', '$wait304.1']
numba.core.byteflow - DEBUG - dispatch pc=308, inst=BINARY_ADD(arg=None, lineno=1247)
numba.core.byteflow - DEBUG - stack ['$n302.0', '$wait304.1', '$const306.2']
numba.core.byteflow - DEBUG - dispatch pc=310, inst=INPLACE_ADD(arg=None, lineno=1247)
numba.core.byteflow - DEBUG - stack ['$n302.0', '$308binary_add.3']
numba.core.byteflow - DEBUG - dispatch pc=312, inst=STORE_FAST(arg=8, lineno=1247)
numba.core.byteflow - DEBUG - stack ['$310inplace_add.4']
numba.core.byteflow - DEBUG - dispatch pc=314, inst=LOAD_FAST(arg=8, lineno=1229)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=316, inst=LOAD_FAST(arg=0, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$n314.5']
numba.core.byteflow - DEBUG - dispatch pc=318, inst=LOAD_ATTR(arg=3, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$n314.5', '$x316.6']
numba.core.byteflow - DEBUG - dispatch pc=320, inst=LOAD_CONST(arg=1, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$n314.5', '$318load_attr.7']
numba.core.byteflow - DEBUG - dispatch pc=322, inst=BINARY_SUBSCR(arg=None, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$n314.5', '$318load_attr.7', '$const320.8']
numba.core.byteflow - DEBUG - dispatch pc=324, inst=COMPARE_OP(arg=0, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$n314.5', '$322binary_subscr.9']
numba.core.byteflow - DEBUG - dispatch pc=326, inst=POP_JUMP_IF_TRUE(arg=68, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$324compare_op.10']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0), Edge(pc=134, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=120 nstack_initial=0), State(pc_initial=328 nstack_initial=0), State(pc_initial=134 nstack_initial=0)])
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=134 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=328 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=328, inst=LOAD_CONST(arg=2, lineno=1229)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=330, inst=RETURN_VALUE(arg=None, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$const328.0']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=134 nstack_initial=0)])
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=116 nstack_initial=0): set(),
             State(pc_initial=120 nstack_initial=0): set(),
             State(pc_initial=134 nstack_initial=0): set(),
             State(pc_initial=202 nstack_initial=0): set(),
             State(pc_initial=212 nstack_initial=0): set(),
             State(pc_initial=292 nstack_initial=0): set(),
             State(pc_initial=302 nstack_initial=0): set(),
             State(pc_initial=328 nstack_initial=0): set(),
             State(pc_initial=332 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - keep phismap: {}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$8load_global.3'}), (10, {'item': '$8load_global.3', 'res': '$10load_method.4'}), (12, {'res': '$x12.5'}), (14, {'res': '$const14.6'}), (16, {'res': '$16load_global.7'}), (18, {'res': '$post_max18.8'}), (20, {'res': '$x20.9'}), (22, {'item': '$x20.9', 'res': '$22load_attr.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$22load_attr.10', 'res': '$26binary_subscr.12'}), (28, {'func': '$16load_global.7', 'args': ['$post_max18.8', '$26binary_subscr.12'], 'res': '$28call_function.13'}), (30, {'start': '$const14.6', 'stop': '$28call_function.13', 'step': None, 'res': '$30build_slice.15', 'slicevar': '$30build_slice.14'}), (32, {'index': '$30build_slice.15', 'target': '$x12.5', 'res': '$32binary_subscr.16'}), (34, {'func': '$10load_method.4', 'args': ['$32binary_subscr.16'], 'res': '$34call_method.17'}), (36, {'lhs': '$6binary_subscr.2', 'rhs': '$34call_method.17', 'res': '$36compare_op.18'}), (38, {'res': '$peaks38.19'}), (40, {'res': '$const40.20'}), (42, {'target': '$peaks38.19', 'index': '$const40.20', 'value': '$36compare_op.18'}), (44, {'res': '$peaks44.21'}), (46, {'res': '$const46.22'}), (48, {'orig': ['$peaks44.21', '$const46.22'], 'duped': ['$48dup_top_two.23', '$48dup_top_two.24']}), (50, {'index': '$48dup_top_two.24', 'target': '$48dup_top_two.23', 'res': '$50binary_subscr.25'}), (52, {'res': '$x52.26'}), (54, {'res': '$const54.27'}), (56, {'index': '$const54.27', 'target': '$x52.26', 'res': '$56binary_subscr.28'}), (58, {'res': '$58load_global.29'}), (60, {'item': '$58load_global.29', 'res': '$60load_method.30'}), (62, {'res': '$x62.31'}), (64, {'res': '$const64.32'}), (66, {'res': '$66load_global.33'}), (68, {'res': '$post_avg68.34'}), (70, {'res': '$x70.35'}), (72, {'item': '$x70.35', 'res': '$72load_attr.36'}), (74, {'res': '$const74.37'}), (76, {'index': '$const74.37', 'target': '$72load_attr.36', 'res': '$76binary_subscr.38'}), (78, {'func': '$66load_global.33', 'args': ['$post_avg68.34', '$76binary_subscr.38'], 'res': '$78call_function.39'}), (80, {'start': '$const64.32', 'stop': '$78call_function.39', 'step': None, 'res': '$80build_slice.41', 'slicevar': '$80build_slice.40'}), (82, {'index': '$80build_slice.41', 'target': '$x62.31', 'res': '$82binary_subscr.42'}), (84, {'func': '$60load_method.30', 'args': ['$82binary_subscr.42'], 'res': '$84call_method.43'}), (86, {'res': '$delta86.44'}), (88, {'lhs': '$84call_method.43', 'rhs': '$delta86.44', 'res': '$88binary_add.45'}), (90, {'lhs': '$56binary_subscr.28', 'rhs': '$88binary_add.45', 'res': '$90compare_op.46'}), (92, {'lhs': '$50binary_subscr.25', 'rhs': '$90compare_op.46', 'res': '$92inplace_and.47'}), (96, {'target': '$peaks44.21', 'index': '$const46.22', 'value': '$92inplace_and.47'}), (98, {'res': '$peaks98.48'}), (100, {'res': '$const100.49'}), (102, {'index': '$const100.49', 'target': '$peaks98.48', 'res': '$102binary_subscr.50'}), (104, {'pred': '$102binary_subscr.50'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: (), 116: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$wait106.0'}), (108, {'res': '$const108.1'}), (110, {'lhs': '$wait106.0', 'rhs': '$const108.1', 'res': '$110binary_add.2'}), (112, {'value': '$110binary_add.2'}), (114, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={120: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=116 nstack_initial=0):
AdaptBlockInfo(insts=((116, {'res': '$const116.0'}), (118, {'value': '$const116.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={120: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=120 nstack_initial=0):
AdaptBlockInfo(insts=((120, {'res': '$n120.0'}), (122, {'res': '$x122.1'}), (124, {'item': '$x122.1', 'res': '$124load_attr.2'}), (126, {'res': '$const126.3'}), (128, {'index': '$const126.3', 'target': '$124load_attr.2', 'res': '$128binary_subscr.4'}), (130, {'lhs': '$n120.0', 'rhs': '$128binary_subscr.4', 'res': '$130compare_op.5'}), (132, {'pred': '$130compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={134: (), 332: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=134 nstack_initial=0):
AdaptBlockInfo(insts=((134, {'res': '$134load_global.0'}), (136, {'item': '$134load_global.0', 'res': '$136load_method.1'}), (138, {'res': '$x138.2'}), (140, {'res': '$140load_global.3'}), (142, {'res': '$const142.4'}), (144, {'res': '$n144.5'}), (146, {'res': '$pre_max146.6'}), (148, {'lhs': '$n144.5', 'rhs': '$pre_max146.6', 'res': '$148binary_subtract.7'}), (150, {'func': '$140load_global.3', 'args': ['$const142.4', '$148binary_subtract.7'], 'res': '$150call_function.8'}), (152, {'res': '$152load_global.9'}), (154, {'res': '$n154.10'}), (156, {'res': '$post_max156.11'}), (158, {'lhs': '$n154.10', 'rhs': '$post_max156.11', 'res': '$158binary_add.12'}), (160, {'res': '$x160.13'}), (162, {'item': '$x160.13', 'res': '$162load_attr.14'}), (164, {'res': '$const164.15'}), (166, {'index': '$const164.15', 'target': '$162load_attr.14', 'res': '$166binary_subscr.16'}), (168, {'func': '$152load_global.9', 'args': ['$158binary_add.12', '$166binary_subscr.16'], 'res': '$168call_function.17'}), (170, {'start': '$150call_function.8', 'stop': '$168call_function.17', 'step': None, 'res': '$170build_slice.19', 'slicevar': '$170build_slice.18'}), (172, {'index': '$170build_slice.19', 'target': '$x138.2', 'res': '$172binary_subscr.20'}), (174, {'func': '$136load_method.1', 'args': ['$172binary_subscr.20'], 'res': '$174call_method.21'}), (176, {'value': '$174call_method.21'}), (178, {'res': '$x178.22'}), (180, {'res': '$n180.23'}), (182, {'index': '$n180.23', 'target': '$x178.22', 'res': '$182binary_subscr.24'}), (184, {'res': '$maxn184.25'}), (186, {'lhs': '$182binary_subscr.24', 'rhs': '$maxn184.25', 'res': '$186compare_op.26'}), (188, {'res': '$peaks188.27'}), (190, {'res': '$n190.28'}), (192, {'target': '$peaks188.27', 'index': '$n190.28', 'value': '$186compare_op.26'}), (194, {'res': '$peaks194.29'}), (196, {'res': '$n196.30'}), (198, {'index': '$n196.30', 'target': '$peaks194.29', 'res': '$198binary_subscr.31'}), (200, {'pred': '$198binary_subscr.31'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={202: (), 212: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=202 nstack_initial=0):
AdaptBlockInfo(insts=((202, {'res': '$n202.0'}), (204, {'res': '$const204.1'}), (206, {'lhs': '$n202.0', 'rhs': '$const204.1', 'res': '$206inplace_add.2'}), (208, {'value': '$206inplace_add.2'}), (210, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={120: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=212 nstack_initial=0):
AdaptBlockInfo(insts=((212, {'res': '$212load_global.0'}), (214, {'item': '$212load_global.0', 'res': '$214load_method.1'}), (216, {'res': '$x216.2'}), (218, {'res': '$218load_global.3'}), (220, {'res': '$const220.4'}), (222, {'res': '$n222.5'}), (224, {'res': '$pre_avg224.6'}), (226, {'lhs': '$n222.5', 'rhs': '$pre_avg224.6', 'res': '$226binary_subtract.7'}), (228, {'func': '$218load_global.3', 'args': ['$const220.4', '$226binary_subtract.7'], 'res': '$228call_function.8'}), (230, {'res': '$230load_global.9'}), (232, {'res': '$n232.10'}), (234, {'res': '$post_avg234.11'}), (236, {'lhs': '$n232.10', 'rhs': '$post_avg234.11', 'res': '$236binary_add.12'}), (238, {'res': '$x238.13'}), (240, {'item': '$x238.13', 'res': '$240load_attr.14'}), (242, {'res': '$const242.15'}), (244, {'index': '$const242.15', 'target': '$240load_attr.14', 'res': '$244binary_subscr.16'}), (246, {'func': '$230load_global.9', 'args': ['$236binary_add.12', '$244binary_subscr.16'], 'res': '$246call_function.17'}), (248, {'start': '$228call_function.8', 'stop': '$246call_function.17', 'step': None, 'res': '$248build_slice.19', 'slicevar': '$248build_slice.18'}), (250, {'index': '$248build_slice.19', 'target': '$x216.2', 'res': '$250binary_subscr.20'}), (252, {'func': '$214load_method.1', 'args': ['$250binary_subscr.20'], 'res': '$252call_method.21'}), (254, {'value': '$252call_method.21'}), (256, {'res': '$peaks256.22'}), (258, {'res': '$n258.23'}), (260, {'orig': ['$peaks256.22', '$n258.23'], 'duped': ['$260dup_top_two.24', '$260dup_top_two.25']}), (262, {'index': '$260dup_top_two.25', 'target': '$260dup_top_two.24', 'res': '$262binary_subscr.26'}), (264, {'res': '$x264.27'}), (266, {'res': '$n266.28'}), (268, {'index': '$n266.28', 'target': '$x264.27', 'res': '$268binary_subscr.29'}), (270, {'res': '$avgn270.30'}), (272, {'res': '$delta272.31'}), (274, {'lhs': '$avgn270.30', 'rhs': '$delta272.31', 'res': '$274binary_add.32'}), (276, {'lhs': '$268binary_subscr.29', 'rhs': '$274binary_add.32', 'res': '$276compare_op.33'}), (278, {'lhs': '$262binary_subscr.26', 'rhs': '$276compare_op.33', 'res': '$278inplace_and.34'}), (282, {'target': '$peaks256.22', 'index': '$n258.23', 'value': '$278inplace_and.34'}), (284, {'res': '$peaks284.35'}), (286, {'res': '$n286.36'}), (288, {'index': '$n286.36', 'target': '$peaks284.35', 'res': '$288binary_subscr.37'}), (290, {'pred': '$288binary_subscr.37'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={292: (), 302: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=292 nstack_initial=0):
AdaptBlockInfo(insts=((292, {'res': '$n292.0'}), (294, {'res': '$const294.1'}), (296, {'lhs': '$n292.0', 'rhs': '$const294.1', 'res': '$296inplace_add.2'}), (298, {'value': '$296inplace_add.2'}), (300, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={120: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=302 nstack_initial=0):
AdaptBlockInfo(insts=((302, {'res': '$n302.0'}), (304, {'res': '$wait304.1'}), (306, {'res': '$const306.2'}), (308, {'lhs': '$wait304.1', 'rhs': '$const306.2', 'res': '$308binary_add.3'}), (310, {'lhs': '$n302.0', 'rhs': '$308binary_add.3', 'res': '$310inplace_add.4'}), (312, {'value': '$310inplace_add.4'}), (314, {'res': '$n314.5'}), (316, {'res': '$x316.6'}), (318, {'item': '$x316.6', 'res': '$318load_attr.7'}), (320, {'res': '$const320.8'}), (322, {'index': '$const320.8', 'target': '$318load_attr.7', 'res': '$322binary_subscr.9'}), (324, {'lhs': '$n314.5', 'rhs': '$322binary_subscr.9', 'res': '$324compare_op.10'}), (326, {'pred': '$324compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: (), 134: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=328 nstack_initial=0):
AdaptBlockInfo(insts=((328, {'res': '$const328.0'}), (330, {'retval': '$const328.0', 'castval': '$330return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=332 nstack_initial=0):
AdaptBlockInfo(insts=((332, {'res': '$const332.0'}), (334, {'retval': '$const332.0', 'castval': '$334return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    pre_max = arg(1, name=pre_max)           ['pre_max']
    post_max = arg(2, name=post_max)         ['post_max']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
    delta = arg(5, name=delta)               ['delta']
    wait = arg(6, name=wait)                 ['wait']
    peaks = arg(7, name=peaks)               ['peaks']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $8load_global.3 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.3']
    $10load_method.4 = getattr(value=$8load_global.3, attr=max) ['$10load_method.4', '$8load_global.3']
    $const14.6 = const(NoneType, None)       ['$const14.6']
    $16load_global.7 = global(min: <built-in function min>) ['$16load_global.7']
    $22load_attr.10 = getattr(value=x, attr=shape) ['$22load_attr.10', 'x']
    $const24.11 = const(int, 0)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=$22load_attr.10, index=$const24.11, fn=<built-in function getitem>) ['$22load_attr.10', '$26binary_subscr.12', '$const24.11']
    $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1209), Var($26binary_subscr.12, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_global.7', '$26binary_subscr.12', '$28call_function.13', 'post_max']
    $30build_slice.14 = global(slice: <class 'slice'>) ['$30build_slice.14']
    $30build_slice.15 = call $30build_slice.14($const14.6, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6, utils.py:1221), Var($28call_function.13, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None) ['$28call_function.13', '$30build_slice.14', '$30build_slice.15', '$const14.6']
    $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>) ['$30build_slice.15', '$32binary_subscr.16', 'x']
    $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_method.4', '$32binary_subscr.16', '$34call_method.17']
    $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17 ['$34call_method.17', '$36compare_op.18', '$6binary_subscr.2']
    $const40.20 = const(int, 0)              ['$const40.20']
    peaks[$const40.20] = $36compare_op.18    ['$36compare_op.18', '$const40.20', 'peaks']
    $const46.22 = const(int, 0)              ['$const46.22']
    $50binary_subscr.25 = getitem(value=peaks, index=$const46.22, fn=<built-in function getitem>) ['$50binary_subscr.25', '$const46.22', 'peaks']
    $const54.27 = const(int, 0)              ['$const54.27']
    $56binary_subscr.28 = getitem(value=x, index=$const54.27, fn=<built-in function getitem>) ['$56binary_subscr.28', '$const54.27', 'x']
    $58load_global.29 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.29']
    $60load_method.30 = getattr(value=$58load_global.29, attr=mean) ['$58load_global.29', '$60load_method.30']
    $const64.32 = const(NoneType, None)      ['$const64.32']
    $66load_global.33 = global(min: <built-in function min>) ['$66load_global.33']
    $72load_attr.36 = getattr(value=x, attr=shape) ['$72load_attr.36', 'x']
    $const74.37 = const(int, 0)              ['$const74.37']
    $76binary_subscr.38 = getitem(value=$72load_attr.36, index=$const74.37, fn=<built-in function getitem>) ['$72load_attr.36', '$76binary_subscr.38', '$const74.37']
    $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1209), Var($76binary_subscr.38, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.33', '$76binary_subscr.38', '$78call_function.39', 'post_avg']
    $80build_slice.40 = global(slice: <class 'slice'>) ['$80build_slice.40']
    $80build_slice.41 = call $80build_slice.40($const64.32, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32, utils.py:1222), Var($78call_function.39, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None) ['$78call_function.39', '$80build_slice.40', '$80build_slice.41', '$const64.32']
    $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>) ['$80build_slice.41', '$82binary_subscr.42', 'x']
    $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.30', '$82binary_subscr.42', '$84call_method.43']
    $88binary_add.45 = $84call_method.43 + delta ['$84call_method.43', '$88binary_add.45', 'delta']
    $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45 ['$56binary_subscr.28', '$88binary_add.45', '$90compare_op.46']
    $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined) ['$50binary_subscr.25', '$90compare_op.46', '$92inplace_and.47']
    peaks[$const46.22] = $92inplace_and.47   ['$92inplace_and.47', '$const46.22', 'peaks']
    $const100.49 = const(int, 0)             ['$const100.49']
    $102binary_subscr.50 = getitem(value=peaks, index=$const100.49, fn=<built-in function getitem>) ['$102binary_subscr.50', '$const100.49', 'peaks']
    bool104 = global(bool: <class 'bool'>)   ['bool104']
    $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None) ['$102binary_subscr.50', '$104pred', 'bool104']
    branch $104pred, 106, 116                ['$104pred']
label 106:
    $const108.1 = const(int, 1)              ['$const108.1']
    n = wait + $const108.1                   ['$const108.1', 'n', 'wait']
    jump 120                                 []
label 116:
    n = const(int, 1)                        ['n']
    jump 120                                 []
label 120:
    $124load_attr.2 = getattr(value=x, attr=shape) ['$124load_attr.2', 'x']
    $const126.3 = const(int, 0)              ['$const126.3']
    $128binary_subscr.4 = getitem(value=$124load_attr.2, index=$const126.3, fn=<built-in function getitem>) ['$124load_attr.2', '$128binary_subscr.4', '$const126.3']
    $130compare_op.5 = n < $128binary_subscr.4 ['$128binary_subscr.4', '$130compare_op.5', 'n']
    bool132 = global(bool: <class 'bool'>)   ['bool132']
    $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None) ['$130compare_op.5', '$132pred', 'bool132']
    branch $132pred, 134, 332                ['$132pred']
label 134:
    $134load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$134load_global.0']
    $136load_method.1 = getattr(value=$134load_global.0, attr=max) ['$134load_global.0', '$136load_method.1']
    $140load_global.3 = global(max: <built-in function max>) ['$140load_global.3']
    $const142.4 = const(int, 0)              ['$const142.4']
    $148binary_subtract.7 = n - pre_max      ['$148binary_subtract.7', 'n', 'pre_max']
    $150call_function.8 = call $140load_global.3($const142.4, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4, utils.py:1230), Var($148binary_subtract.7, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.3', '$148binary_subtract.7', '$150call_function.8', '$const142.4']
    $152load_global.9 = global(min: <built-in function min>) ['$152load_global.9']
    $158binary_add.12 = n + post_max         ['$158binary_add.12', 'n', 'post_max']
    $162load_attr.14 = getattr(value=x, attr=shape) ['$162load_attr.14', 'x']
    $const164.15 = const(int, 0)             ['$const164.15']
    $166binary_subscr.16 = getitem(value=$162load_attr.14, index=$const164.15, fn=<built-in function getitem>) ['$162load_attr.14', '$166binary_subscr.16', '$const164.15']
    $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1230), Var($166binary_subscr.16, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_global.9', '$158binary_add.12', '$166binary_subscr.16', '$168call_function.17']
    $170build_slice.18 = global(slice: <class 'slice'>) ['$170build_slice.18']
    $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1230), Var($168call_function.17, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None) ['$150call_function.8', '$168call_function.17', '$170build_slice.18', '$170build_slice.19']
    $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>) ['$170build_slice.19', '$172binary_subscr.20', 'x']
    maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$136load_method.1', '$172binary_subscr.20', 'maxn']
    $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$182binary_subscr.24', 'n', 'x']
    $186compare_op.26 = $182binary_subscr.24 == maxn ['$182binary_subscr.24', '$186compare_op.26', 'maxn']
    peaks[n] = $186compare_op.26             ['$186compare_op.26', 'n', 'peaks']
    $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$198binary_subscr.31', 'n', 'peaks']
    bool200 = global(bool: <class 'bool'>)   ['bool200']
    $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None) ['$198binary_subscr.31', '$200pred', 'bool200']
    branch $200pred, 212, 202                ['$200pred']
label 202:
    $const204.1 = const(int, 1)              ['$const204.1']
    $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined) ['$206inplace_add.2', '$const204.1', 'n']
    n = $206inplace_add.2                    ['$206inplace_add.2', 'n']
    jump 120                                 []
label 212:
    $212load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$212load_global.0']
    $214load_method.1 = getattr(value=$212load_global.0, attr=mean) ['$212load_global.0', '$214load_method.1']
    $218load_global.3 = global(max: <built-in function max>) ['$218load_global.3']
    $const220.4 = const(int, 0)              ['$const220.4']
    $226binary_subtract.7 = n - pre_avg      ['$226binary_subtract.7', 'n', 'pre_avg']
    $228call_function.8 = call $218load_global.3($const220.4, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4, utils.py:1239), Var($226binary_subtract.7, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$218load_global.3', '$226binary_subtract.7', '$228call_function.8', '$const220.4']
    $230load_global.9 = global(min: <built-in function min>) ['$230load_global.9']
    $236binary_add.12 = n + post_avg         ['$236binary_add.12', 'n', 'post_avg']
    $240load_attr.14 = getattr(value=x, attr=shape) ['$240load_attr.14', 'x']
    $const242.15 = const(int, 0)             ['$const242.15']
    $244binary_subscr.16 = getitem(value=$240load_attr.14, index=$const242.15, fn=<built-in function getitem>) ['$240load_attr.14', '$244binary_subscr.16', '$const242.15']
    $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1239), Var($244binary_subscr.16, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$230load_global.9', '$236binary_add.12', '$244binary_subscr.16', '$246call_function.17']
    $248build_slice.18 = global(slice: <class 'slice'>) ['$248build_slice.18']
    $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1239), Var($246call_function.17, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None) ['$228call_function.8', '$246call_function.17', '$248build_slice.18', '$248build_slice.19']
    $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>) ['$248build_slice.19', '$250binary_subscr.20', 'x']
    avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_method.1', '$250binary_subscr.20', 'avgn']
    $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$262binary_subscr.26', 'n', 'peaks']
    $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$268binary_subscr.29', 'n', 'x']
    $274binary_add.32 = avgn + delta         ['$274binary_add.32', 'avgn', 'delta']
    $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32 ['$268binary_subscr.29', '$274binary_add.32', '$276compare_op.33']
    $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined) ['$262binary_subscr.26', '$276compare_op.33', '$278inplace_and.34']
    peaks[n] = $278inplace_and.34            ['$278inplace_and.34', 'n', 'peaks']
    $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$288binary_subscr.37', 'n', 'peaks']
    bool290 = global(bool: <class 'bool'>)   ['bool290']
    $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None) ['$288binary_subscr.37', '$290pred', 'bool290']
    branch $290pred, 302, 292                ['$290pred']
label 292:
    $const294.1 = const(int, 1)              ['$const294.1']
    $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined) ['$296inplace_add.2', '$const294.1', 'n']
    n = $296inplace_add.2                    ['$296inplace_add.2', 'n']
    jump 120                                 []
label 302:
    $const306.2 = const(int, 1)              ['$const306.2']
    $308binary_add.3 = wait + $const306.2    ['$308binary_add.3', '$const306.2', 'wait']
    $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined) ['$308binary_add.3', '$310inplace_add.4', 'n']
    n = $310inplace_add.4                    ['$310inplace_add.4', 'n']
    $318load_attr.7 = getattr(value=x, attr=shape) ['$318load_attr.7', 'x']
    $const320.8 = const(int, 0)              ['$const320.8']
    $322binary_subscr.9 = getitem(value=$318load_attr.7, index=$const320.8, fn=<built-in function getitem>) ['$318load_attr.7', '$322binary_subscr.9', '$const320.8']
    $324compare_op.10 = n < $322binary_subscr.9 ['$322binary_subscr.9', '$324compare_op.10', 'n']
    bool326 = global(bool: <class 'bool'>)   ['bool326']
    $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None) ['$324compare_op.10', '$326pred', 'bool326']
    branch $326pred, 134, 328                ['$326pred']
label 328:
    $const328.0 = const(NoneType, None)      ['$const328.0']
    $330return_value.1 = cast(value=$const328.0) ['$330return_value.1', '$const328.0']
    return $330return_value.1                ['$330return_value.1']
label 332:
    $const332.0 = const(NoneType, None)      ['$const332.0']
    $334return_value.1 = cast(value=$const332.0) ['$334return_value.1', '$const332.0']
    return $334return_value.1                ['$334return_value.1']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752e1c4f0>
numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
numba.core.ssa - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
numba.core.ssa - DEBUG - on stmt: post_max = arg(2, name=post_max)
numba.core.ssa - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
numba.core.ssa - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
numba.core.ssa - DEBUG - on stmt: delta = arg(5, name=delta)
numba.core.ssa - DEBUG - on stmt: wait = arg(6, name=wait)
numba.core.ssa - DEBUG - on stmt: peaks = arg(7, name=peaks)
numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $8load_global.3 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $10load_method.4 = getattr(value=$8load_global.3, attr=max)
numba.core.ssa - DEBUG - on stmt: $const14.6 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $16load_global.7 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $22load_attr.10 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const24.11 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1209), Var($26binary_subscr.12, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $30build_slice.14 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $30build_slice.15 = call $30build_slice.14($const14.6, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6, utils.py:1221), Var($28call_function.13, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17
numba.core.ssa - DEBUG - on stmt: $const40.20 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: peaks[0] = $36compare_op.18
numba.core.ssa - DEBUG - on stmt: $const46.22 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $const54.27 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $58load_global.29 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $60load_method.30 = getattr(value=$58load_global.29, attr=mean)
numba.core.ssa - DEBUG - on stmt: $const64.32 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $66load_global.33 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $72load_attr.36 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const74.37 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1209), Var($76binary_subscr.38, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $80build_slice.40 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $80build_slice.41 = call $80build_slice.40($const64.32, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32, utils.py:1222), Var($78call_function.39, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $88binary_add.45 = $84call_method.43 + delta
numba.core.ssa - DEBUG - on stmt: $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45
numba.core.ssa - DEBUG - on stmt: $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: peaks[0] = $92inplace_and.47
numba.core.ssa - DEBUG - on stmt: $const100.49 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: bool104 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $104pred, 106, 116
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 106
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752e1c4f0>
numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: n = wait + $const108.1
numba.core.ssa - DEBUG - on stmt: jump 120
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 116
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752e1c4f0>
numba.core.ssa - DEBUG - on stmt: n = const(int, 1)
numba.core.ssa - DEBUG - on stmt: jump 120
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 120
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752e1c4f0>
numba.core.ssa - DEBUG - on stmt: $124load_attr.2 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const126.3 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $130compare_op.5 = n < $128binary_subscr.4
numba.core.ssa - DEBUG - on stmt: bool132 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $132pred, 134, 332
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 134
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752e1c4f0>
numba.core.ssa - DEBUG - on stmt: $134load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $136load_method.1 = getattr(value=$134load_global.0, attr=max)
numba.core.ssa - DEBUG - on stmt: $140load_global.3 = global(max: <built-in function max>)
numba.core.ssa - DEBUG - on stmt: $const142.4 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $148binary_subtract.7 = n - pre_max
numba.core.ssa - DEBUG - on stmt: $150call_function.8 = call $140load_global.3($const142.4, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4, utils.py:1230), Var($148binary_subtract.7, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $152load_global.9 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $158binary_add.12 = n + post_max
numba.core.ssa - DEBUG - on stmt: $162load_attr.14 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const164.15 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1230), Var($166binary_subscr.16, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $170build_slice.18 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1230), Var($168call_function.17, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $186compare_op.26 = $182binary_subscr.24 == maxn
numba.core.ssa - DEBUG - on stmt: peaks[n] = $186compare_op.26
numba.core.ssa - DEBUG - on stmt: $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $200pred, 212, 202
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 202
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752e1c4f0>
numba.core.ssa - DEBUG - on stmt: $const204.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: n = $206inplace_add.2
numba.core.ssa - DEBUG - on stmt: jump 333
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 212
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752e1c4f0>
numba.core.ssa - DEBUG - on stmt: $212load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $214load_method.1 = getattr(value=$212load_global.0, attr=mean)
numba.core.ssa - DEBUG - on stmt: $218load_global.3 = global(max: <built-in function max>)
numba.core.ssa - DEBUG - on stmt: $const220.4 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $226binary_subtract.7 = n - pre_avg
numba.core.ssa - DEBUG - on stmt: $228call_function.8 = call $218load_global.3($const220.4, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4, utils.py:1239), Var($226binary_subtract.7, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $230load_global.9 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $236binary_add.12 = n + post_avg
numba.core.ssa - DEBUG - on stmt: $240load_attr.14 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const242.15 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1239), Var($244binary_subscr.16, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $248build_slice.18 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1239), Var($246call_function.17, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $274binary_add.32 = avgn + delta
numba.core.ssa - DEBUG - on stmt: $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32
numba.core.ssa - DEBUG - on stmt: $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: peaks[n] = $278inplace_and.34
numba.core.ssa - DEBUG - on stmt: $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $290pred, 302, 292
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 292
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752e1c4f0>
numba.core.ssa - DEBUG - on stmt: $const294.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: n = $296inplace_add.2
numba.core.ssa - DEBUG - on stmt: jump 333
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 302
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752e1c4f0>
numba.core.ssa - DEBUG - on stmt: $const306.2 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $308binary_add.3 = wait + $const306.2
numba.core.ssa - DEBUG - on stmt: $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: n = $310inplace_add.4
numba.core.ssa - DEBUG - on stmt: $318load_attr.7 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const320.8 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $324compare_op.10 = n < $322binary_subscr.9
numba.core.ssa - DEBUG - on stmt: bool326 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $326pred, 134, 328
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 328
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752e1c4f0>
numba.core.ssa - DEBUG - on stmt: $const328.0 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $330return_value.1 = cast(value=$const328.0)
numba.core.ssa - DEBUG - on stmt: return $330return_value.1
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 332
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752e1c4f0>
numba.core.ssa - DEBUG - on stmt: $const332.0 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $334return_value.1 = cast(value=$const332.0)
numba.core.ssa - DEBUG - on stmt: return $334return_value.1
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 333
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752e1c4f0>
numba.core.ssa - DEBUG - on stmt: jump 120
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$102binary_subscr.50': [(<numba.core.ir.Assign object at 0x708752fc69b0>,
                                       0)],
             '$104pred': [(<numba.core.ir.Assign object at 0x708752ffc0a0>, 0)],
             '$10load_method.4': [(<numba.core.ir.Assign object at 0x708752fc4160>,
                                   0)],
             '$124load_attr.2': [(<numba.core.ir.Assign object at 0x708752ffe200>,
                                  120)],
             '$128binary_subscr.4': [(<numba.core.ir.Assign object at 0x708752f25f60>,
                                      120)],
             '$130compare_op.5': [(<numba.core.ir.Assign object at 0x70875313b370>,
                                   120)],
             '$132pred': [(<numba.core.ir.Assign object at 0x708752eaffa0>,
                           120)],
             '$134load_global.0': [(<numba.core.ir.Assign object at 0x708752e1e9e0>,
                                    134)],
             '$136load_method.1': [(<numba.core.ir.Assign object at 0x708752e1ff10>,
                                    134)],
             '$140load_global.3': [(<numba.core.ir.Assign object at 0x708752e1fa00>,
                                    134)],
             '$148binary_subtract.7': [(<numba.core.ir.Assign object at 0x708752e1ebf0>,
                                        134)],
             '$150call_function.8': [(<numba.core.ir.Assign object at 0x708752e1fd00>,
                                      134)],
             '$152load_global.9': [(<numba.core.ir.Assign object at 0x708752e1ffa0>,
                                    134)],
             '$158binary_add.12': [(<numba.core.ir.Assign object at 0x708752e1f100>,
                                    134)],
             '$162load_attr.14': [(<numba.core.ir.Assign object at 0x708752e1ed70>,
                                   134)],
             '$166binary_subscr.16': [(<numba.core.ir.Assign object at 0x708752fd85b0>,
                                       134)],
             '$168call_function.17': [(<numba.core.ir.Assign object at 0x708752e1e830>,
                                       134)],
             '$16load_global.7': [(<numba.core.ir.Assign object at 0x708752fc7640>,
                                   0)],
             '$170build_slice.18': [(<numba.core.ir.Assign object at 0x708752e1e500>,
                                     134)],
             '$170build_slice.19': [(<numba.core.ir.Assign object at 0x708752e1e230>,
                                     134)],
             '$172binary_subscr.20': [(<numba.core.ir.Assign object at 0x708752e1e2c0>,
                                       134)],
             '$182binary_subscr.24': [(<numba.core.ir.Assign object at 0x708752e1d510>,
                                       134)],
             '$186compare_op.26': [(<numba.core.ir.Assign object at 0x708752e1d480>,
                                    134)],
             '$198binary_subscr.31': [(<numba.core.ir.Assign object at 0x708752e1e0b0>,
                                       134)],
             '$200pred': [(<numba.core.ir.Assign object at 0x708752e1c7f0>,
                           134)],
             '$206inplace_add.2': [(<numba.core.ir.Assign object at 0x708752e1d090>,
                                    202)],
             '$212load_global.0': [(<numba.core.ir.Assign object at 0x708752e1c6a0>,
                                    212)],
             '$214load_method.1': [(<numba.core.ir.Assign object at 0x708752e1c430>,
                                    212)],
             '$218load_global.3': [(<numba.core.ir.Assign object at 0x708752e1df60>,
                                    212)],
             '$226binary_subtract.7': [(<numba.core.ir.Assign object at 0x708752e1df90>,
                                        212)],
             '$228call_function.8': [(<numba.core.ir.Assign object at 0x708752e1cd00>,
                                      212)],
             '$22load_attr.10': [(<numba.core.ir.Assign object at 0x708752df3190>,
                                  0)],
             '$230load_global.9': [(<numba.core.ir.Assign object at 0x708752e1ccd0>,
                                    212)],
             '$236binary_add.12': [(<numba.core.ir.Assign object at 0x708753273c10>,
                                    212)],
             '$240load_attr.14': [(<numba.core.ir.Assign object at 0x708753273850>,
                                   212)],
             '$244binary_subscr.16': [(<numba.core.ir.Assign object at 0x708752f27430>,
                                       212)],
             '$246call_function.17': [(<numba.core.ir.Assign object at 0x7087532733d0>,
                                       212)],
             '$248build_slice.18': [(<numba.core.ir.Assign object at 0x708753270ca0>,
                                     212)],
             '$248build_slice.19': [(<numba.core.ir.Assign object at 0x708753270280>,
                                     212)],
             '$250binary_subscr.20': [(<numba.core.ir.Assign object at 0x708753270f10>,
                                       212)],
             '$262binary_subscr.26': [(<numba.core.ir.Assign object at 0x7087532b48b0>,
                                       212)],
             '$268binary_subscr.29': [(<numba.core.ir.Assign object at 0x7087532b5510>,
                                       212)],
             '$26binary_subscr.12': [(<numba.core.ir.Assign object at 0x7087532b43a0>,
                                      0)],
             '$274binary_add.32': [(<numba.core.ir.Assign object at 0x7087532b55d0>,
                                    212)],
             '$276compare_op.33': [(<numba.core.ir.Assign object at 0x7087532b44c0>,
                                    212)],
             '$278inplace_and.34': [(<numba.core.ir.Assign object at 0x7087532b40a0>,
                                     212)],
             '$288binary_subscr.37': [(<numba.core.ir.Assign object at 0x7087532b45b0>,
                                       212)],
             '$28call_function.13': [(<numba.core.ir.Assign object at 0x70875336de70>,
                                      0)],
             '$290pred': [(<numba.core.ir.Assign object at 0x7087532b4760>,
                           212)],
             '$296inplace_add.2': [(<numba.core.ir.Assign object at 0x7087532b4130>,
                                    292)],
             '$308binary_add.3': [(<numba.core.ir.Assign object at 0x7087532b4eb0>,
                                   302)],
             '$30build_slice.14': [(<numba.core.ir.Assign object at 0x708752d81180>,
                                    0)],
             '$30build_slice.15': [(<numba.core.ir.Assign object at 0x708752fffe50>,
                                    0)],
             '$310inplace_add.4': [(<numba.core.ir.Assign object at 0x7087532b4ee0>,
                                    302)],
             '$318load_attr.7': [(<numba.core.ir.Assign object at 0x7087532b4c40>,
                                  302)],
             '$322binary_subscr.9': [(<numba.core.ir.Assign object at 0x708752fc5120>,
                                      302)],
             '$324compare_op.10': [(<numba.core.ir.Assign object at 0x7087532b72e0>,
                                    302)],
             '$326pred': [(<numba.core.ir.Assign object at 0x7087532b67a0>,
                           302)],
             '$32binary_subscr.16': [(<numba.core.ir.Assign object at 0x708752fffca0>,
                                      0)],
             '$330return_value.1': [(<numba.core.ir.Assign object at 0x7087532b63b0>,
                                     328)],
             '$334return_value.1': [(<numba.core.ir.Assign object at 0x7087532b6590>,
                                     332)],
             '$34call_method.17': [(<numba.core.ir.Assign object at 0x708752fffc40>,
                                    0)],
             '$36compare_op.18': [(<numba.core.ir.Assign object at 0x708752fffdc0>,
                                   0)],
             '$50binary_subscr.25': [(<numba.core.ir.Assign object at 0x7087532b7250>,
                                      0)],
             '$56binary_subscr.28': [(<numba.core.ir.Assign object at 0x7087532b7a60>,
                                      0)],
             '$58load_global.29': [(<numba.core.ir.Assign object at 0x708752ffe5f0>,
                                    0)],
             '$60load_method.30': [(<numba.core.ir.Assign object at 0x708752ffe4a0>,
                                    0)],
             '$66load_global.33': [(<numba.core.ir.Assign object at 0x708752ffdba0>,
                                    0)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x7087532b6ec0>,
                                    0)],
             '$72load_attr.36': [(<numba.core.ir.Assign object at 0x708752ffebc0>,
                                  0)],
             '$76binary_subscr.38': [(<numba.core.ir.Assign object at 0x708752fc5fc0>,
                                      0)],
             '$78call_function.39': [(<numba.core.ir.Assign object at 0x708752ffd360>,
                                      0)],
             '$80build_slice.40': [(<numba.core.ir.Assign object at 0x708752ffd990>,
                                    0)],
             '$80build_slice.41': [(<numba.core.ir.Assign object at 0x708752ffce20>,
                                    0)],
             '$82binary_subscr.42': [(<numba.core.ir.Assign object at 0x708752ffd180>,
                                      0)],
             '$84call_method.43': [(<numba.core.ir.Assign object at 0x708752ffcf40>,
                                    0)],
             '$88binary_add.45': [(<numba.core.ir.Assign object at 0x708752ffed40>,
                                   0)],
             '$8load_global.3': [(<numba.core.ir.Assign object at 0x708752fc4340>,
                                  0)],
             '$90compare_op.46': [(<numba.core.ir.Assign object at 0x708752ffcac0>,
                                   0)],
             '$92inplace_and.47': [(<numba.core.ir.Assign object at 0x708752ffc880>,
                                    0)],
             '$const100.49': [(<numba.core.ir.Assign object at 0x708752ffc370>,
                               0)],
             '$const108.1': [(<numba.core.ir.Assign object at 0x708752fff6d0>,
                              106)],
             '$const126.3': [(<numba.core.ir.Assign object at 0x708752ffc520>,
                              120)],
             '$const14.6': [(<numba.core.ir.Assign object at 0x708752fc7bb0>,
                             0)],
             '$const142.4': [(<numba.core.ir.Assign object at 0x708752e1f5b0>,
                              134)],
             '$const164.15': [(<numba.core.ir.Assign object at 0x708752e1ea70>,
                               134)],
             '$const204.1': [(<numba.core.ir.Assign object at 0x708752e1d7e0>,
                              202)],
             '$const220.4': [(<numba.core.ir.Assign object at 0x708752e1c040>,
                              212)],
             '$const24.11': [(<numba.core.ir.Assign object at 0x708752d55cc0>,
                              0)],
             '$const242.15': [(<numba.core.ir.Assign object at 0x7087532734c0>,
                               212)],
             '$const294.1': [(<numba.core.ir.Assign object at 0x708752e1c310>,
                              292)],
             '$const306.2': [(<numba.core.ir.Assign object at 0x7087532b4ca0>,
                              302)],
             '$const320.8': [(<numba.core.ir.Assign object at 0x7087532b5f90>,
                              302)],
             '$const328.0': [(<numba.core.ir.Assign object at 0x7087532b6b00>,
                              328)],
             '$const332.0': [(<numba.core.ir.Assign object at 0x7087532b6da0>,
                              332)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x708752fc4670>,
                            0)],
             '$const40.20': [(<numba.core.ir.Assign object at 0x708752fff160>,
                              0)],
             '$const46.22': [(<numba.core.ir.Assign object at 0x708752fff400>,
                              0)],
             '$const54.27': [(<numba.core.ir.Assign object at 0x708752fff0a0>,
                              0)],
             '$const64.32': [(<numba.core.ir.Assign object at 0x708752ffed10>,
                              0)],
             '$const74.37': [(<numba.core.ir.Assign object at 0x708752ffeb90>,
                              0)],
             'avgn': [(<numba.core.ir.Assign object at 0x708753272c80>, 212)],
             'bool104': [(<numba.core.ir.Assign object at 0x708752ffc430>, 0)],
             'bool132': [(<numba.core.ir.Assign object at 0x708752eafeb0>,
                          120)],
             'bool200': [(<numba.core.ir.Assign object at 0x708752e1c670>,
                          134)],
             'bool290': [(<numba.core.ir.Assign object at 0x7087532b4610>,
                          212)],
             'bool326': [(<numba.core.ir.Assign object at 0x7087532b6ad0>,
                          302)],
             'delta': [(<numba.core.ir.Assign object at 0x708752fc4d30>, 0)],
             'maxn': [(<numba.core.ir.Assign object at 0x708752e1e4a0>, 134)],
             'n': [(<numba.core.ir.Assign object at 0x708752ffcf10>, 106),
                   (<numba.core.ir.Assign object at 0x708752ffd2d0>, 116),
                   (<numba.core.ir.Assign object at 0x708752e1c730>, 202),
                   (<numba.core.ir.Assign object at 0x7087532b5300>, 292),
                   (<numba.core.ir.Assign object at 0x7087532b5ff0>, 302)],
             'peaks': [(<numba.core.ir.Assign object at 0x708752fc46a0>, 0)],
             'post_avg': [(<numba.core.ir.Assign object at 0x708752fc5e40>, 0)],
             'post_max': [(<numba.core.ir.Assign object at 0x708752fc52d0>, 0)],
             'pre_avg': [(<numba.core.ir.Assign object at 0x708752fc58d0>, 0)],
             'pre_max': [(<numba.core.ir.Assign object at 0x708752fc5210>, 0)],
             'wait': [(<numba.core.ir.Assign object at 0x708752fc4e80>, 0)],
             'x': [(<numba.core.ir.Assign object at 0x708752fc4ca0>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x708753273d00>
numba.core.ssa - DEBUG - Fix SSA violator on var n
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e1f3d0>
numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
numba.core.ssa - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
numba.core.ssa - DEBUG - on stmt: post_max = arg(2, name=post_max)
numba.core.ssa - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
numba.core.ssa - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
numba.core.ssa - DEBUG - on stmt: delta = arg(5, name=delta)
numba.core.ssa - DEBUG - on stmt: wait = arg(6, name=wait)
numba.core.ssa - DEBUG - on stmt: peaks = arg(7, name=peaks)
numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $8load_global.3 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $10load_method.4 = getattr(value=$8load_global.3, attr=max)
numba.core.ssa - DEBUG - on stmt: $const14.6 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $16load_global.7 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $22load_attr.10 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const24.11 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1209), Var($26binary_subscr.12, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $30build_slice.14 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $30build_slice.15 = call $30build_slice.14($const14.6, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6, utils.py:1221), Var($28call_function.13, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17
numba.core.ssa - DEBUG - on stmt: $const40.20 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: peaks[0] = $36compare_op.18
numba.core.ssa - DEBUG - on stmt: $const46.22 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $const54.27 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $58load_global.29 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $60load_method.30 = getattr(value=$58load_global.29, attr=mean)
numba.core.ssa - DEBUG - on stmt: $const64.32 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $66load_global.33 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $72load_attr.36 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const74.37 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1209), Var($76binary_subscr.38, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $80build_slice.40 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $80build_slice.41 = call $80build_slice.40($const64.32, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32, utils.py:1222), Var($78call_function.39, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $88binary_add.45 = $84call_method.43 + delta
numba.core.ssa - DEBUG - on stmt: $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45
numba.core.ssa - DEBUG - on stmt: $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: peaks[0] = $92inplace_and.47
numba.core.ssa - DEBUG - on stmt: $const100.49 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: bool104 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $104pred, 106, 116
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 106
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e1f3d0>
numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: n = wait + $const108.1
numba.core.ssa - DEBUG - first assign: n
numba.core.ssa - DEBUG - replaced with: n = wait + $const108.1
numba.core.ssa - DEBUG - on stmt: jump 120
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 116
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e1f3d0>
numba.core.ssa - DEBUG - on stmt: n = const(int, 1)
numba.core.ssa - DEBUG - replaced with: n.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: jump 120
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 120
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e1f3d0>
numba.core.ssa - DEBUG - on stmt: $124load_attr.2 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const126.3 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $130compare_op.5 = n < $128binary_subscr.4
numba.core.ssa - DEBUG - on stmt: bool132 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $132pred, 134, 332
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 134
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e1f3d0>
numba.core.ssa - DEBUG - on stmt: $134load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $136load_method.1 = getattr(value=$134load_global.0, attr=max)
numba.core.ssa - DEBUG - on stmt: $140load_global.3 = global(max: <built-in function max>)
numba.core.ssa - DEBUG - on stmt: $const142.4 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $148binary_subtract.7 = n - pre_max
numba.core.ssa - DEBUG - on stmt: $150call_function.8 = call $140load_global.3($const142.4, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4, utils.py:1230), Var($148binary_subtract.7, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $152load_global.9 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $158binary_add.12 = n + post_max
numba.core.ssa - DEBUG - on stmt: $162load_attr.14 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const164.15 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1230), Var($166binary_subscr.16, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $170build_slice.18 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1230), Var($168call_function.17, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $186compare_op.26 = $182binary_subscr.24 == maxn
numba.core.ssa - DEBUG - on stmt: peaks[n] = $186compare_op.26
numba.core.ssa - DEBUG - on stmt: $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $200pred, 212, 202
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 202
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e1f3d0>
numba.core.ssa - DEBUG - on stmt: $const204.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: n = $206inplace_add.2
numba.core.ssa - DEBUG - replaced with: n.2 = $206inplace_add.2
numba.core.ssa - DEBUG - on stmt: jump 333
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 212
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e1f3d0>
numba.core.ssa - DEBUG - on stmt: $212load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $214load_method.1 = getattr(value=$212load_global.0, attr=mean)
numba.core.ssa - DEBUG - on stmt: $218load_global.3 = global(max: <built-in function max>)
numba.core.ssa - DEBUG - on stmt: $const220.4 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $226binary_subtract.7 = n - pre_avg
numba.core.ssa - DEBUG - on stmt: $228call_function.8 = call $218load_global.3($const220.4, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4, utils.py:1239), Var($226binary_subtract.7, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $230load_global.9 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $236binary_add.12 = n + post_avg
numba.core.ssa - DEBUG - on stmt: $240load_attr.14 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const242.15 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1239), Var($244binary_subscr.16, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $248build_slice.18 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1239), Var($246call_function.17, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $274binary_add.32 = avgn + delta
numba.core.ssa - DEBUG - on stmt: $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32
numba.core.ssa - DEBUG - on stmt: $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: peaks[n] = $278inplace_and.34
numba.core.ssa - DEBUG - on stmt: $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $290pred, 302, 292
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 292
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e1f3d0>
numba.core.ssa - DEBUG - on stmt: $const294.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: n = $296inplace_add.2
numba.core.ssa - DEBUG - replaced with: n.3 = $296inplace_add.2
numba.core.ssa - DEBUG - on stmt: jump 333
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e1f3d0>
numba.core.ssa - DEBUG - on stmt: $const306.2 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $308binary_add.3 = wait + $const306.2
numba.core.ssa - DEBUG - on stmt: $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: n = $310inplace_add.4
numba.core.ssa - DEBUG - replaced with: n.4 = $310inplace_add.4
numba.core.ssa - DEBUG - on stmt: $318load_attr.7 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const320.8 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $324compare_op.10 = n < $322binary_subscr.9
numba.core.ssa - DEBUG - on stmt: bool326 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $326pred, 134, 328
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 328
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e1f3d0>
numba.core.ssa - DEBUG - on stmt: $const328.0 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $330return_value.1 = cast(value=$const328.0)
numba.core.ssa - DEBUG - on stmt: return $330return_value.1
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 332
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e1f3d0>
numba.core.ssa - DEBUG - on stmt: $const332.0 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $334return_value.1 = cast(value=$const332.0)
numba.core.ssa - DEBUG - on stmt: return $334return_value.1
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 333
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e1f3d0>
numba.core.ssa - DEBUG - on stmt: jump 120
numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {106: [<numba.core.ir.Assign object at 0x708752f26cb0>],
             116: [<numba.core.ir.Assign object at 0x708752f27a90>],
             202: [<numba.core.ir.Assign object at 0x708752f25cf0>],
             292: [<numba.core.ir.Assign object at 0x708752f25c90>],
             302: [<numba.core.ir.Assign object at 0x708752f27550>]})
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e1f3d0>
numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
numba.core.ssa - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
numba.core.ssa - DEBUG - on stmt: post_max = arg(2, name=post_max)
numba.core.ssa - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
numba.core.ssa - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
numba.core.ssa - DEBUG - on stmt: delta = arg(5, name=delta)
numba.core.ssa - DEBUG - on stmt: wait = arg(6, name=wait)
numba.core.ssa - DEBUG - on stmt: peaks = arg(7, name=peaks)
numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $8load_global.3 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $10load_method.4 = getattr(value=$8load_global.3, attr=max)
numba.core.ssa - DEBUG - on stmt: $const14.6 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $16load_global.7 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $22load_attr.10 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const24.11 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1209), Var($26binary_subscr.12, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $30build_slice.14 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $30build_slice.15 = call $30build_slice.14($const14.6, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6, utils.py:1221), Var($28call_function.13, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17
numba.core.ssa - DEBUG - on stmt: $const40.20 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: peaks[0] = $36compare_op.18
numba.core.ssa - DEBUG - on stmt: $const46.22 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $const54.27 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $58load_global.29 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $60load_method.30 = getattr(value=$58load_global.29, attr=mean)
numba.core.ssa - DEBUG - on stmt: $const64.32 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $66load_global.33 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $72load_attr.36 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const74.37 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1209), Var($76binary_subscr.38, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $80build_slice.40 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $80build_slice.41 = call $80build_slice.40($const64.32, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32, utils.py:1222), Var($78call_function.39, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $88binary_add.45 = $84call_method.43 + delta
numba.core.ssa - DEBUG - on stmt: $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45
numba.core.ssa - DEBUG - on stmt: $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: peaks[0] = $92inplace_and.47
numba.core.ssa - DEBUG - on stmt: $const100.49 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: bool104 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $104pred, 106, 116
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 106
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e1f3d0>
numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: n = wait + $const108.1
numba.core.ssa - DEBUG - on stmt: jump 120
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 116
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e1f3d0>
numba.core.ssa - DEBUG - on stmt: n.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: jump 120
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 120
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e1f3d0>
numba.core.ssa - DEBUG - on stmt: $124load_attr.2 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const126.3 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $130compare_op.5 = n < $128binary_subscr.4
numba.core.ssa - DEBUG - find_def var='n' stmt=$130compare_op.5 = n < $128binary_subscr.4
numba.core.ssa - DEBUG - find_def_from_top label 120
numba.core.ssa - DEBUG - insert phi node n.5 = phi(incoming_values=[], incoming_blocks=[]) at 120
numba.core.ssa - DEBUG - find_def_from_bottom label 106
numba.core.ssa - DEBUG - incoming_def n = wait + $const108.1
numba.core.ssa - DEBUG - find_def_from_bottom label 116
numba.core.ssa - DEBUG - incoming_def n.1 = const(int, 1)
numba.core.ssa - DEBUG - find_def_from_bottom label 333
numba.core.ssa - DEBUG - find_def_from_top label 333
numba.core.ssa - DEBUG - insert phi node n.6 = phi(incoming_values=[], incoming_blocks=[]) at 333
numba.core.ssa - DEBUG - find_def_from_bottom label 202
numba.core.ssa - DEBUG - incoming_def n.2 = $206inplace_add.2
numba.core.ssa - DEBUG - find_def_from_bottom label 292
numba.core.ssa - DEBUG - incoming_def n.3 = $296inplace_add.2
numba.core.ssa - DEBUG - incoming_def n.6 = phi(incoming_values=[Var(n.2, utils.py:1236), Var(n.3, utils.py:1243)], incoming_blocks=[202, 292])
numba.core.ssa - DEBUG - replaced with: $130compare_op.5 = n.5 < $128binary_subscr.4
numba.core.ssa - DEBUG - on stmt: bool132 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $132pred, 134, 332
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 134
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e1f3d0>
numba.core.ssa - DEBUG - on stmt: $134load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $136load_method.1 = getattr(value=$134load_global.0, attr=max)
numba.core.ssa - DEBUG - on stmt: $140load_global.3 = global(max: <built-in function max>)
numba.core.ssa - DEBUG - on stmt: $const142.4 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $148binary_subtract.7 = n - pre_max
numba.core.ssa - DEBUG - find_def var='n' stmt=$148binary_subtract.7 = n - pre_max
numba.core.ssa - DEBUG - find_def_from_top label 134
numba.core.ssa - DEBUG - insert phi node n.7 = phi(incoming_values=[], incoming_blocks=[]) at 134
numba.core.ssa - DEBUG - find_def_from_bottom label 120
numba.core.ssa - DEBUG - incoming_def n.5 = phi(incoming_values=[Var(n, utils.py:1225), Var(n.1, utils.py:1227), Var(n.6, utils.py:1229)], incoming_blocks=[106, 116, 333])
numba.core.ssa - DEBUG - find_def_from_bottom label 302
numba.core.ssa - DEBUG - incoming_def n.4 = $310inplace_add.4
numba.core.ssa - DEBUG - replaced with: $148binary_subtract.7 = n.7 - pre_max
numba.core.ssa - DEBUG - on stmt: $150call_function.8 = call $140load_global.3($const142.4, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4, utils.py:1230), Var($148binary_subtract.7, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $152load_global.9 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $158binary_add.12 = n + post_max
numba.core.ssa - DEBUG - find_def var='n' stmt=$158binary_add.12 = n + post_max
numba.core.ssa - DEBUG - replaced with: $158binary_add.12 = n.7 + post_max
numba.core.ssa - DEBUG - on stmt: $162load_attr.14 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const164.15 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1230), Var($166binary_subscr.16, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $170build_slice.18 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1230), Var($168call_function.17, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - find_def var='n' stmt=$182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - replaced with: $182binary_subscr.24 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $186compare_op.26 = $182binary_subscr.24 == maxn
numba.core.ssa - DEBUG - on stmt: peaks[n] = $186compare_op.26
numba.core.ssa - DEBUG - find_def var='n' stmt=peaks[n] = $186compare_op.26
numba.core.ssa - DEBUG - replaced with: peaks[n.7] = $186compare_op.26
numba.core.ssa - DEBUG - on stmt: $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - find_def var='n' stmt=$198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - replaced with: $198binary_subscr.31 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $200pred, 212, 202
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 202
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e1f3d0>
numba.core.ssa - DEBUG - on stmt: $const204.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def var='n' stmt=$206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def_from_top label 202
numba.core.ssa - DEBUG - idom 134 from label 202
numba.core.ssa - DEBUG - find_def_from_bottom label 134
numba.core.ssa - DEBUG - replaced with: $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: n.2 = $206inplace_add.2
numba.core.ssa - DEBUG - on stmt: jump 333
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 212
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e1f3d0>
numba.core.ssa - DEBUG - on stmt: $212load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $214load_method.1 = getattr(value=$212load_global.0, attr=mean)
numba.core.ssa - DEBUG - on stmt: $218load_global.3 = global(max: <built-in function max>)
numba.core.ssa - DEBUG - on stmt: $const220.4 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $226binary_subtract.7 = n - pre_avg
numba.core.ssa - DEBUG - find_def var='n' stmt=$226binary_subtract.7 = n - pre_avg
numba.core.ssa - DEBUG - find_def_from_top label 212
numba.core.ssa - DEBUG - idom 134 from label 212
numba.core.ssa - DEBUG - find_def_from_bottom label 134
numba.core.ssa - DEBUG - replaced with: $226binary_subtract.7 = n.7 - pre_avg
numba.core.ssa - DEBUG - on stmt: $228call_function.8 = call $218load_global.3($const220.4, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4, utils.py:1239), Var($226binary_subtract.7, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $230load_global.9 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $236binary_add.12 = n + post_avg
numba.core.ssa - DEBUG - find_def var='n' stmt=$236binary_add.12 = n + post_avg
numba.core.ssa - DEBUG - find_def_from_top label 212
numba.core.ssa - DEBUG - idom 134 from label 212
numba.core.ssa - DEBUG - find_def_from_bottom label 134
numba.core.ssa - DEBUG - replaced with: $236binary_add.12 = n.7 + post_avg
numba.core.ssa - DEBUG - on stmt: $240load_attr.14 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const242.15 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1239), Var($244binary_subscr.16, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $248build_slice.18 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1239), Var($246call_function.17, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - find_def var='n' stmt=$262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - find_def_from_top label 212
numba.core.ssa - DEBUG - idom 134 from label 212
numba.core.ssa - DEBUG - find_def_from_bottom label 134
numba.core.ssa - DEBUG - replaced with: $262binary_subscr.26 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - find_def var='n' stmt=$268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - find_def_from_top label 212
numba.core.ssa - DEBUG - idom 134 from label 212
numba.core.ssa - DEBUG - find_def_from_bottom label 134
numba.core.ssa - DEBUG - replaced with: $268binary_subscr.29 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $274binary_add.32 = avgn + delta
numba.core.ssa - DEBUG - on stmt: $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32
numba.core.ssa - DEBUG - on stmt: $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: peaks[n] = $278inplace_and.34
numba.core.ssa - DEBUG - find_def var='n' stmt=peaks[n] = $278inplace_and.34
numba.core.ssa - DEBUG - find_def_from_top label 212
numba.core.ssa - DEBUG - idom 134 from label 212
numba.core.ssa - DEBUG - find_def_from_bottom label 134
numba.core.ssa - DEBUG - replaced with: peaks[n.7] = $278inplace_and.34
numba.core.ssa - DEBUG - on stmt: $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - find_def var='n' stmt=$288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - find_def_from_top label 212
numba.core.ssa - DEBUG - idom 134 from label 212
numba.core.ssa - DEBUG - find_def_from_bottom label 134
numba.core.ssa - DEBUG - replaced with: $288binary_subscr.37 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $290pred, 302, 292
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 292
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e1f3d0>
numba.core.ssa - DEBUG - on stmt: $const294.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def var='n' stmt=$296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def_from_top label 292
numba.core.ssa - DEBUG - idom 212 from label 292
numba.core.ssa - DEBUG - find_def_from_bottom label 212
numba.core.ssa - DEBUG - find_def_from_top label 212
numba.core.ssa - DEBUG - idom 134 from label 212
numba.core.ssa - DEBUG - find_def_from_bottom label 134
numba.core.ssa - DEBUG - replaced with: $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: n.3 = $296inplace_add.2
numba.core.ssa - DEBUG - on stmt: jump 333
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e1f3d0>
numba.core.ssa - DEBUG - on stmt: $const306.2 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $308binary_add.3 = wait + $const306.2
numba.core.ssa - DEBUG - on stmt: $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def var='n' stmt=$310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def_from_top label 302
numba.core.ssa - DEBUG - idom 212 from label 302
numba.core.ssa - DEBUG - find_def_from_bottom label 212
numba.core.ssa - DEBUG - find_def_from_top label 212
numba.core.ssa - DEBUG - idom 134 from label 212
numba.core.ssa - DEBUG - find_def_from_bottom label 134
numba.core.ssa - DEBUG - replaced with: $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: n.4 = $310inplace_add.4
numba.core.ssa - DEBUG - on stmt: $318load_attr.7 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const320.8 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $324compare_op.10 = n < $322binary_subscr.9
numba.core.ssa - DEBUG - find_def var='n' stmt=$324compare_op.10 = n < $322binary_subscr.9
numba.core.ssa - DEBUG - replaced with: $324compare_op.10 = n.4 < $322binary_subscr.9
numba.core.ssa - DEBUG - on stmt: bool326 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $326pred, 134, 328
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 328
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e1f3d0>
numba.core.ssa - DEBUG - on stmt: $const328.0 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $330return_value.1 = cast(value=$const328.0)
numba.core.ssa - DEBUG - on stmt: return $330return_value.1
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 332
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e1f3d0>
numba.core.ssa - DEBUG - on stmt: $const332.0 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $334return_value.1 = cast(value=$const332.0)
numba.core.ssa - DEBUG - on stmt: return $334return_value.1
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 333
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e1f3d0>
numba.core.ssa - DEBUG - on stmt: jump 120
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=570)
           2	LOAD_FAST(arg=0, lineno=571)
           4	LOAD_ATTR(arg=0, lineno=571)
           6	LOAD_CONST(arg=1, lineno=571)
           8	COMPARE_OP(arg=2, lineno=571)
          10	POP_JUMP_IF_FALSE(arg=11, lineno=571)
          12	LOAD_GLOBAL(arg=1, lineno=572)
          14	LOAD_CONST(arg=2, lineno=572)
          16	CALL_FUNCTION(arg=1, lineno=572)
          18	RAISE_VARARGS(arg=1, lineno=572)
>         20	LOAD_GLOBAL(arg=2, lineno=575)
          22	LOAD_METHOD(arg=3, lineno=575)
          24	LOAD_FAST(arg=0, lineno=575)
          26	CALL_METHOD(arg=1, lineno=575)
          28	STORE_FAST(arg=1, lineno=575)
          30	LOAD_GLOBAL(arg=4, lineno=576)
          32	LOAD_FAST(arg=1, lineno=576)
          34	CALL_FUNCTION(arg=1, lineno=576)
          36	LOAD_METHOD(arg=5, lineno=576)
          38	LOAD_CONST(arg=1, lineno=576)
          40	CALL_METHOD(arg=1, lineno=576)
          42	STORE_FAST(arg=2, lineno=576)
          44	LOAD_DEREF(arg=1, lineno=577)
          46	LOAD_FAST(arg=2, lineno=577)
          48	CALL_FUNCTION(arg=1, lineno=577)
          50	POP_JUMP_IF_FALSE(arg=29, lineno=577)
          52	LOAD_FAST(arg=2, lineno=578)
          54	RETURN_VALUE(arg=None, lineno=578)
>         56	LOAD_FAST(arg=1, lineno=580)
          58	GET_ITER(arg=None, lineno=580)
>         60	FOR_ITER(arg=21, lineno=580)
          62	STORE_FAST(arg=3, lineno=580)
          64	LOAD_FAST(arg=3, lineno=581)
          66	LOAD_METHOD(arg=6, lineno=581)
          68	CALL_METHOD(arg=0, lineno=581)
          70	STORE_FAST(arg=4, lineno=581)
          72	LOAD_DEREF(arg=1, lineno=582)
          74	LOAD_FAST(arg=4, lineno=582)
          76	CALL_FUNCTION(arg=1, lineno=582)
          78	POP_JUMP_IF_FALSE(arg=45, lineno=582)
          80	LOAD_FAST(arg=4, lineno=583)
          82	ROT_TWO(arg=None, lineno=583)
          84	POP_TOP(arg=None, lineno=583)
          86	RETURN_VALUE(arg=None, lineno=583)
>         88	LOAD_DEREF(arg=0, lineno=584)
          90	LOAD_FAST(arg=4, lineno=584)
          92	LOAD_FAST(arg=2, lineno=584)
          94	CALL_FUNCTION(arg=2, lineno=584)
          96	POP_JUMP_IF_FALSE(arg=52, lineno=584)
          98	LOAD_FAST(arg=4, lineno=585)
         100	STORE_FAST(arg=2, lineno=585)
>        102	JUMP_ABSOLUTE(arg=31, lineno=585)
>        104	LOAD_FAST(arg=2, lineno=586)
         106	RETURN_VALUE(arg=None, lineno=586)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=570)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=571)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=571)
numba.core.byteflow - DEBUG - stack ['$a2.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=571)
numba.core.byteflow - DEBUG - stack ['$4load_attr.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=COMPARE_OP(arg=2, lineno=571)
numba.core.byteflow - DEBUG - stack ['$4load_attr.1', '$const6.2']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=POP_JUMP_IF_FALSE(arg=11, lineno=571)
numba.core.byteflow - DEBUG - stack ['$8compare_op.3']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=12, stack=(), blockstack=(), npush=0), Edge(pc=20, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=12 nstack_initial=0), State(pc_initial=20 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=12 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_GLOBAL(arg=1, lineno=572)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=572)
numba.core.byteflow - DEBUG - stack ['$12load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=16, inst=CALL_FUNCTION(arg=1, lineno=572)
numba.core.byteflow - DEBUG - stack ['$12load_global.0', '$const14.1']
numba.core.byteflow - DEBUG - dispatch pc=18, inst=RAISE_VARARGS(arg=1, lineno=572)
numba.core.byteflow - DEBUG - stack ['$16call_function.2']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=20 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=20 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_GLOBAL(arg=2, lineno=575)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_METHOD(arg=3, lineno=575)
numba.core.byteflow - DEBUG - stack ['$20load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=575)
numba.core.byteflow - DEBUG - stack ['$22load_method.1']
numba.core.byteflow - DEBUG - dispatch pc=26, inst=CALL_METHOD(arg=1, lineno=575)
numba.core.byteflow - DEBUG - stack ['$22load_method.1', '$a24.2']
numba.core.byteflow - DEBUG - dispatch pc=28, inst=STORE_FAST(arg=1, lineno=575)
numba.core.byteflow - DEBUG - stack ['$26call_method.3']
numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_GLOBAL(arg=4, lineno=576)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=576)
numba.core.byteflow - DEBUG - stack ['$30load_global.4']
numba.core.byteflow - DEBUG - dispatch pc=34, inst=CALL_FUNCTION(arg=1, lineno=576)
numba.core.byteflow - DEBUG - stack ['$30load_global.4', '$it32.5']
numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_METHOD(arg=5, lineno=576)
numba.core.byteflow - DEBUG - stack ['$34call_function.6']
numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_CONST(arg=1, lineno=576)
numba.core.byteflow - DEBUG - stack ['$36load_method.7']
numba.core.byteflow - DEBUG - dispatch pc=40, inst=CALL_METHOD(arg=1, lineno=576)
numba.core.byteflow - DEBUG - stack ['$36load_method.7', '$const38.8']
numba.core.byteflow - DEBUG - dispatch pc=42, inst=STORE_FAST(arg=2, lineno=576)
numba.core.byteflow - DEBUG - stack ['$40call_method.9']
numba.core.byteflow - DEBUG - dispatch pc=44, inst=LOAD_DEREF(arg=1, lineno=577)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=46, inst=LOAD_FAST(arg=2, lineno=577)
numba.core.byteflow - DEBUG - stack ['$44load_deref.10']
numba.core.byteflow - DEBUG - dispatch pc=48, inst=CALL_FUNCTION(arg=1, lineno=577)
numba.core.byteflow - DEBUG - stack ['$44load_deref.10', '$max_value46.11']
numba.core.byteflow - DEBUG - dispatch pc=50, inst=POP_JUMP_IF_FALSE(arg=29, lineno=577)
numba.core.byteflow - DEBUG - stack ['$48call_function.12']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0), Edge(pc=56, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=56 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=2, lineno=578)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=54, inst=RETURN_VALUE(arg=None, lineno=578)
numba.core.byteflow - DEBUG - stack ['$max_value52.0']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=56 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=56 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=56, inst=LOAD_FAST(arg=1, lineno=580)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=58, inst=GET_ITER(arg=None, lineno=580)
numba.core.byteflow - DEBUG - stack ['$it56.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=60, stack=('$58get_iter.1',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=60 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi60.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=60 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=60, inst=FOR_ITER(arg=21, lineno=580)
numba.core.byteflow - DEBUG - stack ['$phi60.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=104, stack=(), blockstack=(), npush=0), Edge(pc=62, stack=('$phi60.0', '$60for_iter.2'), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=104 nstack_initial=0), State(pc_initial=62 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=104 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=104, inst=LOAD_FAST(arg=2, lineno=586)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=106, inst=RETURN_VALUE(arg=None, lineno=586)
numba.core.byteflow - DEBUG - stack ['$max_value104.0']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=62 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: ['$phi62.0', '$phi62.1']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=62 nstack_initial=2)
numba.core.byteflow - DEBUG - dispatch pc=62, inst=STORE_FAST(arg=3, lineno=580)
numba.core.byteflow - DEBUG - stack ['$phi62.0', '$phi62.1']
numba.core.byteflow - DEBUG - dispatch pc=64, inst=LOAD_FAST(arg=3, lineno=581)
numba.core.byteflow - DEBUG - stack ['$phi62.0']
numba.core.byteflow - DEBUG - dispatch pc=66, inst=LOAD_METHOD(arg=6, lineno=581)
numba.core.byteflow - DEBUG - stack ['$phi62.0', '$view64.2']
numba.core.byteflow - DEBUG - dispatch pc=68, inst=CALL_METHOD(arg=0, lineno=581)
numba.core.byteflow - DEBUG - stack ['$phi62.0', '$66load_method.3']
numba.core.byteflow - DEBUG - dispatch pc=70, inst=STORE_FAST(arg=4, lineno=581)
numba.core.byteflow - DEBUG - stack ['$phi62.0', '$68call_method.4']
numba.core.byteflow - DEBUG - dispatch pc=72, inst=LOAD_DEREF(arg=1, lineno=582)
numba.core.byteflow - DEBUG - stack ['$phi62.0']
numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=4, lineno=582)
numba.core.byteflow - DEBUG - stack ['$phi62.0', '$72load_deref.5']
numba.core.byteflow - DEBUG - dispatch pc=76, inst=CALL_FUNCTION(arg=1, lineno=582)
numba.core.byteflow - DEBUG - stack ['$phi62.0', '$72load_deref.5', '$v74.6']
numba.core.byteflow - DEBUG - dispatch pc=78, inst=POP_JUMP_IF_FALSE(arg=45, lineno=582)
numba.core.byteflow - DEBUG - stack ['$phi62.0', '$76call_function.7']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$phi62.0',), blockstack=(), npush=0), Edge(pc=88, stack=('$phi62.0',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1), State(pc_initial=88 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi80.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=80, inst=LOAD_FAST(arg=4, lineno=583)
numba.core.byteflow - DEBUG - stack ['$phi80.0']
numba.core.byteflow - DEBUG - dispatch pc=82, inst=ROT_TWO(arg=None, lineno=583)
numba.core.byteflow - DEBUG - stack ['$phi80.0', '$v80.1']
numba.core.byteflow - DEBUG - dispatch pc=84, inst=POP_TOP(arg=None, lineno=583)
numba.core.byteflow - DEBUG - stack ['$v80.1', '$phi80.0']
numba.core.byteflow - DEBUG - dispatch pc=86, inst=RETURN_VALUE(arg=None, lineno=583)
numba.core.byteflow - DEBUG - stack ['$v80.1']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=88 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi88.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=88 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=88, inst=LOAD_DEREF(arg=0, lineno=584)
numba.core.byteflow - DEBUG - stack ['$phi88.0']
numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_FAST(arg=4, lineno=584)
numba.core.byteflow - DEBUG - stack ['$phi88.0', '$88load_deref.1']
numba.core.byteflow - DEBUG - dispatch pc=92, inst=LOAD_FAST(arg=2, lineno=584)
numba.core.byteflow - DEBUG - stack ['$phi88.0', '$88load_deref.1', '$v90.2']
numba.core.byteflow - DEBUG - dispatch pc=94, inst=CALL_FUNCTION(arg=2, lineno=584)
numba.core.byteflow - DEBUG - stack ['$phi88.0', '$88load_deref.1', '$v90.2', '$max_value92.3']
numba.core.byteflow - DEBUG - dispatch pc=96, inst=POP_JUMP_IF_FALSE(arg=52, lineno=584)
numba.core.byteflow - DEBUG - stack ['$phi88.0', '$94call_function.4']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=98, stack=('$phi88.0',), blockstack=(), npush=0), Edge(pc=102, stack=('$phi88.0',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=98 nstack_initial=1), State(pc_initial=102 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi98.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=98 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=98, inst=LOAD_FAST(arg=4, lineno=585)
numba.core.byteflow - DEBUG - stack ['$phi98.0']
numba.core.byteflow - DEBUG - dispatch pc=100, inst=STORE_FAST(arg=2, lineno=585)
numba.core.byteflow - DEBUG - stack ['$phi98.0', '$v98.1']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=102, stack=('$phi98.0',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=1), State(pc_initial=102 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi102.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=102, inst=JUMP_ABSOLUTE(arg=31, lineno=585)
numba.core.byteflow - DEBUG - stack ['$phi102.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=60, stack=('$phi102.0',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=1), State(pc_initial=60 nstack_initial=1)])
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=60 nstack_initial=1)])
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=12 nstack_initial=0): set(),
             State(pc_initial=20 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=56 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=1): {'$phi60.0'},
             State(pc_initial=62 nstack_initial=2): {'$phi62.1'},
             State(pc_initial=80 nstack_initial=1): set(),
             State(pc_initial=88 nstack_initial=1): set(),
             State(pc_initial=98 nstack_initial=1): set(),
             State(pc_initial=102 nstack_initial=1): set(),
             State(pc_initial=104 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {'$phi60.0': State(pc_initial=56 nstack_initial=0),
 '$phi62.1': State(pc_initial=60 nstack_initial=1)}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$phi88.0', State(pc_initial=88 nstack_initial=1)),
                           ('$phi98.0', State(pc_initial=98 nstack_initial=1))},
             '$phi60.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0)),
                          ('$phi102.0',
                           State(pc_initial=102 nstack_initial=1))},
             '$phi62.0': {('$phi60.0', State(pc_initial=60 nstack_initial=1))},
             '$phi62.1': {('$60for_iter.2',
                           State(pc_initial=60 nstack_initial=1))},
             '$phi80.0': {('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi88.0': {('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi98.0': {('$phi88.0', State(pc_initial=88 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi60.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0)),
                          ('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi62.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0)),
                          ('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi62.1': {('$60for_iter.2',
                           State(pc_initial=60 nstack_initial=1))},
             '$phi80.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi88.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi98.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$58get_iter.1',
                            State(pc_initial=56 nstack_initial=0))},
             '$phi60.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi62.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi62.1': {('$60for_iter.2',
                           State(pc_initial=60 nstack_initial=1))},
             '$phi80.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi88.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi98.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$58get_iter.1',
                            State(pc_initial=56 nstack_initial=0))},
             '$phi60.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi62.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi62.1': {('$60for_iter.2',
                           State(pc_initial=60 nstack_initial=1))},
             '$phi80.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi88.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi98.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))}})
numba.core.byteflow - DEBUG - keep phismap: {'$phi60.0': {('$58get_iter.1', State(pc_initial=56 nstack_initial=0))},
 '$phi62.1': {('$60for_iter.2', State(pc_initial=60 nstack_initial=1))}}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=56 nstack_initial=0): {'$phi60.0': '$58get_iter.1'},
             State(pc_initial=60 nstack_initial=1): {'$phi62.1': '$60for_iter.2'}})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$a2.0'}), (4, {'item': '$a2.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2'}), (8, {'lhs': '$4load_attr.1', 'rhs': '$const6.2', 'res': '$8compare_op.3'}), (10, {'pred': '$8compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={12: (), 20: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=12 nstack_initial=0):
AdaptBlockInfo(insts=((12, {'res': '$12load_global.0'}), (14, {'res': '$const14.1'}), (16, {'func': '$12load_global.0', 'args': ['$const14.1'], 'res': '$16call_function.2'}), (18, {'exc': '$16call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=20 nstack_initial=0):
AdaptBlockInfo(insts=((20, {'res': '$20load_global.0'}), (22, {'item': '$20load_global.0', 'res': '$22load_method.1'}), (24, {'res': '$a24.2'}), (26, {'func': '$22load_method.1', 'args': ['$a24.2'], 'res': '$26call_method.3'}), (28, {'value': '$26call_method.3'}), (30, {'res': '$30load_global.4'}), (32, {'res': '$it32.5'}), (34, {'func': '$30load_global.4', 'args': ['$it32.5'], 'res': '$34call_function.6'}), (36, {'item': '$34call_function.6', 'res': '$36load_method.7'}), (38, {'res': '$const38.8'}), (40, {'func': '$36load_method.7', 'args': ['$const38.8'], 'res': '$40call_method.9'}), (42, {'value': '$40call_method.9'}), (44, {'res': '$44load_deref.10'}), (46, {'res': '$max_value46.11'}), (48, {'func': '$44load_deref.10', 'args': ['$max_value46.11'], 'res': '$48call_function.12'}), (50, {'pred': '$48call_function.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: (), 56: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$max_value52.0'}), (54, {'retval': '$max_value52.0', 'castval': '$54return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=56 nstack_initial=0):
AdaptBlockInfo(insts=((56, {'res': '$it56.0'}), (58, {'value': '$it56.0', 'res': '$58get_iter.1'})), outgoing_phis={'$phi60.0': '$58get_iter.1'}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: ('$58get_iter.1',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=60 nstack_initial=1):
AdaptBlockInfo(insts=((60, {'iterator': '$phi60.0', 'pair': '$60for_iter.1', 'indval': '$60for_iter.2', 'pred': '$60for_iter.3'}),), outgoing_phis={'$phi62.1': '$60for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={104: (), 62: ('$phi60.0', '$60for_iter.2')})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=62 nstack_initial=2):
AdaptBlockInfo(insts=((62, {'value': '$phi62.1'}), (64, {'res': '$view64.2'}), (66, {'item': '$view64.2', 'res': '$66load_method.3'}), (68, {'func': '$66load_method.3', 'args': [], 'res': '$68call_method.4'}), (70, {'value': '$68call_method.4'}), (72, {'res': '$72load_deref.5'}), (74, {'res': '$v74.6'}), (76, {'func': '$72load_deref.5', 'args': ['$v74.6'], 'res': '$76call_function.7'}), (78, {'pred': '$76call_function.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi62.0',), 88: ('$phi62.0',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'res': '$v80.1'}), (86, {'retval': '$v80.1', 'castval': '$86return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=88 nstack_initial=1):
AdaptBlockInfo(insts=((88, {'res': '$88load_deref.1'}), (90, {'res': '$v90.2'}), (92, {'res': '$max_value92.3'}), (94, {'func': '$88load_deref.1', 'args': ['$v90.2', '$max_value92.3'], 'res': '$94call_function.4'}), (96, {'pred': '$94call_function.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={98: ('$phi88.0',), 102: ('$phi88.0',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=98 nstack_initial=1):
AdaptBlockInfo(insts=((98, {'res': '$v98.1'}), (100, {'value': '$v98.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: ('$phi98.0',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=102 nstack_initial=1):
AdaptBlockInfo(insts=((102, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: ('$phi102.0',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=104 nstack_initial=0):
AdaptBlockInfo(insts=((104, {'res': '$max_value104.0'}), (106, {'retval': '$max_value104.0', 'castval': '$106return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    $4load_attr.1 = getattr(value=a, attr=size) ['$4load_attr.1', 'a']
    $const6.2 = const(int, 0)                ['$const6.2']
    $8compare_op.3 = $4load_attr.1 == $const6.2 ['$4load_attr.1', '$8compare_op.3', '$const6.2']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    branch $10pred, 12, 20                   ['$10pred']
label 12:
    $12load_global.0 = global(ValueError: <class 'ValueError'>) ['$12load_global.0']
    $const14.1 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const14.1']
    $16call_function.2 = call $12load_global.0($const14.1, func=$12load_global.0, args=[Var($const14.1, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16call_function.2', '$const14.1']
    raise $16call_function.2                 ['$16call_function.2']
label 20:
    $20load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.0']
    $22load_method.1 = getattr(value=$20load_global.0, attr=nditer) ['$20load_global.0', '$22load_method.1']
    it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.1', 'a', 'it']
    $30load_global.4 = global(next: <built-in function next>) ['$30load_global.4']
    $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.4', '$34call_function.6', 'it']
    $36load_method.7 = getattr(value=$34call_function.6, attr=take) ['$34call_function.6', '$36load_method.7']
    $const38.8 = const(int, 0)               ['$const38.8']
    max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_method.7', '$const38.8', 'max_value']
    $44load_deref.10 = freevar(pre_return_func: <ufunc 'isnan'>) ['$44load_deref.10']
    $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_deref.10', '$48call_function.12', 'max_value']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None) ['$48call_function.12', '$50pred', 'bool50']
    branch $50pred, 52, 56                   ['$50pred']
label 52:
    $54return_value.1 = cast(value=max_value) ['$54return_value.1', 'max_value']
    return $54return_value.1                 ['$54return_value.1']
label 56:
    $58get_iter.1 = getiter(value=it)        ['$58get_iter.1', 'it']
    $phi60.0 = $58get_iter.1                 ['$58get_iter.1', '$phi60.0']
    jump 60                                  []
label 60:
    $60for_iter.1 = iternext(value=$phi60.0) ['$60for_iter.1', '$phi60.0']
    $60for_iter.2 = pair_first(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.2']
    $60for_iter.3 = pair_second(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.3']
    $phi62.1 = $60for_iter.2                 ['$60for_iter.2', '$phi62.1']
    branch $60for_iter.3, 62, 104            ['$60for_iter.3']
label 62:
    view = $phi62.1                          ['$phi62.1', 'view']
    $66load_method.3 = getattr(value=view, attr=item) ['$66load_method.3', 'view']
    v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_method.3', 'v']
    $72load_deref.5 = freevar(pre_return_func: <ufunc 'isnan'>) ['$72load_deref.5']
    $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_deref.5', '$76call_function.7', 'v']
    bool78 = global(bool: <class 'bool'>)    ['bool78']
    $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None) ['$76call_function.7', '$78pred', 'bool78']
    branch $78pred, 80, 88                   ['$78pred']
label 80:
    $86return_value.2 = cast(value=v)        ['$86return_value.2', 'v']
    return $86return_value.2                 ['$86return_value.2']
label 88:
    $88load_deref.1 = freevar(comparator: <function max_comparator at 0x708808b2fb50>) ['$88load_deref.1']
    $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$88load_deref.1', '$94call_function.4', 'max_value', 'v']
    bool96 = global(bool: <class 'bool'>)    ['bool96']
    $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None) ['$94call_function.4', '$96pred', 'bool96']
    branch $96pred, 98, 102                  ['$96pred']
label 98:
    max_value = v                            ['max_value', 'v']
    jump 102                                 []
label 102:
    jump 60                                  []
label 104:
    $106return_value.1 = cast(value=max_value) ['$106return_value.1', 'max_value']
    return $106return_value.1                ['$106return_value.1']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752f24d00>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: $4load_attr.1 = getattr(value=a, attr=size)
numba.core.ssa - DEBUG - on stmt: $const6.2 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $8compare_op.3 = $4load_attr.1 == $const6.2
numba.core.ssa - DEBUG - on stmt: bool10 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $10pred, 12, 20
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 12
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752f24d00>
numba.core.ssa - DEBUG - on stmt: $12load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const14.1 = const(str, zero-size array to reduction operation maximum which has no identity)
numba.core.ssa - DEBUG - on stmt: $16call_function.2 = call $12load_global.0($const14.1, func=$12load_global.0, args=[Var($const14.1, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 20
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752f24d00>
numba.core.ssa - DEBUG - on stmt: $20load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $22load_method.1 = getattr(value=$20load_global.0, attr=nditer)
numba.core.ssa - DEBUG - on stmt: it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $30load_global.4 = global(next: <built-in function next>)
numba.core.ssa - DEBUG - on stmt: $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $36load_method.7 = getattr(value=$34call_function.6, attr=take)
numba.core.ssa - DEBUG - on stmt: $const38.8 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $44load_deref.10 = freevar(pre_return_func: <ufunc 'isnan'>)
numba.core.ssa - DEBUG - on stmt: $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $50pred, 52, 56
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 52
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752f24d00>
numba.core.ssa - DEBUG - on stmt: $54return_value.1 = cast(value=max_value)
numba.core.ssa - DEBUG - on stmt: return $54return_value.1
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 56
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752f24d00>
numba.core.ssa - DEBUG - on stmt: $58get_iter.1 = getiter(value=it)
numba.core.ssa - DEBUG - on stmt: $phi60.0 = $58get_iter.1
numba.core.ssa - DEBUG - on stmt: jump 60
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 60
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752f24d00>
numba.core.ssa - DEBUG - on stmt: $60for_iter.1 = iternext(value=$phi60.0)
numba.core.ssa - DEBUG - on stmt: $60for_iter.2 = pair_first(value=$60for_iter.1)
numba.core.ssa - DEBUG - on stmt: $60for_iter.3 = pair_second(value=$60for_iter.1)
numba.core.ssa - DEBUG - on stmt: $phi62.1 = $60for_iter.2
numba.core.ssa - DEBUG - on stmt: branch $60for_iter.3, 62, 104
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 62
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752f24d00>
numba.core.ssa - DEBUG - on stmt: view = $phi62.1
numba.core.ssa - DEBUG - on stmt: $66load_method.3 = getattr(value=view, attr=item)
numba.core.ssa - DEBUG - on stmt: v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $72load_deref.5 = freevar(pre_return_func: <ufunc 'isnan'>)
numba.core.ssa - DEBUG - on stmt: $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: bool78 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $78pred, 80, 88
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 80
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752f24d00>
numba.core.ssa - DEBUG - on stmt: $86return_value.2 = cast(value=v)
numba.core.ssa - DEBUG - on stmt: return $86return_value.2
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 88
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752f24d00>
numba.core.ssa - DEBUG - on stmt: $88load_deref.1 = freevar(comparator: <function max_comparator at 0x708808b2fb50>)
numba.core.ssa - DEBUG - on stmt: $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: bool96 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $96pred, 98, 102
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 98
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752f24d00>
numba.core.ssa - DEBUG - on stmt: max_value = v
numba.core.ssa - DEBUG - on stmt: jump 102
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 102
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752f24d00>
numba.core.ssa - DEBUG - on stmt: jump 60
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 104
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752f24d00>
numba.core.ssa - DEBUG - on stmt: $106return_value.1 = cast(value=max_value)
numba.core.ssa - DEBUG - on stmt: return $106return_value.1
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$106return_value.1': [(<numba.core.ir.Assign object at 0x708752f27040>,
                                     104)],
             '$10pred': [(<numba.core.ir.Assign object at 0x708752fc6f50>, 0)],
             '$12load_global.0': [(<numba.core.ir.Assign object at 0x708752fc7010>,
                                   12)],
             '$16call_function.2': [(<numba.core.ir.Assign object at 0x708752fc76a0>,
                                     12)],
             '$20load_global.0': [(<numba.core.ir.Assign object at 0x708752fc7790>,
                                   20)],
             '$22load_method.1': [(<numba.core.ir.Assign object at 0x708752fc4400>,
                                   20)],
             '$30load_global.4': [(<numba.core.ir.Assign object at 0x708752fc73d0>,
                                   20)],
             '$34call_function.6': [(<numba.core.ir.Assign object at 0x708752fc4b80>,
                                     20)],
             '$36load_method.7': [(<numba.core.ir.Assign object at 0x708752fc7fa0>,
                                   20)],
             '$44load_deref.10': [(<numba.core.ir.Assign object at 0x708752fac4f0>,
                                   20)],
             '$48call_function.12': [(<numba.core.ir.Assign object at 0x708752fac7f0>,
                                      20)],
             '$4load_attr.1': [(<numba.core.ir.Assign object at 0x708752f2a8f0>,
                                0)],
             '$50pred': [(<numba.core.ir.Assign object at 0x708752fafb50>, 20)],
             '$54return_value.1': [(<numba.core.ir.Assign object at 0x708752faf970>,
                                    52)],
             '$58get_iter.1': [(<numba.core.ir.Assign object at 0x708752faf370>,
                                56)],
             '$60for_iter.1': [(<numba.core.ir.Assign object at 0x708752faf0a0>,
                                60)],
             '$60for_iter.2': [(<numba.core.ir.Assign object at 0x708752faf4c0>,
                                60)],
             '$60for_iter.3': [(<numba.core.ir.Assign object at 0x708752faea70>,
                                60)],
             '$66load_method.3': [(<numba.core.ir.Assign object at 0x708752fafd90>,
                                   62)],
             '$72load_deref.5': [(<numba.core.ir.Assign object at 0x708752fad630>,
                                  62)],
             '$76call_function.7': [(<numba.core.ir.Assign object at 0x708752fadcc0>,
                                     62)],
             '$78pred': [(<numba.core.ir.Assign object at 0x708752fadba0>, 62)],
             '$86return_value.2': [(<numba.core.ir.Assign object at 0x708752fad030>,
                                    80)],
             '$88load_deref.1': [(<numba.core.ir.Assign object at 0x708752fad420>,
                                  88)],
             '$8compare_op.3': [(<numba.core.ir.Assign object at 0x708752fc6e00>,
                                 0)],
             '$94call_function.4': [(<numba.core.ir.Assign object at 0x708752fad900>,
                                     88)],
             '$96pred': [(<numba.core.ir.Assign object at 0x708752faff10>, 88)],
             '$const14.1': [(<numba.core.ir.Assign object at 0x708752fc61d0>,
                             12)],
             '$const38.8': [(<numba.core.ir.Assign object at 0x708752fadfc0>,
                             20)],
             '$const6.2': [(<numba.core.ir.Assign object at 0x708752fc5450>,
                            0)],
             '$phi60.0': [(<numba.core.ir.Assign object at 0x708752faf6a0>,
                           56)],
             '$phi62.1': [(<numba.core.ir.Assign object at 0x708752fac9a0>,
                           60)],
             'a': [(<numba.core.ir.Assign object at 0x708752fd87c0>, 0)],
             'bool10': [(<numba.core.ir.Assign object at 0x708752fc6bc0>, 0)],
             'bool50': [(<numba.core.ir.Assign object at 0x708752fac850>, 20)],
             'bool78': [(<numba.core.ir.Assign object at 0x708752fadc60>, 62)],
             'bool96': [(<numba.core.ir.Assign object at 0x708752facc70>, 88)],
             'it': [(<numba.core.ir.Assign object at 0x708752fc7c40>, 20)],
             'max_value': [(<numba.core.ir.Assign object at 0x708752faf760>,
                            20),
                           (<numba.core.ir.Assign object at 0x70875317fbe0>,
                            98)],
             'v': [(<numba.core.ir.Assign object at 0x708752faefe0>, 62)],
             'view': [(<numba.core.ir.Assign object at 0x708752faea10>, 62)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x708752f24d00>
numba.core.ssa - DEBUG - Fix SSA violator on var max_value
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752f273d0>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: $4load_attr.1 = getattr(value=a, attr=size)
numba.core.ssa - DEBUG - on stmt: $const6.2 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $8compare_op.3 = $4load_attr.1 == $const6.2
numba.core.ssa - DEBUG - on stmt: bool10 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $10pred, 12, 20
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 12
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752f273d0>
numba.core.ssa - DEBUG - on stmt: $12load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const14.1 = const(str, zero-size array to reduction operation maximum which has no identity)
numba.core.ssa - DEBUG - on stmt: $16call_function.2 = call $12load_global.0($const14.1, func=$12load_global.0, args=[Var($const14.1, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 20
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752f273d0>
numba.core.ssa - DEBUG - on stmt: $20load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $22load_method.1 = getattr(value=$20load_global.0, attr=nditer)
numba.core.ssa - DEBUG - on stmt: it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $30load_global.4 = global(next: <built-in function next>)
numba.core.ssa - DEBUG - on stmt: $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $36load_method.7 = getattr(value=$34call_function.6, attr=take)
numba.core.ssa - DEBUG - on stmt: $const38.8 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - first assign: max_value
numba.core.ssa - DEBUG - replaced with: max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $44load_deref.10 = freevar(pre_return_func: <ufunc 'isnan'>)
numba.core.ssa - DEBUG - on stmt: $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $50pred, 52, 56
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 52
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752f273d0>
numba.core.ssa - DEBUG - on stmt: $54return_value.1 = cast(value=max_value)
numba.core.ssa - DEBUG - on stmt: return $54return_value.1
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 56
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752f273d0>
numba.core.ssa - DEBUG - on stmt: $58get_iter.1 = getiter(value=it)
numba.core.ssa - DEBUG - on stmt: $phi60.0 = $58get_iter.1
numba.core.ssa - DEBUG - on stmt: jump 60
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 60
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752f273d0>
numba.core.ssa - DEBUG - on stmt: $60for_iter.1 = iternext(value=$phi60.0)
numba.core.ssa - DEBUG - on stmt: $60for_iter.2 = pair_first(value=$60for_iter.1)
numba.core.ssa - DEBUG - on stmt: $60for_iter.3 = pair_second(value=$60for_iter.1)
numba.core.ssa - DEBUG - on stmt: $phi62.1 = $60for_iter.2
numba.core.ssa - DEBUG - on stmt: branch $60for_iter.3, 62, 104
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 62
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752f273d0>
numba.core.ssa - DEBUG - on stmt: view = $phi62.1
numba.core.ssa - DEBUG - on stmt: $66load_method.3 = getattr(value=view, attr=item)
numba.core.ssa - DEBUG - on stmt: v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $72load_deref.5 = freevar(pre_return_func: <ufunc 'isnan'>)
numba.core.ssa - DEBUG - on stmt: $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: bool78 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $78pred, 80, 88
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752f273d0>
numba.core.ssa - DEBUG - on stmt: $86return_value.2 = cast(value=v)
numba.core.ssa - DEBUG - on stmt: return $86return_value.2
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 88
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752f273d0>
numba.core.ssa - DEBUG - on stmt: $88load_deref.1 = freevar(comparator: <function max_comparator at 0x708808b2fb50>)
numba.core.ssa - DEBUG - on stmt: $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: bool96 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $96pred, 98, 102
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752f273d0>
numba.core.ssa - DEBUG - on stmt: max_value = v
numba.core.ssa - DEBUG - replaced with: max_value.1 = v
numba.core.ssa - DEBUG - on stmt: jump 102
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 102
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752f273d0>
numba.core.ssa - DEBUG - on stmt: jump 60
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 104
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752f273d0>
numba.core.ssa - DEBUG - on stmt: $106return_value.1 = cast(value=max_value)
numba.core.ssa - DEBUG - on stmt: return $106return_value.1
numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {20: [<numba.core.ir.Assign object at 0x708752f24370>],
             98: [<numba.core.ir.Assign object at 0x708752f25810>]})
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752f273d0>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: $4load_attr.1 = getattr(value=a, attr=size)
numba.core.ssa - DEBUG - on stmt: $const6.2 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $8compare_op.3 = $4load_attr.1 == $const6.2
numba.core.ssa - DEBUG - on stmt: bool10 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $10pred, 12, 20
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 12
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752f273d0>
numba.core.ssa - DEBUG - on stmt: $12load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const14.1 = const(str, zero-size array to reduction operation maximum which has no identity)
numba.core.ssa - DEBUG - on stmt: $16call_function.2 = call $12load_global.0($const14.1, func=$12load_global.0, args=[Var($const14.1, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 20
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752f273d0>
numba.core.ssa - DEBUG - on stmt: $20load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $22load_method.1 = getattr(value=$20load_global.0, attr=nditer)
numba.core.ssa - DEBUG - on stmt: it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $30load_global.4 = global(next: <built-in function next>)
numba.core.ssa - DEBUG - on stmt: $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $36load_method.7 = getattr(value=$34call_function.6, attr=take)
numba.core.ssa - DEBUG - on stmt: $const38.8 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $44load_deref.10 = freevar(pre_return_func: <ufunc 'isnan'>)
numba.core.ssa - DEBUG - on stmt: $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - find_def var='max_value' stmt=$48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $50pred, 52, 56
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 52
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752f273d0>
numba.core.ssa - DEBUG - on stmt: $54return_value.1 = cast(value=max_value)
numba.core.ssa - DEBUG - find_def var='max_value' stmt=$54return_value.1 = cast(value=max_value)
numba.core.ssa - DEBUG - find_def_from_top label 52
numba.core.ssa - DEBUG - idom 20 from label 52
numba.core.ssa - DEBUG - find_def_from_bottom label 20
numba.core.ssa - DEBUG - on stmt: return $54return_value.1
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 56
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752f273d0>
numba.core.ssa - DEBUG - on stmt: $58get_iter.1 = getiter(value=it)
numba.core.ssa - DEBUG - on stmt: $phi60.0 = $58get_iter.1
numba.core.ssa - DEBUG - on stmt: jump 60
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 60
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752f273d0>
numba.core.ssa - DEBUG - on stmt: $60for_iter.1 = iternext(value=$phi60.0)
numba.core.ssa - DEBUG - on stmt: $60for_iter.2 = pair_first(value=$60for_iter.1)
numba.core.ssa - DEBUG - on stmt: $60for_iter.3 = pair_second(value=$60for_iter.1)
numba.core.ssa - DEBUG - on stmt: $phi62.1 = $60for_iter.2
numba.core.ssa - DEBUG - on stmt: branch $60for_iter.3, 62, 104
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 62
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752f273d0>
numba.core.ssa - DEBUG - on stmt: view = $phi62.1
numba.core.ssa - DEBUG - on stmt: $66load_method.3 = getattr(value=view, attr=item)
numba.core.ssa - DEBUG - on stmt: v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $72load_deref.5 = freevar(pre_return_func: <ufunc 'isnan'>)
numba.core.ssa - DEBUG - on stmt: $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: bool78 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $78pred, 80, 88
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752f273d0>
numba.core.ssa - DEBUG - on stmt: $86return_value.2 = cast(value=v)
numba.core.ssa - DEBUG - on stmt: return $86return_value.2
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 88
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752f273d0>
numba.core.ssa - DEBUG - on stmt: $88load_deref.1 = freevar(comparator: <function max_comparator at 0x708808b2fb50>)
numba.core.ssa - DEBUG - on stmt: $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - find_def var='max_value' stmt=$94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - find_def_from_top label 88
numba.core.ssa - DEBUG - idom 62 from label 88
numba.core.ssa - DEBUG - find_def_from_bottom label 62
numba.core.ssa - DEBUG - find_def_from_top label 62
numba.core.ssa - DEBUG - idom 60 from label 62
numba.core.ssa - DEBUG - find_def_from_bottom label 60
numba.core.ssa - DEBUG - find_def_from_top label 60
numba.core.ssa - DEBUG - insert phi node max_value.2 = phi(incoming_values=[], incoming_blocks=[]) at 60
numba.core.ssa - DEBUG - find_def_from_bottom label 56
numba.core.ssa - DEBUG - find_def_from_top label 56
numba.core.ssa - DEBUG - idom 20 from label 56
numba.core.ssa - DEBUG - find_def_from_bottom label 20
numba.core.ssa - DEBUG - incoming_def max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - find_def_from_bottom label 102
numba.core.ssa - DEBUG - find_def_from_top label 102
numba.core.ssa - DEBUG - insert phi node max_value.3 = phi(incoming_values=[], incoming_blocks=[]) at 102
numba.core.ssa - DEBUG - find_def_from_bottom label 88
numba.core.ssa - DEBUG - find_def_from_top label 88
numba.core.ssa - DEBUG - idom 62 from label 88
numba.core.ssa - DEBUG - find_def_from_bottom label 62
numba.core.ssa - DEBUG - find_def_from_top label 62
numba.core.ssa - DEBUG - idom 60 from label 62
numba.core.ssa - DEBUG - find_def_from_bottom label 60
numba.core.ssa - DEBUG - incoming_def max_value.2 = phi(incoming_values=[Var(max_value, arraymath.py:576)], incoming_blocks=[56])
numba.core.ssa - DEBUG - find_def_from_bottom label 98
numba.core.ssa - DEBUG - incoming_def max_value.1 = v
numba.core.ssa - DEBUG - incoming_def max_value.3 = phi(incoming_values=[Var(max_value.2, arraymath.py:584), Var(max_value.1, arraymath.py:585)], incoming_blocks=[88, 98])
numba.core.ssa - DEBUG - replaced with: $94call_function.4 = call $88load_deref.1(v, max_value.2, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value.2, arraymath.py:584)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: bool96 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $96pred, 98, 102
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752f273d0>
numba.core.ssa - DEBUG - on stmt: max_value.1 = v
numba.core.ssa - DEBUG - on stmt: jump 102
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 102
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752f273d0>
numba.core.ssa - DEBUG - on stmt: jump 60
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 104
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752f273d0>
numba.core.ssa - DEBUG - on stmt: $106return_value.1 = cast(value=max_value)
numba.core.ssa - DEBUG - find_def var='max_value' stmt=$106return_value.1 = cast(value=max_value)
numba.core.ssa - DEBUG - find_def_from_top label 104
numba.core.ssa - DEBUG - idom 60 from label 104
numba.core.ssa - DEBUG - find_def_from_bottom label 60
numba.core.ssa - DEBUG - replaced with: $106return_value.1 = cast(value=max_value.2)
numba.core.ssa - DEBUG - on stmt: return $106return_value.1
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=4691)
           2	LOAD_FAST(arg=1, lineno=4692)
           4	LOAD_FAST(arg=0, lineno=4692)
           6	LOAD_ATTR(arg=0, lineno=4692)
           8	LOAD_CONST(arg=1, lineno=4692)
          10	BINARY_SUBTRACT(arg=None, lineno=4692)
          12	COMPARE_OP(arg=4, lineno=4692)
          14	POP_JUMP_IF_TRUE(arg=15, lineno=4692)
          16	LOAD_FAST(arg=1, lineno=4692)
          18	LOAD_FAST(arg=0, lineno=4692)
          20	LOAD_ATTR(arg=0, lineno=4692)
          22	UNARY_NEGATIVE(arg=None, lineno=4692)
          24	COMPARE_OP(arg=0, lineno=4692)
          26	POP_JUMP_IF_FALSE(arg=19, lineno=4692)
>         28	LOAD_GLOBAL(arg=1, lineno=4693)
          30	LOAD_CONST(arg=2, lineno=4693)
          32	CALL_FUNCTION(arg=1, lineno=4693)
          34	RAISE_VARARGS(arg=1, lineno=4693)
>         36	LOAD_FAST(arg=0, lineno=4694)
          38	LOAD_METHOD(arg=2, lineno=4694)
          40	CALL_METHOD(arg=0, lineno=4694)
          42	LOAD_FAST(arg=1, lineno=4694)
          44	BINARY_SUBSCR(arg=None, lineno=4694)
          46	RETURN_VALUE(arg=None, lineno=4694)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=4691)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=1, lineno=4692)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$indices2.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$indices2.0', '$a4.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_CONST(arg=1, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$indices2.0', '$6load_attr.2']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=BINARY_SUBTRACT(arg=None, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$indices2.0', '$6load_attr.2', '$const8.3']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=COMPARE_OP(arg=4, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$indices2.0', '$10binary_subtract.4']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=POP_JUMP_IF_TRUE(arg=15, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$12compare_op.5']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=16, stack=(), blockstack=(), npush=0), Edge(pc=28, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=16 nstack_initial=0), State(pc_initial=28 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=16 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=4692)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$indices16.0']
numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_ATTR(arg=0, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$indices16.0', '$a18.1']
numba.core.byteflow - DEBUG - dispatch pc=22, inst=UNARY_NEGATIVE(arg=None, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$indices16.0', '$20load_attr.2']
numba.core.byteflow - DEBUG - dispatch pc=24, inst=COMPARE_OP(arg=0, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$indices16.0', '$22unary_negative.3']
numba.core.byteflow - DEBUG - dispatch pc=26, inst=POP_JUMP_IF_FALSE(arg=19, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$24compare_op.4']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=28, stack=(), blockstack=(), npush=0), Edge(pc=36, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=28 nstack_initial=0), State(pc_initial=28 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=28 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=28, inst=LOAD_GLOBAL(arg=1, lineno=4693)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=2, lineno=4693)
numba.core.byteflow - DEBUG - stack ['$28load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=32, inst=CALL_FUNCTION(arg=1, lineno=4693)
numba.core.byteflow - DEBUG - stack ['$28load_global.0', '$const30.1']
numba.core.byteflow - DEBUG - dispatch pc=34, inst=RAISE_VARARGS(arg=1, lineno=4693)
numba.core.byteflow - DEBUG - stack ['$32call_function.2']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=28 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=36 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=36 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=4694)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_METHOD(arg=2, lineno=4694)
numba.core.byteflow - DEBUG - stack ['$a36.0']
numba.core.byteflow - DEBUG - dispatch pc=40, inst=CALL_METHOD(arg=0, lineno=4694)
numba.core.byteflow - DEBUG - stack ['$38load_method.1']
numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_FAST(arg=1, lineno=4694)
numba.core.byteflow - DEBUG - stack ['$40call_method.2']
numba.core.byteflow - DEBUG - dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=4694)
numba.core.byteflow - DEBUG - stack ['$40call_method.2', '$indices42.3']
numba.core.byteflow - DEBUG - dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=4694)
numba.core.byteflow - DEBUG - stack ['$44binary_subscr.4']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=16 nstack_initial=0): set(),
             State(pc_initial=28 nstack_initial=0): set(),
             State(pc_initial=36 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - keep phismap: {}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$indices2.0'}), (4, {'res': '$a4.1'}), (6, {'item': '$a4.1', 'res': '$6load_attr.2'}), (8, {'res': '$const8.3'}), (10, {'lhs': '$6load_attr.2', 'rhs': '$const8.3', 'res': '$10binary_subtract.4'}), (12, {'lhs': '$indices2.0', 'rhs': '$10binary_subtract.4', 'res': '$12compare_op.5'}), (14, {'pred': '$12compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: (), 28: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=16 nstack_initial=0):
AdaptBlockInfo(insts=((16, {'res': '$indices16.0'}), (18, {'res': '$a18.1'}), (20, {'item': '$a18.1', 'res': '$20load_attr.2'}), (22, {'value': '$20load_attr.2', 'res': '$22unary_negative.3'}), (24, {'lhs': '$indices16.0', 'rhs': '$22unary_negative.3', 'res': '$24compare_op.4'}), (26, {'pred': '$24compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: (), 36: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=28 nstack_initial=0):
AdaptBlockInfo(insts=((28, {'res': '$28load_global.0'}), (30, {'res': '$const30.1'}), (32, {'func': '$28load_global.0', 'args': ['$const30.1'], 'res': '$32call_function.2'}), (34, {'exc': '$32call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'res': '$a36.0'}), (38, {'item': '$a36.0', 'res': '$38load_method.1'}), (40, {'func': '$38load_method.1', 'args': [], 'res': '$40call_method.2'}), (42, {'res': '$indices42.3'}), (44, {'index': '$indices42.3', 'target': '$40call_method.2', 'res': '$44binary_subscr.4'}), (46, {'retval': '$44binary_subscr.4', 'castval': '$46return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $const8.3 = const(int, 1)                ['$const8.3']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    branch $14pred, 28, 16                   ['$14pred']
label 16:
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
    branch $26pred, 28, 36                   ['$26pred']
label 28:
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $const30.1 = const(str, Index out of bounds) ['$const30.1']
    $32call_function.2 = call $28load_global.0($const30.1, func=$28load_global.0, args=[Var($const30.1, arrayobj.py:4693)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1']
    raise $32call_function.2                 ['$32call_function.2']
label 36:
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752fc3550>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: indices = arg(1, name=indices)
numba.core.ssa - DEBUG - on stmt: $6load_attr.2 = getattr(value=a, attr=size)
numba.core.ssa - DEBUG - on stmt: $const8.3 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $10binary_subtract.4 = $6load_attr.2 - $const8.3
numba.core.ssa - DEBUG - on stmt: $12compare_op.5 = indices > $10binary_subtract.4
numba.core.ssa - DEBUG - on stmt: bool14 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $14pred, 28, 16
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 16
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752fc3550>
numba.core.ssa - DEBUG - on stmt: $20load_attr.2 = getattr(value=a, attr=size)
numba.core.ssa - DEBUG - on stmt: $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2)
numba.core.ssa - DEBUG - on stmt: $24compare_op.4 = indices < $22unary_negative.3
numba.core.ssa - DEBUG - on stmt: bool26 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $26pred, 28, 36
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 28
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752fc3550>
numba.core.ssa - DEBUG - on stmt: $28load_global.0 = global(IndexError: <class 'IndexError'>)
numba.core.ssa - DEBUG - on stmt: $const30.1 = const(str, Index out of bounds)
numba.core.ssa - DEBUG - on stmt: $32call_function.2 = call $28load_global.0($const30.1, func=$28load_global.0, args=[Var($const30.1, arrayobj.py:4693)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'IndexError'>('Index out of bounds')
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 36
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752fc3550>
numba.core.ssa - DEBUG - on stmt: $38load_method.1 = getattr(value=a, attr=ravel)
numba.core.ssa - DEBUG - on stmt: $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $46return_value.5 = cast(value=$44binary_subscr.4)
numba.core.ssa - DEBUG - on stmt: return $46return_value.5
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10binary_subtract.4': [(<numba.core.ir.Assign object at 0x708752f29d50>,
                                       0)],
             '$12compare_op.5': [(<numba.core.ir.Assign object at 0x708752f29ed0>,
                                  0)],
             '$14pred': [(<numba.core.ir.Assign object at 0x708752f2a140>, 0)],
             '$20load_attr.2': [(<numba.core.ir.Assign object at 0x708752fc07c0>,
                                 16)],
             '$22unary_negative.3': [(<numba.core.ir.Assign object at 0x708752fc15d0>,
                                      16)],
             '$24compare_op.4': [(<numba.core.ir.Assign object at 0x708752fc01f0>,
                                  16)],
             '$26pred': [(<numba.core.ir.Assign object at 0x708752fc2e30>, 16)],
             '$28load_global.0': [(<numba.core.ir.Assign object at 0x708752fc14b0>,
                                   28)],
             '$32call_function.2': [(<numba.core.ir.Assign object at 0x708752fc0190>,
                                     28)],
             '$38load_method.1': [(<numba.core.ir.Assign object at 0x708752fc1720>,
                                   36)],
             '$40call_method.2': [(<numba.core.ir.Assign object at 0x708752fc1300>,
                                   36)],
             '$44binary_subscr.4': [(<numba.core.ir.Assign object at 0x708752fc1c30>,
                                     36)],
             '$46return_value.5': [(<numba.core.ir.Assign object at 0x708752fc1a20>,
                                    36)],
             '$6load_attr.2': [(<numba.core.ir.Assign object at 0x708752f29810>,
                                0)],
             '$const30.1': [(<numba.core.ir.Assign object at 0x708752fc1510>,
                             28)],
             '$const8.3': [(<numba.core.ir.Assign object at 0x708752f29ba0>,
                            0)],
             'a': [(<numba.core.ir.Assign object at 0x708752f2a6e0>, 0)],
             'bool14': [(<numba.core.ir.Assign object at 0x708752f2a020>, 0)],
             'bool26': [(<numba.core.ir.Assign object at 0x708752fc03a0>, 16)],
             'indices': [(<numba.core.ir.Assign object at 0x708752f2a4a0>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x708752fc3550>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2230)
           2	LOAD_FAST(arg=0, lineno=2232)
           4	LOAD_METHOD(arg=0, lineno=2232)
           6	LOAD_FAST(arg=0, lineno=2232)
           8	LOAD_ATTR(arg=1, lineno=2232)
          10	CALL_METHOD(arg=1, lineno=2232)
          12	RETURN_VALUE(arg=None, lineno=2232)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2230)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2232)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_METHOD(arg=0, lineno=2232)
numba.core.byteflow - DEBUG - stack ['$ary2.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=2232)
numba.core.byteflow - DEBUG - stack ['$4load_method.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_ATTR(arg=1, lineno=2232)
numba.core.byteflow - DEBUG - stack ['$4load_method.1', '$ary6.2']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=CALL_METHOD(arg=1, lineno=2232)
numba.core.byteflow - DEBUG - stack ['$4load_method.1', '$8load_attr.3']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=2232)
numba.core.byteflow - DEBUG - stack ['$10call_method.4']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - keep phismap: {}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$ary2.0'}), (4, {'item': '$ary2.0', 'res': '$4load_method.1'}), (6, {'res': '$ary6.2'}), (8, {'item': '$ary6.2', 'res': '$8load_attr.3'}), (10, {'func': '$4load_method.1', 'args': ['$8load_attr.3'], 'res': '$10call_method.4'}), (12, {'retval': '$10call_method.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    ary = arg(0, name=ary)                   ['ary']
    $4load_method.1 = getattr(value=ary, attr=reshape) ['$4load_method.1', 'ary']
    $8load_attr.3 = getattr(value=ary, attr=size) ['$8load_attr.3', 'ary']
    $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2232)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', '$8load_attr.3']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087533fb3a0>
numba.core.ssa - DEBUG - on stmt: ary = arg(0, name=ary)
numba.core.ssa - DEBUG - on stmt: $4load_method.1 = getattr(value=ary, attr=reshape)
numba.core.ssa - DEBUG - on stmt: $8load_attr.3 = getattr(value=ary, attr=size)
numba.core.ssa - DEBUG - on stmt: $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2232)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $12return_value.5 = cast(value=$10call_method.4)
numba.core.ssa - DEBUG - on stmt: return $12return_value.5
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10call_method.4': [(<numba.core.ir.Assign object at 0x7087533f9ba0>,
                                   0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x7087533f9b10>,
                                    0)],
             '$4load_method.1': [(<numba.core.ir.Assign object at 0x7087533f9d80>,
                                  0)],
             '$8load_attr.3': [(<numba.core.ir.Assign object at 0x7087533f99f0>,
                                0)],
             'ary': [(<numba.core.ir.Assign object at 0x7087533fa110>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7087533fb3a0>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2046)
           2	LOAD_CONST(arg=1, lineno=2047)
           4	STORE_FAST(arg=2, lineno=2047)
           6	LOAD_CONST(arg=2, lineno=2048)
           8	STORE_FAST(arg=3, lineno=2048)
          10	LOAD_GLOBAL(arg=0, lineno=2049)
          12	LOAD_FAST(arg=1, lineno=2049)
          14	CALL_FUNCTION(arg=1, lineno=2049)
          16	GET_ITER(arg=None, lineno=2049)
>         18	FOR_ITER(arg=19, lineno=2049)
          20	UNPACK_SEQUENCE(arg=2, lineno=2049)
          22	STORE_FAST(arg=4, lineno=2049)
          24	STORE_FAST(arg=5, lineno=2049)
          26	LOAD_FAST(arg=5, lineno=2050)
          28	LOAD_CONST(arg=1, lineno=2050)
          30	COMPARE_OP(arg=0, lineno=2050)
          32	POP_JUMP_IF_FALSE(arg=25, lineno=2050)
          34	LOAD_FAST(arg=2, lineno=2051)
          36	LOAD_CONST(arg=2, lineno=2051)
          38	INPLACE_ADD(arg=None, lineno=2051)
          40	STORE_FAST(arg=2, lineno=2051)
          42	LOAD_FAST(arg=4, lineno=2052)
          44	STORE_FAST(arg=6, lineno=2052)
          46	JUMP_ABSOLUTE(arg=10, lineno=2052)
>         48	LOAD_FAST(arg=3, lineno=2054)
          50	LOAD_FAST(arg=5, lineno=2054)
          52	INPLACE_MULTIPLY(arg=None, lineno=2054)
          54	STORE_FAST(arg=3, lineno=2054)
          56	JUMP_ABSOLUTE(arg=10, lineno=2054)
>         58	LOAD_FAST(arg=2, lineno=2056)
          60	LOAD_CONST(arg=1, lineno=2056)
          62	COMPARE_OP(arg=2, lineno=2056)
          64	POP_JUMP_IF_FALSE(arg=44, lineno=2056)
          66	LOAD_FAST(arg=0, lineno=2057)
          68	LOAD_FAST(arg=3, lineno=2057)
          70	COMPARE_OP(arg=3, lineno=2057)
          72	POP_JUMP_IF_FALSE(arg=42, lineno=2057)
          74	LOAD_GLOBAL(arg=1, lineno=2058)
          76	LOAD_CONST(arg=3, lineno=2058)
          78	CALL_FUNCTION(arg=1, lineno=2058)
          80	RAISE_VARARGS(arg=1, lineno=2058)
>         82	LOAD_CONST(arg=0, lineno=2057)
          84	RETURN_VALUE(arg=None, lineno=2057)
>         86	LOAD_FAST(arg=2, lineno=2060)
          88	LOAD_CONST(arg=2, lineno=2060)
          90	COMPARE_OP(arg=2, lineno=2060)
          92	POP_JUMP_IF_FALSE(arg=81, lineno=2060)
          94	LOAD_FAST(arg=3, lineno=2062)
          96	LOAD_CONST(arg=1, lineno=2062)
          98	COMPARE_OP(arg=2, lineno=2062)
         100	POP_JUMP_IF_FALSE(arg=59, lineno=2062)
         102	LOAD_CONST(arg=1, lineno=2063)
         104	STORE_FAST(arg=7, lineno=2063)
         106	LOAD_FAST(arg=0, lineno=2064)
         108	LOAD_CONST(arg=1, lineno=2064)
         110	COMPARE_OP(arg=2, lineno=2064)
         112	STORE_FAST(arg=8, lineno=2064)
         114	JUMP_FORWARD(arg=10, lineno=2064)
>        116	LOAD_FAST(arg=0, lineno=2066)
         118	LOAD_FAST(arg=3, lineno=2066)
         120	BINARY_FLOOR_DIVIDE(arg=None, lineno=2066)
         122	STORE_FAST(arg=7, lineno=2066)
         124	LOAD_FAST(arg=0, lineno=2067)
         126	LOAD_FAST(arg=3, lineno=2067)
         128	BINARY_MODULO(arg=None, lineno=2067)
         130	LOAD_CONST(arg=1, lineno=2067)
         132	COMPARE_OP(arg=2, lineno=2067)
         134	STORE_FAST(arg=8, lineno=2067)
>        136	LOAD_FAST(arg=8, lineno=2068)
         138	POP_JUMP_IF_TRUE(arg=75, lineno=2068)
         140	LOAD_GLOBAL(arg=1, lineno=2069)
         142	LOAD_CONST(arg=3, lineno=2069)
         144	CALL_FUNCTION(arg=1, lineno=2069)
         146	RAISE_VARARGS(arg=1, lineno=2069)
>        148	LOAD_FAST(arg=7, lineno=2070)
         150	LOAD_FAST(arg=1, lineno=2070)
         152	LOAD_FAST(arg=6, lineno=2070)
         154	STORE_SUBSCR(arg=None, lineno=2070)
         156	LOAD_CONST(arg=0, lineno=2070)
         158	RETURN_VALUE(arg=None, lineno=2070)
>        160	LOAD_GLOBAL(arg=1, lineno=2073)
         162	LOAD_CONST(arg=4, lineno=2073)
         164	CALL_FUNCTION(arg=1, lineno=2073)
         166	RAISE_VARARGS(arg=1, lineno=2073)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2046)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_CONST(arg=1, lineno=2047)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=STORE_FAST(arg=2, lineno=2047)
numba.core.byteflow - DEBUG - stack ['$const2.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=2, lineno=2048)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=3, lineno=2048)
numba.core.byteflow - DEBUG - stack ['$const6.1']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_GLOBAL(arg=0, lineno=2049)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=2049)
numba.core.byteflow - DEBUG - stack ['$10load_global.2']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=2049)
numba.core.byteflow - DEBUG - stack ['$10load_global.2', '$shape12.3']
numba.core.byteflow - DEBUG - dispatch pc=16, inst=GET_ITER(arg=None, lineno=2049)
numba.core.byteflow - DEBUG - stack ['$14call_function.4']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=18, stack=('$16get_iter.5',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=18 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi18.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=18 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=18, inst=FOR_ITER(arg=19, lineno=2049)
numba.core.byteflow - DEBUG - stack ['$phi18.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=58, stack=(), blockstack=(), npush=0), Edge(pc=20, stack=('$phi18.0', '$18for_iter.2'), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=58 nstack_initial=0), State(pc_initial=20 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=58 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=58, inst=LOAD_FAST(arg=2, lineno=2056)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_CONST(arg=1, lineno=2056)
numba.core.byteflow - DEBUG - stack ['$num_neg_value58.0']
numba.core.byteflow - DEBUG - dispatch pc=62, inst=COMPARE_OP(arg=2, lineno=2056)
numba.core.byteflow - DEBUG - stack ['$num_neg_value58.0', '$const60.1']
numba.core.byteflow - DEBUG - dispatch pc=64, inst=POP_JUMP_IF_FALSE(arg=44, lineno=2056)
numba.core.byteflow - DEBUG - stack ['$62compare_op.2']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=66, stack=(), blockstack=(), npush=0), Edge(pc=86, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=20 nstack_initial=2), State(pc_initial=66 nstack_initial=0), State(pc_initial=86 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: ['$phi20.0', '$phi20.1']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=20 nstack_initial=2)
numba.core.byteflow - DEBUG - dispatch pc=20, inst=UNPACK_SEQUENCE(arg=2, lineno=2049)
numba.core.byteflow - DEBUG - stack ['$phi20.0', '$phi20.1']
numba.core.byteflow - DEBUG - dispatch pc=22, inst=STORE_FAST(arg=4, lineno=2049)
numba.core.byteflow - DEBUG - stack ['$phi20.0', '$20unpack_sequence.3', '$20unpack_sequence.2']
numba.core.byteflow - DEBUG - dispatch pc=24, inst=STORE_FAST(arg=5, lineno=2049)
numba.core.byteflow - DEBUG - stack ['$phi20.0', '$20unpack_sequence.3']
numba.core.byteflow - DEBUG - dispatch pc=26, inst=LOAD_FAST(arg=5, lineno=2050)
numba.core.byteflow - DEBUG - stack ['$phi20.0']
numba.core.byteflow - DEBUG - dispatch pc=28, inst=LOAD_CONST(arg=1, lineno=2050)
numba.core.byteflow - DEBUG - stack ['$phi20.0', '$s26.5']
numba.core.byteflow - DEBUG - dispatch pc=30, inst=COMPARE_OP(arg=0, lineno=2050)
numba.core.byteflow - DEBUG - stack ['$phi20.0', '$s26.5', '$const28.6']
numba.core.byteflow - DEBUG - dispatch pc=32, inst=POP_JUMP_IF_FALSE(arg=25, lineno=2050)
numba.core.byteflow - DEBUG - stack ['$phi20.0', '$30compare_op.7']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=34, stack=('$phi20.0',), blockstack=(), npush=0), Edge(pc=48, stack=('$phi20.0',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=66 nstack_initial=0), State(pc_initial=86 nstack_initial=0), State(pc_initial=34 nstack_initial=1), State(pc_initial=48 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=66 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=66, inst=LOAD_FAST(arg=0, lineno=2057)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=68, inst=LOAD_FAST(arg=3, lineno=2057)
numba.core.byteflow - DEBUG - stack ['$origsize66.0']
numba.core.byteflow - DEBUG - dispatch pc=70, inst=COMPARE_OP(arg=3, lineno=2057)
numba.core.byteflow - DEBUG - stack ['$origsize66.0', '$known_size68.1']
numba.core.byteflow - DEBUG - dispatch pc=72, inst=POP_JUMP_IF_FALSE(arg=42, lineno=2057)
numba.core.byteflow - DEBUG - stack ['$70compare_op.2']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=74, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=86 nstack_initial=0), State(pc_initial=34 nstack_initial=1), State(pc_initial=48 nstack_initial=1), State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=86 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=2, lineno=2060)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=88, inst=LOAD_CONST(arg=2, lineno=2060)
numba.core.byteflow - DEBUG - stack ['$num_neg_value86.0']
numba.core.byteflow - DEBUG - dispatch pc=90, inst=COMPARE_OP(arg=2, lineno=2060)
numba.core.byteflow - DEBUG - stack ['$num_neg_value86.0', '$const88.1']
numba.core.byteflow - DEBUG - dispatch pc=92, inst=POP_JUMP_IF_FALSE(arg=81, lineno=2060)
numba.core.byteflow - DEBUG - stack ['$90compare_op.2']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=94, stack=(), blockstack=(), npush=0), Edge(pc=160, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=34 nstack_initial=1), State(pc_initial=48 nstack_initial=1), State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=94 nstack_initial=0), State(pc_initial=160 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: ['$phi34.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=34 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=34, inst=LOAD_FAST(arg=2, lineno=2051)
numba.core.byteflow - DEBUG - stack ['$phi34.0']
numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_CONST(arg=2, lineno=2051)
numba.core.byteflow - DEBUG - stack ['$phi34.0', '$num_neg_value34.1']
numba.core.byteflow - DEBUG - dispatch pc=38, inst=INPLACE_ADD(arg=None, lineno=2051)
numba.core.byteflow - DEBUG - stack ['$phi34.0', '$num_neg_value34.1', '$const36.2']
numba.core.byteflow - DEBUG - dispatch pc=40, inst=STORE_FAST(arg=2, lineno=2051)
numba.core.byteflow - DEBUG - stack ['$phi34.0', '$38inplace_add.3']
numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_FAST(arg=4, lineno=2052)
numba.core.byteflow - DEBUG - stack ['$phi34.0']
numba.core.byteflow - DEBUG - dispatch pc=44, inst=STORE_FAST(arg=6, lineno=2052)
numba.core.byteflow - DEBUG - stack ['$phi34.0', '$ax42.4']
numba.core.byteflow - DEBUG - dispatch pc=46, inst=JUMP_ABSOLUTE(arg=10, lineno=2052)
numba.core.byteflow - DEBUG - stack ['$phi34.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=18, stack=('$phi34.0',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=48 nstack_initial=1), State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=94 nstack_initial=0), State(pc_initial=160 nstack_initial=0), State(pc_initial=18 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi48.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=48 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_FAST(arg=3, lineno=2054)
numba.core.byteflow - DEBUG - stack ['$phi48.0']
numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_FAST(arg=5, lineno=2054)
numba.core.byteflow - DEBUG - stack ['$phi48.0', '$known_size48.1']
numba.core.byteflow - DEBUG - dispatch pc=52, inst=INPLACE_MULTIPLY(arg=None, lineno=2054)
numba.core.byteflow - DEBUG - stack ['$phi48.0', '$known_size48.1', '$s50.2']
numba.core.byteflow - DEBUG - dispatch pc=54, inst=STORE_FAST(arg=3, lineno=2054)
numba.core.byteflow - DEBUG - stack ['$phi48.0', '$52inplace_multiply.3']
numba.core.byteflow - DEBUG - dispatch pc=56, inst=JUMP_ABSOLUTE(arg=10, lineno=2054)
numba.core.byteflow - DEBUG - stack ['$phi48.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=18, stack=('$phi48.0',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=0), State(pc_initial=82 nstack_initial=0), State(pc_initial=94 nstack_initial=0), State(pc_initial=160 nstack_initial=0), State(pc_initial=18 nstack_initial=1), State(pc_initial=18 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_GLOBAL(arg=1, lineno=2058)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=76, inst=LOAD_CONST(arg=3, lineno=2058)
numba.core.byteflow - DEBUG - stack ['$74load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=78, inst=CALL_FUNCTION(arg=1, lineno=2058)
numba.core.byteflow - DEBUG - stack ['$74load_global.0', '$const76.1']
numba.core.byteflow - DEBUG - dispatch pc=80, inst=RAISE_VARARGS(arg=1, lineno=2058)
numba.core.byteflow - DEBUG - stack ['$78call_function.2']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=0), State(pc_initial=94 nstack_initial=0), State(pc_initial=160 nstack_initial=0), State(pc_initial=18 nstack_initial=1), State(pc_initial=18 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=82, inst=LOAD_CONST(arg=0, lineno=2057)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=84, inst=RETURN_VALUE(arg=None, lineno=2057)
numba.core.byteflow - DEBUG - stack ['$const82.0']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=94 nstack_initial=0), State(pc_initial=160 nstack_initial=0), State(pc_initial=18 nstack_initial=1), State(pc_initial=18 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=94 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=94, inst=LOAD_FAST(arg=3, lineno=2062)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=96, inst=LOAD_CONST(arg=1, lineno=2062)
numba.core.byteflow - DEBUG - stack ['$known_size94.0']
numba.core.byteflow - DEBUG - dispatch pc=98, inst=COMPARE_OP(arg=2, lineno=2062)
numba.core.byteflow - DEBUG - stack ['$known_size94.0', '$const96.1']
numba.core.byteflow - DEBUG - dispatch pc=100, inst=POP_JUMP_IF_FALSE(arg=59, lineno=2062)
numba.core.byteflow - DEBUG - stack ['$98compare_op.2']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=102, stack=(), blockstack=(), npush=0), Edge(pc=116, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=160 nstack_initial=0), State(pc_initial=18 nstack_initial=1), State(pc_initial=18 nstack_initial=1), State(pc_initial=102 nstack_initial=0), State(pc_initial=116 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=160 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=160, inst=LOAD_GLOBAL(arg=1, lineno=2073)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=162, inst=LOAD_CONST(arg=4, lineno=2073)
numba.core.byteflow - DEBUG - stack ['$160load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=164, inst=CALL_FUNCTION(arg=1, lineno=2073)
numba.core.byteflow - DEBUG - stack ['$160load_global.0', '$const162.1']
numba.core.byteflow - DEBUG - dispatch pc=166, inst=RAISE_VARARGS(arg=1, lineno=2073)
numba.core.byteflow - DEBUG - stack ['$164call_function.2']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=18 nstack_initial=1), State(pc_initial=18 nstack_initial=1), State(pc_initial=102 nstack_initial=0), State(pc_initial=116 nstack_initial=0)])
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=18 nstack_initial=1), State(pc_initial=102 nstack_initial=0), State(pc_initial=116 nstack_initial=0)])
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=0), State(pc_initial=116 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=102, inst=LOAD_CONST(arg=1, lineno=2063)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=104, inst=STORE_FAST(arg=7, lineno=2063)
numba.core.byteflow - DEBUG - stack ['$const102.0']
numba.core.byteflow - DEBUG - dispatch pc=106, inst=LOAD_FAST(arg=0, lineno=2064)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=1, lineno=2064)
numba.core.byteflow - DEBUG - stack ['$origsize106.1']
numba.core.byteflow - DEBUG - dispatch pc=110, inst=COMPARE_OP(arg=2, lineno=2064)
numba.core.byteflow - DEBUG - stack ['$origsize106.1', '$const108.2']
numba.core.byteflow - DEBUG - dispatch pc=112, inst=STORE_FAST(arg=8, lineno=2064)
numba.core.byteflow - DEBUG - stack ['$110compare_op.3']
numba.core.byteflow - DEBUG - dispatch pc=114, inst=JUMP_FORWARD(arg=10, lineno=2064)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=136, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=116 nstack_initial=0), State(pc_initial=136 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=116 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=116, inst=LOAD_FAST(arg=0, lineno=2066)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=118, inst=LOAD_FAST(arg=3, lineno=2066)
numba.core.byteflow - DEBUG - stack ['$origsize116.0']
numba.core.byteflow - DEBUG - dispatch pc=120, inst=BINARY_FLOOR_DIVIDE(arg=None, lineno=2066)
numba.core.byteflow - DEBUG - stack ['$origsize116.0', '$known_size118.1']
numba.core.byteflow - DEBUG - dispatch pc=122, inst=STORE_FAST(arg=7, lineno=2066)
numba.core.byteflow - DEBUG - stack ['$120binary_floor_divide.2']
numba.core.byteflow - DEBUG - dispatch pc=124, inst=LOAD_FAST(arg=0, lineno=2067)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=126, inst=LOAD_FAST(arg=3, lineno=2067)
numba.core.byteflow - DEBUG - stack ['$origsize124.3']
numba.core.byteflow - DEBUG - dispatch pc=128, inst=BINARY_MODULO(arg=None, lineno=2067)
numba.core.byteflow - DEBUG - stack ['$origsize124.3', '$known_size126.4']
numba.core.byteflow - DEBUG - dispatch pc=130, inst=LOAD_CONST(arg=1, lineno=2067)
numba.core.byteflow - DEBUG - stack ['$128binary_modulo.5']
numba.core.byteflow - DEBUG - dispatch pc=132, inst=COMPARE_OP(arg=2, lineno=2067)
numba.core.byteflow - DEBUG - stack ['$128binary_modulo.5', '$const130.6']
numba.core.byteflow - DEBUG - dispatch pc=134, inst=STORE_FAST(arg=8, lineno=2067)
numba.core.byteflow - DEBUG - stack ['$132compare_op.7']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=136, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=136 nstack_initial=0), State(pc_initial=136 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=136 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=136, inst=LOAD_FAST(arg=8, lineno=2068)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=138, inst=POP_JUMP_IF_TRUE(arg=75, lineno=2068)
numba.core.byteflow - DEBUG - stack ['$ok136.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=140, stack=(), blockstack=(), npush=0), Edge(pc=148, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=136 nstack_initial=0), State(pc_initial=140 nstack_initial=0), State(pc_initial=148 nstack_initial=0)])
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=140 nstack_initial=0), State(pc_initial=148 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=140 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=140, inst=LOAD_GLOBAL(arg=1, lineno=2069)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=142, inst=LOAD_CONST(arg=3, lineno=2069)
numba.core.byteflow - DEBUG - stack ['$140load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=144, inst=CALL_FUNCTION(arg=1, lineno=2069)
numba.core.byteflow - DEBUG - stack ['$140load_global.0', '$const142.1']
numba.core.byteflow - DEBUG - dispatch pc=146, inst=RAISE_VARARGS(arg=1, lineno=2069)
numba.core.byteflow - DEBUG - stack ['$144call_function.2']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=148 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=148 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=148, inst=LOAD_FAST(arg=7, lineno=2070)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=150, inst=LOAD_FAST(arg=1, lineno=2070)
numba.core.byteflow - DEBUG - stack ['$inferred148.0']
numba.core.byteflow - DEBUG - dispatch pc=152, inst=LOAD_FAST(arg=6, lineno=2070)
numba.core.byteflow - DEBUG - stack ['$inferred148.0', '$shape150.1']
numba.core.byteflow - DEBUG - dispatch pc=154, inst=STORE_SUBSCR(arg=None, lineno=2070)
numba.core.byteflow - DEBUG - stack ['$inferred148.0', '$shape150.1', '$neg_ax152.2']
numba.core.byteflow - DEBUG - dispatch pc=156, inst=LOAD_CONST(arg=0, lineno=2070)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=158, inst=RETURN_VALUE(arg=None, lineno=2070)
numba.core.byteflow - DEBUG - stack ['$const156.3']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=18 nstack_initial=1): {'$phi18.0'},
             State(pc_initial=20 nstack_initial=2): {'$phi20.1'},
             State(pc_initial=34 nstack_initial=1): set(),
             State(pc_initial=48 nstack_initial=1): set(),
             State(pc_initial=58 nstack_initial=0): set(),
             State(pc_initial=66 nstack_initial=0): set(),
             State(pc_initial=74 nstack_initial=0): set(),
             State(pc_initial=82 nstack_initial=0): set(),
             State(pc_initial=86 nstack_initial=0): set(),
             State(pc_initial=94 nstack_initial=0): set(),
             State(pc_initial=102 nstack_initial=0): set(),
             State(pc_initial=116 nstack_initial=0): set(),
             State(pc_initial=136 nstack_initial=0): set(),
             State(pc_initial=140 nstack_initial=0): set(),
             State(pc_initial=148 nstack_initial=0): set(),
             State(pc_initial=160 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {'$phi18.0': State(pc_initial=0 nstack_initial=0),
 '$phi20.1': State(pc_initial=18 nstack_initial=1)}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi34.0', State(pc_initial=34 nstack_initial=1)),
                          ('$phi48.0', State(pc_initial=48 nstack_initial=1))},
             '$phi20.0': {('$phi18.0', State(pc_initial=18 nstack_initial=1))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi34.0': {('$phi20.0', State(pc_initial=20 nstack_initial=2))},
             '$phi48.0': {('$phi20.0', State(pc_initial=20 nstack_initial=2))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi20.0', State(pc_initial=20 nstack_initial=2))},
             '$phi20.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi20.0', State(pc_initial=20 nstack_initial=2))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi34.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi48.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi34.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi48.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi34.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi48.0': {('$16get_iter.5',
                           State(pc_initial=0 nstack_initial=0))}})
numba.core.byteflow - DEBUG - keep phismap: {'$phi18.0': {('$16get_iter.5', State(pc_initial=0 nstack_initial=0))},
 '$phi20.1': {('$18for_iter.2', State(pc_initial=18 nstack_initial=1))}}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi18.0': '$16get_iter.5'},
             State(pc_initial=18 nstack_initial=1): {'$phi20.1': '$18for_iter.2'}})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$const2.0'}), (4, {'value': '$const2.0'}), (6, {'res': '$const6.1'}), (8, {'value': '$const6.1'}), (10, {'res': '$10load_global.2'}), (12, {'res': '$shape12.3'}), (14, {'func': '$10load_global.2', 'args': ['$shape12.3'], 'res': '$14call_function.4'}), (16, {'value': '$14call_function.4', 'res': '$16get_iter.5'})), outgoing_phis={'$phi18.0': '$16get_iter.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={18: ('$16get_iter.5',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=18 nstack_initial=1):
AdaptBlockInfo(insts=((18, {'iterator': '$phi18.0', 'pair': '$18for_iter.1', 'indval': '$18for_iter.2', 'pred': '$18for_iter.3'}),), outgoing_phis={'$phi20.1': '$18for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={58: (), 20: ('$phi18.0', '$18for_iter.2')})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=20 nstack_initial=2):
AdaptBlockInfo(insts=((20, {'iterable': '$phi20.1', 'stores': ['$20unpack_sequence.2', '$20unpack_sequence.3'], 'tupleobj': '$20unpack_sequence.4'}), (22, {'value': '$20unpack_sequence.2'}), (24, {'value': '$20unpack_sequence.3'}), (26, {'res': '$s26.5'}), (28, {'res': '$const28.6'}), (30, {'lhs': '$s26.5', 'rhs': '$const28.6', 'res': '$30compare_op.7'}), (32, {'pred': '$30compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={34: ('$phi20.0',), 48: ('$phi20.0',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=34 nstack_initial=1):
AdaptBlockInfo(insts=((34, {'res': '$num_neg_value34.1'}), (36, {'res': '$const36.2'}), (38, {'lhs': '$num_neg_value34.1', 'rhs': '$const36.2', 'res': '$38inplace_add.3'}), (40, {'value': '$38inplace_add.3'}), (42, {'res': '$ax42.4'}), (44, {'value': '$ax42.4'}), (46, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={18: ('$phi34.0',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=48 nstack_initial=1):
AdaptBlockInfo(insts=((48, {'res': '$known_size48.1'}), (50, {'res': '$s50.2'}), (52, {'lhs': '$known_size48.1', 'rhs': '$s50.2', 'res': '$52inplace_multiply.3'}), (54, {'value': '$52inplace_multiply.3'}), (56, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={18: ('$phi48.0',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=58 nstack_initial=0):
AdaptBlockInfo(insts=((58, {'res': '$num_neg_value58.0'}), (60, {'res': '$const60.1'}), (62, {'lhs': '$num_neg_value58.0', 'rhs': '$const60.1', 'res': '$62compare_op.2'}), (64, {'pred': '$62compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={66: (), 86: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=66 nstack_initial=0):
AdaptBlockInfo(insts=((66, {'res': '$origsize66.0'}), (68, {'res': '$known_size68.1'}), (70, {'lhs': '$origsize66.0', 'rhs': '$known_size68.1', 'res': '$70compare_op.2'}), (72, {'pred': '$70compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: (), 82: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=74 nstack_initial=0):
AdaptBlockInfo(insts=((74, {'res': '$74load_global.0'}), (76, {'res': '$const76.1'}), (78, {'func': '$74load_global.0', 'args': ['$const76.1'], 'res': '$78call_function.2'}), (80, {'exc': '$78call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=0):
AdaptBlockInfo(insts=((82, {'res': '$const82.0'}), (84, {'retval': '$const82.0', 'castval': '$84return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=86 nstack_initial=0):
AdaptBlockInfo(insts=((86, {'res': '$num_neg_value86.0'}), (88, {'res': '$const88.1'}), (90, {'lhs': '$num_neg_value86.0', 'rhs': '$const88.1', 'res': '$90compare_op.2'}), (92, {'pred': '$90compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={94: (), 160: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=94 nstack_initial=0):
AdaptBlockInfo(insts=((94, {'res': '$known_size94.0'}), (96, {'res': '$const96.1'}), (98, {'lhs': '$known_size94.0', 'rhs': '$const96.1', 'res': '$98compare_op.2'}), (100, {'pred': '$98compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: (), 116: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=102 nstack_initial=0):
AdaptBlockInfo(insts=((102, {'res': '$const102.0'}), (104, {'value': '$const102.0'}), (106, {'res': '$origsize106.1'}), (108, {'res': '$const108.2'}), (110, {'lhs': '$origsize106.1', 'rhs': '$const108.2', 'res': '$110compare_op.3'}), (112, {'value': '$110compare_op.3'}), (114, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={136: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=116 nstack_initial=0):
AdaptBlockInfo(insts=((116, {'res': '$origsize116.0'}), (118, {'res': '$known_size118.1'}), (120, {'lhs': '$origsize116.0', 'rhs': '$known_size118.1', 'res': '$120binary_floor_divide.2'}), (122, {'value': '$120binary_floor_divide.2'}), (124, {'res': '$origsize124.3'}), (126, {'res': '$known_size126.4'}), (128, {'lhs': '$origsize124.3', 'rhs': '$known_size126.4', 'res': '$128binary_modulo.5'}), (130, {'res': '$const130.6'}), (132, {'lhs': '$128binary_modulo.5', 'rhs': '$const130.6', 'res': '$132compare_op.7'}), (134, {'value': '$132compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={136: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=136 nstack_initial=0):
AdaptBlockInfo(insts=((136, {'res': '$ok136.0'}), (138, {'pred': '$ok136.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={140: (), 148: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=140 nstack_initial=0):
AdaptBlockInfo(insts=((140, {'res': '$140load_global.0'}), (142, {'res': '$const142.1'}), (144, {'func': '$140load_global.0', 'args': ['$const142.1'], 'res': '$144call_function.2'}), (146, {'exc': '$144call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=148 nstack_initial=0):
AdaptBlockInfo(insts=((148, {'res': '$inferred148.0'}), (150, {'res': '$shape150.1'}), (152, {'res': '$neg_ax152.2'}), (154, {'target': '$shape150.1', 'index': '$neg_ax152.2', 'value': '$inferred148.0'}), (156, {'res': '$const156.3'}), (158, {'retval': '$const156.3', 'castval': '$158return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=160 nstack_initial=0):
AdaptBlockInfo(insts=((160, {'res': '$160load_global.0'}), (162, {'res': '$const162.1'}), (164, {'func': '$160load_global.0', 'args': ['$const162.1'], 'res': '$164call_function.2'}), (166, {'exc': '$164call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    origsize = arg(0, name=origsize)         ['origsize']
    shape = arg(1, name=shape)               ['shape']
    num_neg_value = const(int, 0)            ['num_neg_value']
    known_size = const(int, 1)               ['known_size']
    $10load_global.2 = global(enumerate: <class 'enumerate'>) ['$10load_global.2']
    $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.2', '$14call_function.4', 'shape']
    $16get_iter.5 = getiter(value=$14call_function.4) ['$14call_function.4', '$16get_iter.5']
    $phi18.0 = $16get_iter.5                 ['$16get_iter.5', '$phi18.0']
    jump 18                                  []
label 18:
    $18for_iter.1 = iternext(value=$phi18.0) ['$18for_iter.1', '$phi18.0']
    $18for_iter.2 = pair_first(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.2']
    $18for_iter.3 = pair_second(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.3']
    $phi20.1 = $18for_iter.2                 ['$18for_iter.2', '$phi20.1']
    branch $18for_iter.3, 20, 58             ['$18for_iter.3']
label 20:
    $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2) ['$20unpack_sequence.4', '$phi20.1']
    $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>) ['$20unpack_sequence.2', '$20unpack_sequence.4']
    $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>) ['$20unpack_sequence.3', '$20unpack_sequence.4']
    ax = $20unpack_sequence.2                ['$20unpack_sequence.2', 'ax']
    s = $20unpack_sequence.3                 ['$20unpack_sequence.3', 's']
    $const28.6 = const(int, 0)               ['$const28.6']
    $30compare_op.7 = s < $const28.6         ['$30compare_op.7', '$const28.6', 's']
    bool32 = global(bool: <class 'bool'>)    ['bool32']
    $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None) ['$30compare_op.7', '$32pred', 'bool32']
    branch $32pred, 34, 48                   ['$32pred']
label 34:
    $const36.2 = const(int, 1)               ['$const36.2']
    $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined) ['$38inplace_add.3', '$const36.2', 'num_neg_value']
    num_neg_value = $38inplace_add.3         ['$38inplace_add.3', 'num_neg_value']
    neg_ax = ax                              ['ax', 'neg_ax']
    jump 18                                  []
label 48:
    $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined) ['$52inplace_multiply.3', 'known_size', 's']
    known_size = $52inplace_multiply.3       ['$52inplace_multiply.3', 'known_size']
    jump 18                                  []
label 58:
    $const60.1 = const(int, 0)               ['$const60.1']
    $62compare_op.2 = num_neg_value == $const60.1 ['$62compare_op.2', '$const60.1', 'num_neg_value']
    bool64 = global(bool: <class 'bool'>)    ['bool64']
    $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None) ['$62compare_op.2', '$64pred', 'bool64']
    branch $64pred, 66, 86                   ['$64pred']
label 66:
    $70compare_op.2 = origsize != known_size ['$70compare_op.2', 'known_size', 'origsize']
    bool72 = global(bool: <class 'bool'>)    ['bool72']
    $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None) ['$70compare_op.2', '$72pred', 'bool72']
    branch $72pred, 74, 82                   ['$72pred']
label 74:
    $74load_global.0 = global(ValueError: <class 'ValueError'>) ['$74load_global.0']
    $const76.1 = const(str, total size of new array must be unchanged) ['$const76.1']
    $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None) ['$74load_global.0', '$78call_function.2', '$const76.1']
    raise $78call_function.2                 ['$78call_function.2']
label 82:
    $const82.0 = const(NoneType, None)       ['$const82.0']
    $84return_value.1 = cast(value=$const82.0) ['$84return_value.1', '$const82.0']
    return $84return_value.1                 ['$84return_value.1']
label 86:
    $const88.1 = const(int, 1)               ['$const88.1']
    $90compare_op.2 = num_neg_value == $const88.1 ['$90compare_op.2', '$const88.1', 'num_neg_value']
    bool92 = global(bool: <class 'bool'>)    ['bool92']
    $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None) ['$90compare_op.2', '$92pred', 'bool92']
    branch $92pred, 94, 160                  ['$92pred']
label 94:
    $const96.1 = const(int, 0)               ['$const96.1']
    $98compare_op.2 = known_size == $const96.1 ['$98compare_op.2', '$const96.1', 'known_size']
    bool100 = global(bool: <class 'bool'>)   ['bool100']
    $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None) ['$100pred', '$98compare_op.2', 'bool100']
    branch $100pred, 102, 116                ['$100pred']
label 102:
    inferred = const(int, 0)                 ['inferred']
    $const108.2 = const(int, 0)              ['$const108.2']
    ok = origsize == $const108.2             ['$const108.2', 'ok', 'origsize']
    jump 136                                 []
label 116:
    inferred = origsize // known_size        ['inferred', 'known_size', 'origsize']
    $128binary_modulo.5 = origsize % known_size ['$128binary_modulo.5', 'known_size', 'origsize']
    $const130.6 = const(int, 0)              ['$const130.6']
    ok = $128binary_modulo.5 == $const130.6  ['$128binary_modulo.5', '$const130.6', 'ok']
    jump 136                                 []
label 136:
    bool138 = global(bool: <class 'bool'>)   ['bool138']
    $138pred = call bool138(ok, func=bool138, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None) ['$138pred', 'bool138', 'ok']
    branch $138pred, 148, 140                ['$138pred']
label 140:
    $140load_global.0 = global(ValueError: <class 'ValueError'>) ['$140load_global.0']
    $const142.1 = const(str, total size of new array must be unchanged) ['$const142.1']
    $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.0', '$144call_function.2', '$const142.1']
    raise $144call_function.2                ['$144call_function.2']
label 148:
    shape[neg_ax] = inferred                 ['inferred', 'neg_ax', 'shape']
    $const156.3 = const(NoneType, None)      ['$const156.3']
    $158return_value.4 = cast(value=$const156.3) ['$158return_value.4', '$const156.3']
    return $158return_value.4                ['$158return_value.4']
label 160:
    $160load_global.0 = global(ValueError: <class 'ValueError'>) ['$160load_global.0']
    $const162.1 = const(str, multiple negative shape values) ['$const162.1']
    $164call_function.2 = call $160load_global.0($const162.1, func=$160load_global.0, args=[Var($const162.1, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None) ['$160load_global.0', '$164call_function.2', '$const162.1']
    raise $164call_function.2                ['$164call_function.2']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x70875334b340>
numba.core.ssa - DEBUG - on stmt: origsize = arg(0, name=origsize)
numba.core.ssa - DEBUG - on stmt: shape = arg(1, name=shape)
numba.core.ssa - DEBUG - on stmt: num_neg_value = const(int, 0)
numba.core.ssa - DEBUG - on stmt: known_size = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
numba.core.ssa - DEBUG - on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
numba.core.ssa - DEBUG - on stmt: $phi18.0 = $16get_iter.5
numba.core.ssa - DEBUG - on stmt: jump 18
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 18
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x70875334b340>
numba.core.ssa - DEBUG - on stmt: $18for_iter.1 = iternext(value=$phi18.0)
numba.core.ssa - DEBUG - on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
numba.core.ssa - DEBUG - on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
numba.core.ssa - DEBUG - on stmt: $phi20.1 = $18for_iter.2
numba.core.ssa - DEBUG - on stmt: branch $18for_iter.3, 20, 58
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 20
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x70875334b340>
numba.core.ssa - DEBUG - on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
numba.core.ssa - DEBUG - on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: ax = $20unpack_sequence.2
numba.core.ssa - DEBUG - on stmt: s = $20unpack_sequence.3
numba.core.ssa - DEBUG - on stmt: $const28.6 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $30compare_op.7 = s < $const28.6
numba.core.ssa - DEBUG - on stmt: bool32 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $32pred, 34, 48
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 34
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x70875334b340>
numba.core.ssa - DEBUG - on stmt: $const36.2 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: num_neg_value = $38inplace_add.3
numba.core.ssa - DEBUG - on stmt: neg_ax = ax
numba.core.ssa - DEBUG - on stmt: jump 161
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 48
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x70875334b340>
numba.core.ssa - DEBUG - on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: known_size = $52inplace_multiply.3
numba.core.ssa - DEBUG - on stmt: jump 161
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 58
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x70875334b340>
numba.core.ssa - DEBUG - on stmt: $const60.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $62compare_op.2 = num_neg_value == $const60.1
numba.core.ssa - DEBUG - on stmt: bool64 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $64pred, 66, 86
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 66
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x70875334b340>
numba.core.ssa - DEBUG - on stmt: $70compare_op.2 = origsize != known_size
numba.core.ssa - DEBUG - on stmt: bool72 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $72pred, 74, 82
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 74
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x70875334b340>
numba.core.ssa - DEBUG - on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const76.1 = const(str, total size of new array must be unchanged)
numba.core.ssa - DEBUG - on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 82
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x70875334b340>
numba.core.ssa - DEBUG - on stmt: $const82.0 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $84return_value.1 = cast(value=$const82.0)
numba.core.ssa - DEBUG - on stmt: return $84return_value.1
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 86
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x70875334b340>
numba.core.ssa - DEBUG - on stmt: $const88.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $90compare_op.2 = num_neg_value == $const88.1
numba.core.ssa - DEBUG - on stmt: bool92 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $92pred, 94, 160
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 94
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x70875334b340>
numba.core.ssa - DEBUG - on stmt: $const96.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $98compare_op.2 = known_size == $const96.1
numba.core.ssa - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $100pred, 102, 116
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 102
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x70875334b340>
numba.core.ssa - DEBUG - on stmt: inferred = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const108.2 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: ok = origsize == $const108.2
numba.core.ssa - DEBUG - on stmt: jump 136
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 116
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x70875334b340>
numba.core.ssa - DEBUG - on stmt: inferred = origsize // known_size
numba.core.ssa - DEBUG - on stmt: $128binary_modulo.5 = origsize % known_size
numba.core.ssa - DEBUG - on stmt: $const130.6 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: ok = $128binary_modulo.5 == $const130.6
numba.core.ssa - DEBUG - on stmt: jump 136
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 136
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x70875334b340>
numba.core.ssa - DEBUG - on stmt: bool138 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $138pred = call bool138(ok, func=bool138, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $138pred, 148, 140
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 140
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x70875334b340>
numba.core.ssa - DEBUG - on stmt: $140load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const142.1 = const(str, total size of new array must be unchanged)
numba.core.ssa - DEBUG - on stmt: $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 148
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x70875334b340>
numba.core.ssa - DEBUG - on stmt: shape[neg_ax] = inferred
numba.core.ssa - DEBUG - on stmt: $const156.3 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $158return_value.4 = cast(value=$const156.3)
numba.core.ssa - DEBUG - on stmt: return $158return_value.4
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 160
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x70875334b340>
numba.core.ssa - DEBUG - on stmt: $160load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const162.1 = const(str, multiple negative shape values)
numba.core.ssa - DEBUG - on stmt: $164call_function.2 = call $160load_global.0($const162.1, func=$160load_global.0, args=[Var($const162.1, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 161
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x70875334b340>
numba.core.ssa - DEBUG - on stmt: jump 18
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$100pred': [(<numba.core.ir.Assign object at 0x708753348e20>,
                           94)],
             '$10load_global.2': [(<numba.core.ir.Assign object at 0x708752e12ce0>,
                                   0)],
             '$128binary_modulo.5': [(<numba.core.ir.Assign object at 0x70875334aa40>,
                                      116)],
             '$138pred': [(<numba.core.ir.Assign object at 0x7087533498d0>,
                           136)],
             '$140load_global.0': [(<numba.core.ir.Assign object at 0x7087533490c0>,
                                    140)],
             '$144call_function.2': [(<numba.core.ir.Assign object at 0x7087533498a0>,
                                      140)],
             '$14call_function.4': [(<numba.core.ir.Assign object at 0x708752e131c0>,
                                     0)],
             '$158return_value.4': [(<numba.core.ir.Assign object at 0x70875334a830>,
                                     148)],
             '$160load_global.0': [(<numba.core.ir.Assign object at 0x708753349660>,
                                    160)],
             '$164call_function.2': [(<numba.core.ir.Assign object at 0x70875334a7a0>,
                                      160)],
             '$16get_iter.5': [(<numba.core.ir.Assign object at 0x708752e13280>,
                                0)],
             '$18for_iter.1': [(<numba.core.ir.Assign object at 0x708752e13550>,
                                18)],
             '$18for_iter.2': [(<numba.core.ir.Assign object at 0x708752e13820>,
                                18)],
             '$18for_iter.3': [(<numba.core.ir.Assign object at 0x708752e101f0>,
                                18)],
             '$20unpack_sequence.2': [(<numba.core.ir.Assign object at 0x708752ead540>,
                                       20)],
             '$20unpack_sequence.3': [(<numba.core.ir.Assign object at 0x708752ead4e0>,
                                       20)],
             '$20unpack_sequence.4': [(<numba.core.ir.Assign object at 0x708752ead8a0>,
                                       20)],
             '$30compare_op.7': [(<numba.core.ir.Assign object at 0x708752eac460>,
                                  20)],
             '$32pred': [(<numba.core.ir.Assign object at 0x708752eac6a0>, 20)],
             '$38inplace_add.3': [(<numba.core.ir.Assign object at 0x708752ead1b0>,
                                   34)],
             '$52inplace_multiply.3': [(<numba.core.ir.Assign object at 0x708752eacca0>,
                                        48)],
             '$62compare_op.2': [(<numba.core.ir.Assign object at 0x708752eaea40>,
                                  58)],
             '$64pred': [(<numba.core.ir.Assign object at 0x708752eaecb0>, 58)],
             '$70compare_op.2': [(<numba.core.ir.Assign object at 0x708752eaf160>,
                                  66)],
             '$72pred': [(<numba.core.ir.Assign object at 0x708752eaf3a0>, 66)],
             '$74load_global.0': [(<numba.core.ir.Assign object at 0x708752eaf580>,
                                   74)],
             '$78call_function.2': [(<numba.core.ir.Assign object at 0x708752eafc10>,
                                     74)],
             '$84return_value.1': [(<numba.core.ir.Assign object at 0x708752eaf910>,
                                    82)],
             '$90compare_op.2': [(<numba.core.ir.Assign object at 0x708752eadf00>,
                                  86)],
             '$92pred': [(<numba.core.ir.Assign object at 0x708752eadd80>, 86)],
             '$98compare_op.2': [(<numba.core.ir.Assign object at 0x708752eae0b0>,
                                  94)],
             '$const108.2': [(<numba.core.ir.Assign object at 0x70875334b8b0>,
                              102)],
             '$const130.6': [(<numba.core.ir.Assign object at 0x70875334a230>,
                              116)],
             '$const142.1': [(<numba.core.ir.Assign object at 0x70875334b400>,
                              140)],
             '$const156.3': [(<numba.core.ir.Assign object at 0x708753349f60>,
                              148)],
             '$const162.1': [(<numba.core.ir.Assign object at 0x70875334aef0>,
                              160)],
             '$const28.6': [(<numba.core.ir.Assign object at 0x708752eac130>,
                             20)],
             '$const36.2': [(<numba.core.ir.Assign object at 0x708752eac9d0>,
                             34)],
             '$const60.1': [(<numba.core.ir.Assign object at 0x708752eae380>,
                             58)],
             '$const76.1': [(<numba.core.ir.Assign object at 0x708752eaf700>,
                             74)],
             '$const82.0': [(<numba.core.ir.Assign object at 0x708752eaf970>,
                             82)],
             '$const88.1': [(<numba.core.ir.Assign object at 0x708752eae200>,
                             86)],
             '$const96.1': [(<numba.core.ir.Assign object at 0x708752eae500>,
                             94)],
             '$phi18.0': [(<numba.core.ir.Assign object at 0x708752e11480>, 0)],
             '$phi20.1': [(<numba.core.ir.Assign object at 0x708752e13460>,
                           18)],
             'ax': [(<numba.core.ir.Assign object at 0x708752ead7e0>, 20)],
             'bool100': [(<numba.core.ir.Assign object at 0x708753348f40>, 94)],
             'bool138': [(<numba.core.ir.Assign object at 0x70875334a920>,
                          136)],
             'bool32': [(<numba.core.ir.Assign object at 0x708752eac550>, 20)],
             'bool64': [(<numba.core.ir.Assign object at 0x708752eae890>, 58)],
             'bool72': [(<numba.core.ir.Assign object at 0x708752eaf280>, 66)],
             'bool92': [(<numba.core.ir.Assign object at 0x708752eade40>, 86)],
             'inferred': [(<numba.core.ir.Assign object at 0x70875334b4c0>,
                           102),
                          (<numba.core.ir.Assign object at 0x70875334ab90>,
                           116)],
             'known_size': [(<numba.core.ir.Assign object at 0x708752e12a70>,
                             0),
                            (<numba.core.ir.Assign object at 0x708752eacd30>,
                             48)],
             'neg_ax': [(<numba.core.ir.Assign object at 0x708752ead120>, 34)],
             'num_neg_value': [(<numba.core.ir.Assign object at 0x708752e11b70>,
                                0),
                               (<numba.core.ir.Assign object at 0x708752ead2d0>,
                                34)],
             'ok': [(<numba.core.ir.Assign object at 0x70875334bb20>, 102),
                    (<numba.core.ir.Assign object at 0x708753349de0>, 116)],
             'origsize': [(<numba.core.ir.Assign object at 0x708752e121a0>, 0)],
             's': [(<numba.core.ir.Assign object at 0x708752ead780>, 20)],
             'shape': [(<numba.core.ir.Assign object at 0x708752e12110>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x708752eac910>
numba.core.ssa - DEBUG - Fix SSA violator on var num_neg_value
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: origsize = arg(0, name=origsize)
numba.core.ssa - DEBUG - on stmt: shape = arg(1, name=shape)
numba.core.ssa - DEBUG - on stmt: num_neg_value = const(int, 0)
numba.core.ssa - DEBUG - first assign: num_neg_value
numba.core.ssa - DEBUG - replaced with: num_neg_value = const(int, 0)
numba.core.ssa - DEBUG - on stmt: known_size = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
numba.core.ssa - DEBUG - on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
numba.core.ssa - DEBUG - on stmt: $phi18.0 = $16get_iter.5
numba.core.ssa - DEBUG - on stmt: jump 18
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 18
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: $18for_iter.1 = iternext(value=$phi18.0)
numba.core.ssa - DEBUG - on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
numba.core.ssa - DEBUG - on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
numba.core.ssa - DEBUG - on stmt: $phi20.1 = $18for_iter.2
numba.core.ssa - DEBUG - on stmt: branch $18for_iter.3, 20, 58
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 20
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
numba.core.ssa - DEBUG - on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: ax = $20unpack_sequence.2
numba.core.ssa - DEBUG - on stmt: s = $20unpack_sequence.3
numba.core.ssa - DEBUG - on stmt: $const28.6 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $30compare_op.7 = s < $const28.6
numba.core.ssa - DEBUG - on stmt: bool32 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $32pred, 34, 48
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 34
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: $const36.2 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: num_neg_value = $38inplace_add.3
numba.core.ssa - DEBUG - replaced with: num_neg_value.1 = $38inplace_add.3
numba.core.ssa - DEBUG - on stmt: neg_ax = ax
numba.core.ssa - DEBUG - on stmt: jump 161
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: known_size = $52inplace_multiply.3
numba.core.ssa - DEBUG - on stmt: jump 161
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 58
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: $const60.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $62compare_op.2 = num_neg_value == $const60.1
numba.core.ssa - DEBUG - on stmt: bool64 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $64pred, 66, 86
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 66
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: $70compare_op.2 = origsize != known_size
numba.core.ssa - DEBUG - on stmt: bool72 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $72pred, 74, 82
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 74
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const76.1 = const(str, total size of new array must be unchanged)
numba.core.ssa - DEBUG - on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: $const82.0 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $84return_value.1 = cast(value=$const82.0)
numba.core.ssa - DEBUG - on stmt: return $84return_value.1
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 86
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: $const88.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $90compare_op.2 = num_neg_value == $const88.1
numba.core.ssa - DEBUG - on stmt: bool92 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $92pred, 94, 160
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 94
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: $const96.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $98compare_op.2 = known_size == $const96.1
numba.core.ssa - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $100pred, 102, 116
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 102
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: inferred = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const108.2 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: ok = origsize == $const108.2
numba.core.ssa - DEBUG - on stmt: jump 136
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 116
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: inferred = origsize // known_size
numba.core.ssa - DEBUG - on stmt: $128binary_modulo.5 = origsize % known_size
numba.core.ssa - DEBUG - on stmt: $const130.6 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: ok = $128binary_modulo.5 == $const130.6
numba.core.ssa - DEBUG - on stmt: jump 136
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 136
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: bool138 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $138pred = call bool138(ok, func=bool138, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $138pred, 148, 140
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 140
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: $140load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const142.1 = const(str, total size of new array must be unchanged)
numba.core.ssa - DEBUG - on stmt: $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 148
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: shape[neg_ax] = inferred
numba.core.ssa - DEBUG - on stmt: $const156.3 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $158return_value.4 = cast(value=$const156.3)
numba.core.ssa - DEBUG - on stmt: return $158return_value.4
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 160
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: $160load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const162.1 = const(str, multiple negative shape values)
numba.core.ssa - DEBUG - on stmt: $164call_function.2 = call $160load_global.0($const162.1, func=$160load_global.0, args=[Var($const162.1, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 161
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: jump 18
numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x70875334a5f0>],
             34: [<numba.core.ir.Assign object at 0x7087533493f0>]})
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: origsize = arg(0, name=origsize)
numba.core.ssa - DEBUG - on stmt: shape = arg(1, name=shape)
numba.core.ssa - DEBUG - on stmt: num_neg_value = const(int, 0)
numba.core.ssa - DEBUG - on stmt: known_size = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
numba.core.ssa - DEBUG - on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
numba.core.ssa - DEBUG - on stmt: $phi18.0 = $16get_iter.5
numba.core.ssa - DEBUG - on stmt: jump 18
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 18
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: $18for_iter.1 = iternext(value=$phi18.0)
numba.core.ssa - DEBUG - on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
numba.core.ssa - DEBUG - on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
numba.core.ssa - DEBUG - on stmt: $phi20.1 = $18for_iter.2
numba.core.ssa - DEBUG - on stmt: branch $18for_iter.3, 20, 58
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 20
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
numba.core.ssa - DEBUG - on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: ax = $20unpack_sequence.2
numba.core.ssa - DEBUG - on stmt: s = $20unpack_sequence.3
numba.core.ssa - DEBUG - on stmt: $const28.6 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $30compare_op.7 = s < $const28.6
numba.core.ssa - DEBUG - on stmt: bool32 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $32pred, 34, 48
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 34
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: $const36.2 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def var='num_neg_value' stmt=$38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def_from_top label 34
numba.core.ssa - DEBUG - idom 20 from label 34
numba.core.ssa - DEBUG - find_def_from_bottom label 20
numba.core.ssa - DEBUG - find_def_from_top label 20
numba.core.ssa - DEBUG - idom 18 from label 20
numba.core.ssa - DEBUG - find_def_from_bottom label 18
numba.core.ssa - DEBUG - find_def_from_top label 18
numba.core.ssa - DEBUG - insert phi node num_neg_value.2 = phi(incoming_values=[], incoming_blocks=[]) at 18
numba.core.ssa - DEBUG - find_def_from_bottom label 0
numba.core.ssa - DEBUG - incoming_def num_neg_value = const(int, 0)
numba.core.ssa - DEBUG - find_def_from_bottom label 161
numba.core.ssa - DEBUG - find_def_from_top label 161
numba.core.ssa - DEBUG - insert phi node num_neg_value.3 = phi(incoming_values=[], incoming_blocks=[]) at 161
numba.core.ssa - DEBUG - find_def_from_bottom label 48
numba.core.ssa - DEBUG - find_def_from_top label 48
numba.core.ssa - DEBUG - idom 20 from label 48
numba.core.ssa - DEBUG - find_def_from_bottom label 20
numba.core.ssa - DEBUG - find_def_from_top label 20
numba.core.ssa - DEBUG - idom 18 from label 20
numba.core.ssa - DEBUG - find_def_from_bottom label 18
numba.core.ssa - DEBUG - incoming_def num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047)], incoming_blocks=[0])
numba.core.ssa - DEBUG - find_def_from_bottom label 34
numba.core.ssa - DEBUG - incoming_def num_neg_value.1 = $38inplace_add.3
numba.core.ssa - DEBUG - incoming_def num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:2051), Var(num_neg_value.1, arrayobj.py:2051)], incoming_blocks=[48, 34])
numba.core.ssa - DEBUG - replaced with: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: num_neg_value.1 = $38inplace_add.3
numba.core.ssa - DEBUG - on stmt: neg_ax = ax
numba.core.ssa - DEBUG - on stmt: jump 161
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: known_size = $52inplace_multiply.3
numba.core.ssa - DEBUG - on stmt: jump 161
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 58
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: $const60.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $62compare_op.2 = num_neg_value == $const60.1
numba.core.ssa - DEBUG - find_def var='num_neg_value' stmt=$62compare_op.2 = num_neg_value == $const60.1
numba.core.ssa - DEBUG - find_def_from_top label 58
numba.core.ssa - DEBUG - idom 18 from label 58
numba.core.ssa - DEBUG - find_def_from_bottom label 18
numba.core.ssa - DEBUG - replaced with: $62compare_op.2 = num_neg_value.2 == $const60.1
numba.core.ssa - DEBUG - on stmt: bool64 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $64pred, 66, 86
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 66
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: $70compare_op.2 = origsize != known_size
numba.core.ssa - DEBUG - on stmt: bool72 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $72pred, 74, 82
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 74
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const76.1 = const(str, total size of new array must be unchanged)
numba.core.ssa - DEBUG - on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: $const82.0 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $84return_value.1 = cast(value=$const82.0)
numba.core.ssa - DEBUG - on stmt: return $84return_value.1
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 86
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: $const88.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $90compare_op.2 = num_neg_value == $const88.1
numba.core.ssa - DEBUG - find_def var='num_neg_value' stmt=$90compare_op.2 = num_neg_value == $const88.1
numba.core.ssa - DEBUG - find_def_from_top label 86
numba.core.ssa - DEBUG - idom 58 from label 86
numba.core.ssa - DEBUG - find_def_from_bottom label 58
numba.core.ssa - DEBUG - find_def_from_top label 58
numba.core.ssa - DEBUG - idom 18 from label 58
numba.core.ssa - DEBUG - find_def_from_bottom label 18
numba.core.ssa - DEBUG - replaced with: $90compare_op.2 = num_neg_value.2 == $const88.1
numba.core.ssa - DEBUG - on stmt: bool92 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $92pred, 94, 160
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 94
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: $const96.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $98compare_op.2 = known_size == $const96.1
numba.core.ssa - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $100pred, 102, 116
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 102
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: inferred = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const108.2 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: ok = origsize == $const108.2
numba.core.ssa - DEBUG - on stmt: jump 136
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 116
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: inferred = origsize // known_size
numba.core.ssa - DEBUG - on stmt: $128binary_modulo.5 = origsize % known_size
numba.core.ssa - DEBUG - on stmt: $const130.6 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: ok = $128binary_modulo.5 == $const130.6
numba.core.ssa - DEBUG - on stmt: jump 136
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 136
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: bool138 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $138pred = call bool138(ok, func=bool138, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $138pred, 148, 140
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 140
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: $140load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const142.1 = const(str, total size of new array must be unchanged)
numba.core.ssa - DEBUG - on stmt: $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 148
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: shape[neg_ax] = inferred
numba.core.ssa - DEBUG - on stmt: $const156.3 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $158return_value.4 = cast(value=$const156.3)
numba.core.ssa - DEBUG - on stmt: return $158return_value.4
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 160
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: $160load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const162.1 = const(str, multiple negative shape values)
numba.core.ssa - DEBUG - on stmt: $164call_function.2 = call $160load_global.0($const162.1, func=$160load_global.0, args=[Var($const162.1, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 161
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: jump 18
numba.core.ssa - DEBUG - Fix SSA violator on var known_size
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7087532b69b0>
numba.core.ssa - DEBUG - on stmt: origsize = arg(0, name=origsize)
numba.core.ssa - DEBUG - on stmt: shape = arg(1, name=shape)
numba.core.ssa - DEBUG - on stmt: num_neg_value = const(int, 0)
numba.core.ssa - DEBUG - on stmt: known_size = const(int, 1)
numba.core.ssa - DEBUG - first assign: known_size
numba.core.ssa - DEBUG - replaced with: known_size = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
numba.core.ssa - DEBUG - on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
numba.core.ssa - DEBUG - on stmt: $phi18.0 = $16get_iter.5
numba.core.ssa - DEBUG - on stmt: jump 18
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 18
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7087532b69b0>
numba.core.ssa - DEBUG - on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 161])
numba.core.ssa - DEBUG - on stmt: $18for_iter.1 = iternext(value=$phi18.0)
numba.core.ssa - DEBUG - on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
numba.core.ssa - DEBUG - on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
numba.core.ssa - DEBUG - on stmt: $phi20.1 = $18for_iter.2
numba.core.ssa - DEBUG - on stmt: branch $18for_iter.3, 20, 58
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 20
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7087532b69b0>
numba.core.ssa - DEBUG - on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
numba.core.ssa - DEBUG - on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: ax = $20unpack_sequence.2
numba.core.ssa - DEBUG - on stmt: s = $20unpack_sequence.3
numba.core.ssa - DEBUG - on stmt: $const28.6 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $30compare_op.7 = s < $const28.6
numba.core.ssa - DEBUG - on stmt: bool32 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $32pred, 34, 48
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 34
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7087532b69b0>
numba.core.ssa - DEBUG - on stmt: $const36.2 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: num_neg_value.1 = $38inplace_add.3
numba.core.ssa - DEBUG - on stmt: neg_ax = ax
numba.core.ssa - DEBUG - on stmt: jump 161
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7087532b69b0>
numba.core.ssa - DEBUG - on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: known_size = $52inplace_multiply.3
numba.core.ssa - DEBUG - replaced with: known_size.1 = $52inplace_multiply.3
numba.core.ssa - DEBUG - on stmt: jump 161
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 58
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7087532b69b0>
numba.core.ssa - DEBUG - on stmt: $const60.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $62compare_op.2 = num_neg_value.2 == $const60.1
numba.core.ssa - DEBUG - on stmt: bool64 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $64pred, 66, 86
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 66
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7087532b69b0>
numba.core.ssa - DEBUG - on stmt: $70compare_op.2 = origsize != known_size
numba.core.ssa - DEBUG - on stmt: bool72 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $72pred, 74, 82
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 74
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7087532b69b0>
numba.core.ssa - DEBUG - on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const76.1 = const(str, total size of new array must be unchanged)
numba.core.ssa - DEBUG - on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7087532b69b0>
numba.core.ssa - DEBUG - on stmt: $const82.0 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $84return_value.1 = cast(value=$const82.0)
numba.core.ssa - DEBUG - on stmt: return $84return_value.1
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 86
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7087532b69b0>
numba.core.ssa - DEBUG - on stmt: $const88.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $90compare_op.2 = num_neg_value.2 == $const88.1
numba.core.ssa - DEBUG - on stmt: bool92 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $92pred, 94, 160
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 94
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7087532b69b0>
numba.core.ssa - DEBUG - on stmt: $const96.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $98compare_op.2 = known_size == $const96.1
numba.core.ssa - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $100pred, 102, 116
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 102
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7087532b69b0>
numba.core.ssa - DEBUG - on stmt: inferred = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const108.2 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: ok = origsize == $const108.2
numba.core.ssa - DEBUG - on stmt: jump 136
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 116
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7087532b69b0>
numba.core.ssa - DEBUG - on stmt: inferred = origsize // known_size
numba.core.ssa - DEBUG - on stmt: $128binary_modulo.5 = origsize % known_size
numba.core.ssa - DEBUG - on stmt: $const130.6 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: ok = $128binary_modulo.5 == $const130.6
numba.core.ssa - DEBUG - on stmt: jump 136
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 136
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7087532b69b0>
numba.core.ssa - DEBUG - on stmt: bool138 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $138pred = call bool138(ok, func=bool138, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $138pred, 148, 140
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 140
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7087532b69b0>
numba.core.ssa - DEBUG - on stmt: $140load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const142.1 = const(str, total size of new array must be unchanged)
numba.core.ssa - DEBUG - on stmt: $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 148
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7087532b69b0>
numba.core.ssa - DEBUG - on stmt: shape[neg_ax] = inferred
numba.core.ssa - DEBUG - on stmt: $const156.3 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $158return_value.4 = cast(value=$const156.3)
numba.core.ssa - DEBUG - on stmt: return $158return_value.4
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 160
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7087532b69b0>
numba.core.ssa - DEBUG - on stmt: $160load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const162.1 = const(str, multiple negative shape values)
numba.core.ssa - DEBUG - on stmt: $164call_function.2 = call $160load_global.0($const162.1, func=$160load_global.0, args=[Var($const162.1, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 161
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7087532b69b0>
numba.core.ssa - DEBUG - on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:2051), Var(num_neg_value.1, arrayobj.py:2051)], incoming_blocks=[48, 34])
numba.core.ssa - DEBUG - on stmt: jump 18
numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7087532b7fd0>],
             48: [<numba.core.ir.Assign object at 0x70875334b4f0>]})
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: origsize = arg(0, name=origsize)
numba.core.ssa - DEBUG - on stmt: shape = arg(1, name=shape)
numba.core.ssa - DEBUG - on stmt: num_neg_value = const(int, 0)
numba.core.ssa - DEBUG - on stmt: known_size = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
numba.core.ssa - DEBUG - on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
numba.core.ssa - DEBUG - on stmt: $phi18.0 = $16get_iter.5
numba.core.ssa - DEBUG - on stmt: jump 18
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 18
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 161])
numba.core.ssa - DEBUG - on stmt: $18for_iter.1 = iternext(value=$phi18.0)
numba.core.ssa - DEBUG - on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
numba.core.ssa - DEBUG - on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
numba.core.ssa - DEBUG - on stmt: $phi20.1 = $18for_iter.2
numba.core.ssa - DEBUG - on stmt: branch $18for_iter.3, 20, 58
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 20
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
numba.core.ssa - DEBUG - on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: ax = $20unpack_sequence.2
numba.core.ssa - DEBUG - on stmt: s = $20unpack_sequence.3
numba.core.ssa - DEBUG - on stmt: $const28.6 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $30compare_op.7 = s < $const28.6
numba.core.ssa - DEBUG - on stmt: bool32 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $32pred, 34, 48
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 34
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: $const36.2 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: num_neg_value.1 = $38inplace_add.3
numba.core.ssa - DEBUG - on stmt: neg_ax = ax
numba.core.ssa - DEBUG - on stmt: jump 161
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def var='known_size' stmt=$52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def_from_top label 48
numba.core.ssa - DEBUG - idom 20 from label 48
numba.core.ssa - DEBUG - find_def_from_bottom label 20
numba.core.ssa - DEBUG - find_def_from_top label 20
numba.core.ssa - DEBUG - idom 18 from label 20
numba.core.ssa - DEBUG - find_def_from_bottom label 18
numba.core.ssa - DEBUG - find_def_from_top label 18
numba.core.ssa - DEBUG - insert phi node known_size.2 = phi(incoming_values=[], incoming_blocks=[]) at 18
numba.core.ssa - DEBUG - find_def_from_bottom label 0
numba.core.ssa - DEBUG - incoming_def known_size = const(int, 1)
numba.core.ssa - DEBUG - find_def_from_bottom label 161
numba.core.ssa - DEBUG - find_def_from_top label 161
numba.core.ssa - DEBUG - insert phi node known_size.3 = phi(incoming_values=[], incoming_blocks=[]) at 161
numba.core.ssa - DEBUG - find_def_from_bottom label 48
numba.core.ssa - DEBUG - incoming_def known_size.1 = $52inplace_multiply.3
numba.core.ssa - DEBUG - find_def_from_bottom label 34
numba.core.ssa - DEBUG - find_def_from_top label 34
numba.core.ssa - DEBUG - idom 20 from label 34
numba.core.ssa - DEBUG - find_def_from_bottom label 20
numba.core.ssa - DEBUG - find_def_from_top label 20
numba.core.ssa - DEBUG - idom 18 from label 20
numba.core.ssa - DEBUG - find_def_from_bottom label 18
numba.core.ssa - DEBUG - incoming_def known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2048)], incoming_blocks=[0])
numba.core.ssa - DEBUG - incoming_def known_size.3 = phi(incoming_values=[Var(known_size.1, arrayobj.py:2054), Var(known_size.2, arrayobj.py:2054)], incoming_blocks=[48, 34])
numba.core.ssa - DEBUG - replaced with: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: known_size.1 = $52inplace_multiply.3
numba.core.ssa - DEBUG - on stmt: jump 161
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 58
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: $const60.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $62compare_op.2 = num_neg_value.2 == $const60.1
numba.core.ssa - DEBUG - on stmt: bool64 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $64pred, 66, 86
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 66
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: $70compare_op.2 = origsize != known_size
numba.core.ssa - DEBUG - find_def var='known_size' stmt=$70compare_op.2 = origsize != known_size
numba.core.ssa - DEBUG - find_def_from_top label 66
numba.core.ssa - DEBUG - idom 58 from label 66
numba.core.ssa - DEBUG - find_def_from_bottom label 58
numba.core.ssa - DEBUG - find_def_from_top label 58
numba.core.ssa - DEBUG - idom 18 from label 58
numba.core.ssa - DEBUG - find_def_from_bottom label 18
numba.core.ssa - DEBUG - replaced with: $70compare_op.2 = origsize != known_size.2
numba.core.ssa - DEBUG - on stmt: bool72 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $72pred, 74, 82
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 74
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const76.1 = const(str, total size of new array must be unchanged)
numba.core.ssa - DEBUG - on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: $const82.0 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $84return_value.1 = cast(value=$const82.0)
numba.core.ssa - DEBUG - on stmt: return $84return_value.1
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 86
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: $const88.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $90compare_op.2 = num_neg_value.2 == $const88.1
numba.core.ssa - DEBUG - on stmt: bool92 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $92pred, 94, 160
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 94
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: $const96.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $98compare_op.2 = known_size == $const96.1
numba.core.ssa - DEBUG - find_def var='known_size' stmt=$98compare_op.2 = known_size == $const96.1
numba.core.ssa - DEBUG - find_def_from_top label 94
numba.core.ssa - DEBUG - idom 86 from label 94
numba.core.ssa - DEBUG - find_def_from_bottom label 86
numba.core.ssa - DEBUG - find_def_from_top label 86
numba.core.ssa - DEBUG - idom 58 from label 86
numba.core.ssa - DEBUG - find_def_from_bottom label 58
numba.core.ssa - DEBUG - find_def_from_top label 58
numba.core.ssa - DEBUG - idom 18 from label 58
numba.core.ssa - DEBUG - find_def_from_bottom label 18
numba.core.ssa - DEBUG - replaced with: $98compare_op.2 = known_size.2 == $const96.1
numba.core.ssa - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $100pred, 102, 116
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 102
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: inferred = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const108.2 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: ok = origsize == $const108.2
numba.core.ssa - DEBUG - on stmt: jump 136
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 116
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: inferred = origsize // known_size
numba.core.ssa - DEBUG - find_def var='known_size' stmt=inferred = origsize // known_size
numba.core.ssa - DEBUG - find_def_from_top label 116
numba.core.ssa - DEBUG - idom 94 from label 116
numba.core.ssa - DEBUG - find_def_from_bottom label 94
numba.core.ssa - DEBUG - find_def_from_top label 94
numba.core.ssa - DEBUG - idom 86 from label 94
numba.core.ssa - DEBUG - find_def_from_bottom label 86
numba.core.ssa - DEBUG - find_def_from_top label 86
numba.core.ssa - DEBUG - idom 58 from label 86
numba.core.ssa - DEBUG - find_def_from_bottom label 58
numba.core.ssa - DEBUG - find_def_from_top label 58
numba.core.ssa - DEBUG - idom 18 from label 58
numba.core.ssa - DEBUG - find_def_from_bottom label 18
numba.core.ssa - DEBUG - replaced with: inferred = origsize // known_size.2
numba.core.ssa - DEBUG - on stmt: $128binary_modulo.5 = origsize % known_size
numba.core.ssa - DEBUG - find_def var='known_size' stmt=$128binary_modulo.5 = origsize % known_size
numba.core.ssa - DEBUG - find_def_from_top label 116
numba.core.ssa - DEBUG - idom 94 from label 116
numba.core.ssa - DEBUG - find_def_from_bottom label 94
numba.core.ssa - DEBUG - find_def_from_top label 94
numba.core.ssa - DEBUG - idom 86 from label 94
numba.core.ssa - DEBUG - find_def_from_bottom label 86
numba.core.ssa - DEBUG - find_def_from_top label 86
numba.core.ssa - DEBUG - idom 58 from label 86
numba.core.ssa - DEBUG - find_def_from_bottom label 58
numba.core.ssa - DEBUG - find_def_from_top label 58
numba.core.ssa - DEBUG - idom 18 from label 58
numba.core.ssa - DEBUG - find_def_from_bottom label 18
numba.core.ssa - DEBUG - replaced with: $128binary_modulo.5 = origsize % known_size.2
numba.core.ssa - DEBUG - on stmt: $const130.6 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: ok = $128binary_modulo.5 == $const130.6
numba.core.ssa - DEBUG - on stmt: jump 136
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 136
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: bool138 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $138pred = call bool138(ok, func=bool138, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $138pred, 148, 140
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 140
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: $140load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const142.1 = const(str, total size of new array must be unchanged)
numba.core.ssa - DEBUG - on stmt: $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 148
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: shape[neg_ax] = inferred
numba.core.ssa - DEBUG - on stmt: $const156.3 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $158return_value.4 = cast(value=$const156.3)
numba.core.ssa - DEBUG - on stmt: return $158return_value.4
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 160
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: $160load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const162.1 = const(str, multiple negative shape values)
numba.core.ssa - DEBUG - on stmt: $164call_function.2 = call $160load_global.0($const162.1, func=$160load_global.0, args=[Var($const162.1, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 161
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752eacf40>
numba.core.ssa - DEBUG - on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:2051), Var(num_neg_value.1, arrayobj.py:2051)], incoming_blocks=[48, 34])
numba.core.ssa - DEBUG - on stmt: jump 18
numba.core.ssa - DEBUG - Fix SSA violator on var inferred
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e11990>
numba.core.ssa - DEBUG - on stmt: origsize = arg(0, name=origsize)
numba.core.ssa - DEBUG - on stmt: shape = arg(1, name=shape)
numba.core.ssa - DEBUG - on stmt: num_neg_value = const(int, 0)
numba.core.ssa - DEBUG - on stmt: known_size = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
numba.core.ssa - DEBUG - on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
numba.core.ssa - DEBUG - on stmt: $phi18.0 = $16get_iter.5
numba.core.ssa - DEBUG - on stmt: jump 18
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 18
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e11990>
numba.core.ssa - DEBUG - on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2048), Var(known_size.3, arrayobj.py:2054)], incoming_blocks=[0, 161])
numba.core.ssa - DEBUG - on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 161])
numba.core.ssa - DEBUG - on stmt: $18for_iter.1 = iternext(value=$phi18.0)
numba.core.ssa - DEBUG - on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
numba.core.ssa - DEBUG - on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
numba.core.ssa - DEBUG - on stmt: $phi20.1 = $18for_iter.2
numba.core.ssa - DEBUG - on stmt: branch $18for_iter.3, 20, 58
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 20
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e11990>
numba.core.ssa - DEBUG - on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
numba.core.ssa - DEBUG - on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: ax = $20unpack_sequence.2
numba.core.ssa - DEBUG - on stmt: s = $20unpack_sequence.3
numba.core.ssa - DEBUG - on stmt: $const28.6 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $30compare_op.7 = s < $const28.6
numba.core.ssa - DEBUG - on stmt: bool32 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $32pred, 34, 48
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 34
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e11990>
numba.core.ssa - DEBUG - on stmt: $const36.2 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: num_neg_value.1 = $38inplace_add.3
numba.core.ssa - DEBUG - on stmt: neg_ax = ax
numba.core.ssa - DEBUG - on stmt: jump 161
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e11990>
numba.core.ssa - DEBUG - on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: known_size.1 = $52inplace_multiply.3
numba.core.ssa - DEBUG - on stmt: jump 161
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 58
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e11990>
numba.core.ssa - DEBUG - on stmt: $const60.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $62compare_op.2 = num_neg_value.2 == $const60.1
numba.core.ssa - DEBUG - on stmt: bool64 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $64pred, 66, 86
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 66
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e11990>
numba.core.ssa - DEBUG - on stmt: $70compare_op.2 = origsize != known_size.2
numba.core.ssa - DEBUG - on stmt: bool72 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $72pred, 74, 82
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 74
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e11990>
numba.core.ssa - DEBUG - on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const76.1 = const(str, total size of new array must be unchanged)
numba.core.ssa - DEBUG - on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e11990>
numba.core.ssa - DEBUG - on stmt: $const82.0 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $84return_value.1 = cast(value=$const82.0)
numba.core.ssa - DEBUG - on stmt: return $84return_value.1
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 86
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e11990>
numba.core.ssa - DEBUG - on stmt: $const88.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $90compare_op.2 = num_neg_value.2 == $const88.1
numba.core.ssa - DEBUG - on stmt: bool92 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $92pred, 94, 160
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 94
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e11990>
numba.core.ssa - DEBUG - on stmt: $const96.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $98compare_op.2 = known_size.2 == $const96.1
numba.core.ssa - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $100pred, 102, 116
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 102
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e11990>
numba.core.ssa - DEBUG - on stmt: inferred = const(int, 0)
numba.core.ssa - DEBUG - first assign: inferred
numba.core.ssa - DEBUG - replaced with: inferred = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const108.2 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: ok = origsize == $const108.2
numba.core.ssa - DEBUG - on stmt: jump 136
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 116
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e11990>
numba.core.ssa - DEBUG - on stmt: inferred = origsize // known_size.2
numba.core.ssa - DEBUG - replaced with: inferred.1 = origsize // known_size.2
numba.core.ssa - DEBUG - on stmt: $128binary_modulo.5 = origsize % known_size.2
numba.core.ssa - DEBUG - on stmt: $const130.6 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: ok = $128binary_modulo.5 == $const130.6
numba.core.ssa - DEBUG - on stmt: jump 136
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 136
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e11990>
numba.core.ssa - DEBUG - on stmt: bool138 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $138pred = call bool138(ok, func=bool138, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $138pred, 148, 140
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 140
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e11990>
numba.core.ssa - DEBUG - on stmt: $140load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const142.1 = const(str, total size of new array must be unchanged)
numba.core.ssa - DEBUG - on stmt: $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 148
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e11990>
numba.core.ssa - DEBUG - on stmt: shape[neg_ax] = inferred
numba.core.ssa - DEBUG - on stmt: $const156.3 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $158return_value.4 = cast(value=$const156.3)
numba.core.ssa - DEBUG - on stmt: return $158return_value.4
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 160
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e11990>
numba.core.ssa - DEBUG - on stmt: $160load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const162.1 = const(str, multiple negative shape values)
numba.core.ssa - DEBUG - on stmt: $164call_function.2 = call $160load_global.0($const162.1, func=$160load_global.0, args=[Var($const162.1, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 161
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e11990>
numba.core.ssa - DEBUG - on stmt: known_size.3 = phi(incoming_values=[Var(known_size.1, arrayobj.py:2054), Var(known_size.2, arrayobj.py:2054)], incoming_blocks=[48, 34])
numba.core.ssa - DEBUG - on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:2051), Var(num_neg_value.1, arrayobj.py:2051)], incoming_blocks=[48, 34])
numba.core.ssa - DEBUG - on stmt: jump 18
numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {102: [<numba.core.ir.Assign object at 0x708753349690>],
             116: [<numba.core.ir.Assign object at 0x7087532b7c10>]})
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708753328b20>
numba.core.ssa - DEBUG - on stmt: origsize = arg(0, name=origsize)
numba.core.ssa - DEBUG - on stmt: shape = arg(1, name=shape)
numba.core.ssa - DEBUG - on stmt: num_neg_value = const(int, 0)
numba.core.ssa - DEBUG - on stmt: known_size = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
numba.core.ssa - DEBUG - on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
numba.core.ssa - DEBUG - on stmt: $phi18.0 = $16get_iter.5
numba.core.ssa - DEBUG - on stmt: jump 18
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 18
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708753328b20>
numba.core.ssa - DEBUG - on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2048), Var(known_size.3, arrayobj.py:2054)], incoming_blocks=[0, 161])
numba.core.ssa - DEBUG - on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 161])
numba.core.ssa - DEBUG - on stmt: $18for_iter.1 = iternext(value=$phi18.0)
numba.core.ssa - DEBUG - on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
numba.core.ssa - DEBUG - on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
numba.core.ssa - DEBUG - on stmt: $phi20.1 = $18for_iter.2
numba.core.ssa - DEBUG - on stmt: branch $18for_iter.3, 20, 58
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 20
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708753328b20>
numba.core.ssa - DEBUG - on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
numba.core.ssa - DEBUG - on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: ax = $20unpack_sequence.2
numba.core.ssa - DEBUG - on stmt: s = $20unpack_sequence.3
numba.core.ssa - DEBUG - on stmt: $const28.6 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $30compare_op.7 = s < $const28.6
numba.core.ssa - DEBUG - on stmt: bool32 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $32pred, 34, 48
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 34
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708753328b20>
numba.core.ssa - DEBUG - on stmt: $const36.2 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: num_neg_value.1 = $38inplace_add.3
numba.core.ssa - DEBUG - on stmt: neg_ax = ax
numba.core.ssa - DEBUG - on stmt: jump 161
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708753328b20>
numba.core.ssa - DEBUG - on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: known_size.1 = $52inplace_multiply.3
numba.core.ssa - DEBUG - on stmt: jump 161
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 58
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708753328b20>
numba.core.ssa - DEBUG - on stmt: $const60.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $62compare_op.2 = num_neg_value.2 == $const60.1
numba.core.ssa - DEBUG - on stmt: bool64 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $64pred, 66, 86
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 66
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708753328b20>
numba.core.ssa - DEBUG - on stmt: $70compare_op.2 = origsize != known_size.2
numba.core.ssa - DEBUG - on stmt: bool72 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $72pred, 74, 82
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 74
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708753328b20>
numba.core.ssa - DEBUG - on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const76.1 = const(str, total size of new array must be unchanged)
numba.core.ssa - DEBUG - on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708753328b20>
numba.core.ssa - DEBUG - on stmt: $const82.0 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $84return_value.1 = cast(value=$const82.0)
numba.core.ssa - DEBUG - on stmt: return $84return_value.1
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 86
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708753328b20>
numba.core.ssa - DEBUG - on stmt: $const88.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $90compare_op.2 = num_neg_value.2 == $const88.1
numba.core.ssa - DEBUG - on stmt: bool92 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $92pred, 94, 160
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 94
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708753328b20>
numba.core.ssa - DEBUG - on stmt: $const96.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $98compare_op.2 = known_size.2 == $const96.1
numba.core.ssa - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $100pred, 102, 116
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 102
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708753328b20>
numba.core.ssa - DEBUG - on stmt: inferred = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const108.2 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: ok = origsize == $const108.2
numba.core.ssa - DEBUG - on stmt: jump 136
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 116
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708753328b20>
numba.core.ssa - DEBUG - on stmt: inferred.1 = origsize // known_size.2
numba.core.ssa - DEBUG - on stmt: $128binary_modulo.5 = origsize % known_size.2
numba.core.ssa - DEBUG - on stmt: $const130.6 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: ok = $128binary_modulo.5 == $const130.6
numba.core.ssa - DEBUG - on stmt: jump 136
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 136
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708753328b20>
numba.core.ssa - DEBUG - on stmt: bool138 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $138pred = call bool138(ok, func=bool138, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $138pred, 148, 140
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 140
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708753328b20>
numba.core.ssa - DEBUG - on stmt: $140load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const142.1 = const(str, total size of new array must be unchanged)
numba.core.ssa - DEBUG - on stmt: $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 148
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708753328b20>
numba.core.ssa - DEBUG - on stmt: shape[neg_ax] = inferred
numba.core.ssa - DEBUG - find_def var='inferred' stmt=shape[neg_ax] = inferred
numba.core.ssa - DEBUG - find_def_from_top label 148
numba.core.ssa - DEBUG - idom 136 from label 148
numba.core.ssa - DEBUG - find_def_from_bottom label 136
numba.core.ssa - DEBUG - find_def_from_top label 136
numba.core.ssa - DEBUG - insert phi node inferred.2 = phi(incoming_values=[], incoming_blocks=[]) at 136
numba.core.ssa - DEBUG - find_def_from_bottom label 116
numba.core.ssa - DEBUG - incoming_def inferred.1 = origsize // known_size.2
numba.core.ssa - DEBUG - find_def_from_bottom label 102
numba.core.ssa - DEBUG - incoming_def inferred = const(int, 0)
numba.core.ssa - DEBUG - replaced with: shape[neg_ax] = inferred.2
numba.core.ssa - DEBUG - on stmt: $const156.3 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $158return_value.4 = cast(value=$const156.3)
numba.core.ssa - DEBUG - on stmt: return $158return_value.4
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 160
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708753328b20>
numba.core.ssa - DEBUG - on stmt: $160load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const162.1 = const(str, multiple negative shape values)
numba.core.ssa - DEBUG - on stmt: $164call_function.2 = call $160load_global.0($const162.1, func=$160load_global.0, args=[Var($const162.1, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 161
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708753328b20>
numba.core.ssa - DEBUG - on stmt: known_size.3 = phi(incoming_values=[Var(known_size.1, arrayobj.py:2054), Var(known_size.2, arrayobj.py:2054)], incoming_blocks=[48, 34])
numba.core.ssa - DEBUG - on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:2051), Var(num_neg_value.1, arrayobj.py:2051)], incoming_blocks=[48, 34])
numba.core.ssa - DEBUG - on stmt: jump 18
numba.core.ssa - DEBUG - Fix SSA violator on var ok
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7087532b7a00>
numba.core.ssa - DEBUG - on stmt: origsize = arg(0, name=origsize)
numba.core.ssa - DEBUG - on stmt: shape = arg(1, name=shape)
numba.core.ssa - DEBUG - on stmt: num_neg_value = const(int, 0)
numba.core.ssa - DEBUG - on stmt: known_size = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
numba.core.ssa - DEBUG - on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
numba.core.ssa - DEBUG - on stmt: $phi18.0 = $16get_iter.5
numba.core.ssa - DEBUG - on stmt: jump 18
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 18
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7087532b7a00>
numba.core.ssa - DEBUG - on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2048), Var(known_size.3, arrayobj.py:2054)], incoming_blocks=[0, 161])
numba.core.ssa - DEBUG - on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 161])
numba.core.ssa - DEBUG - on stmt: $18for_iter.1 = iternext(value=$phi18.0)
numba.core.ssa - DEBUG - on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
numba.core.ssa - DEBUG - on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
numba.core.ssa - DEBUG - on stmt: $phi20.1 = $18for_iter.2
numba.core.ssa - DEBUG - on stmt: branch $18for_iter.3, 20, 58
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 20
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7087532b7a00>
numba.core.ssa - DEBUG - on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
numba.core.ssa - DEBUG - on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: ax = $20unpack_sequence.2
numba.core.ssa - DEBUG - on stmt: s = $20unpack_sequence.3
numba.core.ssa - DEBUG - on stmt: $const28.6 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $30compare_op.7 = s < $const28.6
numba.core.ssa - DEBUG - on stmt: bool32 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $32pred, 34, 48
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 34
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7087532b7a00>
numba.core.ssa - DEBUG - on stmt: $const36.2 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: num_neg_value.1 = $38inplace_add.3
numba.core.ssa - DEBUG - on stmt: neg_ax = ax
numba.core.ssa - DEBUG - on stmt: jump 161
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7087532b7a00>
numba.core.ssa - DEBUG - on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: known_size.1 = $52inplace_multiply.3
numba.core.ssa - DEBUG - on stmt: jump 161
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 58
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7087532b7a00>
numba.core.ssa - DEBUG - on stmt: $const60.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $62compare_op.2 = num_neg_value.2 == $const60.1
numba.core.ssa - DEBUG - on stmt: bool64 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $64pred, 66, 86
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 66
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7087532b7a00>
numba.core.ssa - DEBUG - on stmt: $70compare_op.2 = origsize != known_size.2
numba.core.ssa - DEBUG - on stmt: bool72 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $72pred, 74, 82
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 74
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7087532b7a00>
numba.core.ssa - DEBUG - on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const76.1 = const(str, total size of new array must be unchanged)
numba.core.ssa - DEBUG - on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7087532b7a00>
numba.core.ssa - DEBUG - on stmt: $const82.0 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $84return_value.1 = cast(value=$const82.0)
numba.core.ssa - DEBUG - on stmt: return $84return_value.1
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 86
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7087532b7a00>
numba.core.ssa - DEBUG - on stmt: $const88.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $90compare_op.2 = num_neg_value.2 == $const88.1
numba.core.ssa - DEBUG - on stmt: bool92 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $92pred, 94, 160
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 94
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7087532b7a00>
numba.core.ssa - DEBUG - on stmt: $const96.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $98compare_op.2 = known_size.2 == $const96.1
numba.core.ssa - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $100pred, 102, 116
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 102
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7087532b7a00>
numba.core.ssa - DEBUG - on stmt: inferred = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const108.2 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: ok = origsize == $const108.2
numba.core.ssa - DEBUG - first assign: ok
numba.core.ssa - DEBUG - replaced with: ok = origsize == $const108.2
numba.core.ssa - DEBUG - on stmt: jump 136
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 116
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7087532b7a00>
numba.core.ssa - DEBUG - on stmt: inferred.1 = origsize // known_size.2
numba.core.ssa - DEBUG - on stmt: $128binary_modulo.5 = origsize % known_size.2
numba.core.ssa - DEBUG - on stmt: $const130.6 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: ok = $128binary_modulo.5 == $const130.6
numba.core.ssa - DEBUG - replaced with: ok.1 = $128binary_modulo.5 == $const130.6
numba.core.ssa - DEBUG - on stmt: jump 136
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 136
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7087532b7a00>
numba.core.ssa - DEBUG - on stmt: inferred.2 = phi(incoming_values=[Var(inferred.1, arrayobj.py:2066), Var(inferred, arrayobj.py:2063)], incoming_blocks=[116, 102])
numba.core.ssa - DEBUG - on stmt: bool138 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $138pred = call bool138(ok, func=bool138, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $138pred, 148, 140
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 140
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7087532b7a00>
numba.core.ssa - DEBUG - on stmt: $140load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const142.1 = const(str, total size of new array must be unchanged)
numba.core.ssa - DEBUG - on stmt: $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 148
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7087532b7a00>
numba.core.ssa - DEBUG - on stmt: shape[neg_ax] = inferred.2
numba.core.ssa - DEBUG - on stmt: $const156.3 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $158return_value.4 = cast(value=$const156.3)
numba.core.ssa - DEBUG - on stmt: return $158return_value.4
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 160
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7087532b7a00>
numba.core.ssa - DEBUG - on stmt: $160load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const162.1 = const(str, multiple negative shape values)
numba.core.ssa - DEBUG - on stmt: $164call_function.2 = call $160load_global.0($const162.1, func=$160load_global.0, args=[Var($const162.1, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 161
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7087532b7a00>
numba.core.ssa - DEBUG - on stmt: known_size.3 = phi(incoming_values=[Var(known_size.1, arrayobj.py:2054), Var(known_size.2, arrayobj.py:2054)], incoming_blocks=[48, 34])
numba.core.ssa - DEBUG - on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:2051), Var(num_neg_value.1, arrayobj.py:2051)], incoming_blocks=[48, 34])
numba.core.ssa - DEBUG - on stmt: jump 18
numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {102: [<numba.core.ir.Assign object at 0x708752e11ea0>],
             116: [<numba.core.ir.Assign object at 0x708752ef6c80>]})
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e11990>
numba.core.ssa - DEBUG - on stmt: origsize = arg(0, name=origsize)
numba.core.ssa - DEBUG - on stmt: shape = arg(1, name=shape)
numba.core.ssa - DEBUG - on stmt: num_neg_value = const(int, 0)
numba.core.ssa - DEBUG - on stmt: known_size = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
numba.core.ssa - DEBUG - on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
numba.core.ssa - DEBUG - on stmt: $phi18.0 = $16get_iter.5
numba.core.ssa - DEBUG - on stmt: jump 18
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 18
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e11990>
numba.core.ssa - DEBUG - on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2048), Var(known_size.3, arrayobj.py:2054)], incoming_blocks=[0, 161])
numba.core.ssa - DEBUG - on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 161])
numba.core.ssa - DEBUG - on stmt: $18for_iter.1 = iternext(value=$phi18.0)
numba.core.ssa - DEBUG - on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
numba.core.ssa - DEBUG - on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
numba.core.ssa - DEBUG - on stmt: $phi20.1 = $18for_iter.2
numba.core.ssa - DEBUG - on stmt: branch $18for_iter.3, 20, 58
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 20
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e11990>
numba.core.ssa - DEBUG - on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
numba.core.ssa - DEBUG - on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: ax = $20unpack_sequence.2
numba.core.ssa - DEBUG - on stmt: s = $20unpack_sequence.3
numba.core.ssa - DEBUG - on stmt: $const28.6 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $30compare_op.7 = s < $const28.6
numba.core.ssa - DEBUG - on stmt: bool32 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $32pred, 34, 48
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 34
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e11990>
numba.core.ssa - DEBUG - on stmt: $const36.2 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: num_neg_value.1 = $38inplace_add.3
numba.core.ssa - DEBUG - on stmt: neg_ax = ax
numba.core.ssa - DEBUG - on stmt: jump 161
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e11990>
numba.core.ssa - DEBUG - on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: known_size.1 = $52inplace_multiply.3
numba.core.ssa - DEBUG - on stmt: jump 161
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 58
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e11990>
numba.core.ssa - DEBUG - on stmt: $const60.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $62compare_op.2 = num_neg_value.2 == $const60.1
numba.core.ssa - DEBUG - on stmt: bool64 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $64pred, 66, 86
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 66
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e11990>
numba.core.ssa - DEBUG - on stmt: $70compare_op.2 = origsize != known_size.2
numba.core.ssa - DEBUG - on stmt: bool72 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $72pred, 74, 82
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 74
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e11990>
numba.core.ssa - DEBUG - on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const76.1 = const(str, total size of new array must be unchanged)
numba.core.ssa - DEBUG - on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e11990>
numba.core.ssa - DEBUG - on stmt: $const82.0 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $84return_value.1 = cast(value=$const82.0)
numba.core.ssa - DEBUG - on stmt: return $84return_value.1
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 86
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e11990>
numba.core.ssa - DEBUG - on stmt: $const88.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $90compare_op.2 = num_neg_value.2 == $const88.1
numba.core.ssa - DEBUG - on stmt: bool92 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $92pred, 94, 160
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 94
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e11990>
numba.core.ssa - DEBUG - on stmt: $const96.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $98compare_op.2 = known_size.2 == $const96.1
numba.core.ssa - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $100pred, 102, 116
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 102
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e11990>
numba.core.ssa - DEBUG - on stmt: inferred = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const108.2 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: ok = origsize == $const108.2
numba.core.ssa - DEBUG - on stmt: jump 136
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 116
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e11990>
numba.core.ssa - DEBUG - on stmt: inferred.1 = origsize // known_size.2
numba.core.ssa - DEBUG - on stmt: $128binary_modulo.5 = origsize % known_size.2
numba.core.ssa - DEBUG - on stmt: $const130.6 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: ok.1 = $128binary_modulo.5 == $const130.6
numba.core.ssa - DEBUG - on stmt: jump 136
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 136
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e11990>
numba.core.ssa - DEBUG - on stmt: inferred.2 = phi(incoming_values=[Var(inferred.1, arrayobj.py:2066), Var(inferred, arrayobj.py:2063)], incoming_blocks=[116, 102])
numba.core.ssa - DEBUG - on stmt: bool138 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $138pred = call bool138(ok, func=bool138, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - find_def var='ok' stmt=$138pred = call bool138(ok, func=bool138, args=(Var(ok, arrayobj.py:2064),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - find_def_from_top label 136
numba.core.ssa - DEBUG - insert phi node ok.2 = phi(incoming_values=[], incoming_blocks=[]) at 136
numba.core.ssa - DEBUG - find_def_from_bottom label 116
numba.core.ssa - DEBUG - incoming_def ok.1 = $128binary_modulo.5 == $const130.6
numba.core.ssa - DEBUG - find_def_from_bottom label 102
numba.core.ssa - DEBUG - incoming_def ok = origsize == $const108.2
numba.core.ssa - DEBUG - replaced with: $138pred = call bool138(ok.2, func=bool138, args=(Var(ok.2, arrayobj.py:2068),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $138pred, 148, 140
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 140
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e11990>
numba.core.ssa - DEBUG - on stmt: $140load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const142.1 = const(str, total size of new array must be unchanged)
numba.core.ssa - DEBUG - on stmt: $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 148
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e11990>
numba.core.ssa - DEBUG - on stmt: shape[neg_ax] = inferred.2
numba.core.ssa - DEBUG - on stmt: $const156.3 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $158return_value.4 = cast(value=$const156.3)
numba.core.ssa - DEBUG - on stmt: return $158return_value.4
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 160
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e11990>
numba.core.ssa - DEBUG - on stmt: $160load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const162.1 = const(str, multiple negative shape values)
numba.core.ssa - DEBUG - on stmt: $164call_function.2 = call $160load_global.0($const162.1, func=$160load_global.0, args=[Var($const162.1, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 161
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e11990>
numba.core.ssa - DEBUG - on stmt: known_size.3 = phi(incoming_values=[Var(known_size.1, arrayobj.py:2054), Var(known_size.2, arrayobj.py:2054)], incoming_blocks=[48, 34])
numba.core.ssa - DEBUG - on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:2051), Var(num_neg_value.1, arrayobj.py:2051)], incoming_blocks=[48, 34])
numba.core.ssa - DEBUG - on stmt: jump 18
numba.core.ssa - DEBUG - Fix SSA violator on var neg_ax
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708753328b20>
numba.core.ssa - DEBUG - on stmt: origsize = arg(0, name=origsize)
numba.core.ssa - DEBUG - on stmt: shape = arg(1, name=shape)
numba.core.ssa - DEBUG - on stmt: num_neg_value = const(int, 0)
numba.core.ssa - DEBUG - on stmt: known_size = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
numba.core.ssa - DEBUG - on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
numba.core.ssa - DEBUG - on stmt: $phi18.0 = $16get_iter.5
numba.core.ssa - DEBUG - on stmt: jump 18
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 18
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708753328b20>
numba.core.ssa - DEBUG - on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2048), Var(known_size.3, arrayobj.py:2054)], incoming_blocks=[0, 161])
numba.core.ssa - DEBUG - on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 161])
numba.core.ssa - DEBUG - on stmt: $18for_iter.1 = iternext(value=$phi18.0)
numba.core.ssa - DEBUG - on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
numba.core.ssa - DEBUG - on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
numba.core.ssa - DEBUG - on stmt: $phi20.1 = $18for_iter.2
numba.core.ssa - DEBUG - on stmt: branch $18for_iter.3, 20, 58
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 20
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708753328b20>
numba.core.ssa - DEBUG - on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
numba.core.ssa - DEBUG - on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: ax = $20unpack_sequence.2
numba.core.ssa - DEBUG - on stmt: s = $20unpack_sequence.3
numba.core.ssa - DEBUG - on stmt: $const28.6 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $30compare_op.7 = s < $const28.6
numba.core.ssa - DEBUG - on stmt: bool32 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $32pred, 34, 48
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 34
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708753328b20>
numba.core.ssa - DEBUG - on stmt: $const36.2 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: num_neg_value.1 = $38inplace_add.3
numba.core.ssa - DEBUG - on stmt: neg_ax = ax
numba.core.ssa - DEBUG - first assign: neg_ax
numba.core.ssa - DEBUG - replaced with: neg_ax = ax
numba.core.ssa - DEBUG - on stmt: jump 161
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708753328b20>
numba.core.ssa - DEBUG - on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: known_size.1 = $52inplace_multiply.3
numba.core.ssa - DEBUG - on stmt: jump 161
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 58
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708753328b20>
numba.core.ssa - DEBUG - on stmt: $const60.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $62compare_op.2 = num_neg_value.2 == $const60.1
numba.core.ssa - DEBUG - on stmt: bool64 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $64pred, 66, 86
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 66
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708753328b20>
numba.core.ssa - DEBUG - on stmt: $70compare_op.2 = origsize != known_size.2
numba.core.ssa - DEBUG - on stmt: bool72 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $72pred, 74, 82
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 74
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708753328b20>
numba.core.ssa - DEBUG - on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const76.1 = const(str, total size of new array must be unchanged)
numba.core.ssa - DEBUG - on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708753328b20>
numba.core.ssa - DEBUG - on stmt: $const82.0 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $84return_value.1 = cast(value=$const82.0)
numba.core.ssa - DEBUG - on stmt: return $84return_value.1
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 86
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708753328b20>
numba.core.ssa - DEBUG - on stmt: $const88.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $90compare_op.2 = num_neg_value.2 == $const88.1
numba.core.ssa - DEBUG - on stmt: bool92 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $92pred, 94, 160
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 94
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708753328b20>
numba.core.ssa - DEBUG - on stmt: $const96.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $98compare_op.2 = known_size.2 == $const96.1
numba.core.ssa - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $100pred, 102, 116
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 102
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708753328b20>
numba.core.ssa - DEBUG - on stmt: inferred = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const108.2 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: ok = origsize == $const108.2
numba.core.ssa - DEBUG - on stmt: jump 136
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 116
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708753328b20>
numba.core.ssa - DEBUG - on stmt: inferred.1 = origsize // known_size.2
numba.core.ssa - DEBUG - on stmt: $128binary_modulo.5 = origsize % known_size.2
numba.core.ssa - DEBUG - on stmt: $const130.6 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: ok.1 = $128binary_modulo.5 == $const130.6
numba.core.ssa - DEBUG - on stmt: jump 136
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 136
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708753328b20>
numba.core.ssa - DEBUG - on stmt: ok.2 = phi(incoming_values=[Var(ok.1, arrayobj.py:2067), Var(ok, arrayobj.py:2064)], incoming_blocks=[116, 102])
numba.core.ssa - DEBUG - on stmt: inferred.2 = phi(incoming_values=[Var(inferred.1, arrayobj.py:2066), Var(inferred, arrayobj.py:2063)], incoming_blocks=[116, 102])
numba.core.ssa - DEBUG - on stmt: bool138 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $138pred = call bool138(ok.2, func=bool138, args=(Var(ok.2, arrayobj.py:2068),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $138pred, 148, 140
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 140
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708753328b20>
numba.core.ssa - DEBUG - on stmt: $140load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const142.1 = const(str, total size of new array must be unchanged)
numba.core.ssa - DEBUG - on stmt: $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 148
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708753328b20>
numba.core.ssa - DEBUG - on stmt: shape[neg_ax] = inferred.2
numba.core.ssa - DEBUG - on stmt: $const156.3 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $158return_value.4 = cast(value=$const156.3)
numba.core.ssa - DEBUG - on stmt: return $158return_value.4
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 160
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708753328b20>
numba.core.ssa - DEBUG - on stmt: $160load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const162.1 = const(str, multiple negative shape values)
numba.core.ssa - DEBUG - on stmt: $164call_function.2 = call $160load_global.0($const162.1, func=$160load_global.0, args=[Var($const162.1, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 161
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708753328b20>
numba.core.ssa - DEBUG - on stmt: known_size.3 = phi(incoming_values=[Var(known_size.1, arrayobj.py:2054), Var(known_size.2, arrayobj.py:2054)], incoming_blocks=[48, 34])
numba.core.ssa - DEBUG - on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:2051), Var(num_neg_value.1, arrayobj.py:2051)], incoming_blocks=[48, 34])
numba.core.ssa - DEBUG - on stmt: jump 18
numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {34: [<numba.core.ir.Assign object at 0x708753349510>]})
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087532b7a00>
numba.core.ssa - DEBUG - on stmt: origsize = arg(0, name=origsize)
numba.core.ssa - DEBUG - on stmt: shape = arg(1, name=shape)
numba.core.ssa - DEBUG - on stmt: num_neg_value = const(int, 0)
numba.core.ssa - DEBUG - on stmt: known_size = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $10load_global.2 = global(enumerate: <class 'enumerate'>)
numba.core.ssa - DEBUG - on stmt: $14call_function.4 = call $10load_global.2(shape, func=$10load_global.2, args=[Var(shape, arrayobj.py:2046)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $16get_iter.5 = getiter(value=$14call_function.4)
numba.core.ssa - DEBUG - on stmt: $phi18.0 = $16get_iter.5
numba.core.ssa - DEBUG - on stmt: jump 18
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 18
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087532b7a00>
numba.core.ssa - DEBUG - on stmt: known_size.2 = phi(incoming_values=[Var(known_size, arrayobj.py:2048), Var(known_size.3, arrayobj.py:2054)], incoming_blocks=[0, 161])
numba.core.ssa - DEBUG - on stmt: num_neg_value.2 = phi(incoming_values=[Var(num_neg_value, arrayobj.py:2047), Var(num_neg_value.3, arrayobj.py:2051)], incoming_blocks=[0, 161])
numba.core.ssa - DEBUG - on stmt: $18for_iter.1 = iternext(value=$phi18.0)
numba.core.ssa - DEBUG - on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
numba.core.ssa - DEBUG - on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
numba.core.ssa - DEBUG - on stmt: $phi20.1 = $18for_iter.2
numba.core.ssa - DEBUG - on stmt: branch $18for_iter.3, 20, 58
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 20
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087532b7a00>
numba.core.ssa - DEBUG - on stmt: $20unpack_sequence.4 = exhaust_iter(value=$phi20.1, count=2)
numba.core.ssa - DEBUG - on stmt: $20unpack_sequence.2 = static_getitem(value=$20unpack_sequence.4, index=0, index_var=None, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $20unpack_sequence.3 = static_getitem(value=$20unpack_sequence.4, index=1, index_var=None, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: ax = $20unpack_sequence.2
numba.core.ssa - DEBUG - on stmt: s = $20unpack_sequence.3
numba.core.ssa - DEBUG - on stmt: $const28.6 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $30compare_op.7 = s < $const28.6
numba.core.ssa - DEBUG - on stmt: bool32 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $32pred = call bool32($30compare_op.7, func=bool32, args=(Var($30compare_op.7, arrayobj.py:2050),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $32pred, 34, 48
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 34
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087532b7a00>
numba.core.ssa - DEBUG - on stmt: $const36.2 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $38inplace_add.3 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=num_neg_value.2, rhs=$const36.2, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: num_neg_value.1 = $38inplace_add.3
numba.core.ssa - DEBUG - on stmt: neg_ax = ax
numba.core.ssa - DEBUG - on stmt: jump 161
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087532b7a00>
numba.core.ssa - DEBUG - on stmt: $52inplace_multiply.3 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=known_size.2, rhs=s, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: known_size.1 = $52inplace_multiply.3
numba.core.ssa - DEBUG - on stmt: jump 161
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 58
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087532b7a00>
numba.core.ssa - DEBUG - on stmt: $const60.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $62compare_op.2 = num_neg_value.2 == $const60.1
numba.core.ssa - DEBUG - on stmt: bool64 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $64pred = call bool64($62compare_op.2, func=bool64, args=(Var($62compare_op.2, arrayobj.py:2056),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $64pred, 66, 86
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 66
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087532b7a00>
numba.core.ssa - DEBUG - on stmt: $70compare_op.2 = origsize != known_size.2
numba.core.ssa - DEBUG - on stmt: bool72 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $72pred = call bool72($70compare_op.2, func=bool72, args=(Var($70compare_op.2, arrayobj.py:2057),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $72pred, 74, 82
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 74
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087532b7a00>
numba.core.ssa - DEBUG - on stmt: $74load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const76.1 = const(str, total size of new array must be unchanged)
numba.core.ssa - DEBUG - on stmt: $78call_function.2 = call $74load_global.0($const76.1, func=$74load_global.0, args=[Var($const76.1, arrayobj.py:2058)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087532b7a00>
numba.core.ssa - DEBUG - on stmt: $const82.0 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $84return_value.1 = cast(value=$const82.0)
numba.core.ssa - DEBUG - on stmt: return $84return_value.1
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 86
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087532b7a00>
numba.core.ssa - DEBUG - on stmt: $const88.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $90compare_op.2 = num_neg_value.2 == $const88.1
numba.core.ssa - DEBUG - on stmt: bool92 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $92pred = call bool92($90compare_op.2, func=bool92, args=(Var($90compare_op.2, arrayobj.py:2060),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $92pred, 94, 160
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 94
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087532b7a00>
numba.core.ssa - DEBUG - on stmt: $const96.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $98compare_op.2 = known_size.2 == $const96.1
numba.core.ssa - DEBUG - on stmt: bool100 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $100pred = call bool100($98compare_op.2, func=bool100, args=(Var($98compare_op.2, arrayobj.py:2062),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $100pred, 102, 116
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 102
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087532b7a00>
numba.core.ssa - DEBUG - on stmt: inferred = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $const108.2 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: ok = origsize == $const108.2
numba.core.ssa - DEBUG - on stmt: jump 136
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 116
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087532b7a00>
numba.core.ssa - DEBUG - on stmt: inferred.1 = origsize // known_size.2
numba.core.ssa - DEBUG - on stmt: $128binary_modulo.5 = origsize % known_size.2
numba.core.ssa - DEBUG - on stmt: $const130.6 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: ok.1 = $128binary_modulo.5 == $const130.6
numba.core.ssa - DEBUG - on stmt: jump 136
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 136
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087532b7a00>
numba.core.ssa - DEBUG - on stmt: ok.2 = phi(incoming_values=[Var(ok.1, arrayobj.py:2067), Var(ok, arrayobj.py:2064)], incoming_blocks=[116, 102])
numba.core.ssa - DEBUG - on stmt: inferred.2 = phi(incoming_values=[Var(inferred.1, arrayobj.py:2066), Var(inferred, arrayobj.py:2063)], incoming_blocks=[116, 102])
numba.core.ssa - DEBUG - on stmt: bool138 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $138pred = call bool138(ok.2, func=bool138, args=(Var(ok.2, arrayobj.py:2068),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $138pred, 148, 140
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 140
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087532b7a00>
numba.core.ssa - DEBUG - on stmt: $140load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const142.1 = const(str, total size of new array must be unchanged)
numba.core.ssa - DEBUG - on stmt: $144call_function.2 = call $140load_global.0($const142.1, func=$140load_global.0, args=[Var($const142.1, arrayobj.py:2069)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('total size of new array must be unchanged')
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 148
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087532b7a00>
numba.core.ssa - DEBUG - on stmt: shape[neg_ax] = inferred.2
numba.core.ssa - DEBUG - find_def var='neg_ax' stmt=shape[neg_ax] = inferred.2
numba.core.ssa - DEBUG - find_def_from_top label 148
numba.core.ssa - DEBUG - idom 136 from label 148
numba.core.ssa - DEBUG - find_def_from_bottom label 136
numba.core.ssa - DEBUG - find_def_from_top label 136
numba.core.ssa - DEBUG - idom 94 from label 136
numba.core.ssa - DEBUG - find_def_from_bottom label 94
numba.core.ssa - DEBUG - find_def_from_top label 94
numba.core.ssa - DEBUG - idom 86 from label 94
numba.core.ssa - DEBUG - find_def_from_bottom label 86
numba.core.ssa - DEBUG - find_def_from_top label 86
numba.core.ssa - DEBUG - idom 58 from label 86
numba.core.ssa - DEBUG - find_def_from_bottom label 58
numba.core.ssa - DEBUG - find_def_from_top label 58
numba.core.ssa - DEBUG - idom 18 from label 58
numba.core.ssa - DEBUG - find_def_from_bottom label 18
numba.core.ssa - DEBUG - find_def_from_top label 18
numba.core.ssa - DEBUG - insert phi node neg_ax.1 = phi(incoming_values=[], incoming_blocks=[]) at 18
numba.core.ssa - DEBUG - find_def_from_bottom label 0
numba.core.ssa - DEBUG - find_def_from_top label 0
numba.core.ssa - DEBUG - incoming_def <class 'numba.core.ssa.UndefinedVariable'>
numba.core.ssa - DEBUG - find_def_from_bottom label 161
numba.core.ssa - DEBUG - find_def_from_top label 161
numba.core.ssa - DEBUG - insert phi node neg_ax.2 = phi(incoming_values=[], incoming_blocks=[]) at 161
numba.core.ssa - DEBUG - find_def_from_bottom label 48
numba.core.ssa - DEBUG - find_def_from_top label 48
numba.core.ssa - DEBUG - idom 20 from label 48
numba.core.ssa - DEBUG - find_def_from_bottom label 20
numba.core.ssa - DEBUG - find_def_from_top label 20
numba.core.ssa - DEBUG - idom 18 from label 20
numba.core.ssa - DEBUG - find_def_from_bottom label 18
numba.core.ssa - DEBUG - incoming_def neg_ax.1 = phi(incoming_values=[Undefined], incoming_blocks=[0])
numba.core.ssa - DEBUG - find_def_from_bottom label 34
numba.core.ssa - DEBUG - incoming_def neg_ax = ax
numba.core.ssa - DEBUG - incoming_def neg_ax.2 = phi(incoming_values=[Var(neg_ax.1, arrayobj.py:2070), Var(neg_ax, arrayobj.py:2052)], incoming_blocks=[48, 34])
numba.core.ssa - DEBUG - replaced with: shape[neg_ax.1] = inferred.2
numba.core.ssa - DEBUG - on stmt: $const156.3 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $158return_value.4 = cast(value=$const156.3)
numba.core.ssa - DEBUG - on stmt: return $158return_value.4
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 160
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087532b7a00>
numba.core.ssa - DEBUG - on stmt: $160load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const162.1 = const(str, multiple negative shape values)
numba.core.ssa - DEBUG - on stmt: $164call_function.2 = call $160load_global.0($const162.1, func=$160load_global.0, args=[Var($const162.1, arrayobj.py:2073)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('multiple negative shape values')
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 161
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087532b7a00>
numba.core.ssa - DEBUG - on stmt: known_size.3 = phi(incoming_values=[Var(known_size.1, arrayobj.py:2054), Var(known_size.2, arrayobj.py:2054)], incoming_blocks=[48, 34])
numba.core.ssa - DEBUG - on stmt: num_neg_value.3 = phi(incoming_values=[Var(num_neg_value.2, arrayobj.py:2051), Var(num_neg_value.1, arrayobj.py:2051)], incoming_blocks=[48, 34])
numba.core.ssa - DEBUG - on stmt: jump 18
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=481)
           2	LOAD_FAST(arg=0, lineno=483)
           4	LOAD_FAST(arg=1, lineno=483)
           6	COMPARE_OP(arg=4, lineno=483)
           8	RETURN_VALUE(arg=None, lineno=483)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=481)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=483)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=483)
numba.core.byteflow - DEBUG - stack ['$a2.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=COMPARE_OP(arg=4, lineno=483)
numba.core.byteflow - DEBUG - stack ['$a2.0', '$min_val4.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=RETURN_VALUE(arg=None, lineno=483)
numba.core.byteflow - DEBUG - stack ['$6compare_op.2']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - keep phismap: {}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$a2.0'}), (4, {'res': '$min_val4.1'}), (6, {'lhs': '$a2.0', 'rhs': '$min_val4.1', 'res': '$6compare_op.2'}), (8, {'retval': '$6compare_op.2', 'castval': '$8return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    min_val = arg(1, name=min_val)           ['min_val']
    $6compare_op.2 = a > min_val             ['$6compare_op.2', 'a', 'min_val']
    $8return_value.3 = cast(value=$6compare_op.2) ['$6compare_op.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x70875311e590>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: min_val = arg(1, name=min_val)
numba.core.ssa - DEBUG - on stmt: $6compare_op.2 = a > min_val
numba.core.ssa - DEBUG - on stmt: $8return_value.3 = cast(value=$6compare_op.2)
numba.core.ssa - DEBUG - on stmt: return $8return_value.3
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$6compare_op.2': [(<numba.core.ir.Assign object at 0x70875311e860>,
                                 0)],
             '$8return_value.3': [(<numba.core.ir.Assign object at 0x70875311fe80>,
                                   0)],
             'a': [(<numba.core.ir.Assign object at 0x70875311d7b0>, 0)],
             'min_val': [(<numba.core.ir.Assign object at 0x70875311cd00>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x70875311e590>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=3535)
           2	LOAD_GLOBAL(arg=0, lineno=3536)
           4	LOAD_FAST(arg=0, lineno=3536)
           6	CALL_FUNCTION(arg=1, lineno=3536)
           8	STORE_FAST(arg=2, lineno=3536)
          10	LOAD_GLOBAL(arg=1, lineno=3537)
          12	LOAD_FAST(arg=2, lineno=3537)
          14	CALL_FUNCTION(arg=1, lineno=3537)
          16	GET_ITER(arg=None, lineno=3537)
>         18	FOR_ITER(arg=20, lineno=3537)
          20	STORE_FAST(arg=3, lineno=3537)
          22	LOAD_FAST(arg=0, lineno=3538)
          24	LOAD_FAST(arg=3, lineno=3538)
          26	BINARY_SUBSCR(arg=None, lineno=3538)
          28	LOAD_FAST(arg=1, lineno=3538)
          30	LOAD_GLOBAL(arg=0, lineno=3538)
          32	LOAD_FAST(arg=1, lineno=3538)
          34	CALL_FUNCTION(arg=1, lineno=3538)
          36	LOAD_FAST(arg=2, lineno=3538)
          38	BINARY_SUBTRACT(arg=None, lineno=3538)
          40	LOAD_FAST(arg=3, lineno=3538)
          42	BINARY_ADD(arg=None, lineno=3538)
          44	BINARY_SUBSCR(arg=None, lineno=3538)
          46	COMPARE_OP(arg=3, lineno=3538)
          48	POP_JUMP_IF_FALSE(arg=30, lineno=3538)
          50	LOAD_GLOBAL(arg=2, lineno=3539)
          52	LOAD_CONST(arg=1, lineno=3539)
          54	CALL_FUNCTION(arg=1, lineno=3539)
          56	RAISE_VARARGS(arg=1, lineno=3539)
>         58	JUMP_ABSOLUTE(arg=10, lineno=3538)
>         60	LOAD_CONST(arg=0, lineno=3537)
          62	RETURN_VALUE(arg=None, lineno=3537)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=3535)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=3536)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=3536)
numba.core.byteflow - DEBUG - stack ['$2load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=3536)
numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$shape4.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=2, lineno=3536)
numba.core.byteflow - DEBUG - stack ['$6call_function.2']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=3537)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=2, lineno=3537)
numba.core.byteflow - DEBUG - stack ['$10load_global.3']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=3537)
numba.core.byteflow - DEBUG - stack ['$10load_global.3', '$n12.4']
numba.core.byteflow - DEBUG - dispatch pc=16, inst=GET_ITER(arg=None, lineno=3537)
numba.core.byteflow - DEBUG - stack ['$14call_function.5']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=18, stack=('$16get_iter.6',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=18 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi18.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=18 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=18, inst=FOR_ITER(arg=20, lineno=3537)
numba.core.byteflow - DEBUG - stack ['$phi18.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=60, stack=(), blockstack=(), npush=0), Edge(pc=20, stack=('$phi18.0', '$18for_iter.2'), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=60 nstack_initial=0), State(pc_initial=20 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=60 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_CONST(arg=0, lineno=3537)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=62, inst=RETURN_VALUE(arg=None, lineno=3537)
numba.core.byteflow - DEBUG - stack ['$const60.0']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=20 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: ['$phi20.0', '$phi20.1']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=20 nstack_initial=2)
numba.core.byteflow - DEBUG - dispatch pc=20, inst=STORE_FAST(arg=3, lineno=3537)
numba.core.byteflow - DEBUG - stack ['$phi20.0', '$phi20.1']
numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=0, lineno=3538)
numba.core.byteflow - DEBUG - stack ['$phi20.0']
numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=3, lineno=3538)
numba.core.byteflow - DEBUG - stack ['$phi20.0', '$shape22.2']
numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=3538)
numba.core.byteflow - DEBUG - stack ['$phi20.0', '$shape22.2', '$i24.3']
numba.core.byteflow - DEBUG - dispatch pc=28, inst=LOAD_FAST(arg=1, lineno=3538)
numba.core.byteflow - DEBUG - stack ['$phi20.0', '$26binary_subscr.4']
numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_GLOBAL(arg=0, lineno=3538)
numba.core.byteflow - DEBUG - stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5']
numba.core.byteflow - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=3538)
numba.core.byteflow - DEBUG - stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$30load_global.6']
numba.core.byteflow - DEBUG - dispatch pc=34, inst=CALL_FUNCTION(arg=1, lineno=3538)
numba.core.byteflow - DEBUG - stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$30load_global.6', '$main_shape32.7']
numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=2, lineno=3538)
numba.core.byteflow - DEBUG - stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$34call_function.8']
numba.core.byteflow - DEBUG - dispatch pc=38, inst=BINARY_SUBTRACT(arg=None, lineno=3538)
numba.core.byteflow - DEBUG - stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$34call_function.8', '$n36.9']
numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_FAST(arg=3, lineno=3538)
numba.core.byteflow - DEBUG - stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$38binary_subtract.10']
numba.core.byteflow - DEBUG - dispatch pc=42, inst=BINARY_ADD(arg=None, lineno=3538)
numba.core.byteflow - DEBUG - stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$38binary_subtract.10', '$i40.11']
numba.core.byteflow - DEBUG - dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=3538)
numba.core.byteflow - DEBUG - stack ['$phi20.0', '$26binary_subscr.4', '$main_shape28.5', '$42binary_add.12']
numba.core.byteflow - DEBUG - dispatch pc=46, inst=COMPARE_OP(arg=3, lineno=3538)
numba.core.byteflow - DEBUG - stack ['$phi20.0', '$26binary_subscr.4', '$44binary_subscr.13']
numba.core.byteflow - DEBUG - dispatch pc=48, inst=POP_JUMP_IF_FALSE(arg=30, lineno=3538)
numba.core.byteflow - DEBUG - stack ['$phi20.0', '$46compare_op.14']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=50, stack=('$phi20.0',), blockstack=(), npush=0), Edge(pc=58, stack=('$phi20.0',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=58 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi50.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=50 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=50, inst=LOAD_GLOBAL(arg=2, lineno=3539)
numba.core.byteflow - DEBUG - stack ['$phi50.0']
numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_CONST(arg=1, lineno=3539)
numba.core.byteflow - DEBUG - stack ['$phi50.0', '$50load_global.1']
numba.core.byteflow - DEBUG - dispatch pc=54, inst=CALL_FUNCTION(arg=1, lineno=3539)
numba.core.byteflow - DEBUG - stack ['$phi50.0', '$50load_global.1', '$const52.2']
numba.core.byteflow - DEBUG - dispatch pc=56, inst=RAISE_VARARGS(arg=1, lineno=3539)
numba.core.byteflow - DEBUG - stack ['$phi50.0', '$54call_function.3']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=58 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi58.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=58 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=58, inst=JUMP_ABSOLUTE(arg=10, lineno=3538)
numba.core.byteflow - DEBUG - stack ['$phi58.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=18, stack=('$phi58.0',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=18 nstack_initial=1)])
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=18 nstack_initial=1): {'$phi18.0'},
             State(pc_initial=20 nstack_initial=2): {'$phi20.1'},
             State(pc_initial=50 nstack_initial=1): set(),
             State(pc_initial=58 nstack_initial=1): set(),
             State(pc_initial=60 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {'$phi18.0': State(pc_initial=0 nstack_initial=0),
 '$phi20.1': State(pc_initial=18 nstack_initial=1)}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi58.0', State(pc_initial=58 nstack_initial=1))},
             '$phi20.0': {('$phi18.0', State(pc_initial=18 nstack_initial=1))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi50.0': {('$phi20.0', State(pc_initial=20 nstack_initial=2))},
             '$phi58.0': {('$phi20.0', State(pc_initial=20 nstack_initial=2))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi20.0', State(pc_initial=20 nstack_initial=2))},
             '$phi20.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi20.0', State(pc_initial=20 nstack_initial=2))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi50.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi58.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi50.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi58.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi18.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi20.1': {('$18for_iter.2',
                           State(pc_initial=18 nstack_initial=1))},
             '$phi50.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi58.0': {('$16get_iter.6',
                           State(pc_initial=0 nstack_initial=0))}})
numba.core.byteflow - DEBUG - keep phismap: {'$phi18.0': {('$16get_iter.6', State(pc_initial=0 nstack_initial=0))},
 '$phi20.1': {('$18for_iter.2', State(pc_initial=18 nstack_initial=1))}}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi18.0': '$16get_iter.6'},
             State(pc_initial=18 nstack_initial=1): {'$phi20.1': '$18for_iter.2'}})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$shape4.1'}), (6, {'func': '$2load_global.0', 'args': ['$shape4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_global.3'}), (12, {'res': '$n12.4'}), (14, {'func': '$10load_global.3', 'args': ['$n12.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5', 'res': '$16get_iter.6'})), outgoing_phis={'$phi18.0': '$16get_iter.6'}, blockstack=(), active_try_block=None, outgoing_edgepushed={18: ('$16get_iter.6',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=18 nstack_initial=1):
AdaptBlockInfo(insts=((18, {'iterator': '$phi18.0', 'pair': '$18for_iter.1', 'indval': '$18for_iter.2', 'pred': '$18for_iter.3'}),), outgoing_phis={'$phi20.1': '$18for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: (), 20: ('$phi18.0', '$18for_iter.2')})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=20 nstack_initial=2):
AdaptBlockInfo(insts=((20, {'value': '$phi20.1'}), (22, {'res': '$shape22.2'}), (24, {'res': '$i24.3'}), (26, {'index': '$i24.3', 'target': '$shape22.2', 'res': '$26binary_subscr.4'}), (28, {'res': '$main_shape28.5'}), (30, {'res': '$30load_global.6'}), (32, {'res': '$main_shape32.7'}), (34, {'func': '$30load_global.6', 'args': ['$main_shape32.7'], 'res': '$34call_function.8'}), (36, {'res': '$n36.9'}), (38, {'lhs': '$34call_function.8', 'rhs': '$n36.9', 'res': '$38binary_subtract.10'}), (40, {'res': '$i40.11'}), (42, {'lhs': '$38binary_subtract.10', 'rhs': '$i40.11', 'res': '$42binary_add.12'}), (44, {'index': '$42binary_add.12', 'target': '$main_shape28.5', 'res': '$44binary_subscr.13'}), (46, {'lhs': '$26binary_subscr.4', 'rhs': '$44binary_subscr.13', 'res': '$46compare_op.14'}), (48, {'pred': '$46compare_op.14'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi20.0',), 58: ('$phi20.0',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((50, {'res': '$50load_global.1'}), (52, {'res': '$const52.2'}), (54, {'func': '$50load_global.1', 'args': ['$const52.2'], 'res': '$54call_function.3'}), (56, {'exc': '$54call_function.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=58 nstack_initial=1):
AdaptBlockInfo(insts=((58, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={18: ('$phi58.0',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$const60.0'}), (62, {'retval': '$const60.0', 'castval': '$62return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    shape = arg(0, name=shape)               ['shape']
    main_shape = arg(1, name=main_shape)     ['main_shape']
    $2load_global.0 = global(len: <built-in function len>) ['$2load_global.0']
    n = call $2load_global.0(shape, func=$2load_global.0, args=[Var(shape, arrayobj.py:3535)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'n', 'shape']
    $10load_global.3 = global(range: <class 'range'>) ['$10load_global.3']
    $14call_function.5 = call $10load_global.3(n, func=$10load_global.3, args=[Var(n, arrayobj.py:3536)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.3', '$14call_function.5', 'n']
    $16get_iter.6 = getiter(value=$14call_function.5) ['$14call_function.5', '$16get_iter.6']
    $phi18.0 = $16get_iter.6                 ['$16get_iter.6', '$phi18.0']
    jump 18                                  []
label 18:
    $18for_iter.1 = iternext(value=$phi18.0) ['$18for_iter.1', '$phi18.0']
    $18for_iter.2 = pair_first(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.2']
    $18for_iter.3 = pair_second(value=$18for_iter.1) ['$18for_iter.1', '$18for_iter.3']
    $phi20.1 = $18for_iter.2                 ['$18for_iter.2', '$phi20.1']
    branch $18for_iter.3, 20, 60             ['$18for_iter.3']
label 20:
    i = $phi20.1                             ['$phi20.1', 'i']
    $26binary_subscr.4 = getitem(value=shape, index=i, fn=<built-in function getitem>) ['$26binary_subscr.4', 'i', 'shape']
    $30load_global.6 = global(len: <built-in function len>) ['$30load_global.6']
    $34call_function.8 = call $30load_global.6(main_shape, func=$30load_global.6, args=[Var(main_shape, arrayobj.py:3535)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.6', '$34call_function.8', 'main_shape']
    $38binary_subtract.10 = $34call_function.8 - n ['$34call_function.8', '$38binary_subtract.10', 'n']
    $42binary_add.12 = $38binary_subtract.10 + i ['$38binary_subtract.10', '$42binary_add.12', 'i']
    $44binary_subscr.13 = getitem(value=main_shape, index=$42binary_add.12, fn=<built-in function getitem>) ['$42binary_add.12', '$44binary_subscr.13', 'main_shape']
    $46compare_op.14 = $26binary_subscr.4 != $44binary_subscr.13 ['$26binary_subscr.4', '$44binary_subscr.13', '$46compare_op.14']
    bool48 = global(bool: <class 'bool'>)    ['bool48']
    $48pred = call bool48($46compare_op.14, func=bool48, args=(Var($46compare_op.14, arrayobj.py:3538),), kws=(), vararg=None, varkwarg=None, target=None) ['$46compare_op.14', '$48pred', 'bool48']
    branch $48pred, 50, 58                   ['$48pred']
label 50:
    $50load_global.1 = global(ValueError: <class 'ValueError'>) ['$50load_global.1']
    $const52.2 = const(str, nditer(): operands could not be broadcast together) ['$const52.2']
    $54call_function.3 = call $50load_global.1($const52.2, func=$50load_global.1, args=[Var($const52.2, arrayobj.py:3539)], kws=(), vararg=None, varkwarg=None, target=None) ['$50load_global.1', '$54call_function.3', '$const52.2']
    raise $54call_function.3                 ['$54call_function.3']
label 58:
    jump 18                                  []
label 60:
    $const60.0 = const(NoneType, None)       ['$const60.0']
    $62return_value.1 = cast(value=$const60.0) ['$62return_value.1', '$const60.0']
    return $62return_value.1                 ['$62return_value.1']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752d46230>
numba.core.ssa - DEBUG - on stmt: shape = arg(0, name=shape)
numba.core.ssa - DEBUG - on stmt: main_shape = arg(1, name=main_shape)
numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(len: <built-in function len>)
numba.core.ssa - DEBUG - on stmt: n = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $10load_global.3 = global(range: <class 'range'>)
numba.core.ssa - DEBUG - on stmt: $14call_function.5 = call $10load_global.3(n, func=$10load_global.3, args=[Var(n, arrayobj.py:3536)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $16get_iter.6 = getiter(value=$14call_function.5)
numba.core.ssa - DEBUG - on stmt: $phi18.0 = $16get_iter.6
numba.core.ssa - DEBUG - on stmt: jump 18
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 18
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752d46230>
numba.core.ssa - DEBUG - on stmt: $18for_iter.1 = iternext(value=$phi18.0)
numba.core.ssa - DEBUG - on stmt: $18for_iter.2 = pair_first(value=$18for_iter.1)
numba.core.ssa - DEBUG - on stmt: $18for_iter.3 = pair_second(value=$18for_iter.1)
numba.core.ssa - DEBUG - on stmt: $phi20.1 = $18for_iter.2
numba.core.ssa - DEBUG - on stmt: branch $18for_iter.3, 20, 60
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 20
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752d46230>
numba.core.ssa - DEBUG - on stmt: i = $phi20.1
numba.core.ssa - DEBUG - on stmt: $26binary_subscr.4 = getitem(value=shape, index=i, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $30load_global.6 = global(len: <built-in function len>)
numba.core.ssa - DEBUG - on stmt: $34call_function.8 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $38binary_subtract.10 = $34call_function.8 - n
numba.core.ssa - DEBUG - on stmt: $42binary_add.12 = $38binary_subtract.10 + i
numba.core.ssa - DEBUG - on stmt: $44binary_subscr.13 = getitem(value=main_shape, index=$42binary_add.12, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $46compare_op.14 = $26binary_subscr.4 != $44binary_subscr.13
numba.core.ssa - DEBUG - on stmt: bool48 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $48pred = call bool48($46compare_op.14, func=bool48, args=(Var($46compare_op.14, arrayobj.py:3538),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $48pred, 50, 58
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 50
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752d46230>
numba.core.ssa - DEBUG - on stmt: $50load_global.1 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const52.2 = const(str, nditer(): operands could not be broadcast together)
numba.core.ssa - DEBUG - on stmt: $54call_function.3 = call $50load_global.1($const52.2, func=$50load_global.1, args=[Var($const52.2, arrayobj.py:3539)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('nditer(): operands could not be broadcast together')
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 58
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752d46230>
numba.core.ssa - DEBUG - on stmt: jump 18
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 60
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752d46230>
numba.core.ssa - DEBUG - on stmt: $const60.0 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $62return_value.1 = cast(value=$const60.0)
numba.core.ssa - DEBUG - on stmt: return $62return_value.1
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10load_global.3': [(<numba.core.ir.Assign object at 0x708752d46140>,
                                   0)],
             '$14call_function.5': [(<numba.core.ir.Assign object at 0x708752d44be0>,
                                     0)],
             '$16get_iter.6': [(<numba.core.ir.Assign object at 0x708753624250>,
                                0)],
             '$18for_iter.1': [(<numba.core.ir.Assign object at 0x708753727fd0>,
                                18)],
             '$18for_iter.2': [(<numba.core.ir.Assign object at 0x708753418fa0>,
                                18)],
             '$18for_iter.3': [(<numba.core.ir.Assign object at 0x70875341a020>,
                                18)],
             '$26binary_subscr.4': [(<numba.core.ir.Assign object at 0x70875341a650>,
                                     20)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x708752d459f0>,
                                  0)],
             '$30load_global.6': [(<numba.core.ir.Assign object at 0x7087534196f0>,
                                   20)],
             '$34call_function.8': [(<numba.core.ir.Assign object at 0x70875341b3a0>,
                                     20)],
             '$38binary_subtract.10': [(<numba.core.ir.Assign object at 0x70875341bd30>,
                                        20)],
             '$42binary_add.12': [(<numba.core.ir.Assign object at 0x70875341b4c0>,
                                   20)],
             '$44binary_subscr.13': [(<numba.core.ir.Assign object at 0x708752d469b0>,
                                      20)],
             '$46compare_op.14': [(<numba.core.ir.Assign object at 0x708752d46530>,
                                   20)],
             '$48pred': [(<numba.core.ir.Assign object at 0x708752d46980>, 20)],
             '$50load_global.1': [(<numba.core.ir.Assign object at 0x708752d451e0>,
                                   50)],
             '$54call_function.3': [(<numba.core.ir.Assign object at 0x708753419e70>,
                                     50)],
             '$62return_value.1': [(<numba.core.ir.Assign object at 0x7087534ec580>,
                                    60)],
             '$const52.2': [(<numba.core.ir.Assign object at 0x708752d457b0>,
                             50)],
             '$const60.0': [(<numba.core.ir.Assign object at 0x7087534ee230>,
                             60)],
             '$phi18.0': [(<numba.core.ir.Assign object at 0x708752d45240>, 0)],
             '$phi20.1': [(<numba.core.ir.Assign object at 0x708753726fe0>,
                           18)],
             'bool48': [(<numba.core.ir.Assign object at 0x708752d463e0>, 20)],
             'i': [(<numba.core.ir.Assign object at 0x70875341b970>, 20)],
             'main_shape': [(<numba.core.ir.Assign object at 0x708752d45a20>,
                             0)],
             'n': [(<numba.core.ir.Assign object at 0x708752d44dc0>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x708752d47640>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x708752d46230>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=437)
           2	LOAD_DEREF(arg=0, lineno=440)
           4	STORE_FAST(arg=1, lineno=440)
           6	LOAD_GLOBAL(arg=0, lineno=441)
           8	LOAD_METHOD(arg=1, lineno=441)
          10	LOAD_FAST(arg=0, lineno=441)
          12	CALL_METHOD(arg=1, lineno=441)
          14	GET_ITER(arg=None, lineno=441)
>         16	FOR_ITER(arg=8, lineno=441)
          18	STORE_FAST(arg=2, lineno=441)
          20	LOAD_FAST(arg=1, lineno=442)
          22	LOAD_FAST(arg=2, lineno=442)
          24	LOAD_METHOD(arg=2, lineno=442)
          26	CALL_METHOD(arg=0, lineno=442)
          28	INPLACE_ADD(arg=None, lineno=442)
          30	STORE_FAST(arg=1, lineno=442)
          32	JUMP_ABSOLUTE(arg=9, lineno=442)
>         34	LOAD_FAST(arg=1, lineno=443)
          36	LOAD_FAST(arg=0, lineno=443)
          38	LOAD_ATTR(arg=3, lineno=443)
          40	BINARY_TRUE_DIVIDE(arg=None, lineno=443)
          42	RETURN_VALUE(arg=None, lineno=443)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=437)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_DEREF(arg=0, lineno=440)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=STORE_FAST(arg=1, lineno=440)
numba.core.byteflow - DEBUG - stack ['$2load_deref.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_GLOBAL(arg=0, lineno=441)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_METHOD(arg=1, lineno=441)
numba.core.byteflow - DEBUG - stack ['$6load_global.1']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=441)
numba.core.byteflow - DEBUG - stack ['$8load_method.2']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=CALL_METHOD(arg=1, lineno=441)
numba.core.byteflow - DEBUG - stack ['$8load_method.2', '$a10.3']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=GET_ITER(arg=None, lineno=441)
numba.core.byteflow - DEBUG - stack ['$12call_method.4']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=16, stack=('$14get_iter.5',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=16 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi16.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=16 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=16, inst=FOR_ITER(arg=8, lineno=441)
numba.core.byteflow - DEBUG - stack ['$phi16.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=34, stack=(), blockstack=(), npush=0), Edge(pc=18, stack=('$phi16.0', '$16for_iter.2'), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=34 nstack_initial=0), State(pc_initial=18 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=34 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=34, inst=LOAD_FAST(arg=1, lineno=443)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=443)
numba.core.byteflow - DEBUG - stack ['$c34.0']
numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_ATTR(arg=3, lineno=443)
numba.core.byteflow - DEBUG - stack ['$c34.0', '$a36.1']
numba.core.byteflow - DEBUG - dispatch pc=40, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=443)
numba.core.byteflow - DEBUG - stack ['$c34.0', '$38load_attr.2']
numba.core.byteflow - DEBUG - dispatch pc=42, inst=RETURN_VALUE(arg=None, lineno=443)
numba.core.byteflow - DEBUG - stack ['$40binary_true_divide.3']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=18 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: ['$phi18.0', '$phi18.1']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=18 nstack_initial=2)
numba.core.byteflow - DEBUG - dispatch pc=18, inst=STORE_FAST(arg=2, lineno=441)
numba.core.byteflow - DEBUG - stack ['$phi18.0', '$phi18.1']
numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=1, lineno=442)
numba.core.byteflow - DEBUG - stack ['$phi18.0']
numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=2, lineno=442)
numba.core.byteflow - DEBUG - stack ['$phi18.0', '$c20.2']
numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_METHOD(arg=2, lineno=442)
numba.core.byteflow - DEBUG - stack ['$phi18.0', '$c20.2', '$v22.3']
numba.core.byteflow - DEBUG - dispatch pc=26, inst=CALL_METHOD(arg=0, lineno=442)
numba.core.byteflow - DEBUG - stack ['$phi18.0', '$c20.2', '$24load_method.4']
numba.core.byteflow - DEBUG - dispatch pc=28, inst=INPLACE_ADD(arg=None, lineno=442)
numba.core.byteflow - DEBUG - stack ['$phi18.0', '$c20.2', '$26call_method.5']
numba.core.byteflow - DEBUG - dispatch pc=30, inst=STORE_FAST(arg=1, lineno=442)
numba.core.byteflow - DEBUG - stack ['$phi18.0', '$28inplace_add.6']
numba.core.byteflow - DEBUG - dispatch pc=32, inst=JUMP_ABSOLUTE(arg=9, lineno=442)
numba.core.byteflow - DEBUG - stack ['$phi18.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=16, stack=('$phi18.0',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=16 nstack_initial=1)])
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=16 nstack_initial=1): {'$phi16.0'},
             State(pc_initial=18 nstack_initial=2): {'$phi18.1'},
             State(pc_initial=34 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {'$phi16.0': State(pc_initial=0 nstack_initial=0),
 '$phi18.1': State(pc_initial=16 nstack_initial=1)}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi18.0', State(pc_initial=18 nstack_initial=2))},
             '$phi18.0': {('$phi16.0', State(pc_initial=16 nstack_initial=1))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi16.0', State(pc_initial=16 nstack_initial=1))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
numba.core.byteflow - DEBUG - keep phismap: {'$phi16.0': {('$14get_iter.5', State(pc_initial=0 nstack_initial=0))},
 '$phi18.1': {('$16for_iter.2', State(pc_initial=16 nstack_initial=1))}}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi16.0': '$14get_iter.5'},
             State(pc_initial=16 nstack_initial=1): {'$phi18.1': '$16for_iter.2'}})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'value': '$2load_deref.0'}), (6, {'res': '$6load_global.1'}), (8, {'item': '$6load_global.1', 'res': '$8load_method.2'}), (10, {'res': '$a10.3'}), (12, {'func': '$8load_method.2', 'args': ['$a10.3'], 'res': '$12call_method.4'}), (14, {'value': '$12call_method.4', 'res': '$14get_iter.5'})), outgoing_phis={'$phi16.0': '$14get_iter.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: ('$14get_iter.5',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=16 nstack_initial=1):
AdaptBlockInfo(insts=((16, {'iterator': '$phi16.0', 'pair': '$16for_iter.1', 'indval': '$16for_iter.2', 'pred': '$16for_iter.3'}),), outgoing_phis={'$phi18.1': '$16for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={34: (), 18: ('$phi16.0', '$16for_iter.2')})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=18 nstack_initial=2):
AdaptBlockInfo(insts=((18, {'value': '$phi18.1'}), (20, {'res': '$c20.2'}), (22, {'res': '$v22.3'}), (24, {'item': '$v22.3', 'res': '$24load_method.4'}), (26, {'func': '$24load_method.4', 'args': [], 'res': '$26call_method.5'}), (28, {'lhs': '$c20.2', 'rhs': '$26call_method.5', 'res': '$28inplace_add.6'}), (30, {'value': '$28inplace_add.6'}), (32, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: ('$phi18.0',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=34 nstack_initial=0):
AdaptBlockInfo(insts=((34, {'res': '$c34.0'}), (36, {'res': '$a36.1'}), (38, {'item': '$a36.1', 'res': '$38load_attr.2'}), (40, {'lhs': '$c34.0', 'rhs': '$38load_attr.2', 'res': '$40binary_true_divide.3'}), (42, {'retval': '$40binary_true_divide.3', 'castval': '$42return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    c = freevar(acc_init: 0.0)               ['c']
    $6load_global.1 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$6load_global.1']
    $8load_method.2 = getattr(value=$6load_global.1, attr=nditer) ['$6load_global.1', '$8load_method.2']
    $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_method.4', '$8load_method.2', 'a']
    $14get_iter.5 = getiter(value=$12call_method.4) ['$12call_method.4', '$14get_iter.5']
    $phi16.0 = $14get_iter.5                 ['$14get_iter.5', '$phi16.0']
    jump 16                                  []
label 16:
    $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
    $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
    $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
    $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
    branch $16for_iter.3, 18, 34             ['$16for_iter.3']
label 18:
    v = $phi18.1                             ['$phi18.1', 'v']
    $24load_method.4 = getattr(value=v, attr=item) ['$24load_method.4', 'v']
    $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_method.4', '$26call_method.5']
    $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined) ['$26call_method.5', '$28inplace_add.6', 'c']
    c = $28inplace_add.6                     ['$28inplace_add.6', 'c']
    jump 16                                  []
label 34:
    $38load_attr.2 = getattr(value=a, attr=size) ['$38load_attr.2', 'a']
    $40binary_true_divide.3 = c / $38load_attr.2 ['$38load_attr.2', '$40binary_true_divide.3', 'c']
    $42return_value.4 = cast(value=$40binary_true_divide.3) ['$40binary_true_divide.3', '$42return_value.4']
    return $42return_value.4                 ['$42return_value.4']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708753609ea0>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: c = freevar(acc_init: 0.0)
numba.core.ssa - DEBUG - on stmt: $6load_global.1 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $8load_method.2 = getattr(value=$6load_global.1, attr=nditer)
numba.core.ssa - DEBUG - on stmt: $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $14get_iter.5 = getiter(value=$12call_method.4)
numba.core.ssa - DEBUG - on stmt: $phi16.0 = $14get_iter.5
numba.core.ssa - DEBUG - on stmt: jump 16
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 16
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708753609ea0>
numba.core.ssa - DEBUG - on stmt: $16for_iter.1 = iternext(value=$phi16.0)
numba.core.ssa - DEBUG - on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
numba.core.ssa - DEBUG - on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
numba.core.ssa - DEBUG - on stmt: $phi18.1 = $16for_iter.2
numba.core.ssa - DEBUG - on stmt: branch $16for_iter.3, 18, 34
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 18
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708753609ea0>
numba.core.ssa - DEBUG - on stmt: v = $phi18.1
numba.core.ssa - DEBUG - on stmt: $24load_method.4 = getattr(value=v, attr=item)
numba.core.ssa - DEBUG - on stmt: $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: c = $28inplace_add.6
numba.core.ssa - DEBUG - on stmt: jump 16
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 34
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708753609ea0>
numba.core.ssa - DEBUG - on stmt: $38load_attr.2 = getattr(value=a, attr=size)
numba.core.ssa - DEBUG - on stmt: $40binary_true_divide.3 = c / $38load_attr.2
numba.core.ssa - DEBUG - on stmt: $42return_value.4 = cast(value=$40binary_true_divide.3)
numba.core.ssa - DEBUG - on stmt: return $42return_value.4
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$12call_method.4': [(<numba.core.ir.Assign object at 0x7087535b5ed0>,
                                   0)],
             '$14get_iter.5': [(<numba.core.ir.Assign object at 0x7087535b4b80>,
                                0)],
             '$16for_iter.1': [(<numba.core.ir.Assign object at 0x7087535b6bf0>,
                                16)],
             '$16for_iter.2': [(<numba.core.ir.Assign object at 0x7087535b7250>,
                                16)],
             '$16for_iter.3': [(<numba.core.ir.Assign object at 0x7087535b7d00>,
                                16)],
             '$24load_method.4': [(<numba.core.ir.Assign object at 0x70875360a4d0>,
                                   18)],
             '$26call_method.5': [(<numba.core.ir.Assign object at 0x70875360bbe0>,
                                   18)],
             '$28inplace_add.6': [(<numba.core.ir.Assign object at 0x70875360b700>,
                                   18)],
             '$38load_attr.2': [(<numba.core.ir.Assign object at 0x7087535b7fa0>,
                                 34)],
             '$40binary_true_divide.3': [(<numba.core.ir.Assign object at 0x7087535b7af0>,
                                          34)],
             '$42return_value.4': [(<numba.core.ir.Assign object at 0x7087535b44c0>,
                                    34)],
             '$6load_global.1': [(<numba.core.ir.Assign object at 0x7087535b7490>,
                                  0)],
             '$8load_method.2': [(<numba.core.ir.Assign object at 0x7087535b7a30>,
                                  0)],
             '$phi16.0': [(<numba.core.ir.Assign object at 0x7087535b4be0>, 0)],
             '$phi18.1': [(<numba.core.ir.Assign object at 0x7087535b5e70>,
                           16)],
             'a': [(<numba.core.ir.Assign object at 0x7087535b4d90>, 0)],
             'c': [(<numba.core.ir.Assign object at 0x7087535b46d0>, 0),
                   (<numba.core.ir.Assign object at 0x70875360bd60>, 18)],
             'v': [(<numba.core.ir.Assign object at 0x7087535b7430>, 18)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x708753609ea0>
numba.core.ssa - DEBUG - Fix SSA violator on var c
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x70875360a470>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: c = freevar(acc_init: 0.0)
numba.core.ssa - DEBUG - first assign: c
numba.core.ssa - DEBUG - replaced with: c = freevar(acc_init: 0.0)
numba.core.ssa - DEBUG - on stmt: $6load_global.1 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $8load_method.2 = getattr(value=$6load_global.1, attr=nditer)
numba.core.ssa - DEBUG - on stmt: $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $14get_iter.5 = getiter(value=$12call_method.4)
numba.core.ssa - DEBUG - on stmt: $phi16.0 = $14get_iter.5
numba.core.ssa - DEBUG - on stmt: jump 16
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 16
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x70875360a470>
numba.core.ssa - DEBUG - on stmt: $16for_iter.1 = iternext(value=$phi16.0)
numba.core.ssa - DEBUG - on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
numba.core.ssa - DEBUG - on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
numba.core.ssa - DEBUG - on stmt: $phi18.1 = $16for_iter.2
numba.core.ssa - DEBUG - on stmt: branch $16for_iter.3, 18, 34
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 18
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x70875360a470>
numba.core.ssa - DEBUG - on stmt: v = $phi18.1
numba.core.ssa - DEBUG - on stmt: $24load_method.4 = getattr(value=v, attr=item)
numba.core.ssa - DEBUG - on stmt: $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: c = $28inplace_add.6
numba.core.ssa - DEBUG - replaced with: c.1 = $28inplace_add.6
numba.core.ssa - DEBUG - on stmt: jump 16
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 34
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x70875360a470>
numba.core.ssa - DEBUG - on stmt: $38load_attr.2 = getattr(value=a, attr=size)
numba.core.ssa - DEBUG - on stmt: $40binary_true_divide.3 = c / $38load_attr.2
numba.core.ssa - DEBUG - on stmt: $42return_value.4 = cast(value=$40binary_true_divide.3)
numba.core.ssa - DEBUG - on stmt: return $42return_value.4
numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x70875360ba00>],
             18: [<numba.core.ir.Assign object at 0x70875360a740>]})
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x70875360a470>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: c = freevar(acc_init: 0.0)
numba.core.ssa - DEBUG - on stmt: $6load_global.1 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $8load_method.2 = getattr(value=$6load_global.1, attr=nditer)
numba.core.ssa - DEBUG - on stmt: $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $14get_iter.5 = getiter(value=$12call_method.4)
numba.core.ssa - DEBUG - on stmt: $phi16.0 = $14get_iter.5
numba.core.ssa - DEBUG - on stmt: jump 16
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 16
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x70875360a470>
numba.core.ssa - DEBUG - on stmt: $16for_iter.1 = iternext(value=$phi16.0)
numba.core.ssa - DEBUG - on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
numba.core.ssa - DEBUG - on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
numba.core.ssa - DEBUG - on stmt: $phi18.1 = $16for_iter.2
numba.core.ssa - DEBUG - on stmt: branch $16for_iter.3, 18, 34
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 18
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x70875360a470>
numba.core.ssa - DEBUG - on stmt: v = $phi18.1
numba.core.ssa - DEBUG - on stmt: $24load_method.4 = getattr(value=v, attr=item)
numba.core.ssa - DEBUG - on stmt: $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def var='c' stmt=$28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def_from_top label 18
numba.core.ssa - DEBUG - idom 16 from label 18
numba.core.ssa - DEBUG - find_def_from_bottom label 16
numba.core.ssa - DEBUG - find_def_from_top label 16
numba.core.ssa - DEBUG - insert phi node c.2 = phi(incoming_values=[], incoming_blocks=[]) at 16
numba.core.ssa - DEBUG - find_def_from_bottom label 0
numba.core.ssa - DEBUG - incoming_def c = freevar(acc_init: 0.0)
numba.core.ssa - DEBUG - find_def_from_bottom label 18
numba.core.ssa - DEBUG - incoming_def c.1 = $28inplace_add.6
numba.core.ssa - DEBUG - replaced with: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c.2, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: c.1 = $28inplace_add.6
numba.core.ssa - DEBUG - on stmt: jump 16
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 34
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x70875360a470>
numba.core.ssa - DEBUG - on stmt: $38load_attr.2 = getattr(value=a, attr=size)
numba.core.ssa - DEBUG - on stmt: $40binary_true_divide.3 = c / $38load_attr.2
numba.core.ssa - DEBUG - find_def var='c' stmt=$40binary_true_divide.3 = c / $38load_attr.2
numba.core.ssa - DEBUG - find_def_from_top label 34
numba.core.ssa - DEBUG - idom 16 from label 34
numba.core.ssa - DEBUG - find_def_from_bottom label 16
numba.core.ssa - DEBUG - replaced with: $40binary_true_divide.3 = c.2 / $38load_attr.2
numba.core.ssa - DEBUG - on stmt: $42return_value.4 = cast(value=$40binary_true_divide.3)
numba.core.ssa - DEBUG - on stmt: return $42return_value.4
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1209)
           2	LOAD_FAST(arg=0, lineno=1221)
           4	LOAD_CONST(arg=1, lineno=1221)
           6	BINARY_SUBSCR(arg=None, lineno=1221)
           8	LOAD_GLOBAL(arg=0, lineno=1221)
          10	LOAD_METHOD(arg=1, lineno=1221)
          12	LOAD_FAST(arg=0, lineno=1221)
          14	LOAD_CONST(arg=2, lineno=1221)
          16	LOAD_GLOBAL(arg=2, lineno=1221)
          18	LOAD_FAST(arg=2, lineno=1221)
          20	LOAD_FAST(arg=0, lineno=1221)
          22	LOAD_ATTR(arg=3, lineno=1221)
          24	LOAD_CONST(arg=1, lineno=1221)
          26	BINARY_SUBSCR(arg=None, lineno=1221)
          28	CALL_FUNCTION(arg=2, lineno=1221)
          30	BUILD_SLICE(arg=2, lineno=1221)
          32	BINARY_SUBSCR(arg=None, lineno=1221)
          34	CALL_METHOD(arg=1, lineno=1221)
          36	COMPARE_OP(arg=5, lineno=1221)
          38	LOAD_FAST(arg=7, lineno=1221)
          40	LOAD_CONST(arg=1, lineno=1221)
          42	STORE_SUBSCR(arg=None, lineno=1221)
          44	LOAD_FAST(arg=7, lineno=1222)
          46	LOAD_CONST(arg=1, lineno=1222)
          48	DUP_TOP_TWO(arg=None, lineno=1222)
          50	BINARY_SUBSCR(arg=None, lineno=1222)
          52	LOAD_FAST(arg=0, lineno=1222)
          54	LOAD_CONST(arg=1, lineno=1222)
          56	BINARY_SUBSCR(arg=None, lineno=1222)
          58	LOAD_GLOBAL(arg=0, lineno=1222)
          60	LOAD_METHOD(arg=4, lineno=1222)
          62	LOAD_FAST(arg=0, lineno=1222)
          64	LOAD_CONST(arg=2, lineno=1222)
          66	LOAD_GLOBAL(arg=2, lineno=1222)
          68	LOAD_FAST(arg=4, lineno=1222)
          70	LOAD_FAST(arg=0, lineno=1222)
          72	LOAD_ATTR(arg=3, lineno=1222)
          74	LOAD_CONST(arg=1, lineno=1222)
          76	BINARY_SUBSCR(arg=None, lineno=1222)
          78	CALL_FUNCTION(arg=2, lineno=1222)
          80	BUILD_SLICE(arg=2, lineno=1222)
          82	BINARY_SUBSCR(arg=None, lineno=1222)
          84	CALL_METHOD(arg=1, lineno=1222)
          86	LOAD_FAST(arg=5, lineno=1222)
          88	BINARY_ADD(arg=None, lineno=1222)
          90	COMPARE_OP(arg=5, lineno=1222)
          92	INPLACE_AND(arg=None, lineno=1222)
          94	ROT_THREE(arg=None, lineno=1222)
          96	STORE_SUBSCR(arg=None, lineno=1222)
          98	LOAD_FAST(arg=7, lineno=1224)
         100	LOAD_CONST(arg=1, lineno=1224)
         102	BINARY_SUBSCR(arg=None, lineno=1224)
         104	POP_JUMP_IF_FALSE(arg=59, lineno=1224)
         106	LOAD_FAST(arg=6, lineno=1225)
         108	LOAD_CONST(arg=3, lineno=1225)
         110	BINARY_ADD(arg=None, lineno=1225)
         112	STORE_FAST(arg=8, lineno=1225)
         114	JUMP_FORWARD(arg=2, lineno=1225)
>        116	LOAD_CONST(arg=3, lineno=1227)
         118	STORE_FAST(arg=8, lineno=1227)
>        120	LOAD_FAST(arg=8, lineno=1229)
         122	LOAD_FAST(arg=0, lineno=1229)
         124	LOAD_ATTR(arg=3, lineno=1229)
         126	LOAD_CONST(arg=1, lineno=1229)
         128	BINARY_SUBSCR(arg=None, lineno=1229)
         130	COMPARE_OP(arg=0, lineno=1229)
         132	POP_JUMP_IF_FALSE(arg=167, lineno=1229)
>        134	LOAD_GLOBAL(arg=0, lineno=1230)
         136	LOAD_METHOD(arg=1, lineno=1230)
         138	LOAD_FAST(arg=0, lineno=1230)
         140	LOAD_GLOBAL(arg=1, lineno=1230)
         142	LOAD_CONST(arg=1, lineno=1230)
         144	LOAD_FAST(arg=8, lineno=1230)
         146	LOAD_FAST(arg=1, lineno=1230)
         148	BINARY_SUBTRACT(arg=None, lineno=1230)
         150	CALL_FUNCTION(arg=2, lineno=1230)
         152	LOAD_GLOBAL(arg=2, lineno=1230)
         154	LOAD_FAST(arg=8, lineno=1230)
         156	LOAD_FAST(arg=2, lineno=1230)
         158	BINARY_ADD(arg=None, lineno=1230)
         160	LOAD_FAST(arg=0, lineno=1230)
         162	LOAD_ATTR(arg=3, lineno=1230)
         164	LOAD_CONST(arg=1, lineno=1230)
         166	BINARY_SUBSCR(arg=None, lineno=1230)
         168	CALL_FUNCTION(arg=2, lineno=1230)
         170	BUILD_SLICE(arg=2, lineno=1230)
         172	BINARY_SUBSCR(arg=None, lineno=1230)
         174	CALL_METHOD(arg=1, lineno=1230)
         176	STORE_FAST(arg=9, lineno=1230)
         178	LOAD_FAST(arg=0, lineno=1233)
         180	LOAD_FAST(arg=8, lineno=1233)
         182	BINARY_SUBSCR(arg=None, lineno=1233)
         184	LOAD_FAST(arg=9, lineno=1233)
         186	COMPARE_OP(arg=2, lineno=1233)
         188	LOAD_FAST(arg=7, lineno=1233)
         190	LOAD_FAST(arg=8, lineno=1233)
         192	STORE_SUBSCR(arg=None, lineno=1233)
         194	LOAD_FAST(arg=7, lineno=1235)
         196	LOAD_FAST(arg=8, lineno=1235)
         198	BINARY_SUBSCR(arg=None, lineno=1235)
         200	POP_JUMP_IF_TRUE(arg=107, lineno=1235)
         202	LOAD_FAST(arg=8, lineno=1236)
         204	LOAD_CONST(arg=3, lineno=1236)
         206	INPLACE_ADD(arg=None, lineno=1236)
         208	STORE_FAST(arg=8, lineno=1236)
         210	JUMP_ABSOLUTE(arg=61, lineno=1237)
>        212	LOAD_GLOBAL(arg=0, lineno=1239)
         214	LOAD_METHOD(arg=4, lineno=1239)
         216	LOAD_FAST(arg=0, lineno=1239)
         218	LOAD_GLOBAL(arg=1, lineno=1239)
         220	LOAD_CONST(arg=1, lineno=1239)
         222	LOAD_FAST(arg=8, lineno=1239)
         224	LOAD_FAST(arg=3, lineno=1239)
         226	BINARY_SUBTRACT(arg=None, lineno=1239)
         228	CALL_FUNCTION(arg=2, lineno=1239)
         230	LOAD_GLOBAL(arg=2, lineno=1239)
         232	LOAD_FAST(arg=8, lineno=1239)
         234	LOAD_FAST(arg=4, lineno=1239)
         236	BINARY_ADD(arg=None, lineno=1239)
         238	LOAD_FAST(arg=0, lineno=1239)
         240	LOAD_ATTR(arg=3, lineno=1239)
         242	LOAD_CONST(arg=1, lineno=1239)
         244	BINARY_SUBSCR(arg=None, lineno=1239)
         246	CALL_FUNCTION(arg=2, lineno=1239)
         248	BUILD_SLICE(arg=2, lineno=1239)
         250	BINARY_SUBSCR(arg=None, lineno=1239)
         252	CALL_METHOD(arg=1, lineno=1239)
         254	STORE_FAST(arg=10, lineno=1239)
         256	LOAD_FAST(arg=7, lineno=1240)
         258	LOAD_FAST(arg=8, lineno=1240)
         260	DUP_TOP_TWO(arg=None, lineno=1240)
         262	BINARY_SUBSCR(arg=None, lineno=1240)
         264	LOAD_FAST(arg=0, lineno=1240)
         266	LOAD_FAST(arg=8, lineno=1240)
         268	BINARY_SUBSCR(arg=None, lineno=1240)
         270	LOAD_FAST(arg=10, lineno=1240)
         272	LOAD_FAST(arg=5, lineno=1240)
         274	BINARY_ADD(arg=None, lineno=1240)
         276	COMPARE_OP(arg=5, lineno=1240)
         278	INPLACE_AND(arg=None, lineno=1240)
         280	ROT_THREE(arg=None, lineno=1240)
         282	STORE_SUBSCR(arg=None, lineno=1240)
         284	LOAD_FAST(arg=7, lineno=1242)
         286	LOAD_FAST(arg=8, lineno=1242)
         288	BINARY_SUBSCR(arg=None, lineno=1242)
         290	POP_JUMP_IF_TRUE(arg=152, lineno=1242)
         292	LOAD_FAST(arg=8, lineno=1243)
         294	LOAD_CONST(arg=3, lineno=1243)
         296	INPLACE_ADD(arg=None, lineno=1243)
         298	STORE_FAST(arg=8, lineno=1243)
         300	JUMP_ABSOLUTE(arg=61, lineno=1244)
>        302	LOAD_FAST(arg=8, lineno=1247)
         304	LOAD_FAST(arg=6, lineno=1247)
         306	LOAD_CONST(arg=3, lineno=1247)
         308	BINARY_ADD(arg=None, lineno=1247)
         310	INPLACE_ADD(arg=None, lineno=1247)
         312	STORE_FAST(arg=8, lineno=1247)
         314	LOAD_FAST(arg=8, lineno=1229)
         316	LOAD_FAST(arg=0, lineno=1229)
         318	LOAD_ATTR(arg=3, lineno=1229)
         320	LOAD_CONST(arg=1, lineno=1229)
         322	BINARY_SUBSCR(arg=None, lineno=1229)
         324	COMPARE_OP(arg=0, lineno=1229)
         326	POP_JUMP_IF_TRUE(arg=68, lineno=1229)
         328	LOAD_CONST(arg=2, lineno=1229)
         330	RETURN_VALUE(arg=None, lineno=1229)
>        332	LOAD_CONST(arg=2, lineno=1229)
         334	RETURN_VALUE(arg=None, lineno=1229)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1209)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1221)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$x2.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_GLOBAL(arg=0, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_METHOD(arg=1, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$8load_global.3']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5']
numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_GLOBAL(arg=2, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6']
numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=2, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7']
numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=0, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7', '$post_max18.8']
numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_ATTR(arg=3, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7', '$post_max18.8', '$x20.9']
numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=1, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7', '$post_max18.8', '$22load_attr.10']
numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7', '$post_max18.8', '$22load_attr.10', '$const24.11']
numba.core.byteflow - DEBUG - dispatch pc=28, inst=CALL_FUNCTION(arg=2, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7', '$post_max18.8', '$26binary_subscr.12']
numba.core.byteflow - DEBUG - dispatch pc=30, inst=BUILD_SLICE(arg=2, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$28call_function.13']
numba.core.byteflow - DEBUG - dispatch pc=32, inst=BINARY_SUBSCR(arg=None, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$30build_slice.15']
numba.core.byteflow - DEBUG - dispatch pc=34, inst=CALL_METHOD(arg=1, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$32binary_subscr.16']
numba.core.byteflow - DEBUG - dispatch pc=36, inst=COMPARE_OP(arg=5, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$34call_method.17']
numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=7, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$36compare_op.18']
numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$36compare_op.18', '$peaks38.19']
numba.core.byteflow - DEBUG - dispatch pc=42, inst=STORE_SUBSCR(arg=None, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$36compare_op.18', '$peaks38.19', '$const40.20']
numba.core.byteflow - DEBUG - dispatch pc=44, inst=LOAD_FAST(arg=7, lineno=1222)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=46, inst=LOAD_CONST(arg=1, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21']
numba.core.byteflow - DEBUG - dispatch pc=48, inst=DUP_TOP_TWO(arg=None, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22']
numba.core.byteflow - DEBUG - dispatch pc=50, inst=BINARY_SUBSCR(arg=None, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$48dup_top_two.23', '$48dup_top_two.24']
numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25']
numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$x52.26']
numba.core.byteflow - DEBUG - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$x52.26', '$const54.27']
numba.core.byteflow - DEBUG - dispatch pc=58, inst=LOAD_GLOBAL(arg=0, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28']
numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_METHOD(arg=4, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$58load_global.29']
numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=0, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30']
numba.core.byteflow - DEBUG - dispatch pc=64, inst=LOAD_CONST(arg=2, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31']
numba.core.byteflow - DEBUG - dispatch pc=66, inst=LOAD_GLOBAL(arg=2, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32']
numba.core.byteflow - DEBUG - dispatch pc=68, inst=LOAD_FAST(arg=4, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33']
numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_FAST(arg=0, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33', '$post_avg68.34']
numba.core.byteflow - DEBUG - dispatch pc=72, inst=LOAD_ATTR(arg=3, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33', '$post_avg68.34', '$x70.35']
numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_CONST(arg=1, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33', '$post_avg68.34', '$72load_attr.36']
numba.core.byteflow - DEBUG - dispatch pc=76, inst=BINARY_SUBSCR(arg=None, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33', '$post_avg68.34', '$72load_attr.36', '$const74.37']
numba.core.byteflow - DEBUG - dispatch pc=78, inst=CALL_FUNCTION(arg=2, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33', '$post_avg68.34', '$76binary_subscr.38']
numba.core.byteflow - DEBUG - dispatch pc=80, inst=BUILD_SLICE(arg=2, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$78call_function.39']
numba.core.byteflow - DEBUG - dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$80build_slice.41']
numba.core.byteflow - DEBUG - dispatch pc=84, inst=CALL_METHOD(arg=1, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$82binary_subscr.42']
numba.core.byteflow - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=5, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$84call_method.43']
numba.core.byteflow - DEBUG - dispatch pc=88, inst=BINARY_ADD(arg=None, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$84call_method.43', '$delta86.44']
numba.core.byteflow - DEBUG - dispatch pc=90, inst=COMPARE_OP(arg=5, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$88binary_add.45']
numba.core.byteflow - DEBUG - dispatch pc=92, inst=INPLACE_AND(arg=None, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$90compare_op.46']
numba.core.byteflow - DEBUG - dispatch pc=94, inst=ROT_THREE(arg=None, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$92inplace_and.47']
numba.core.byteflow - DEBUG - dispatch pc=96, inst=STORE_SUBSCR(arg=None, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$92inplace_and.47', '$peaks44.21', '$const46.22']
numba.core.byteflow - DEBUG - dispatch pc=98, inst=LOAD_FAST(arg=7, lineno=1224)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=1, lineno=1224)
numba.core.byteflow - DEBUG - stack ['$peaks98.48']
numba.core.byteflow - DEBUG - dispatch pc=102, inst=BINARY_SUBSCR(arg=None, lineno=1224)
numba.core.byteflow - DEBUG - stack ['$peaks98.48', '$const100.49']
numba.core.byteflow - DEBUG - dispatch pc=104, inst=POP_JUMP_IF_FALSE(arg=59, lineno=1224)
numba.core.byteflow - DEBUG - stack ['$102binary_subscr.50']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0), Edge(pc=116, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=116 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=106 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=106, inst=LOAD_FAST(arg=6, lineno=1225)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=3, lineno=1225)
numba.core.byteflow - DEBUG - stack ['$wait106.0']
numba.core.byteflow - DEBUG - dispatch pc=110, inst=BINARY_ADD(arg=None, lineno=1225)
numba.core.byteflow - DEBUG - stack ['$wait106.0', '$const108.1']
numba.core.byteflow - DEBUG - dispatch pc=112, inst=STORE_FAST(arg=8, lineno=1225)
numba.core.byteflow - DEBUG - stack ['$110binary_add.2']
numba.core.byteflow - DEBUG - dispatch pc=114, inst=JUMP_FORWARD(arg=2, lineno=1225)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=120, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=116 nstack_initial=0), State(pc_initial=120 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=116 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=116, inst=LOAD_CONST(arg=3, lineno=1227)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=118, inst=STORE_FAST(arg=8, lineno=1227)
numba.core.byteflow - DEBUG - stack ['$const116.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=120, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=120 nstack_initial=0), State(pc_initial=120 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=120 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=120, inst=LOAD_FAST(arg=8, lineno=1229)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=122, inst=LOAD_FAST(arg=0, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$n120.0']
numba.core.byteflow - DEBUG - dispatch pc=124, inst=LOAD_ATTR(arg=3, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$n120.0', '$x122.1']
numba.core.byteflow - DEBUG - dispatch pc=126, inst=LOAD_CONST(arg=1, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$n120.0', '$124load_attr.2']
numba.core.byteflow - DEBUG - dispatch pc=128, inst=BINARY_SUBSCR(arg=None, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$n120.0', '$124load_attr.2', '$const126.3']
numba.core.byteflow - DEBUG - dispatch pc=130, inst=COMPARE_OP(arg=0, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$n120.0', '$128binary_subscr.4']
numba.core.byteflow - DEBUG - dispatch pc=132, inst=POP_JUMP_IF_FALSE(arg=167, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$130compare_op.5']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=134, stack=(), blockstack=(), npush=0), Edge(pc=332, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=120 nstack_initial=0), State(pc_initial=134 nstack_initial=0), State(pc_initial=332 nstack_initial=0)])
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=134 nstack_initial=0), State(pc_initial=332 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=134 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=134, inst=LOAD_GLOBAL(arg=0, lineno=1230)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=136, inst=LOAD_METHOD(arg=1, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$134load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=138, inst=LOAD_FAST(arg=0, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1']
numba.core.byteflow - DEBUG - dispatch pc=140, inst=LOAD_GLOBAL(arg=1, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2']
numba.core.byteflow - DEBUG - dispatch pc=142, inst=LOAD_CONST(arg=1, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$140load_global.3']
numba.core.byteflow - DEBUG - dispatch pc=144, inst=LOAD_FAST(arg=8, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$140load_global.3', '$const142.4']
numba.core.byteflow - DEBUG - dispatch pc=146, inst=LOAD_FAST(arg=1, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$140load_global.3', '$const142.4', '$n144.5']
numba.core.byteflow - DEBUG - dispatch pc=148, inst=BINARY_SUBTRACT(arg=None, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$140load_global.3', '$const142.4', '$n144.5', '$pre_max146.6']
numba.core.byteflow - DEBUG - dispatch pc=150, inst=CALL_FUNCTION(arg=2, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$140load_global.3', '$const142.4', '$148binary_subtract.7']
numba.core.byteflow - DEBUG - dispatch pc=152, inst=LOAD_GLOBAL(arg=2, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$150call_function.8']
numba.core.byteflow - DEBUG - dispatch pc=154, inst=LOAD_FAST(arg=8, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9']
numba.core.byteflow - DEBUG - dispatch pc=156, inst=LOAD_FAST(arg=2, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$n154.10']
numba.core.byteflow - DEBUG - dispatch pc=158, inst=BINARY_ADD(arg=None, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$n154.10', '$post_max156.11']
numba.core.byteflow - DEBUG - dispatch pc=160, inst=LOAD_FAST(arg=0, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$158binary_add.12']
numba.core.byteflow - DEBUG - dispatch pc=162, inst=LOAD_ATTR(arg=3, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$158binary_add.12', '$x160.13']
numba.core.byteflow - DEBUG - dispatch pc=164, inst=LOAD_CONST(arg=1, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$158binary_add.12', '$162load_attr.14']
numba.core.byteflow - DEBUG - dispatch pc=166, inst=BINARY_SUBSCR(arg=None, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$158binary_add.12', '$162load_attr.14', '$const164.15']
numba.core.byteflow - DEBUG - dispatch pc=168, inst=CALL_FUNCTION(arg=2, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$158binary_add.12', '$166binary_subscr.16']
numba.core.byteflow - DEBUG - dispatch pc=170, inst=BUILD_SLICE(arg=2, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$168call_function.17']
numba.core.byteflow - DEBUG - dispatch pc=172, inst=BINARY_SUBSCR(arg=None, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$170build_slice.19']
numba.core.byteflow - DEBUG - dispatch pc=174, inst=CALL_METHOD(arg=1, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$172binary_subscr.20']
numba.core.byteflow - DEBUG - dispatch pc=176, inst=STORE_FAST(arg=9, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$174call_method.21']
numba.core.byteflow - DEBUG - dispatch pc=178, inst=LOAD_FAST(arg=0, lineno=1233)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=180, inst=LOAD_FAST(arg=8, lineno=1233)
numba.core.byteflow - DEBUG - stack ['$x178.22']
numba.core.byteflow - DEBUG - dispatch pc=182, inst=BINARY_SUBSCR(arg=None, lineno=1233)
numba.core.byteflow - DEBUG - stack ['$x178.22', '$n180.23']
numba.core.byteflow - DEBUG - dispatch pc=184, inst=LOAD_FAST(arg=9, lineno=1233)
numba.core.byteflow - DEBUG - stack ['$182binary_subscr.24']
numba.core.byteflow - DEBUG - dispatch pc=186, inst=COMPARE_OP(arg=2, lineno=1233)
numba.core.byteflow - DEBUG - stack ['$182binary_subscr.24', '$maxn184.25']
numba.core.byteflow - DEBUG - dispatch pc=188, inst=LOAD_FAST(arg=7, lineno=1233)
numba.core.byteflow - DEBUG - stack ['$186compare_op.26']
numba.core.byteflow - DEBUG - dispatch pc=190, inst=LOAD_FAST(arg=8, lineno=1233)
numba.core.byteflow - DEBUG - stack ['$186compare_op.26', '$peaks188.27']
numba.core.byteflow - DEBUG - dispatch pc=192, inst=STORE_SUBSCR(arg=None, lineno=1233)
numba.core.byteflow - DEBUG - stack ['$186compare_op.26', '$peaks188.27', '$n190.28']
numba.core.byteflow - DEBUG - dispatch pc=194, inst=LOAD_FAST(arg=7, lineno=1235)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=196, inst=LOAD_FAST(arg=8, lineno=1235)
numba.core.byteflow - DEBUG - stack ['$peaks194.29']
numba.core.byteflow - DEBUG - dispatch pc=198, inst=BINARY_SUBSCR(arg=None, lineno=1235)
numba.core.byteflow - DEBUG - stack ['$peaks194.29', '$n196.30']
numba.core.byteflow - DEBUG - dispatch pc=200, inst=POP_JUMP_IF_TRUE(arg=107, lineno=1235)
numba.core.byteflow - DEBUG - stack ['$198binary_subscr.31']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=202, stack=(), blockstack=(), npush=0), Edge(pc=212, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=332 nstack_initial=0), State(pc_initial=202 nstack_initial=0), State(pc_initial=212 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=332 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=332, inst=LOAD_CONST(arg=2, lineno=1229)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=334, inst=RETURN_VALUE(arg=None, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$const332.0']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=202 nstack_initial=0), State(pc_initial=212 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=202 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=202, inst=LOAD_FAST(arg=8, lineno=1236)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=204, inst=LOAD_CONST(arg=3, lineno=1236)
numba.core.byteflow - DEBUG - stack ['$n202.0']
numba.core.byteflow - DEBUG - dispatch pc=206, inst=INPLACE_ADD(arg=None, lineno=1236)
numba.core.byteflow - DEBUG - stack ['$n202.0', '$const204.1']
numba.core.byteflow - DEBUG - dispatch pc=208, inst=STORE_FAST(arg=8, lineno=1236)
numba.core.byteflow - DEBUG - stack ['$206inplace_add.2']
numba.core.byteflow - DEBUG - dispatch pc=210, inst=JUMP_ABSOLUTE(arg=61, lineno=1237)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=120, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=212 nstack_initial=0), State(pc_initial=120 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=212 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=212, inst=LOAD_GLOBAL(arg=0, lineno=1239)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=214, inst=LOAD_METHOD(arg=4, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$212load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=216, inst=LOAD_FAST(arg=0, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1']
numba.core.byteflow - DEBUG - dispatch pc=218, inst=LOAD_GLOBAL(arg=1, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2']
numba.core.byteflow - DEBUG - dispatch pc=220, inst=LOAD_CONST(arg=1, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$218load_global.3']
numba.core.byteflow - DEBUG - dispatch pc=222, inst=LOAD_FAST(arg=8, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$218load_global.3', '$const220.4']
numba.core.byteflow - DEBUG - dispatch pc=224, inst=LOAD_FAST(arg=3, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$218load_global.3', '$const220.4', '$n222.5']
numba.core.byteflow - DEBUG - dispatch pc=226, inst=BINARY_SUBTRACT(arg=None, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$218load_global.3', '$const220.4', '$n222.5', '$pre_avg224.6']
numba.core.byteflow - DEBUG - dispatch pc=228, inst=CALL_FUNCTION(arg=2, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$218load_global.3', '$const220.4', '$226binary_subtract.7']
numba.core.byteflow - DEBUG - dispatch pc=230, inst=LOAD_GLOBAL(arg=2, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$228call_function.8']
numba.core.byteflow - DEBUG - dispatch pc=232, inst=LOAD_FAST(arg=8, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9']
numba.core.byteflow - DEBUG - dispatch pc=234, inst=LOAD_FAST(arg=4, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$n232.10']
numba.core.byteflow - DEBUG - dispatch pc=236, inst=BINARY_ADD(arg=None, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$n232.10', '$post_avg234.11']
numba.core.byteflow - DEBUG - dispatch pc=238, inst=LOAD_FAST(arg=0, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$236binary_add.12']
numba.core.byteflow - DEBUG - dispatch pc=240, inst=LOAD_ATTR(arg=3, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$236binary_add.12', '$x238.13']
numba.core.byteflow - DEBUG - dispatch pc=242, inst=LOAD_CONST(arg=1, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$236binary_add.12', '$240load_attr.14']
numba.core.byteflow - DEBUG - dispatch pc=244, inst=BINARY_SUBSCR(arg=None, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$236binary_add.12', '$240load_attr.14', '$const242.15']
numba.core.byteflow - DEBUG - dispatch pc=246, inst=CALL_FUNCTION(arg=2, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$236binary_add.12', '$244binary_subscr.16']
numba.core.byteflow - DEBUG - dispatch pc=248, inst=BUILD_SLICE(arg=2, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$246call_function.17']
numba.core.byteflow - DEBUG - dispatch pc=250, inst=BINARY_SUBSCR(arg=None, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$248build_slice.19']
numba.core.byteflow - DEBUG - dispatch pc=252, inst=CALL_METHOD(arg=1, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$250binary_subscr.20']
numba.core.byteflow - DEBUG - dispatch pc=254, inst=STORE_FAST(arg=10, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$252call_method.21']
numba.core.byteflow - DEBUG - dispatch pc=256, inst=LOAD_FAST(arg=7, lineno=1240)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=258, inst=LOAD_FAST(arg=8, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22']
numba.core.byteflow - DEBUG - dispatch pc=260, inst=DUP_TOP_TWO(arg=None, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23']
numba.core.byteflow - DEBUG - dispatch pc=262, inst=BINARY_SUBSCR(arg=None, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23', '$260dup_top_two.24', '$260dup_top_two.25']
numba.core.byteflow - DEBUG - dispatch pc=264, inst=LOAD_FAST(arg=0, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26']
numba.core.byteflow - DEBUG - dispatch pc=266, inst=LOAD_FAST(arg=8, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$x264.27']
numba.core.byteflow - DEBUG - dispatch pc=268, inst=BINARY_SUBSCR(arg=None, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$x264.27', '$n266.28']
numba.core.byteflow - DEBUG - dispatch pc=270, inst=LOAD_FAST(arg=10, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$268binary_subscr.29']
numba.core.byteflow - DEBUG - dispatch pc=272, inst=LOAD_FAST(arg=5, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$268binary_subscr.29', '$avgn270.30']
numba.core.byteflow - DEBUG - dispatch pc=274, inst=BINARY_ADD(arg=None, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$268binary_subscr.29', '$avgn270.30', '$delta272.31']
numba.core.byteflow - DEBUG - dispatch pc=276, inst=COMPARE_OP(arg=5, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$268binary_subscr.29', '$274binary_add.32']
numba.core.byteflow - DEBUG - dispatch pc=278, inst=INPLACE_AND(arg=None, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$276compare_op.33']
numba.core.byteflow - DEBUG - dispatch pc=280, inst=ROT_THREE(arg=None, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23', '$278inplace_and.34']
numba.core.byteflow - DEBUG - dispatch pc=282, inst=STORE_SUBSCR(arg=None, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$278inplace_and.34', '$peaks256.22', '$n258.23']
numba.core.byteflow - DEBUG - dispatch pc=284, inst=LOAD_FAST(arg=7, lineno=1242)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=286, inst=LOAD_FAST(arg=8, lineno=1242)
numba.core.byteflow - DEBUG - stack ['$peaks284.35']
numba.core.byteflow - DEBUG - dispatch pc=288, inst=BINARY_SUBSCR(arg=None, lineno=1242)
numba.core.byteflow - DEBUG - stack ['$peaks284.35', '$n286.36']
numba.core.byteflow - DEBUG - dispatch pc=290, inst=POP_JUMP_IF_TRUE(arg=152, lineno=1242)
numba.core.byteflow - DEBUG - stack ['$288binary_subscr.37']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=292, stack=(), blockstack=(), npush=0), Edge(pc=302, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=120 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=292 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=292, inst=LOAD_FAST(arg=8, lineno=1243)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=294, inst=LOAD_CONST(arg=3, lineno=1243)
numba.core.byteflow - DEBUG - stack ['$n292.0']
numba.core.byteflow - DEBUG - dispatch pc=296, inst=INPLACE_ADD(arg=None, lineno=1243)
numba.core.byteflow - DEBUG - stack ['$n292.0', '$const294.1']
numba.core.byteflow - DEBUG - dispatch pc=298, inst=STORE_FAST(arg=8, lineno=1243)
numba.core.byteflow - DEBUG - stack ['$296inplace_add.2']
numba.core.byteflow - DEBUG - dispatch pc=300, inst=JUMP_ABSOLUTE(arg=61, lineno=1244)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=120, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=302 nstack_initial=0), State(pc_initial=120 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=302 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=302, inst=LOAD_FAST(arg=8, lineno=1247)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=304, inst=LOAD_FAST(arg=6, lineno=1247)
numba.core.byteflow - DEBUG - stack ['$n302.0']
numba.core.byteflow - DEBUG - dispatch pc=306, inst=LOAD_CONST(arg=3, lineno=1247)
numba.core.byteflow - DEBUG - stack ['$n302.0', '$wait304.1']
numba.core.byteflow - DEBUG - dispatch pc=308, inst=BINARY_ADD(arg=None, lineno=1247)
numba.core.byteflow - DEBUG - stack ['$n302.0', '$wait304.1', '$const306.2']
numba.core.byteflow - DEBUG - dispatch pc=310, inst=INPLACE_ADD(arg=None, lineno=1247)
numba.core.byteflow - DEBUG - stack ['$n302.0', '$308binary_add.3']
numba.core.byteflow - DEBUG - dispatch pc=312, inst=STORE_FAST(arg=8, lineno=1247)
numba.core.byteflow - DEBUG - stack ['$310inplace_add.4']
numba.core.byteflow - DEBUG - dispatch pc=314, inst=LOAD_FAST(arg=8, lineno=1229)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=316, inst=LOAD_FAST(arg=0, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$n314.5']
numba.core.byteflow - DEBUG - dispatch pc=318, inst=LOAD_ATTR(arg=3, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$n314.5', '$x316.6']
numba.core.byteflow - DEBUG - dispatch pc=320, inst=LOAD_CONST(arg=1, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$n314.5', '$318load_attr.7']
numba.core.byteflow - DEBUG - dispatch pc=322, inst=BINARY_SUBSCR(arg=None, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$n314.5', '$318load_attr.7', '$const320.8']
numba.core.byteflow - DEBUG - dispatch pc=324, inst=COMPARE_OP(arg=0, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$n314.5', '$322binary_subscr.9']
numba.core.byteflow - DEBUG - dispatch pc=326, inst=POP_JUMP_IF_TRUE(arg=68, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$324compare_op.10']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0), Edge(pc=134, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=120 nstack_initial=0), State(pc_initial=328 nstack_initial=0), State(pc_initial=134 nstack_initial=0)])
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=134 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=328 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=328, inst=LOAD_CONST(arg=2, lineno=1229)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=330, inst=RETURN_VALUE(arg=None, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$const328.0']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=134 nstack_initial=0)])
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=116 nstack_initial=0): set(),
             State(pc_initial=120 nstack_initial=0): set(),
             State(pc_initial=134 nstack_initial=0): set(),
             State(pc_initial=202 nstack_initial=0): set(),
             State(pc_initial=212 nstack_initial=0): set(),
             State(pc_initial=292 nstack_initial=0): set(),
             State(pc_initial=302 nstack_initial=0): set(),
             State(pc_initial=328 nstack_initial=0): set(),
             State(pc_initial=332 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - keep phismap: {}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$8load_global.3'}), (10, {'item': '$8load_global.3', 'res': '$10load_method.4'}), (12, {'res': '$x12.5'}), (14, {'res': '$const14.6'}), (16, {'res': '$16load_global.7'}), (18, {'res': '$post_max18.8'}), (20, {'res': '$x20.9'}), (22, {'item': '$x20.9', 'res': '$22load_attr.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$22load_attr.10', 'res': '$26binary_subscr.12'}), (28, {'func': '$16load_global.7', 'args': ['$post_max18.8', '$26binary_subscr.12'], 'res': '$28call_function.13'}), (30, {'start': '$const14.6', 'stop': '$28call_function.13', 'step': None, 'res': '$30build_slice.15', 'slicevar': '$30build_slice.14'}), (32, {'index': '$30build_slice.15', 'target': '$x12.5', 'res': '$32binary_subscr.16'}), (34, {'func': '$10load_method.4', 'args': ['$32binary_subscr.16'], 'res': '$34call_method.17'}), (36, {'lhs': '$6binary_subscr.2', 'rhs': '$34call_method.17', 'res': '$36compare_op.18'}), (38, {'res': '$peaks38.19'}), (40, {'res': '$const40.20'}), (42, {'target': '$peaks38.19', 'index': '$const40.20', 'value': '$36compare_op.18'}), (44, {'res': '$peaks44.21'}), (46, {'res': '$const46.22'}), (48, {'orig': ['$peaks44.21', '$const46.22'], 'duped': ['$48dup_top_two.23', '$48dup_top_two.24']}), (50, {'index': '$48dup_top_two.24', 'target': '$48dup_top_two.23', 'res': '$50binary_subscr.25'}), (52, {'res': '$x52.26'}), (54, {'res': '$const54.27'}), (56, {'index': '$const54.27', 'target': '$x52.26', 'res': '$56binary_subscr.28'}), (58, {'res': '$58load_global.29'}), (60, {'item': '$58load_global.29', 'res': '$60load_method.30'}), (62, {'res': '$x62.31'}), (64, {'res': '$const64.32'}), (66, {'res': '$66load_global.33'}), (68, {'res': '$post_avg68.34'}), (70, {'res': '$x70.35'}), (72, {'item': '$x70.35', 'res': '$72load_attr.36'}), (74, {'res': '$const74.37'}), (76, {'index': '$const74.37', 'target': '$72load_attr.36', 'res': '$76binary_subscr.38'}), (78, {'func': '$66load_global.33', 'args': ['$post_avg68.34', '$76binary_subscr.38'], 'res': '$78call_function.39'}), (80, {'start': '$const64.32', 'stop': '$78call_function.39', 'step': None, 'res': '$80build_slice.41', 'slicevar': '$80build_slice.40'}), (82, {'index': '$80build_slice.41', 'target': '$x62.31', 'res': '$82binary_subscr.42'}), (84, {'func': '$60load_method.30', 'args': ['$82binary_subscr.42'], 'res': '$84call_method.43'}), (86, {'res': '$delta86.44'}), (88, {'lhs': '$84call_method.43', 'rhs': '$delta86.44', 'res': '$88binary_add.45'}), (90, {'lhs': '$56binary_subscr.28', 'rhs': '$88binary_add.45', 'res': '$90compare_op.46'}), (92, {'lhs': '$50binary_subscr.25', 'rhs': '$90compare_op.46', 'res': '$92inplace_and.47'}), (96, {'target': '$peaks44.21', 'index': '$const46.22', 'value': '$92inplace_and.47'}), (98, {'res': '$peaks98.48'}), (100, {'res': '$const100.49'}), (102, {'index': '$const100.49', 'target': '$peaks98.48', 'res': '$102binary_subscr.50'}), (104, {'pred': '$102binary_subscr.50'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: (), 116: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$wait106.0'}), (108, {'res': '$const108.1'}), (110, {'lhs': '$wait106.0', 'rhs': '$const108.1', 'res': '$110binary_add.2'}), (112, {'value': '$110binary_add.2'}), (114, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={120: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=116 nstack_initial=0):
AdaptBlockInfo(insts=((116, {'res': '$const116.0'}), (118, {'value': '$const116.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={120: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=120 nstack_initial=0):
AdaptBlockInfo(insts=((120, {'res': '$n120.0'}), (122, {'res': '$x122.1'}), (124, {'item': '$x122.1', 'res': '$124load_attr.2'}), (126, {'res': '$const126.3'}), (128, {'index': '$const126.3', 'target': '$124load_attr.2', 'res': '$128binary_subscr.4'}), (130, {'lhs': '$n120.0', 'rhs': '$128binary_subscr.4', 'res': '$130compare_op.5'}), (132, {'pred': '$130compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={134: (), 332: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=134 nstack_initial=0):
AdaptBlockInfo(insts=((134, {'res': '$134load_global.0'}), (136, {'item': '$134load_global.0', 'res': '$136load_method.1'}), (138, {'res': '$x138.2'}), (140, {'res': '$140load_global.3'}), (142, {'res': '$const142.4'}), (144, {'res': '$n144.5'}), (146, {'res': '$pre_max146.6'}), (148, {'lhs': '$n144.5', 'rhs': '$pre_max146.6', 'res': '$148binary_subtract.7'}), (150, {'func': '$140load_global.3', 'args': ['$const142.4', '$148binary_subtract.7'], 'res': '$150call_function.8'}), (152, {'res': '$152load_global.9'}), (154, {'res': '$n154.10'}), (156, {'res': '$post_max156.11'}), (158, {'lhs': '$n154.10', 'rhs': '$post_max156.11', 'res': '$158binary_add.12'}), (160, {'res': '$x160.13'}), (162, {'item': '$x160.13', 'res': '$162load_attr.14'}), (164, {'res': '$const164.15'}), (166, {'index': '$const164.15', 'target': '$162load_attr.14', 'res': '$166binary_subscr.16'}), (168, {'func': '$152load_global.9', 'args': ['$158binary_add.12', '$166binary_subscr.16'], 'res': '$168call_function.17'}), (170, {'start': '$150call_function.8', 'stop': '$168call_function.17', 'step': None, 'res': '$170build_slice.19', 'slicevar': '$170build_slice.18'}), (172, {'index': '$170build_slice.19', 'target': '$x138.2', 'res': '$172binary_subscr.20'}), (174, {'func': '$136load_method.1', 'args': ['$172binary_subscr.20'], 'res': '$174call_method.21'}), (176, {'value': '$174call_method.21'}), (178, {'res': '$x178.22'}), (180, {'res': '$n180.23'}), (182, {'index': '$n180.23', 'target': '$x178.22', 'res': '$182binary_subscr.24'}), (184, {'res': '$maxn184.25'}), (186, {'lhs': '$182binary_subscr.24', 'rhs': '$maxn184.25', 'res': '$186compare_op.26'}), (188, {'res': '$peaks188.27'}), (190, {'res': '$n190.28'}), (192, {'target': '$peaks188.27', 'index': '$n190.28', 'value': '$186compare_op.26'}), (194, {'res': '$peaks194.29'}), (196, {'res': '$n196.30'}), (198, {'index': '$n196.30', 'target': '$peaks194.29', 'res': '$198binary_subscr.31'}), (200, {'pred': '$198binary_subscr.31'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={202: (), 212: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=202 nstack_initial=0):
AdaptBlockInfo(insts=((202, {'res': '$n202.0'}), (204, {'res': '$const204.1'}), (206, {'lhs': '$n202.0', 'rhs': '$const204.1', 'res': '$206inplace_add.2'}), (208, {'value': '$206inplace_add.2'}), (210, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={120: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=212 nstack_initial=0):
AdaptBlockInfo(insts=((212, {'res': '$212load_global.0'}), (214, {'item': '$212load_global.0', 'res': '$214load_method.1'}), (216, {'res': '$x216.2'}), (218, {'res': '$218load_global.3'}), (220, {'res': '$const220.4'}), (222, {'res': '$n222.5'}), (224, {'res': '$pre_avg224.6'}), (226, {'lhs': '$n222.5', 'rhs': '$pre_avg224.6', 'res': '$226binary_subtract.7'}), (228, {'func': '$218load_global.3', 'args': ['$const220.4', '$226binary_subtract.7'], 'res': '$228call_function.8'}), (230, {'res': '$230load_global.9'}), (232, {'res': '$n232.10'}), (234, {'res': '$post_avg234.11'}), (236, {'lhs': '$n232.10', 'rhs': '$post_avg234.11', 'res': '$236binary_add.12'}), (238, {'res': '$x238.13'}), (240, {'item': '$x238.13', 'res': '$240load_attr.14'}), (242, {'res': '$const242.15'}), (244, {'index': '$const242.15', 'target': '$240load_attr.14', 'res': '$244binary_subscr.16'}), (246, {'func': '$230load_global.9', 'args': ['$236binary_add.12', '$244binary_subscr.16'], 'res': '$246call_function.17'}), (248, {'start': '$228call_function.8', 'stop': '$246call_function.17', 'step': None, 'res': '$248build_slice.19', 'slicevar': '$248build_slice.18'}), (250, {'index': '$248build_slice.19', 'target': '$x216.2', 'res': '$250binary_subscr.20'}), (252, {'func': '$214load_method.1', 'args': ['$250binary_subscr.20'], 'res': '$252call_method.21'}), (254, {'value': '$252call_method.21'}), (256, {'res': '$peaks256.22'}), (258, {'res': '$n258.23'}), (260, {'orig': ['$peaks256.22', '$n258.23'], 'duped': ['$260dup_top_two.24', '$260dup_top_two.25']}), (262, {'index': '$260dup_top_two.25', 'target': '$260dup_top_two.24', 'res': '$262binary_subscr.26'}), (264, {'res': '$x264.27'}), (266, {'res': '$n266.28'}), (268, {'index': '$n266.28', 'target': '$x264.27', 'res': '$268binary_subscr.29'}), (270, {'res': '$avgn270.30'}), (272, {'res': '$delta272.31'}), (274, {'lhs': '$avgn270.30', 'rhs': '$delta272.31', 'res': '$274binary_add.32'}), (276, {'lhs': '$268binary_subscr.29', 'rhs': '$274binary_add.32', 'res': '$276compare_op.33'}), (278, {'lhs': '$262binary_subscr.26', 'rhs': '$276compare_op.33', 'res': '$278inplace_and.34'}), (282, {'target': '$peaks256.22', 'index': '$n258.23', 'value': '$278inplace_and.34'}), (284, {'res': '$peaks284.35'}), (286, {'res': '$n286.36'}), (288, {'index': '$n286.36', 'target': '$peaks284.35', 'res': '$288binary_subscr.37'}), (290, {'pred': '$288binary_subscr.37'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={292: (), 302: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=292 nstack_initial=0):
AdaptBlockInfo(insts=((292, {'res': '$n292.0'}), (294, {'res': '$const294.1'}), (296, {'lhs': '$n292.0', 'rhs': '$const294.1', 'res': '$296inplace_add.2'}), (298, {'value': '$296inplace_add.2'}), (300, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={120: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=302 nstack_initial=0):
AdaptBlockInfo(insts=((302, {'res': '$n302.0'}), (304, {'res': '$wait304.1'}), (306, {'res': '$const306.2'}), (308, {'lhs': '$wait304.1', 'rhs': '$const306.2', 'res': '$308binary_add.3'}), (310, {'lhs': '$n302.0', 'rhs': '$308binary_add.3', 'res': '$310inplace_add.4'}), (312, {'value': '$310inplace_add.4'}), (314, {'res': '$n314.5'}), (316, {'res': '$x316.6'}), (318, {'item': '$x316.6', 'res': '$318load_attr.7'}), (320, {'res': '$const320.8'}), (322, {'index': '$const320.8', 'target': '$318load_attr.7', 'res': '$322binary_subscr.9'}), (324, {'lhs': '$n314.5', 'rhs': '$322binary_subscr.9', 'res': '$324compare_op.10'}), (326, {'pred': '$324compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: (), 134: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=328 nstack_initial=0):
AdaptBlockInfo(insts=((328, {'res': '$const328.0'}), (330, {'retval': '$const328.0', 'castval': '$330return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=332 nstack_initial=0):
AdaptBlockInfo(insts=((332, {'res': '$const332.0'}), (334, {'retval': '$const332.0', 'castval': '$334return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    pre_max = arg(1, name=pre_max)           ['pre_max']
    post_max = arg(2, name=post_max)         ['post_max']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
    delta = arg(5, name=delta)               ['delta']
    wait = arg(6, name=wait)                 ['wait']
    peaks = arg(7, name=peaks)               ['peaks']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $8load_global.3 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.3']
    $10load_method.4 = getattr(value=$8load_global.3, attr=max) ['$10load_method.4', '$8load_global.3']
    $const14.6 = const(NoneType, None)       ['$const14.6']
    $16load_global.7 = global(min: <built-in function min>) ['$16load_global.7']
    $22load_attr.10 = getattr(value=x, attr=shape) ['$22load_attr.10', 'x']
    $const24.11 = const(int, 0)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=$22load_attr.10, index=$const24.11, fn=<built-in function getitem>) ['$22load_attr.10', '$26binary_subscr.12', '$const24.11']
    $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1209), Var($26binary_subscr.12, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_global.7', '$26binary_subscr.12', '$28call_function.13', 'post_max']
    $30build_slice.14 = global(slice: <class 'slice'>) ['$30build_slice.14']
    $30build_slice.15 = call $30build_slice.14($const14.6, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6, utils.py:1221), Var($28call_function.13, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None) ['$28call_function.13', '$30build_slice.14', '$30build_slice.15', '$const14.6']
    $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>) ['$30build_slice.15', '$32binary_subscr.16', 'x']
    $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_method.4', '$32binary_subscr.16', '$34call_method.17']
    $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17 ['$34call_method.17', '$36compare_op.18', '$6binary_subscr.2']
    $const40.20 = const(int, 0)              ['$const40.20']
    peaks[$const40.20] = $36compare_op.18    ['$36compare_op.18', '$const40.20', 'peaks']
    $const46.22 = const(int, 0)              ['$const46.22']
    $50binary_subscr.25 = getitem(value=peaks, index=$const46.22, fn=<built-in function getitem>) ['$50binary_subscr.25', '$const46.22', 'peaks']
    $const54.27 = const(int, 0)              ['$const54.27']
    $56binary_subscr.28 = getitem(value=x, index=$const54.27, fn=<built-in function getitem>) ['$56binary_subscr.28', '$const54.27', 'x']
    $58load_global.29 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.29']
    $60load_method.30 = getattr(value=$58load_global.29, attr=mean) ['$58load_global.29', '$60load_method.30']
    $const64.32 = const(NoneType, None)      ['$const64.32']
    $66load_global.33 = global(min: <built-in function min>) ['$66load_global.33']
    $72load_attr.36 = getattr(value=x, attr=shape) ['$72load_attr.36', 'x']
    $const74.37 = const(int, 0)              ['$const74.37']
    $76binary_subscr.38 = getitem(value=$72load_attr.36, index=$const74.37, fn=<built-in function getitem>) ['$72load_attr.36', '$76binary_subscr.38', '$const74.37']
    $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1209), Var($76binary_subscr.38, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.33', '$76binary_subscr.38', '$78call_function.39', 'post_avg']
    $80build_slice.40 = global(slice: <class 'slice'>) ['$80build_slice.40']
    $80build_slice.41 = call $80build_slice.40($const64.32, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32, utils.py:1222), Var($78call_function.39, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None) ['$78call_function.39', '$80build_slice.40', '$80build_slice.41', '$const64.32']
    $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>) ['$80build_slice.41', '$82binary_subscr.42', 'x']
    $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.30', '$82binary_subscr.42', '$84call_method.43']
    $88binary_add.45 = $84call_method.43 + delta ['$84call_method.43', '$88binary_add.45', 'delta']
    $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45 ['$56binary_subscr.28', '$88binary_add.45', '$90compare_op.46']
    $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined) ['$50binary_subscr.25', '$90compare_op.46', '$92inplace_and.47']
    peaks[$const46.22] = $92inplace_and.47   ['$92inplace_and.47', '$const46.22', 'peaks']
    $const100.49 = const(int, 0)             ['$const100.49']
    $102binary_subscr.50 = getitem(value=peaks, index=$const100.49, fn=<built-in function getitem>) ['$102binary_subscr.50', '$const100.49', 'peaks']
    bool104 = global(bool: <class 'bool'>)   ['bool104']
    $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None) ['$102binary_subscr.50', '$104pred', 'bool104']
    branch $104pred, 106, 116                ['$104pred']
label 106:
    $const108.1 = const(int, 1)              ['$const108.1']
    n = wait + $const108.1                   ['$const108.1', 'n', 'wait']
    jump 120                                 []
label 116:
    n = const(int, 1)                        ['n']
    jump 120                                 []
label 120:
    $124load_attr.2 = getattr(value=x, attr=shape) ['$124load_attr.2', 'x']
    $const126.3 = const(int, 0)              ['$const126.3']
    $128binary_subscr.4 = getitem(value=$124load_attr.2, index=$const126.3, fn=<built-in function getitem>) ['$124load_attr.2', '$128binary_subscr.4', '$const126.3']
    $130compare_op.5 = n < $128binary_subscr.4 ['$128binary_subscr.4', '$130compare_op.5', 'n']
    bool132 = global(bool: <class 'bool'>)   ['bool132']
    $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None) ['$130compare_op.5', '$132pred', 'bool132']
    branch $132pred, 134, 332                ['$132pred']
label 134:
    $134load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$134load_global.0']
    $136load_method.1 = getattr(value=$134load_global.0, attr=max) ['$134load_global.0', '$136load_method.1']
    $140load_global.3 = global(max: <built-in function max>) ['$140load_global.3']
    $const142.4 = const(int, 0)              ['$const142.4']
    $148binary_subtract.7 = n - pre_max      ['$148binary_subtract.7', 'n', 'pre_max']
    $150call_function.8 = call $140load_global.3($const142.4, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4, utils.py:1230), Var($148binary_subtract.7, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.3', '$148binary_subtract.7', '$150call_function.8', '$const142.4']
    $152load_global.9 = global(min: <built-in function min>) ['$152load_global.9']
    $158binary_add.12 = n + post_max         ['$158binary_add.12', 'n', 'post_max']
    $162load_attr.14 = getattr(value=x, attr=shape) ['$162load_attr.14', 'x']
    $const164.15 = const(int, 0)             ['$const164.15']
    $166binary_subscr.16 = getitem(value=$162load_attr.14, index=$const164.15, fn=<built-in function getitem>) ['$162load_attr.14', '$166binary_subscr.16', '$const164.15']
    $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1230), Var($166binary_subscr.16, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_global.9', '$158binary_add.12', '$166binary_subscr.16', '$168call_function.17']
    $170build_slice.18 = global(slice: <class 'slice'>) ['$170build_slice.18']
    $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1230), Var($168call_function.17, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None) ['$150call_function.8', '$168call_function.17', '$170build_slice.18', '$170build_slice.19']
    $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>) ['$170build_slice.19', '$172binary_subscr.20', 'x']
    maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$136load_method.1', '$172binary_subscr.20', 'maxn']
    $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$182binary_subscr.24', 'n', 'x']
    $186compare_op.26 = $182binary_subscr.24 == maxn ['$182binary_subscr.24', '$186compare_op.26', 'maxn']
    peaks[n] = $186compare_op.26             ['$186compare_op.26', 'n', 'peaks']
    $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$198binary_subscr.31', 'n', 'peaks']
    bool200 = global(bool: <class 'bool'>)   ['bool200']
    $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None) ['$198binary_subscr.31', '$200pred', 'bool200']
    branch $200pred, 212, 202                ['$200pred']
label 202:
    $const204.1 = const(int, 1)              ['$const204.1']
    $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined) ['$206inplace_add.2', '$const204.1', 'n']
    n = $206inplace_add.2                    ['$206inplace_add.2', 'n']
    jump 120                                 []
label 212:
    $212load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$212load_global.0']
    $214load_method.1 = getattr(value=$212load_global.0, attr=mean) ['$212load_global.0', '$214load_method.1']
    $218load_global.3 = global(max: <built-in function max>) ['$218load_global.3']
    $const220.4 = const(int, 0)              ['$const220.4']
    $226binary_subtract.7 = n - pre_avg      ['$226binary_subtract.7', 'n', 'pre_avg']
    $228call_function.8 = call $218load_global.3($const220.4, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4, utils.py:1239), Var($226binary_subtract.7, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$218load_global.3', '$226binary_subtract.7', '$228call_function.8', '$const220.4']
    $230load_global.9 = global(min: <built-in function min>) ['$230load_global.9']
    $236binary_add.12 = n + post_avg         ['$236binary_add.12', 'n', 'post_avg']
    $240load_attr.14 = getattr(value=x, attr=shape) ['$240load_attr.14', 'x']
    $const242.15 = const(int, 0)             ['$const242.15']
    $244binary_subscr.16 = getitem(value=$240load_attr.14, index=$const242.15, fn=<built-in function getitem>) ['$240load_attr.14', '$244binary_subscr.16', '$const242.15']
    $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1239), Var($244binary_subscr.16, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$230load_global.9', '$236binary_add.12', '$244binary_subscr.16', '$246call_function.17']
    $248build_slice.18 = global(slice: <class 'slice'>) ['$248build_slice.18']
    $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1239), Var($246call_function.17, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None) ['$228call_function.8', '$246call_function.17', '$248build_slice.18', '$248build_slice.19']
    $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>) ['$248build_slice.19', '$250binary_subscr.20', 'x']
    avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_method.1', '$250binary_subscr.20', 'avgn']
    $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$262binary_subscr.26', 'n', 'peaks']
    $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$268binary_subscr.29', 'n', 'x']
    $274binary_add.32 = avgn + delta         ['$274binary_add.32', 'avgn', 'delta']
    $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32 ['$268binary_subscr.29', '$274binary_add.32', '$276compare_op.33']
    $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined) ['$262binary_subscr.26', '$276compare_op.33', '$278inplace_and.34']
    peaks[n] = $278inplace_and.34            ['$278inplace_and.34', 'n', 'peaks']
    $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$288binary_subscr.37', 'n', 'peaks']
    bool290 = global(bool: <class 'bool'>)   ['bool290']
    $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None) ['$288binary_subscr.37', '$290pred', 'bool290']
    branch $290pred, 302, 292                ['$290pred']
label 292:
    $const294.1 = const(int, 1)              ['$const294.1']
    $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined) ['$296inplace_add.2', '$const294.1', 'n']
    n = $296inplace_add.2                    ['$296inplace_add.2', 'n']
    jump 120                                 []
label 302:
    $const306.2 = const(int, 1)              ['$const306.2']
    $308binary_add.3 = wait + $const306.2    ['$308binary_add.3', '$const306.2', 'wait']
    $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined) ['$308binary_add.3', '$310inplace_add.4', 'n']
    n = $310inplace_add.4                    ['$310inplace_add.4', 'n']
    $318load_attr.7 = getattr(value=x, attr=shape) ['$318load_attr.7', 'x']
    $const320.8 = const(int, 0)              ['$const320.8']
    $322binary_subscr.9 = getitem(value=$318load_attr.7, index=$const320.8, fn=<built-in function getitem>) ['$318load_attr.7', '$322binary_subscr.9', '$const320.8']
    $324compare_op.10 = n < $322binary_subscr.9 ['$322binary_subscr.9', '$324compare_op.10', 'n']
    bool326 = global(bool: <class 'bool'>)   ['bool326']
    $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None) ['$324compare_op.10', '$326pred', 'bool326']
    branch $326pred, 134, 328                ['$326pred']
label 328:
    $const328.0 = const(NoneType, None)      ['$const328.0']
    $330return_value.1 = cast(value=$const328.0) ['$330return_value.1', '$const328.0']
    return $330return_value.1                ['$330return_value.1']
label 332:
    $const332.0 = const(NoneType, None)      ['$const332.0']
    $334return_value.1 = cast(value=$const332.0) ['$334return_value.1', '$const332.0']
    return $334return_value.1                ['$334return_value.1']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087531a65c0>
numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
numba.core.ssa - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
numba.core.ssa - DEBUG - on stmt: post_max = arg(2, name=post_max)
numba.core.ssa - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
numba.core.ssa - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
numba.core.ssa - DEBUG - on stmt: delta = arg(5, name=delta)
numba.core.ssa - DEBUG - on stmt: wait = arg(6, name=wait)
numba.core.ssa - DEBUG - on stmt: peaks = arg(7, name=peaks)
numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $8load_global.3 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $10load_method.4 = getattr(value=$8load_global.3, attr=max)
numba.core.ssa - DEBUG - on stmt: $const14.6 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $16load_global.7 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $22load_attr.10 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const24.11 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1209), Var($26binary_subscr.12, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $30build_slice.14 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $30build_slice.15 = call $30build_slice.14($const14.6, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6, utils.py:1221), Var($28call_function.13, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17
numba.core.ssa - DEBUG - on stmt: $const40.20 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: peaks[0] = $36compare_op.18
numba.core.ssa - DEBUG - on stmt: $const46.22 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $const54.27 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $58load_global.29 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $60load_method.30 = getattr(value=$58load_global.29, attr=mean)
numba.core.ssa - DEBUG - on stmt: $const64.32 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $66load_global.33 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $72load_attr.36 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const74.37 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1209), Var($76binary_subscr.38, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $80build_slice.40 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $80build_slice.41 = call $80build_slice.40($const64.32, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32, utils.py:1222), Var($78call_function.39, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $88binary_add.45 = $84call_method.43 + delta
numba.core.ssa - DEBUG - on stmt: $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45
numba.core.ssa - DEBUG - on stmt: $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: peaks[0] = $92inplace_and.47
numba.core.ssa - DEBUG - on stmt: $const100.49 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: bool104 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $104pred, 106, 116
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 106
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087531a65c0>
numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: n = wait + $const108.1
numba.core.ssa - DEBUG - on stmt: jump 120
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 116
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087531a65c0>
numba.core.ssa - DEBUG - on stmt: n = const(int, 1)
numba.core.ssa - DEBUG - on stmt: jump 120
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 120
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087531a65c0>
numba.core.ssa - DEBUG - on stmt: $124load_attr.2 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const126.3 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $130compare_op.5 = n < $128binary_subscr.4
numba.core.ssa - DEBUG - on stmt: bool132 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $132pred, 134, 332
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 134
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087531a65c0>
numba.core.ssa - DEBUG - on stmt: $134load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $136load_method.1 = getattr(value=$134load_global.0, attr=max)
numba.core.ssa - DEBUG - on stmt: $140load_global.3 = global(max: <built-in function max>)
numba.core.ssa - DEBUG - on stmt: $const142.4 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $148binary_subtract.7 = n - pre_max
numba.core.ssa - DEBUG - on stmt: $150call_function.8 = call $140load_global.3($const142.4, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4, utils.py:1230), Var($148binary_subtract.7, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $152load_global.9 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $158binary_add.12 = n + post_max
numba.core.ssa - DEBUG - on stmt: $162load_attr.14 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const164.15 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1230), Var($166binary_subscr.16, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $170build_slice.18 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1230), Var($168call_function.17, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $186compare_op.26 = $182binary_subscr.24 == maxn
numba.core.ssa - DEBUG - on stmt: peaks[n] = $186compare_op.26
numba.core.ssa - DEBUG - on stmt: $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $200pred, 212, 202
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 202
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087531a65c0>
numba.core.ssa - DEBUG - on stmt: $const204.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: n = $206inplace_add.2
numba.core.ssa - DEBUG - on stmt: jump 333
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 212
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087531a65c0>
numba.core.ssa - DEBUG - on stmt: $212load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $214load_method.1 = getattr(value=$212load_global.0, attr=mean)
numba.core.ssa - DEBUG - on stmt: $218load_global.3 = global(max: <built-in function max>)
numba.core.ssa - DEBUG - on stmt: $const220.4 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $226binary_subtract.7 = n - pre_avg
numba.core.ssa - DEBUG - on stmt: $228call_function.8 = call $218load_global.3($const220.4, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4, utils.py:1239), Var($226binary_subtract.7, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $230load_global.9 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $236binary_add.12 = n + post_avg
numba.core.ssa - DEBUG - on stmt: $240load_attr.14 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const242.15 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1239), Var($244binary_subscr.16, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $248build_slice.18 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1239), Var($246call_function.17, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $274binary_add.32 = avgn + delta
numba.core.ssa - DEBUG - on stmt: $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32
numba.core.ssa - DEBUG - on stmt: $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: peaks[n] = $278inplace_and.34
numba.core.ssa - DEBUG - on stmt: $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $290pred, 302, 292
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 292
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087531a65c0>
numba.core.ssa - DEBUG - on stmt: $const294.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: n = $296inplace_add.2
numba.core.ssa - DEBUG - on stmt: jump 333
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 302
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087531a65c0>
numba.core.ssa - DEBUG - on stmt: $const306.2 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $308binary_add.3 = wait + $const306.2
numba.core.ssa - DEBUG - on stmt: $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: n = $310inplace_add.4
numba.core.ssa - DEBUG - on stmt: $318load_attr.7 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const320.8 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $324compare_op.10 = n < $322binary_subscr.9
numba.core.ssa - DEBUG - on stmt: bool326 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $326pred, 134, 328
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 328
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087531a65c0>
numba.core.ssa - DEBUG - on stmt: $const328.0 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $330return_value.1 = cast(value=$const328.0)
numba.core.ssa - DEBUG - on stmt: return $330return_value.1
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 332
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087531a65c0>
numba.core.ssa - DEBUG - on stmt: $const332.0 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $334return_value.1 = cast(value=$const332.0)
numba.core.ssa - DEBUG - on stmt: return $334return_value.1
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 333
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087531a65c0>
numba.core.ssa - DEBUG - on stmt: jump 120
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$102binary_subscr.50': [(<numba.core.ir.Assign object at 0x708752fc4b50>,
                                       0)],
             '$104pred': [(<numba.core.ir.Assign object at 0x7087530c2c80>, 0)],
             '$10load_method.4': [(<numba.core.ir.Assign object at 0x708752e1e920>,
                                   0)],
             '$124load_attr.2': [(<numba.core.ir.Assign object at 0x7087530c1180>,
                                  120)],
             '$128binary_subscr.4': [(<numba.core.ir.Assign object at 0x708752eabac0>,
                                      120)],
             '$130compare_op.5': [(<numba.core.ir.Assign object at 0x7087530c0070>,
                                   120)],
             '$132pred': [(<numba.core.ir.Assign object at 0x7087530c3370>,
                           120)],
             '$134load_global.0': [(<numba.core.ir.Assign object at 0x7087530c1570>,
                                    134)],
             '$136load_method.1': [(<numba.core.ir.Assign object at 0x7087530c2680>,
                                    134)],
             '$140load_global.3': [(<numba.core.ir.Assign object at 0x7087530c1810>,
                                    134)],
             '$148binary_subtract.7': [(<numba.core.ir.Assign object at 0x708752f9ff70>,
                                        134)],
             '$150call_function.8': [(<numba.core.ir.Assign object at 0x708752f9ea10>,
                                      134)],
             '$152load_global.9': [(<numba.core.ir.Assign object at 0x708752f9dd80>,
                                    134)],
             '$158binary_add.12': [(<numba.core.ir.Assign object at 0x708752f9c1c0>,
                                    134)],
             '$162load_attr.14': [(<numba.core.ir.Assign object at 0x708752f9d030>,
                                   134)],
             '$166binary_subscr.16': [(<numba.core.ir.Assign object at 0x708752eab010>,
                                       134)],
             '$168call_function.17': [(<numba.core.ir.Assign object at 0x708752f9d210>,
                                       134)],
             '$16load_global.7': [(<numba.core.ir.Assign object at 0x708753432620>,
                                   0)],
             '$170build_slice.18': [(<numba.core.ir.Assign object at 0x708752f9d4e0>,
                                     134)],
             '$170build_slice.19': [(<numba.core.ir.Assign object at 0x708752f9ea40>,
                                     134)],
             '$172binary_subscr.20': [(<numba.core.ir.Assign object at 0x708752f9cca0>,
                                       134)],
             '$182binary_subscr.24': [(<numba.core.ir.Assign object at 0x708752f9d660>,
                                       134)],
             '$186compare_op.26': [(<numba.core.ir.Assign object at 0x708752f9d600>,
                                    134)],
             '$198binary_subscr.31': [(<numba.core.ir.Assign object at 0x708752f9e380>,
                                       134)],
             '$200pred': [(<numba.core.ir.Assign object at 0x708752f9ee00>,
                           134)],
             '$206inplace_add.2': [(<numba.core.ir.Assign object at 0x708752f9df90>,
                                    202)],
             '$212load_global.0': [(<numba.core.ir.Assign object at 0x708752f9f100>,
                                    212)],
             '$214load_method.1': [(<numba.core.ir.Assign object at 0x708752f9f280>,
                                    212)],
             '$218load_global.3': [(<numba.core.ir.Assign object at 0x708752f9d180>,
                                    212)],
             '$226binary_subtract.7': [(<numba.core.ir.Assign object at 0x708752f9feb0>,
                                        212)],
             '$228call_function.8': [(<numba.core.ir.Assign object at 0x708752f9e860>,
                                      212)],
             '$22load_attr.10': [(<numba.core.ir.Assign object at 0x708753150df0>,
                                  0)],
             '$230load_global.9': [(<numba.core.ir.Assign object at 0x708752f9f490>,
                                    212)],
             '$236binary_add.12': [(<numba.core.ir.Assign object at 0x708752f9c760>,
                                    212)],
             '$240load_attr.14': [(<numba.core.ir.Assign object at 0x708752f9f580>,
                                   212)],
             '$244binary_subscr.16': [(<numba.core.ir.Assign object at 0x708752e3cd60>,
                                       212)],
             '$246call_function.17': [(<numba.core.ir.Assign object at 0x70875302e440>,
                                       212)],
             '$248build_slice.18': [(<numba.core.ir.Assign object at 0x70875302dcf0>,
                                     212)],
             '$248build_slice.19': [(<numba.core.ir.Assign object at 0x70875302d240>,
                                     212)],
             '$250binary_subscr.20': [(<numba.core.ir.Assign object at 0x70875302eb30>,
                                       212)],
             '$262binary_subscr.26': [(<numba.core.ir.Assign object at 0x70875302cdf0>,
                                       212)],
             '$268binary_subscr.29': [(<numba.core.ir.Assign object at 0x70875302fd00>,
                                       212)],
             '$26binary_subscr.12': [(<numba.core.ir.Assign object at 0x70875302ece0>,
                                      0)],
             '$274binary_add.32': [(<numba.core.ir.Assign object at 0x70875302dea0>,
                                    212)],
             '$276compare_op.33': [(<numba.core.ir.Assign object at 0x70875302c850>,
                                    212)],
             '$278inplace_and.34': [(<numba.core.ir.Assign object at 0x70875302cac0>,
                                     212)],
             '$288binary_subscr.37': [(<numba.core.ir.Assign object at 0x70875302f580>,
                                       212)],
             '$28call_function.13': [(<numba.core.ir.Assign object at 0x708753609210>,
                                      0)],
             '$290pred': [(<numba.core.ir.Assign object at 0x70875302f8e0>,
                           212)],
             '$296inplace_add.2': [(<numba.core.ir.Assign object at 0x70875302e080>,
                                    292)],
             '$308binary_add.3': [(<numba.core.ir.Assign object at 0x70875302d8a0>,
                                   302)],
             '$30build_slice.14': [(<numba.core.ir.Assign object at 0x7087537f4880>,
                                    0)],
             '$30build_slice.15': [(<numba.core.ir.Assign object at 0x7087533bfb80>,
                                    0)],
             '$310inplace_add.4': [(<numba.core.ir.Assign object at 0x70875302f910>,
                                    302)],
             '$318load_attr.7': [(<numba.core.ir.Assign object at 0x70875302cf10>,
                                  302)],
             '$322binary_subscr.9': [(<numba.core.ir.Assign object at 0x708752fc5810>,
                                      302)],
             '$324compare_op.10': [(<numba.core.ir.Assign object at 0x70875302d1e0>,
                                    302)],
             '$326pred': [(<numba.core.ir.Assign object at 0x70875302fc10>,
                           302)],
             '$32binary_subscr.16': [(<numba.core.ir.Assign object at 0x708752f26590>,
                                      0)],
             '$330return_value.1': [(<numba.core.ir.Assign object at 0x70875302f490>,
                                     328)],
             '$334return_value.1': [(<numba.core.ir.Assign object at 0x70875302c340>,
                                     332)],
             '$34call_method.17': [(<numba.core.ir.Assign object at 0x708752f27580>,
                                    0)],
             '$36compare_op.18': [(<numba.core.ir.Assign object at 0x708752f26f20>,
                                   0)],
             '$50binary_subscr.25': [(<numba.core.ir.Assign object at 0x70875302d600>,
                                      0)],
             '$56binary_subscr.28': [(<numba.core.ir.Assign object at 0x70875302f6d0>,
                                      0)],
             '$58load_global.29': [(<numba.core.ir.Assign object at 0x7087530b9cf0>,
                                    0)],
             '$60load_method.30': [(<numba.core.ir.Assign object at 0x7087530b9390>,
                                    0)],
             '$66load_global.33': [(<numba.core.ir.Assign object at 0x7087530ba7a0>,
                                    0)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x70875302e620>,
                                    0)],
             '$72load_attr.36': [(<numba.core.ir.Assign object at 0x7087530b9c60>,
                                  0)],
             '$76binary_subscr.38': [(<numba.core.ir.Assign object at 0x70875302f700>,
                                      0)],
             '$78call_function.39': [(<numba.core.ir.Assign object at 0x7087530bb700>,
                                      0)],
             '$80build_slice.40': [(<numba.core.ir.Assign object at 0x7087530bbc40>,
                                    0)],
             '$80build_slice.41': [(<numba.core.ir.Assign object at 0x7087530b8cd0>,
                                    0)],
             '$82binary_subscr.42': [(<numba.core.ir.Assign object at 0x7087530bbbe0>,
                                      0)],
             '$84call_method.43': [(<numba.core.ir.Assign object at 0x7087530c1330>,
                                    0)],
             '$88binary_add.45': [(<numba.core.ir.Assign object at 0x7087530c3c70>,
                                   0)],
             '$8load_global.3': [(<numba.core.ir.Assign object at 0x708752e1cb50>,
                                  0)],
             '$90compare_op.46': [(<numba.core.ir.Assign object at 0x7087530c3400>,
                                   0)],
             '$92inplace_and.47': [(<numba.core.ir.Assign object at 0x7087530c0f70>,
                                    0)],
             '$const100.49': [(<numba.core.ir.Assign object at 0x7087530c0520>,
                               0)],
             '$const108.1': [(<numba.core.ir.Assign object at 0x7087530ba650>,
                              106)],
             '$const126.3': [(<numba.core.ir.Assign object at 0x7087530c0b80>,
                              120)],
             '$const14.6': [(<numba.core.ir.Assign object at 0x7087535df1f0>,
                             0)],
             '$const142.4': [(<numba.core.ir.Assign object at 0x7087530c1f00>,
                              134)],
             '$const164.15': [(<numba.core.ir.Assign object at 0x708752f9e530>,
                               134)],
             '$const204.1': [(<numba.core.ir.Assign object at 0x708752f9c130>,
                              202)],
             '$const220.4': [(<numba.core.ir.Assign object at 0x708752f9fd30>,
                              212)],
             '$const24.11': [(<numba.core.ir.Assign object at 0x708753252b30>,
                              0)],
             '$const242.15': [(<numba.core.ir.Assign object at 0x708752f9d6f0>,
                               212)],
             '$const294.1': [(<numba.core.ir.Assign object at 0x70875302d8d0>,
                              292)],
             '$const306.2': [(<numba.core.ir.Assign object at 0x70875302e2c0>,
                              302)],
             '$const320.8': [(<numba.core.ir.Assign object at 0x70875302d210>,
                              302)],
             '$const328.0': [(<numba.core.ir.Assign object at 0x70875302fdc0>,
                              328)],
             '$const332.0': [(<numba.core.ir.Assign object at 0x70875302e7d0>,
                              332)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x708752e1f160>,
                            0)],
             '$const40.20': [(<numba.core.ir.Assign object at 0x708752f27460>,
                              0)],
             '$const46.22': [(<numba.core.ir.Assign object at 0x70875331ace0>,
                              0)],
             '$const54.27': [(<numba.core.ir.Assign object at 0x7087530b86d0>,
                              0)],
             '$const64.32': [(<numba.core.ir.Assign object at 0x7087530bae60>,
                              0)],
             '$const74.37': [(<numba.core.ir.Assign object at 0x7087530b9720>,
                              0)],
             'avgn': [(<numba.core.ir.Assign object at 0x70875302ceb0>, 212)],
             'bool104': [(<numba.core.ir.Assign object at 0x7087530c35b0>, 0)],
             'bool132': [(<numba.core.ir.Assign object at 0x7087530c00a0>,
                          120)],
             'bool200': [(<numba.core.ir.Assign object at 0x708752f9e800>,
                          134)],
             'bool290': [(<numba.core.ir.Assign object at 0x70875302f190>,
                          212)],
             'bool326': [(<numba.core.ir.Assign object at 0x70875302cfa0>,
                          302)],
             'delta': [(<numba.core.ir.Assign object at 0x7087532b6380>, 0)],
             'maxn': [(<numba.core.ir.Assign object at 0x708752f9ec50>, 134)],
             'n': [(<numba.core.ir.Assign object at 0x7087530c2b30>, 106),
                   (<numba.core.ir.Assign object at 0x7087530c2d10>, 116),
                   (<numba.core.ir.Assign object at 0x708752f9e7a0>, 202),
                   (<numba.core.ir.Assign object at 0x70875302f1f0>, 292),
                   (<numba.core.ir.Assign object at 0x70875302c7c0>, 302)],
             'peaks': [(<numba.core.ir.Assign object at 0x7087532b4520>, 0)],
             'post_avg': [(<numba.core.ir.Assign object at 0x7087532b42b0>, 0)],
             'post_max': [(<numba.core.ir.Assign object at 0x7087532b62c0>, 0)],
             'pre_avg': [(<numba.core.ir.Assign object at 0x7087532b6620>, 0)],
             'pre_max': [(<numba.core.ir.Assign object at 0x7087532b5300>, 0)],
             'wait': [(<numba.core.ir.Assign object at 0x7087532b57b0>, 0)],
             'x': [(<numba.core.ir.Assign object at 0x708752ffc7f0>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x708752ffda80>
numba.core.ssa - DEBUG - Fix SSA violator on var n
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752f9f880>
numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
numba.core.ssa - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
numba.core.ssa - DEBUG - on stmt: post_max = arg(2, name=post_max)
numba.core.ssa - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
numba.core.ssa - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
numba.core.ssa - DEBUG - on stmt: delta = arg(5, name=delta)
numba.core.ssa - DEBUG - on stmt: wait = arg(6, name=wait)
numba.core.ssa - DEBUG - on stmt: peaks = arg(7, name=peaks)
numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $8load_global.3 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $10load_method.4 = getattr(value=$8load_global.3, attr=max)
numba.core.ssa - DEBUG - on stmt: $const14.6 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $16load_global.7 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $22load_attr.10 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const24.11 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1209), Var($26binary_subscr.12, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $30build_slice.14 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $30build_slice.15 = call $30build_slice.14($const14.6, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6, utils.py:1221), Var($28call_function.13, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17
numba.core.ssa - DEBUG - on stmt: $const40.20 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: peaks[0] = $36compare_op.18
numba.core.ssa - DEBUG - on stmt: $const46.22 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $const54.27 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $58load_global.29 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $60load_method.30 = getattr(value=$58load_global.29, attr=mean)
numba.core.ssa - DEBUG - on stmt: $const64.32 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $66load_global.33 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $72load_attr.36 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const74.37 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1209), Var($76binary_subscr.38, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $80build_slice.40 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $80build_slice.41 = call $80build_slice.40($const64.32, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32, utils.py:1222), Var($78call_function.39, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $88binary_add.45 = $84call_method.43 + delta
numba.core.ssa - DEBUG - on stmt: $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45
numba.core.ssa - DEBUG - on stmt: $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: peaks[0] = $92inplace_and.47
numba.core.ssa - DEBUG - on stmt: $const100.49 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: bool104 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $104pred, 106, 116
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 106
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752f9f880>
numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: n = wait + $const108.1
numba.core.ssa - DEBUG - first assign: n
numba.core.ssa - DEBUG - replaced with: n = wait + $const108.1
numba.core.ssa - DEBUG - on stmt: jump 120
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 116
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752f9f880>
numba.core.ssa - DEBUG - on stmt: n = const(int, 1)
numba.core.ssa - DEBUG - replaced with: n.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: jump 120
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 120
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752f9f880>
numba.core.ssa - DEBUG - on stmt: $124load_attr.2 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const126.3 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $130compare_op.5 = n < $128binary_subscr.4
numba.core.ssa - DEBUG - on stmt: bool132 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $132pred, 134, 332
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 134
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752f9f880>
numba.core.ssa - DEBUG - on stmt: $134load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $136load_method.1 = getattr(value=$134load_global.0, attr=max)
numba.core.ssa - DEBUG - on stmt: $140load_global.3 = global(max: <built-in function max>)
numba.core.ssa - DEBUG - on stmt: $const142.4 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $148binary_subtract.7 = n - pre_max
numba.core.ssa - DEBUG - on stmt: $150call_function.8 = call $140load_global.3($const142.4, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4, utils.py:1230), Var($148binary_subtract.7, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $152load_global.9 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $158binary_add.12 = n + post_max
numba.core.ssa - DEBUG - on stmt: $162load_attr.14 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const164.15 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1230), Var($166binary_subscr.16, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $170build_slice.18 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1230), Var($168call_function.17, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $186compare_op.26 = $182binary_subscr.24 == maxn
numba.core.ssa - DEBUG - on stmt: peaks[n] = $186compare_op.26
numba.core.ssa - DEBUG - on stmt: $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $200pred, 212, 202
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 202
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752f9f880>
numba.core.ssa - DEBUG - on stmt: $const204.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: n = $206inplace_add.2
numba.core.ssa - DEBUG - replaced with: n.2 = $206inplace_add.2
numba.core.ssa - DEBUG - on stmt: jump 333
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 212
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752f9f880>
numba.core.ssa - DEBUG - on stmt: $212load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $214load_method.1 = getattr(value=$212load_global.0, attr=mean)
numba.core.ssa - DEBUG - on stmt: $218load_global.3 = global(max: <built-in function max>)
numba.core.ssa - DEBUG - on stmt: $const220.4 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $226binary_subtract.7 = n - pre_avg
numba.core.ssa - DEBUG - on stmt: $228call_function.8 = call $218load_global.3($const220.4, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4, utils.py:1239), Var($226binary_subtract.7, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $230load_global.9 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $236binary_add.12 = n + post_avg
numba.core.ssa - DEBUG - on stmt: $240load_attr.14 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const242.15 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1239), Var($244binary_subscr.16, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $248build_slice.18 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1239), Var($246call_function.17, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $274binary_add.32 = avgn + delta
numba.core.ssa - DEBUG - on stmt: $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32
numba.core.ssa - DEBUG - on stmt: $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: peaks[n] = $278inplace_and.34
numba.core.ssa - DEBUG - on stmt: $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $290pred, 302, 292
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 292
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752f9f880>
numba.core.ssa - DEBUG - on stmt: $const294.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: n = $296inplace_add.2
numba.core.ssa - DEBUG - replaced with: n.3 = $296inplace_add.2
numba.core.ssa - DEBUG - on stmt: jump 333
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752f9f880>
numba.core.ssa - DEBUG - on stmt: $const306.2 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $308binary_add.3 = wait + $const306.2
numba.core.ssa - DEBUG - on stmt: $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: n = $310inplace_add.4
numba.core.ssa - DEBUG - replaced with: n.4 = $310inplace_add.4
numba.core.ssa - DEBUG - on stmt: $318load_attr.7 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const320.8 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $324compare_op.10 = n < $322binary_subscr.9
numba.core.ssa - DEBUG - on stmt: bool326 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $326pred, 134, 328
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 328
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752f9f880>
numba.core.ssa - DEBUG - on stmt: $const328.0 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $330return_value.1 = cast(value=$const328.0)
numba.core.ssa - DEBUG - on stmt: return $330return_value.1
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 332
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752f9f880>
numba.core.ssa - DEBUG - on stmt: $const332.0 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $334return_value.1 = cast(value=$const332.0)
numba.core.ssa - DEBUG - on stmt: return $334return_value.1
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 333
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752f9f880>
numba.core.ssa - DEBUG - on stmt: jump 120
numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {106: [<numba.core.ir.Assign object at 0x70875302c310>],
             116: [<numba.core.ir.Assign object at 0x70875302c400>],
             202: [<numba.core.ir.Assign object at 0x708752e3ca30>],
             292: [<numba.core.ir.Assign object at 0x708752e3da20>],
             302: [<numba.core.ir.Assign object at 0x708752e3d330>]})
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752f9f880>
numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
numba.core.ssa - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
numba.core.ssa - DEBUG - on stmt: post_max = arg(2, name=post_max)
numba.core.ssa - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
numba.core.ssa - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
numba.core.ssa - DEBUG - on stmt: delta = arg(5, name=delta)
numba.core.ssa - DEBUG - on stmt: wait = arg(6, name=wait)
numba.core.ssa - DEBUG - on stmt: peaks = arg(7, name=peaks)
numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $8load_global.3 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $10load_method.4 = getattr(value=$8load_global.3, attr=max)
numba.core.ssa - DEBUG - on stmt: $const14.6 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $16load_global.7 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $22load_attr.10 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const24.11 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1209), Var($26binary_subscr.12, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $30build_slice.14 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $30build_slice.15 = call $30build_slice.14($const14.6, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6, utils.py:1221), Var($28call_function.13, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17
numba.core.ssa - DEBUG - on stmt: $const40.20 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: peaks[0] = $36compare_op.18
numba.core.ssa - DEBUG - on stmt: $const46.22 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $const54.27 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $58load_global.29 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $60load_method.30 = getattr(value=$58load_global.29, attr=mean)
numba.core.ssa - DEBUG - on stmt: $const64.32 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $66load_global.33 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $72load_attr.36 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const74.37 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1209), Var($76binary_subscr.38, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $80build_slice.40 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $80build_slice.41 = call $80build_slice.40($const64.32, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32, utils.py:1222), Var($78call_function.39, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $88binary_add.45 = $84call_method.43 + delta
numba.core.ssa - DEBUG - on stmt: $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45
numba.core.ssa - DEBUG - on stmt: $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: peaks[0] = $92inplace_and.47
numba.core.ssa - DEBUG - on stmt: $const100.49 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: bool104 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $104pred, 106, 116
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 106
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752f9f880>
numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: n = wait + $const108.1
numba.core.ssa - DEBUG - on stmt: jump 120
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 116
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752f9f880>
numba.core.ssa - DEBUG - on stmt: n.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: jump 120
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 120
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752f9f880>
numba.core.ssa - DEBUG - on stmt: $124load_attr.2 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const126.3 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $130compare_op.5 = n < $128binary_subscr.4
numba.core.ssa - DEBUG - find_def var='n' stmt=$130compare_op.5 = n < $128binary_subscr.4
numba.core.ssa - DEBUG - find_def_from_top label 120
numba.core.ssa - DEBUG - insert phi node n.5 = phi(incoming_values=[], incoming_blocks=[]) at 120
numba.core.ssa - DEBUG - find_def_from_bottom label 106
numba.core.ssa - DEBUG - incoming_def n = wait + $const108.1
numba.core.ssa - DEBUG - find_def_from_bottom label 116
numba.core.ssa - DEBUG - incoming_def n.1 = const(int, 1)
numba.core.ssa - DEBUG - find_def_from_bottom label 333
numba.core.ssa - DEBUG - find_def_from_top label 333
numba.core.ssa - DEBUG - insert phi node n.6 = phi(incoming_values=[], incoming_blocks=[]) at 333
numba.core.ssa - DEBUG - find_def_from_bottom label 202
numba.core.ssa - DEBUG - incoming_def n.2 = $206inplace_add.2
numba.core.ssa - DEBUG - find_def_from_bottom label 292
numba.core.ssa - DEBUG - incoming_def n.3 = $296inplace_add.2
numba.core.ssa - DEBUG - incoming_def n.6 = phi(incoming_values=[Var(n.2, utils.py:1236), Var(n.3, utils.py:1243)], incoming_blocks=[202, 292])
numba.core.ssa - DEBUG - replaced with: $130compare_op.5 = n.5 < $128binary_subscr.4
numba.core.ssa - DEBUG - on stmt: bool132 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $132pred, 134, 332
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 134
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752f9f880>
numba.core.ssa - DEBUG - on stmt: $134load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $136load_method.1 = getattr(value=$134load_global.0, attr=max)
numba.core.ssa - DEBUG - on stmt: $140load_global.3 = global(max: <built-in function max>)
numba.core.ssa - DEBUG - on stmt: $const142.4 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $148binary_subtract.7 = n - pre_max
numba.core.ssa - DEBUG - find_def var='n' stmt=$148binary_subtract.7 = n - pre_max
numba.core.ssa - DEBUG - find_def_from_top label 134
numba.core.ssa - DEBUG - insert phi node n.7 = phi(incoming_values=[], incoming_blocks=[]) at 134
numba.core.ssa - DEBUG - find_def_from_bottom label 120
numba.core.ssa - DEBUG - incoming_def n.5 = phi(incoming_values=[Var(n, utils.py:1225), Var(n.1, utils.py:1227), Var(n.6, utils.py:1229)], incoming_blocks=[106, 116, 333])
numba.core.ssa - DEBUG - find_def_from_bottom label 302
numba.core.ssa - DEBUG - incoming_def n.4 = $310inplace_add.4
numba.core.ssa - DEBUG - replaced with: $148binary_subtract.7 = n.7 - pre_max
numba.core.ssa - DEBUG - on stmt: $150call_function.8 = call $140load_global.3($const142.4, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4, utils.py:1230), Var($148binary_subtract.7, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $152load_global.9 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $158binary_add.12 = n + post_max
numba.core.ssa - DEBUG - find_def var='n' stmt=$158binary_add.12 = n + post_max
numba.core.ssa - DEBUG - replaced with: $158binary_add.12 = n.7 + post_max
numba.core.ssa - DEBUG - on stmt: $162load_attr.14 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const164.15 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1230), Var($166binary_subscr.16, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $170build_slice.18 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1230), Var($168call_function.17, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - find_def var='n' stmt=$182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - replaced with: $182binary_subscr.24 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $186compare_op.26 = $182binary_subscr.24 == maxn
numba.core.ssa - DEBUG - on stmt: peaks[n] = $186compare_op.26
numba.core.ssa - DEBUG - find_def var='n' stmt=peaks[n] = $186compare_op.26
numba.core.ssa - DEBUG - replaced with: peaks[n.7] = $186compare_op.26
numba.core.ssa - DEBUG - on stmt: $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - find_def var='n' stmt=$198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - replaced with: $198binary_subscr.31 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $200pred, 212, 202
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 202
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752f9f880>
numba.core.ssa - DEBUG - on stmt: $const204.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def var='n' stmt=$206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def_from_top label 202
numba.core.ssa - DEBUG - idom 134 from label 202
numba.core.ssa - DEBUG - find_def_from_bottom label 134
numba.core.ssa - DEBUG - replaced with: $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: n.2 = $206inplace_add.2
numba.core.ssa - DEBUG - on stmt: jump 333
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 212
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752f9f880>
numba.core.ssa - DEBUG - on stmt: $212load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $214load_method.1 = getattr(value=$212load_global.0, attr=mean)
numba.core.ssa - DEBUG - on stmt: $218load_global.3 = global(max: <built-in function max>)
numba.core.ssa - DEBUG - on stmt: $const220.4 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $226binary_subtract.7 = n - pre_avg
numba.core.ssa - DEBUG - find_def var='n' stmt=$226binary_subtract.7 = n - pre_avg
numba.core.ssa - DEBUG - find_def_from_top label 212
numba.core.ssa - DEBUG - idom 134 from label 212
numba.core.ssa - DEBUG - find_def_from_bottom label 134
numba.core.ssa - DEBUG - replaced with: $226binary_subtract.7 = n.7 - pre_avg
numba.core.ssa - DEBUG - on stmt: $228call_function.8 = call $218load_global.3($const220.4, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4, utils.py:1239), Var($226binary_subtract.7, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $230load_global.9 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $236binary_add.12 = n + post_avg
numba.core.ssa - DEBUG - find_def var='n' stmt=$236binary_add.12 = n + post_avg
numba.core.ssa - DEBUG - find_def_from_top label 212
numba.core.ssa - DEBUG - idom 134 from label 212
numba.core.ssa - DEBUG - find_def_from_bottom label 134
numba.core.ssa - DEBUG - replaced with: $236binary_add.12 = n.7 + post_avg
numba.core.ssa - DEBUG - on stmt: $240load_attr.14 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const242.15 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1239), Var($244binary_subscr.16, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $248build_slice.18 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1239), Var($246call_function.17, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - find_def var='n' stmt=$262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - find_def_from_top label 212
numba.core.ssa - DEBUG - idom 134 from label 212
numba.core.ssa - DEBUG - find_def_from_bottom label 134
numba.core.ssa - DEBUG - replaced with: $262binary_subscr.26 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - find_def var='n' stmt=$268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - find_def_from_top label 212
numba.core.ssa - DEBUG - idom 134 from label 212
numba.core.ssa - DEBUG - find_def_from_bottom label 134
numba.core.ssa - DEBUG - replaced with: $268binary_subscr.29 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $274binary_add.32 = avgn + delta
numba.core.ssa - DEBUG - on stmt: $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32
numba.core.ssa - DEBUG - on stmt: $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: peaks[n] = $278inplace_and.34
numba.core.ssa - DEBUG - find_def var='n' stmt=peaks[n] = $278inplace_and.34
numba.core.ssa - DEBUG - find_def_from_top label 212
numba.core.ssa - DEBUG - idom 134 from label 212
numba.core.ssa - DEBUG - find_def_from_bottom label 134
numba.core.ssa - DEBUG - replaced with: peaks[n.7] = $278inplace_and.34
numba.core.ssa - DEBUG - on stmt: $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - find_def var='n' stmt=$288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - find_def_from_top label 212
numba.core.ssa - DEBUG - idom 134 from label 212
numba.core.ssa - DEBUG - find_def_from_bottom label 134
numba.core.ssa - DEBUG - replaced with: $288binary_subscr.37 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $290pred, 302, 292
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 292
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752f9f880>
numba.core.ssa - DEBUG - on stmt: $const294.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def var='n' stmt=$296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def_from_top label 292
numba.core.ssa - DEBUG - idom 212 from label 292
numba.core.ssa - DEBUG - find_def_from_bottom label 212
numba.core.ssa - DEBUG - find_def_from_top label 212
numba.core.ssa - DEBUG - idom 134 from label 212
numba.core.ssa - DEBUG - find_def_from_bottom label 134
numba.core.ssa - DEBUG - replaced with: $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: n.3 = $296inplace_add.2
numba.core.ssa - DEBUG - on stmt: jump 333
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752f9f880>
numba.core.ssa - DEBUG - on stmt: $const306.2 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $308binary_add.3 = wait + $const306.2
numba.core.ssa - DEBUG - on stmt: $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def var='n' stmt=$310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def_from_top label 302
numba.core.ssa - DEBUG - idom 212 from label 302
numba.core.ssa - DEBUG - find_def_from_bottom label 212
numba.core.ssa - DEBUG - find_def_from_top label 212
numba.core.ssa - DEBUG - idom 134 from label 212
numba.core.ssa - DEBUG - find_def_from_bottom label 134
numba.core.ssa - DEBUG - replaced with: $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: n.4 = $310inplace_add.4
numba.core.ssa - DEBUG - on stmt: $318load_attr.7 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const320.8 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $324compare_op.10 = n < $322binary_subscr.9
numba.core.ssa - DEBUG - find_def var='n' stmt=$324compare_op.10 = n < $322binary_subscr.9
numba.core.ssa - DEBUG - replaced with: $324compare_op.10 = n.4 < $322binary_subscr.9
numba.core.ssa - DEBUG - on stmt: bool326 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $326pred, 134, 328
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 328
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752f9f880>
numba.core.ssa - DEBUG - on stmt: $const328.0 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $330return_value.1 = cast(value=$const328.0)
numba.core.ssa - DEBUG - on stmt: return $330return_value.1
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 332
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752f9f880>
numba.core.ssa - DEBUG - on stmt: $const332.0 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $334return_value.1 = cast(value=$const332.0)
numba.core.ssa - DEBUG - on stmt: return $334return_value.1
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 333
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752f9f880>
numba.core.ssa - DEBUG - on stmt: jump 120
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=570)
           2	LOAD_FAST(arg=0, lineno=571)
           4	LOAD_ATTR(arg=0, lineno=571)
           6	LOAD_CONST(arg=1, lineno=571)
           8	COMPARE_OP(arg=2, lineno=571)
          10	POP_JUMP_IF_FALSE(arg=11, lineno=571)
          12	LOAD_GLOBAL(arg=1, lineno=572)
          14	LOAD_CONST(arg=2, lineno=572)
          16	CALL_FUNCTION(arg=1, lineno=572)
          18	RAISE_VARARGS(arg=1, lineno=572)
>         20	LOAD_GLOBAL(arg=2, lineno=575)
          22	LOAD_METHOD(arg=3, lineno=575)
          24	LOAD_FAST(arg=0, lineno=575)
          26	CALL_METHOD(arg=1, lineno=575)
          28	STORE_FAST(arg=1, lineno=575)
          30	LOAD_GLOBAL(arg=4, lineno=576)
          32	LOAD_FAST(arg=1, lineno=576)
          34	CALL_FUNCTION(arg=1, lineno=576)
          36	LOAD_METHOD(arg=5, lineno=576)
          38	LOAD_CONST(arg=1, lineno=576)
          40	CALL_METHOD(arg=1, lineno=576)
          42	STORE_FAST(arg=2, lineno=576)
          44	LOAD_DEREF(arg=1, lineno=577)
          46	LOAD_FAST(arg=2, lineno=577)
          48	CALL_FUNCTION(arg=1, lineno=577)
          50	POP_JUMP_IF_FALSE(arg=29, lineno=577)
          52	LOAD_FAST(arg=2, lineno=578)
          54	RETURN_VALUE(arg=None, lineno=578)
>         56	LOAD_FAST(arg=1, lineno=580)
          58	GET_ITER(arg=None, lineno=580)
>         60	FOR_ITER(arg=21, lineno=580)
          62	STORE_FAST(arg=3, lineno=580)
          64	LOAD_FAST(arg=3, lineno=581)
          66	LOAD_METHOD(arg=6, lineno=581)
          68	CALL_METHOD(arg=0, lineno=581)
          70	STORE_FAST(arg=4, lineno=581)
          72	LOAD_DEREF(arg=1, lineno=582)
          74	LOAD_FAST(arg=4, lineno=582)
          76	CALL_FUNCTION(arg=1, lineno=582)
          78	POP_JUMP_IF_FALSE(arg=45, lineno=582)
          80	LOAD_FAST(arg=4, lineno=583)
          82	ROT_TWO(arg=None, lineno=583)
          84	POP_TOP(arg=None, lineno=583)
          86	RETURN_VALUE(arg=None, lineno=583)
>         88	LOAD_DEREF(arg=0, lineno=584)
          90	LOAD_FAST(arg=4, lineno=584)
          92	LOAD_FAST(arg=2, lineno=584)
          94	CALL_FUNCTION(arg=2, lineno=584)
          96	POP_JUMP_IF_FALSE(arg=52, lineno=584)
          98	LOAD_FAST(arg=4, lineno=585)
         100	STORE_FAST(arg=2, lineno=585)
>        102	JUMP_ABSOLUTE(arg=31, lineno=585)
>        104	LOAD_FAST(arg=2, lineno=586)
         106	RETURN_VALUE(arg=None, lineno=586)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=570)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=571)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=571)
numba.core.byteflow - DEBUG - stack ['$a2.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=571)
numba.core.byteflow - DEBUG - stack ['$4load_attr.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=COMPARE_OP(arg=2, lineno=571)
numba.core.byteflow - DEBUG - stack ['$4load_attr.1', '$const6.2']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=POP_JUMP_IF_FALSE(arg=11, lineno=571)
numba.core.byteflow - DEBUG - stack ['$8compare_op.3']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=12, stack=(), blockstack=(), npush=0), Edge(pc=20, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=12 nstack_initial=0), State(pc_initial=20 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=12 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_GLOBAL(arg=1, lineno=572)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=572)
numba.core.byteflow - DEBUG - stack ['$12load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=16, inst=CALL_FUNCTION(arg=1, lineno=572)
numba.core.byteflow - DEBUG - stack ['$12load_global.0', '$const14.1']
numba.core.byteflow - DEBUG - dispatch pc=18, inst=RAISE_VARARGS(arg=1, lineno=572)
numba.core.byteflow - DEBUG - stack ['$16call_function.2']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=20 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=20 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_GLOBAL(arg=2, lineno=575)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_METHOD(arg=3, lineno=575)
numba.core.byteflow - DEBUG - stack ['$20load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=575)
numba.core.byteflow - DEBUG - stack ['$22load_method.1']
numba.core.byteflow - DEBUG - dispatch pc=26, inst=CALL_METHOD(arg=1, lineno=575)
numba.core.byteflow - DEBUG - stack ['$22load_method.1', '$a24.2']
numba.core.byteflow - DEBUG - dispatch pc=28, inst=STORE_FAST(arg=1, lineno=575)
numba.core.byteflow - DEBUG - stack ['$26call_method.3']
numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_GLOBAL(arg=4, lineno=576)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=576)
numba.core.byteflow - DEBUG - stack ['$30load_global.4']
numba.core.byteflow - DEBUG - dispatch pc=34, inst=CALL_FUNCTION(arg=1, lineno=576)
numba.core.byteflow - DEBUG - stack ['$30load_global.4', '$it32.5']
numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_METHOD(arg=5, lineno=576)
numba.core.byteflow - DEBUG - stack ['$34call_function.6']
numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_CONST(arg=1, lineno=576)
numba.core.byteflow - DEBUG - stack ['$36load_method.7']
numba.core.byteflow - DEBUG - dispatch pc=40, inst=CALL_METHOD(arg=1, lineno=576)
numba.core.byteflow - DEBUG - stack ['$36load_method.7', '$const38.8']
numba.core.byteflow - DEBUG - dispatch pc=42, inst=STORE_FAST(arg=2, lineno=576)
numba.core.byteflow - DEBUG - stack ['$40call_method.9']
numba.core.byteflow - DEBUG - dispatch pc=44, inst=LOAD_DEREF(arg=1, lineno=577)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=46, inst=LOAD_FAST(arg=2, lineno=577)
numba.core.byteflow - DEBUG - stack ['$44load_deref.10']
numba.core.byteflow - DEBUG - dispatch pc=48, inst=CALL_FUNCTION(arg=1, lineno=577)
numba.core.byteflow - DEBUG - stack ['$44load_deref.10', '$max_value46.11']
numba.core.byteflow - DEBUG - dispatch pc=50, inst=POP_JUMP_IF_FALSE(arg=29, lineno=577)
numba.core.byteflow - DEBUG - stack ['$48call_function.12']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0), Edge(pc=56, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=56 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=2, lineno=578)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=54, inst=RETURN_VALUE(arg=None, lineno=578)
numba.core.byteflow - DEBUG - stack ['$max_value52.0']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=56 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=56 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=56, inst=LOAD_FAST(arg=1, lineno=580)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=58, inst=GET_ITER(arg=None, lineno=580)
numba.core.byteflow - DEBUG - stack ['$it56.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=60, stack=('$58get_iter.1',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=60 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi60.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=60 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=60, inst=FOR_ITER(arg=21, lineno=580)
numba.core.byteflow - DEBUG - stack ['$phi60.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=104, stack=(), blockstack=(), npush=0), Edge(pc=62, stack=('$phi60.0', '$60for_iter.2'), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=104 nstack_initial=0), State(pc_initial=62 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=104 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=104, inst=LOAD_FAST(arg=2, lineno=586)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=106, inst=RETURN_VALUE(arg=None, lineno=586)
numba.core.byteflow - DEBUG - stack ['$max_value104.0']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=62 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: ['$phi62.0', '$phi62.1']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=62 nstack_initial=2)
numba.core.byteflow - DEBUG - dispatch pc=62, inst=STORE_FAST(arg=3, lineno=580)
numba.core.byteflow - DEBUG - stack ['$phi62.0', '$phi62.1']
numba.core.byteflow - DEBUG - dispatch pc=64, inst=LOAD_FAST(arg=3, lineno=581)
numba.core.byteflow - DEBUG - stack ['$phi62.0']
numba.core.byteflow - DEBUG - dispatch pc=66, inst=LOAD_METHOD(arg=6, lineno=581)
numba.core.byteflow - DEBUG - stack ['$phi62.0', '$view64.2']
numba.core.byteflow - DEBUG - dispatch pc=68, inst=CALL_METHOD(arg=0, lineno=581)
numba.core.byteflow - DEBUG - stack ['$phi62.0', '$66load_method.3']
numba.core.byteflow - DEBUG - dispatch pc=70, inst=STORE_FAST(arg=4, lineno=581)
numba.core.byteflow - DEBUG - stack ['$phi62.0', '$68call_method.4']
numba.core.byteflow - DEBUG - dispatch pc=72, inst=LOAD_DEREF(arg=1, lineno=582)
numba.core.byteflow - DEBUG - stack ['$phi62.0']
numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=4, lineno=582)
numba.core.byteflow - DEBUG - stack ['$phi62.0', '$72load_deref.5']
numba.core.byteflow - DEBUG - dispatch pc=76, inst=CALL_FUNCTION(arg=1, lineno=582)
numba.core.byteflow - DEBUG - stack ['$phi62.0', '$72load_deref.5', '$v74.6']
numba.core.byteflow - DEBUG - dispatch pc=78, inst=POP_JUMP_IF_FALSE(arg=45, lineno=582)
numba.core.byteflow - DEBUG - stack ['$phi62.0', '$76call_function.7']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$phi62.0',), blockstack=(), npush=0), Edge(pc=88, stack=('$phi62.0',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1), State(pc_initial=88 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi80.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=80, inst=LOAD_FAST(arg=4, lineno=583)
numba.core.byteflow - DEBUG - stack ['$phi80.0']
numba.core.byteflow - DEBUG - dispatch pc=82, inst=ROT_TWO(arg=None, lineno=583)
numba.core.byteflow - DEBUG - stack ['$phi80.0', '$v80.1']
numba.core.byteflow - DEBUG - dispatch pc=84, inst=POP_TOP(arg=None, lineno=583)
numba.core.byteflow - DEBUG - stack ['$v80.1', '$phi80.0']
numba.core.byteflow - DEBUG - dispatch pc=86, inst=RETURN_VALUE(arg=None, lineno=583)
numba.core.byteflow - DEBUG - stack ['$v80.1']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=88 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi88.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=88 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=88, inst=LOAD_DEREF(arg=0, lineno=584)
numba.core.byteflow - DEBUG - stack ['$phi88.0']
numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_FAST(arg=4, lineno=584)
numba.core.byteflow - DEBUG - stack ['$phi88.0', '$88load_deref.1']
numba.core.byteflow - DEBUG - dispatch pc=92, inst=LOAD_FAST(arg=2, lineno=584)
numba.core.byteflow - DEBUG - stack ['$phi88.0', '$88load_deref.1', '$v90.2']
numba.core.byteflow - DEBUG - dispatch pc=94, inst=CALL_FUNCTION(arg=2, lineno=584)
numba.core.byteflow - DEBUG - stack ['$phi88.0', '$88load_deref.1', '$v90.2', '$max_value92.3']
numba.core.byteflow - DEBUG - dispatch pc=96, inst=POP_JUMP_IF_FALSE(arg=52, lineno=584)
numba.core.byteflow - DEBUG - stack ['$phi88.0', '$94call_function.4']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=98, stack=('$phi88.0',), blockstack=(), npush=0), Edge(pc=102, stack=('$phi88.0',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=98 nstack_initial=1), State(pc_initial=102 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi98.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=98 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=98, inst=LOAD_FAST(arg=4, lineno=585)
numba.core.byteflow - DEBUG - stack ['$phi98.0']
numba.core.byteflow - DEBUG - dispatch pc=100, inst=STORE_FAST(arg=2, lineno=585)
numba.core.byteflow - DEBUG - stack ['$phi98.0', '$v98.1']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=102, stack=('$phi98.0',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=1), State(pc_initial=102 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi102.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=102, inst=JUMP_ABSOLUTE(arg=31, lineno=585)
numba.core.byteflow - DEBUG - stack ['$phi102.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=60, stack=('$phi102.0',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=1), State(pc_initial=60 nstack_initial=1)])
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=60 nstack_initial=1)])
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=12 nstack_initial=0): set(),
             State(pc_initial=20 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=56 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=1): {'$phi60.0'},
             State(pc_initial=62 nstack_initial=2): {'$phi62.1'},
             State(pc_initial=80 nstack_initial=1): set(),
             State(pc_initial=88 nstack_initial=1): set(),
             State(pc_initial=98 nstack_initial=1): set(),
             State(pc_initial=102 nstack_initial=1): set(),
             State(pc_initial=104 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {'$phi60.0': State(pc_initial=56 nstack_initial=0),
 '$phi62.1': State(pc_initial=60 nstack_initial=1)}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$phi88.0', State(pc_initial=88 nstack_initial=1)),
                           ('$phi98.0', State(pc_initial=98 nstack_initial=1))},
             '$phi60.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0)),
                          ('$phi102.0',
                           State(pc_initial=102 nstack_initial=1))},
             '$phi62.0': {('$phi60.0', State(pc_initial=60 nstack_initial=1))},
             '$phi62.1': {('$60for_iter.2',
                           State(pc_initial=60 nstack_initial=1))},
             '$phi80.0': {('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi88.0': {('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi98.0': {('$phi88.0', State(pc_initial=88 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi60.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0)),
                          ('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi62.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0)),
                          ('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi62.1': {('$60for_iter.2',
                           State(pc_initial=60 nstack_initial=1))},
             '$phi80.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi88.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi98.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$58get_iter.1',
                            State(pc_initial=56 nstack_initial=0))},
             '$phi60.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi62.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi62.1': {('$60for_iter.2',
                           State(pc_initial=60 nstack_initial=1))},
             '$phi80.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi88.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi98.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$58get_iter.1',
                            State(pc_initial=56 nstack_initial=0))},
             '$phi60.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi62.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi62.1': {('$60for_iter.2',
                           State(pc_initial=60 nstack_initial=1))},
             '$phi80.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi88.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi98.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))}})
numba.core.byteflow - DEBUG - keep phismap: {'$phi60.0': {('$58get_iter.1', State(pc_initial=56 nstack_initial=0))},
 '$phi62.1': {('$60for_iter.2', State(pc_initial=60 nstack_initial=1))}}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=56 nstack_initial=0): {'$phi60.0': '$58get_iter.1'},
             State(pc_initial=60 nstack_initial=1): {'$phi62.1': '$60for_iter.2'}})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$a2.0'}), (4, {'item': '$a2.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2'}), (8, {'lhs': '$4load_attr.1', 'rhs': '$const6.2', 'res': '$8compare_op.3'}), (10, {'pred': '$8compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={12: (), 20: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=12 nstack_initial=0):
AdaptBlockInfo(insts=((12, {'res': '$12load_global.0'}), (14, {'res': '$const14.1'}), (16, {'func': '$12load_global.0', 'args': ['$const14.1'], 'res': '$16call_function.2'}), (18, {'exc': '$16call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=20 nstack_initial=0):
AdaptBlockInfo(insts=((20, {'res': '$20load_global.0'}), (22, {'item': '$20load_global.0', 'res': '$22load_method.1'}), (24, {'res': '$a24.2'}), (26, {'func': '$22load_method.1', 'args': ['$a24.2'], 'res': '$26call_method.3'}), (28, {'value': '$26call_method.3'}), (30, {'res': '$30load_global.4'}), (32, {'res': '$it32.5'}), (34, {'func': '$30load_global.4', 'args': ['$it32.5'], 'res': '$34call_function.6'}), (36, {'item': '$34call_function.6', 'res': '$36load_method.7'}), (38, {'res': '$const38.8'}), (40, {'func': '$36load_method.7', 'args': ['$const38.8'], 'res': '$40call_method.9'}), (42, {'value': '$40call_method.9'}), (44, {'res': '$44load_deref.10'}), (46, {'res': '$max_value46.11'}), (48, {'func': '$44load_deref.10', 'args': ['$max_value46.11'], 'res': '$48call_function.12'}), (50, {'pred': '$48call_function.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: (), 56: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$max_value52.0'}), (54, {'retval': '$max_value52.0', 'castval': '$54return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=56 nstack_initial=0):
AdaptBlockInfo(insts=((56, {'res': '$it56.0'}), (58, {'value': '$it56.0', 'res': '$58get_iter.1'})), outgoing_phis={'$phi60.0': '$58get_iter.1'}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: ('$58get_iter.1',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=60 nstack_initial=1):
AdaptBlockInfo(insts=((60, {'iterator': '$phi60.0', 'pair': '$60for_iter.1', 'indval': '$60for_iter.2', 'pred': '$60for_iter.3'}),), outgoing_phis={'$phi62.1': '$60for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={104: (), 62: ('$phi60.0', '$60for_iter.2')})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=62 nstack_initial=2):
AdaptBlockInfo(insts=((62, {'value': '$phi62.1'}), (64, {'res': '$view64.2'}), (66, {'item': '$view64.2', 'res': '$66load_method.3'}), (68, {'func': '$66load_method.3', 'args': [], 'res': '$68call_method.4'}), (70, {'value': '$68call_method.4'}), (72, {'res': '$72load_deref.5'}), (74, {'res': '$v74.6'}), (76, {'func': '$72load_deref.5', 'args': ['$v74.6'], 'res': '$76call_function.7'}), (78, {'pred': '$76call_function.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi62.0',), 88: ('$phi62.0',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'res': '$v80.1'}), (86, {'retval': '$v80.1', 'castval': '$86return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=88 nstack_initial=1):
AdaptBlockInfo(insts=((88, {'res': '$88load_deref.1'}), (90, {'res': '$v90.2'}), (92, {'res': '$max_value92.3'}), (94, {'func': '$88load_deref.1', 'args': ['$v90.2', '$max_value92.3'], 'res': '$94call_function.4'}), (96, {'pred': '$94call_function.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={98: ('$phi88.0',), 102: ('$phi88.0',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=98 nstack_initial=1):
AdaptBlockInfo(insts=((98, {'res': '$v98.1'}), (100, {'value': '$v98.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: ('$phi98.0',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=102 nstack_initial=1):
AdaptBlockInfo(insts=((102, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: ('$phi102.0',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=104 nstack_initial=0):
AdaptBlockInfo(insts=((104, {'res': '$max_value104.0'}), (106, {'retval': '$max_value104.0', 'castval': '$106return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    $4load_attr.1 = getattr(value=a, attr=size) ['$4load_attr.1', 'a']
    $const6.2 = const(int, 0)                ['$const6.2']
    $8compare_op.3 = $4load_attr.1 == $const6.2 ['$4load_attr.1', '$8compare_op.3', '$const6.2']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    branch $10pred, 12, 20                   ['$10pred']
label 12:
    $12load_global.0 = global(ValueError: <class 'ValueError'>) ['$12load_global.0']
    $const14.1 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const14.1']
    $16call_function.2 = call $12load_global.0($const14.1, func=$12load_global.0, args=[Var($const14.1, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16call_function.2', '$const14.1']
    raise $16call_function.2                 ['$16call_function.2']
label 20:
    $20load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.0']
    $22load_method.1 = getattr(value=$20load_global.0, attr=nditer) ['$20load_global.0', '$22load_method.1']
    it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.1', 'a', 'it']
    $30load_global.4 = global(next: <built-in function next>) ['$30load_global.4']
    $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.4', '$34call_function.6', 'it']
    $36load_method.7 = getattr(value=$34call_function.6, attr=take) ['$34call_function.6', '$36load_method.7']
    $const38.8 = const(int, 0)               ['$const38.8']
    max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_method.7', '$const38.8', 'max_value']
    $44load_deref.10 = freevar(pre_return_func: <ufunc 'isnan'>) ['$44load_deref.10']
    $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_deref.10', '$48call_function.12', 'max_value']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None) ['$48call_function.12', '$50pred', 'bool50']
    branch $50pred, 52, 56                   ['$50pred']
label 52:
    $54return_value.1 = cast(value=max_value) ['$54return_value.1', 'max_value']
    return $54return_value.1                 ['$54return_value.1']
label 56:
    $58get_iter.1 = getiter(value=it)        ['$58get_iter.1', 'it']
    $phi60.0 = $58get_iter.1                 ['$58get_iter.1', '$phi60.0']
    jump 60                                  []
label 60:
    $60for_iter.1 = iternext(value=$phi60.0) ['$60for_iter.1', '$phi60.0']
    $60for_iter.2 = pair_first(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.2']
    $60for_iter.3 = pair_second(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.3']
    $phi62.1 = $60for_iter.2                 ['$60for_iter.2', '$phi62.1']
    branch $60for_iter.3, 62, 104            ['$60for_iter.3']
label 62:
    view = $phi62.1                          ['$phi62.1', 'view']
    $66load_method.3 = getattr(value=view, attr=item) ['$66load_method.3', 'view']
    v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_method.3', 'v']
    $72load_deref.5 = freevar(pre_return_func: <ufunc 'isnan'>) ['$72load_deref.5']
    $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_deref.5', '$76call_function.7', 'v']
    bool78 = global(bool: <class 'bool'>)    ['bool78']
    $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None) ['$76call_function.7', '$78pred', 'bool78']
    branch $78pred, 80, 88                   ['$78pred']
label 80:
    $86return_value.2 = cast(value=v)        ['$86return_value.2', 'v']
    return $86return_value.2                 ['$86return_value.2']
label 88:
    $88load_deref.1 = freevar(comparator: <function max_comparator at 0x708808b2fb50>) ['$88load_deref.1']
    $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$88load_deref.1', '$94call_function.4', 'max_value', 'v']
    bool96 = global(bool: <class 'bool'>)    ['bool96']
    $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None) ['$94call_function.4', '$96pred', 'bool96']
    branch $96pred, 98, 102                  ['$96pred']
label 98:
    max_value = v                            ['max_value', 'v']
    jump 102                                 []
label 102:
    jump 60                                  []
label 104:
    $106return_value.1 = cast(value=max_value) ['$106return_value.1', 'max_value']
    return $106return_value.1                ['$106return_value.1']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087531a6ce0>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: $4load_attr.1 = getattr(value=a, attr=size)
numba.core.ssa - DEBUG - on stmt: $const6.2 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $8compare_op.3 = $4load_attr.1 == $const6.2
numba.core.ssa - DEBUG - on stmt: bool10 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $10pred, 12, 20
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 12
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087531a6ce0>
numba.core.ssa - DEBUG - on stmt: $12load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const14.1 = const(str, zero-size array to reduction operation maximum which has no identity)
numba.core.ssa - DEBUG - on stmt: $16call_function.2 = call $12load_global.0($const14.1, func=$12load_global.0, args=[Var($const14.1, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 20
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087531a6ce0>
numba.core.ssa - DEBUG - on stmt: $20load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $22load_method.1 = getattr(value=$20load_global.0, attr=nditer)
numba.core.ssa - DEBUG - on stmt: it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $30load_global.4 = global(next: <built-in function next>)
numba.core.ssa - DEBUG - on stmt: $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $36load_method.7 = getattr(value=$34call_function.6, attr=take)
numba.core.ssa - DEBUG - on stmt: $const38.8 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $44load_deref.10 = freevar(pre_return_func: <ufunc 'isnan'>)
numba.core.ssa - DEBUG - on stmt: $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $50pred, 52, 56
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 52
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087531a6ce0>
numba.core.ssa - DEBUG - on stmt: $54return_value.1 = cast(value=max_value)
numba.core.ssa - DEBUG - on stmt: return $54return_value.1
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 56
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087531a6ce0>
numba.core.ssa - DEBUG - on stmt: $58get_iter.1 = getiter(value=it)
numba.core.ssa - DEBUG - on stmt: $phi60.0 = $58get_iter.1
numba.core.ssa - DEBUG - on stmt: jump 60
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 60
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087531a6ce0>
numba.core.ssa - DEBUG - on stmt: $60for_iter.1 = iternext(value=$phi60.0)
numba.core.ssa - DEBUG - on stmt: $60for_iter.2 = pair_first(value=$60for_iter.1)
numba.core.ssa - DEBUG - on stmt: $60for_iter.3 = pair_second(value=$60for_iter.1)
numba.core.ssa - DEBUG - on stmt: $phi62.1 = $60for_iter.2
numba.core.ssa - DEBUG - on stmt: branch $60for_iter.3, 62, 104
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 62
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087531a6ce0>
numba.core.ssa - DEBUG - on stmt: view = $phi62.1
numba.core.ssa - DEBUG - on stmt: $66load_method.3 = getattr(value=view, attr=item)
numba.core.ssa - DEBUG - on stmt: v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $72load_deref.5 = freevar(pre_return_func: <ufunc 'isnan'>)
numba.core.ssa - DEBUG - on stmt: $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: bool78 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $78pred, 80, 88
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 80
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087531a6ce0>
numba.core.ssa - DEBUG - on stmt: $86return_value.2 = cast(value=v)
numba.core.ssa - DEBUG - on stmt: return $86return_value.2
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 88
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087531a6ce0>
numba.core.ssa - DEBUG - on stmt: $88load_deref.1 = freevar(comparator: <function max_comparator at 0x708808b2fb50>)
numba.core.ssa - DEBUG - on stmt: $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: bool96 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $96pred, 98, 102
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 98
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087531a6ce0>
numba.core.ssa - DEBUG - on stmt: max_value = v
numba.core.ssa - DEBUG - on stmt: jump 102
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 102
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087531a6ce0>
numba.core.ssa - DEBUG - on stmt: jump 60
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 104
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087531a6ce0>
numba.core.ssa - DEBUG - on stmt: $106return_value.1 = cast(value=max_value)
numba.core.ssa - DEBUG - on stmt: return $106return_value.1
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$106return_value.1': [(<numba.core.ir.Assign object at 0x7087531a7250>,
                                     104)],
             '$10pred': [(<numba.core.ir.Assign object at 0x708752e1a110>, 0)],
             '$12load_global.0': [(<numba.core.ir.Assign object at 0x708752e19570>,
                                   12)],
             '$16call_function.2': [(<numba.core.ir.Assign object at 0x708752e1bdf0>,
                                     12)],
             '$20load_global.0': [(<numba.core.ir.Assign object at 0x708752e1bac0>,
                                   20)],
             '$22load_method.1': [(<numba.core.ir.Assign object at 0x708752e19810>,
                                   20)],
             '$30load_global.4': [(<numba.core.ir.Assign object at 0x708752e18460>,
                                   20)],
             '$34call_function.6': [(<numba.core.ir.Assign object at 0x708752e185e0>,
                                     20)],
             '$36load_method.7': [(<numba.core.ir.Assign object at 0x708752e18ac0>,
                                   20)],
             '$44load_deref.10': [(<numba.core.ir.Assign object at 0x708752e1a860>,
                                   20)],
             '$48call_function.12': [(<numba.core.ir.Assign object at 0x708752e183a0>,
                                      20)],
             '$4load_attr.1': [(<numba.core.ir.Assign object at 0x708752f86080>,
                                0)],
             '$50pred': [(<numba.core.ir.Assign object at 0x708752e1ae60>, 20)],
             '$54return_value.1': [(<numba.core.ir.Assign object at 0x708752e19510>,
                                    52)],
             '$58get_iter.1': [(<numba.core.ir.Assign object at 0x708752e18d00>,
                                56)],
             '$60for_iter.1': [(<numba.core.ir.Assign object at 0x708752e18940>,
                                60)],
             '$60for_iter.2': [(<numba.core.ir.Assign object at 0x708752e18d90>,
                                60)],
             '$60for_iter.3': [(<numba.core.ir.Assign object at 0x708752e1b940>,
                                60)],
             '$66load_method.3': [(<numba.core.ir.Assign object at 0x708752e1bb50>,
                                   62)],
             '$72load_deref.5': [(<numba.core.ir.Assign object at 0x708752e1b220>,
                                  62)],
             '$76call_function.7': [(<numba.core.ir.Assign object at 0x708752fe30d0>,
                                     62)],
             '$78pred': [(<numba.core.ir.Assign object at 0x708752fe3010>, 62)],
             '$86return_value.2': [(<numba.core.ir.Assign object at 0x708752fe2350>,
                                    80)],
             '$88load_deref.1': [(<numba.core.ir.Assign object at 0x708752fe2890>,
                                  88)],
             '$8compare_op.3': [(<numba.core.ir.Assign object at 0x708752e19960>,
                                 0)],
             '$94call_function.4': [(<numba.core.ir.Assign object at 0x7087534304f0>,
                                     88)],
             '$96pred': [(<numba.core.ir.Assign object at 0x7087531a5000>, 88)],
             '$const14.1': [(<numba.core.ir.Assign object at 0x708752e1bee0>,
                             12)],
             '$const38.8': [(<numba.core.ir.Assign object at 0x708752e18760>,
                             20)],
             '$const6.2': [(<numba.core.ir.Assign object at 0x708752e1a500>,
                            0)],
             '$phi60.0': [(<numba.core.ir.Assign object at 0x708752e1b430>,
                           56)],
             '$phi62.1': [(<numba.core.ir.Assign object at 0x708752e19d20>,
                           60)],
             'a': [(<numba.core.ir.Assign object at 0x708752f86d10>, 0)],
             'bool10': [(<numba.core.ir.Assign object at 0x708752e19a20>, 0)],
             'bool50': [(<numba.core.ir.Assign object at 0x708752e1b070>, 20)],
             'bool78': [(<numba.core.ir.Assign object at 0x708752fe3190>, 62)],
             'bool96': [(<numba.core.ir.Assign object at 0x7087531a5d50>, 88)],
             'it': [(<numba.core.ir.Assign object at 0x708752e1ae00>, 20)],
             'max_value': [(<numba.core.ir.Assign object at 0x708752e18730>,
                            20),
                           (<numba.core.ir.Assign object at 0x7087531a4820>,
                            98)],
             'v': [(<numba.core.ir.Assign object at 0x708752e1a4a0>, 62)],
             'view': [(<numba.core.ir.Assign object at 0x708752e196c0>, 62)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x708752e1a260>
numba.core.ssa - DEBUG - Fix SSA violator on var max_value
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e19f60>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: $4load_attr.1 = getattr(value=a, attr=size)
numba.core.ssa - DEBUG - on stmt: $const6.2 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $8compare_op.3 = $4load_attr.1 == $const6.2
numba.core.ssa - DEBUG - on stmt: bool10 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $10pred, 12, 20
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 12
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e19f60>
numba.core.ssa - DEBUG - on stmt: $12load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const14.1 = const(str, zero-size array to reduction operation maximum which has no identity)
numba.core.ssa - DEBUG - on stmt: $16call_function.2 = call $12load_global.0($const14.1, func=$12load_global.0, args=[Var($const14.1, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 20
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e19f60>
numba.core.ssa - DEBUG - on stmt: $20load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $22load_method.1 = getattr(value=$20load_global.0, attr=nditer)
numba.core.ssa - DEBUG - on stmt: it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $30load_global.4 = global(next: <built-in function next>)
numba.core.ssa - DEBUG - on stmt: $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $36load_method.7 = getattr(value=$34call_function.6, attr=take)
numba.core.ssa - DEBUG - on stmt: $const38.8 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - first assign: max_value
numba.core.ssa - DEBUG - replaced with: max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $44load_deref.10 = freevar(pre_return_func: <ufunc 'isnan'>)
numba.core.ssa - DEBUG - on stmt: $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $50pred, 52, 56
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 52
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e19f60>
numba.core.ssa - DEBUG - on stmt: $54return_value.1 = cast(value=max_value)
numba.core.ssa - DEBUG - on stmt: return $54return_value.1
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 56
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e19f60>
numba.core.ssa - DEBUG - on stmt: $58get_iter.1 = getiter(value=it)
numba.core.ssa - DEBUG - on stmt: $phi60.0 = $58get_iter.1
numba.core.ssa - DEBUG - on stmt: jump 60
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 60
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e19f60>
numba.core.ssa - DEBUG - on stmt: $60for_iter.1 = iternext(value=$phi60.0)
numba.core.ssa - DEBUG - on stmt: $60for_iter.2 = pair_first(value=$60for_iter.1)
numba.core.ssa - DEBUG - on stmt: $60for_iter.3 = pair_second(value=$60for_iter.1)
numba.core.ssa - DEBUG - on stmt: $phi62.1 = $60for_iter.2
numba.core.ssa - DEBUG - on stmt: branch $60for_iter.3, 62, 104
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 62
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e19f60>
numba.core.ssa - DEBUG - on stmt: view = $phi62.1
numba.core.ssa - DEBUG - on stmt: $66load_method.3 = getattr(value=view, attr=item)
numba.core.ssa - DEBUG - on stmt: v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $72load_deref.5 = freevar(pre_return_func: <ufunc 'isnan'>)
numba.core.ssa - DEBUG - on stmt: $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: bool78 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $78pred, 80, 88
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e19f60>
numba.core.ssa - DEBUG - on stmt: $86return_value.2 = cast(value=v)
numba.core.ssa - DEBUG - on stmt: return $86return_value.2
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 88
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e19f60>
numba.core.ssa - DEBUG - on stmt: $88load_deref.1 = freevar(comparator: <function max_comparator at 0x708808b2fb50>)
numba.core.ssa - DEBUG - on stmt: $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: bool96 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $96pred, 98, 102
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e19f60>
numba.core.ssa - DEBUG - on stmt: max_value = v
numba.core.ssa - DEBUG - replaced with: max_value.1 = v
numba.core.ssa - DEBUG - on stmt: jump 102
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 102
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e19f60>
numba.core.ssa - DEBUG - on stmt: jump 60
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 104
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e19f60>
numba.core.ssa - DEBUG - on stmt: $106return_value.1 = cast(value=max_value)
numba.core.ssa - DEBUG - on stmt: return $106return_value.1
numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {20: [<numba.core.ir.Assign object at 0x708752f87b20>],
             98: [<numba.core.ir.Assign object at 0x7087531a41f0>]})
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e19f60>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: $4load_attr.1 = getattr(value=a, attr=size)
numba.core.ssa - DEBUG - on stmt: $const6.2 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $8compare_op.3 = $4load_attr.1 == $const6.2
numba.core.ssa - DEBUG - on stmt: bool10 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $10pred, 12, 20
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 12
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e19f60>
numba.core.ssa - DEBUG - on stmt: $12load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const14.1 = const(str, zero-size array to reduction operation maximum which has no identity)
numba.core.ssa - DEBUG - on stmt: $16call_function.2 = call $12load_global.0($const14.1, func=$12load_global.0, args=[Var($const14.1, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 20
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e19f60>
numba.core.ssa - DEBUG - on stmt: $20load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $22load_method.1 = getattr(value=$20load_global.0, attr=nditer)
numba.core.ssa - DEBUG - on stmt: it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $30load_global.4 = global(next: <built-in function next>)
numba.core.ssa - DEBUG - on stmt: $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $36load_method.7 = getattr(value=$34call_function.6, attr=take)
numba.core.ssa - DEBUG - on stmt: $const38.8 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $44load_deref.10 = freevar(pre_return_func: <ufunc 'isnan'>)
numba.core.ssa - DEBUG - on stmt: $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - find_def var='max_value' stmt=$48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $50pred, 52, 56
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 52
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e19f60>
numba.core.ssa - DEBUG - on stmt: $54return_value.1 = cast(value=max_value)
numba.core.ssa - DEBUG - find_def var='max_value' stmt=$54return_value.1 = cast(value=max_value)
numba.core.ssa - DEBUG - find_def_from_top label 52
numba.core.ssa - DEBUG - idom 20 from label 52
numba.core.ssa - DEBUG - find_def_from_bottom label 20
numba.core.ssa - DEBUG - on stmt: return $54return_value.1
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 56
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e19f60>
numba.core.ssa - DEBUG - on stmt: $58get_iter.1 = getiter(value=it)
numba.core.ssa - DEBUG - on stmt: $phi60.0 = $58get_iter.1
numba.core.ssa - DEBUG - on stmt: jump 60
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 60
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e19f60>
numba.core.ssa - DEBUG - on stmt: $60for_iter.1 = iternext(value=$phi60.0)
numba.core.ssa - DEBUG - on stmt: $60for_iter.2 = pair_first(value=$60for_iter.1)
numba.core.ssa - DEBUG - on stmt: $60for_iter.3 = pair_second(value=$60for_iter.1)
numba.core.ssa - DEBUG - on stmt: $phi62.1 = $60for_iter.2
numba.core.ssa - DEBUG - on stmt: branch $60for_iter.3, 62, 104
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 62
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e19f60>
numba.core.ssa - DEBUG - on stmt: view = $phi62.1
numba.core.ssa - DEBUG - on stmt: $66load_method.3 = getattr(value=view, attr=item)
numba.core.ssa - DEBUG - on stmt: v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $72load_deref.5 = freevar(pre_return_func: <ufunc 'isnan'>)
numba.core.ssa - DEBUG - on stmt: $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: bool78 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $78pred, 80, 88
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e19f60>
numba.core.ssa - DEBUG - on stmt: $86return_value.2 = cast(value=v)
numba.core.ssa - DEBUG - on stmt: return $86return_value.2
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 88
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e19f60>
numba.core.ssa - DEBUG - on stmt: $88load_deref.1 = freevar(comparator: <function max_comparator at 0x708808b2fb50>)
numba.core.ssa - DEBUG - on stmt: $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - find_def var='max_value' stmt=$94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - find_def_from_top label 88
numba.core.ssa - DEBUG - idom 62 from label 88
numba.core.ssa - DEBUG - find_def_from_bottom label 62
numba.core.ssa - DEBUG - find_def_from_top label 62
numba.core.ssa - DEBUG - idom 60 from label 62
numba.core.ssa - DEBUG - find_def_from_bottom label 60
numba.core.ssa - DEBUG - find_def_from_top label 60
numba.core.ssa - DEBUG - insert phi node max_value.2 = phi(incoming_values=[], incoming_blocks=[]) at 60
numba.core.ssa - DEBUG - find_def_from_bottom label 56
numba.core.ssa - DEBUG - find_def_from_top label 56
numba.core.ssa - DEBUG - idom 20 from label 56
numba.core.ssa - DEBUG - find_def_from_bottom label 20
numba.core.ssa - DEBUG - incoming_def max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - find_def_from_bottom label 102
numba.core.ssa - DEBUG - find_def_from_top label 102
numba.core.ssa - DEBUG - insert phi node max_value.3 = phi(incoming_values=[], incoming_blocks=[]) at 102
numba.core.ssa - DEBUG - find_def_from_bottom label 88
numba.core.ssa - DEBUG - find_def_from_top label 88
numba.core.ssa - DEBUG - idom 62 from label 88
numba.core.ssa - DEBUG - find_def_from_bottom label 62
numba.core.ssa - DEBUG - find_def_from_top label 62
numba.core.ssa - DEBUG - idom 60 from label 62
numba.core.ssa - DEBUG - find_def_from_bottom label 60
numba.core.ssa - DEBUG - incoming_def max_value.2 = phi(incoming_values=[Var(max_value, arraymath.py:576)], incoming_blocks=[56])
numba.core.ssa - DEBUG - find_def_from_bottom label 98
numba.core.ssa - DEBUG - incoming_def max_value.1 = v
numba.core.ssa - DEBUG - incoming_def max_value.3 = phi(incoming_values=[Var(max_value.2, arraymath.py:584), Var(max_value.1, arraymath.py:585)], incoming_blocks=[88, 98])
numba.core.ssa - DEBUG - replaced with: $94call_function.4 = call $88load_deref.1(v, max_value.2, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value.2, arraymath.py:584)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: bool96 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $96pred, 98, 102
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e19f60>
numba.core.ssa - DEBUG - on stmt: max_value.1 = v
numba.core.ssa - DEBUG - on stmt: jump 102
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 102
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e19f60>
numba.core.ssa - DEBUG - on stmt: jump 60
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 104
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e19f60>
numba.core.ssa - DEBUG - on stmt: $106return_value.1 = cast(value=max_value)
numba.core.ssa - DEBUG - find_def var='max_value' stmt=$106return_value.1 = cast(value=max_value)
numba.core.ssa - DEBUG - find_def_from_top label 104
numba.core.ssa - DEBUG - idom 60 from label 104
numba.core.ssa - DEBUG - find_def_from_bottom label 60
numba.core.ssa - DEBUG - replaced with: $106return_value.1 = cast(value=max_value.2)
numba.core.ssa - DEBUG - on stmt: return $106return_value.1
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=4691)
           2	LOAD_FAST(arg=1, lineno=4692)
           4	LOAD_FAST(arg=0, lineno=4692)
           6	LOAD_ATTR(arg=0, lineno=4692)
           8	LOAD_CONST(arg=1, lineno=4692)
          10	BINARY_SUBTRACT(arg=None, lineno=4692)
          12	COMPARE_OP(arg=4, lineno=4692)
          14	POP_JUMP_IF_TRUE(arg=15, lineno=4692)
          16	LOAD_FAST(arg=1, lineno=4692)
          18	LOAD_FAST(arg=0, lineno=4692)
          20	LOAD_ATTR(arg=0, lineno=4692)
          22	UNARY_NEGATIVE(arg=None, lineno=4692)
          24	COMPARE_OP(arg=0, lineno=4692)
          26	POP_JUMP_IF_FALSE(arg=19, lineno=4692)
>         28	LOAD_GLOBAL(arg=1, lineno=4693)
          30	LOAD_CONST(arg=2, lineno=4693)
          32	CALL_FUNCTION(arg=1, lineno=4693)
          34	RAISE_VARARGS(arg=1, lineno=4693)
>         36	LOAD_FAST(arg=0, lineno=4694)
          38	LOAD_METHOD(arg=2, lineno=4694)
          40	CALL_METHOD(arg=0, lineno=4694)
          42	LOAD_FAST(arg=1, lineno=4694)
          44	BINARY_SUBSCR(arg=None, lineno=4694)
          46	RETURN_VALUE(arg=None, lineno=4694)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=4691)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=1, lineno=4692)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$indices2.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$indices2.0', '$a4.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_CONST(arg=1, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$indices2.0', '$6load_attr.2']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=BINARY_SUBTRACT(arg=None, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$indices2.0', '$6load_attr.2', '$const8.3']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=COMPARE_OP(arg=4, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$indices2.0', '$10binary_subtract.4']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=POP_JUMP_IF_TRUE(arg=15, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$12compare_op.5']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=16, stack=(), blockstack=(), npush=0), Edge(pc=28, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=16 nstack_initial=0), State(pc_initial=28 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=16 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=4692)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$indices16.0']
numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_ATTR(arg=0, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$indices16.0', '$a18.1']
numba.core.byteflow - DEBUG - dispatch pc=22, inst=UNARY_NEGATIVE(arg=None, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$indices16.0', '$20load_attr.2']
numba.core.byteflow - DEBUG - dispatch pc=24, inst=COMPARE_OP(arg=0, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$indices16.0', '$22unary_negative.3']
numba.core.byteflow - DEBUG - dispatch pc=26, inst=POP_JUMP_IF_FALSE(arg=19, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$24compare_op.4']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=28, stack=(), blockstack=(), npush=0), Edge(pc=36, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=28 nstack_initial=0), State(pc_initial=28 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=28 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=28, inst=LOAD_GLOBAL(arg=1, lineno=4693)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=2, lineno=4693)
numba.core.byteflow - DEBUG - stack ['$28load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=32, inst=CALL_FUNCTION(arg=1, lineno=4693)
numba.core.byteflow - DEBUG - stack ['$28load_global.0', '$const30.1']
numba.core.byteflow - DEBUG - dispatch pc=34, inst=RAISE_VARARGS(arg=1, lineno=4693)
numba.core.byteflow - DEBUG - stack ['$32call_function.2']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=28 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=36 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=36 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=4694)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_METHOD(arg=2, lineno=4694)
numba.core.byteflow - DEBUG - stack ['$a36.0']
numba.core.byteflow - DEBUG - dispatch pc=40, inst=CALL_METHOD(arg=0, lineno=4694)
numba.core.byteflow - DEBUG - stack ['$38load_method.1']
numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_FAST(arg=1, lineno=4694)
numba.core.byteflow - DEBUG - stack ['$40call_method.2']
numba.core.byteflow - DEBUG - dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=4694)
numba.core.byteflow - DEBUG - stack ['$40call_method.2', '$indices42.3']
numba.core.byteflow - DEBUG - dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=4694)
numba.core.byteflow - DEBUG - stack ['$44binary_subscr.4']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=16 nstack_initial=0): set(),
             State(pc_initial=28 nstack_initial=0): set(),
             State(pc_initial=36 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - keep phismap: {}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$indices2.0'}), (4, {'res': '$a4.1'}), (6, {'item': '$a4.1', 'res': '$6load_attr.2'}), (8, {'res': '$const8.3'}), (10, {'lhs': '$6load_attr.2', 'rhs': '$const8.3', 'res': '$10binary_subtract.4'}), (12, {'lhs': '$indices2.0', 'rhs': '$10binary_subtract.4', 'res': '$12compare_op.5'}), (14, {'pred': '$12compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: (), 28: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=16 nstack_initial=0):
AdaptBlockInfo(insts=((16, {'res': '$indices16.0'}), (18, {'res': '$a18.1'}), (20, {'item': '$a18.1', 'res': '$20load_attr.2'}), (22, {'value': '$20load_attr.2', 'res': '$22unary_negative.3'}), (24, {'lhs': '$indices16.0', 'rhs': '$22unary_negative.3', 'res': '$24compare_op.4'}), (26, {'pred': '$24compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: (), 36: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=28 nstack_initial=0):
AdaptBlockInfo(insts=((28, {'res': '$28load_global.0'}), (30, {'res': '$const30.1'}), (32, {'func': '$28load_global.0', 'args': ['$const30.1'], 'res': '$32call_function.2'}), (34, {'exc': '$32call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'res': '$a36.0'}), (38, {'item': '$a36.0', 'res': '$38load_method.1'}), (40, {'func': '$38load_method.1', 'args': [], 'res': '$40call_method.2'}), (42, {'res': '$indices42.3'}), (44, {'index': '$indices42.3', 'target': '$40call_method.2', 'res': '$44binary_subscr.4'}), (46, {'retval': '$44binary_subscr.4', 'castval': '$46return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $const8.3 = const(int, 1)                ['$const8.3']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    branch $14pred, 28, 16                   ['$14pred']
label 16:
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
    branch $26pred, 28, 36                   ['$26pred']
label 28:
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $const30.1 = const(str, Index out of bounds) ['$const30.1']
    $32call_function.2 = call $28load_global.0($const30.1, func=$28load_global.0, args=[Var($const30.1, arrayobj.py:4693)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1']
    raise $32call_function.2                 ['$32call_function.2']
label 36:
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087531a4cd0>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: indices = arg(1, name=indices)
numba.core.ssa - DEBUG - on stmt: $6load_attr.2 = getattr(value=a, attr=size)
numba.core.ssa - DEBUG - on stmt: $const8.3 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $10binary_subtract.4 = $6load_attr.2 - $const8.3
numba.core.ssa - DEBUG - on stmt: $12compare_op.5 = indices > $10binary_subtract.4
numba.core.ssa - DEBUG - on stmt: bool14 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $14pred, 28, 16
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 16
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087531a4cd0>
numba.core.ssa - DEBUG - on stmt: $20load_attr.2 = getattr(value=a, attr=size)
numba.core.ssa - DEBUG - on stmt: $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2)
numba.core.ssa - DEBUG - on stmt: $24compare_op.4 = indices < $22unary_negative.3
numba.core.ssa - DEBUG - on stmt: bool26 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $26pred, 28, 36
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 28
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087531a4cd0>
numba.core.ssa - DEBUG - on stmt: $28load_global.0 = global(IndexError: <class 'IndexError'>)
numba.core.ssa - DEBUG - on stmt: $const30.1 = const(str, Index out of bounds)
numba.core.ssa - DEBUG - on stmt: $32call_function.2 = call $28load_global.0($const30.1, func=$28load_global.0, args=[Var($const30.1, arrayobj.py:4693)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'IndexError'>('Index out of bounds')
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 36
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087531a4cd0>
numba.core.ssa - DEBUG - on stmt: $38load_method.1 = getattr(value=a, attr=ravel)
numba.core.ssa - DEBUG - on stmt: $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $46return_value.5 = cast(value=$44binary_subscr.4)
numba.core.ssa - DEBUG - on stmt: return $46return_value.5
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10binary_subtract.4': [(<numba.core.ir.Assign object at 0x7087531931c0>,
                                       0)],
             '$12compare_op.5': [(<numba.core.ir.Assign object at 0x7087531904f0>,
                                  0)],
             '$14pred': [(<numba.core.ir.Assign object at 0x708753193d60>, 0)],
             '$20load_attr.2': [(<numba.core.ir.Assign object at 0x7087531915a0>,
                                 16)],
             '$22unary_negative.3': [(<numba.core.ir.Assign object at 0x708753193580>,
                                      16)],
             '$24compare_op.4': [(<numba.core.ir.Assign object at 0x708753193640>,
                                  16)],
             '$26pred': [(<numba.core.ir.Assign object at 0x7087531917e0>, 16)],
             '$28load_global.0': [(<numba.core.ir.Assign object at 0x708752f43430>,
                                   28)],
             '$32call_function.2': [(<numba.core.ir.Assign object at 0x708752f43010>,
                                     28)],
             '$38load_method.1': [(<numba.core.ir.Assign object at 0x708752f41780>,
                                   36)],
             '$40call_method.2': [(<numba.core.ir.Assign object at 0x708752f42d40>,
                                   36)],
             '$44binary_subscr.4': [(<numba.core.ir.Assign object at 0x708752f42d70>,
                                     36)],
             '$46return_value.5': [(<numba.core.ir.Assign object at 0x708752f42020>,
                                    36)],
             '$6load_attr.2': [(<numba.core.ir.Assign object at 0x7087531a6ce0>,
                                0)],
             '$const30.1': [(<numba.core.ir.Assign object at 0x708752f42980>,
                             28)],
             '$const8.3': [(<numba.core.ir.Assign object at 0x708753193940>,
                            0)],
             'a': [(<numba.core.ir.Assign object at 0x7087531a5480>, 0)],
             'bool14': [(<numba.core.ir.Assign object at 0x708753190760>, 0)],
             'bool26': [(<numba.core.ir.Assign object at 0x708753193f70>, 16)],
             'indices': [(<numba.core.ir.Assign object at 0x7087531a6f20>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7087531a4cd0>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2230)
           2	LOAD_FAST(arg=0, lineno=2232)
           4	LOAD_METHOD(arg=0, lineno=2232)
           6	LOAD_FAST(arg=0, lineno=2232)
           8	LOAD_ATTR(arg=1, lineno=2232)
          10	CALL_METHOD(arg=1, lineno=2232)
          12	RETURN_VALUE(arg=None, lineno=2232)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2230)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2232)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_METHOD(arg=0, lineno=2232)
numba.core.byteflow - DEBUG - stack ['$ary2.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=2232)
numba.core.byteflow - DEBUG - stack ['$4load_method.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_ATTR(arg=1, lineno=2232)
numba.core.byteflow - DEBUG - stack ['$4load_method.1', '$ary6.2']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=CALL_METHOD(arg=1, lineno=2232)
numba.core.byteflow - DEBUG - stack ['$4load_method.1', '$8load_attr.3']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=2232)
numba.core.byteflow - DEBUG - stack ['$10call_method.4']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - keep phismap: {}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$ary2.0'}), (4, {'item': '$ary2.0', 'res': '$4load_method.1'}), (6, {'res': '$ary6.2'}), (8, {'item': '$ary6.2', 'res': '$8load_attr.3'}), (10, {'func': '$4load_method.1', 'args': ['$8load_attr.3'], 'res': '$10call_method.4'}), (12, {'retval': '$10call_method.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    ary = arg(0, name=ary)                   ['ary']
    $4load_method.1 = getattr(value=ary, attr=reshape) ['$4load_method.1', 'ary']
    $8load_attr.3 = getattr(value=ary, attr=size) ['$8load_attr.3', 'ary']
    $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2232)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', '$8load_attr.3']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752d81c90>
numba.core.ssa - DEBUG - on stmt: ary = arg(0, name=ary)
numba.core.ssa - DEBUG - on stmt: $4load_method.1 = getattr(value=ary, attr=reshape)
numba.core.ssa - DEBUG - on stmt: $8load_attr.3 = getattr(value=ary, attr=size)
numba.core.ssa - DEBUG - on stmt: $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2232)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $12return_value.5 = cast(value=$10call_method.4)
numba.core.ssa - DEBUG - on stmt: return $12return_value.5
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10call_method.4': [(<numba.core.ir.Assign object at 0x708752d81960>,
                                   0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x708752d82ce0>,
                                    0)],
             '$4load_method.1': [(<numba.core.ir.Assign object at 0x7087531b66b0>,
                                  0)],
             '$8load_attr.3': [(<numba.core.ir.Assign object at 0x708752d80a60>,
                                0)],
             'ary': [(<numba.core.ir.Assign object at 0x7087531b66e0>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x708752d81c90>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=481)
           2	LOAD_FAST(arg=0, lineno=483)
           4	LOAD_FAST(arg=1, lineno=483)
           6	COMPARE_OP(arg=4, lineno=483)
           8	RETURN_VALUE(arg=None, lineno=483)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=481)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=483)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=483)
numba.core.byteflow - DEBUG - stack ['$a2.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=COMPARE_OP(arg=4, lineno=483)
numba.core.byteflow - DEBUG - stack ['$a2.0', '$min_val4.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=RETURN_VALUE(arg=None, lineno=483)
numba.core.byteflow - DEBUG - stack ['$6compare_op.2']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - keep phismap: {}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$a2.0'}), (4, {'res': '$min_val4.1'}), (6, {'lhs': '$a2.0', 'rhs': '$min_val4.1', 'res': '$6compare_op.2'}), (8, {'retval': '$6compare_op.2', 'castval': '$8return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    min_val = arg(1, name=min_val)           ['min_val']
    $6compare_op.2 = a > min_val             ['$6compare_op.2', 'a', 'min_val']
    $8return_value.3 = cast(value=$6compare_op.2) ['$6compare_op.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752ef2650>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: min_val = arg(1, name=min_val)
numba.core.ssa - DEBUG - on stmt: $6compare_op.2 = a > min_val
numba.core.ssa - DEBUG - on stmt: $8return_value.3 = cast(value=$6compare_op.2)
numba.core.ssa - DEBUG - on stmt: return $8return_value.3
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$6compare_op.2': [(<numba.core.ir.Assign object at 0x708752ef3eb0>,
                                 0)],
             '$8return_value.3': [(<numba.core.ir.Assign object at 0x708752ef17b0>,
                                   0)],
             'a': [(<numba.core.ir.Assign object at 0x708752ef0a90>, 0)],
             'min_val': [(<numba.core.ir.Assign object at 0x708752ef0730>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x708752ef2650>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=437)
           2	LOAD_DEREF(arg=0, lineno=440)
           4	STORE_FAST(arg=1, lineno=440)
           6	LOAD_GLOBAL(arg=0, lineno=441)
           8	LOAD_METHOD(arg=1, lineno=441)
          10	LOAD_FAST(arg=0, lineno=441)
          12	CALL_METHOD(arg=1, lineno=441)
          14	GET_ITER(arg=None, lineno=441)
>         16	FOR_ITER(arg=8, lineno=441)
          18	STORE_FAST(arg=2, lineno=441)
          20	LOAD_FAST(arg=1, lineno=442)
          22	LOAD_FAST(arg=2, lineno=442)
          24	LOAD_METHOD(arg=2, lineno=442)
          26	CALL_METHOD(arg=0, lineno=442)
          28	INPLACE_ADD(arg=None, lineno=442)
          30	STORE_FAST(arg=1, lineno=442)
          32	JUMP_ABSOLUTE(arg=9, lineno=442)
>         34	LOAD_FAST(arg=1, lineno=443)
          36	LOAD_FAST(arg=0, lineno=443)
          38	LOAD_ATTR(arg=3, lineno=443)
          40	BINARY_TRUE_DIVIDE(arg=None, lineno=443)
          42	RETURN_VALUE(arg=None, lineno=443)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=437)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_DEREF(arg=0, lineno=440)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=STORE_FAST(arg=1, lineno=440)
numba.core.byteflow - DEBUG - stack ['$2load_deref.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_GLOBAL(arg=0, lineno=441)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_METHOD(arg=1, lineno=441)
numba.core.byteflow - DEBUG - stack ['$6load_global.1']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=441)
numba.core.byteflow - DEBUG - stack ['$8load_method.2']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=CALL_METHOD(arg=1, lineno=441)
numba.core.byteflow - DEBUG - stack ['$8load_method.2', '$a10.3']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=GET_ITER(arg=None, lineno=441)
numba.core.byteflow - DEBUG - stack ['$12call_method.4']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=16, stack=('$14get_iter.5',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=16 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi16.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=16 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=16, inst=FOR_ITER(arg=8, lineno=441)
numba.core.byteflow - DEBUG - stack ['$phi16.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=34, stack=(), blockstack=(), npush=0), Edge(pc=18, stack=('$phi16.0', '$16for_iter.2'), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=34 nstack_initial=0), State(pc_initial=18 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=34 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=34, inst=LOAD_FAST(arg=1, lineno=443)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=443)
numba.core.byteflow - DEBUG - stack ['$c34.0']
numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_ATTR(arg=3, lineno=443)
numba.core.byteflow - DEBUG - stack ['$c34.0', '$a36.1']
numba.core.byteflow - DEBUG - dispatch pc=40, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=443)
numba.core.byteflow - DEBUG - stack ['$c34.0', '$38load_attr.2']
numba.core.byteflow - DEBUG - dispatch pc=42, inst=RETURN_VALUE(arg=None, lineno=443)
numba.core.byteflow - DEBUG - stack ['$40binary_true_divide.3']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=18 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: ['$phi18.0', '$phi18.1']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=18 nstack_initial=2)
numba.core.byteflow - DEBUG - dispatch pc=18, inst=STORE_FAST(arg=2, lineno=441)
numba.core.byteflow - DEBUG - stack ['$phi18.0', '$phi18.1']
numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=1, lineno=442)
numba.core.byteflow - DEBUG - stack ['$phi18.0']
numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=2, lineno=442)
numba.core.byteflow - DEBUG - stack ['$phi18.0', '$c20.2']
numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_METHOD(arg=2, lineno=442)
numba.core.byteflow - DEBUG - stack ['$phi18.0', '$c20.2', '$v22.3']
numba.core.byteflow - DEBUG - dispatch pc=26, inst=CALL_METHOD(arg=0, lineno=442)
numba.core.byteflow - DEBUG - stack ['$phi18.0', '$c20.2', '$24load_method.4']
numba.core.byteflow - DEBUG - dispatch pc=28, inst=INPLACE_ADD(arg=None, lineno=442)
numba.core.byteflow - DEBUG - stack ['$phi18.0', '$c20.2', '$26call_method.5']
numba.core.byteflow - DEBUG - dispatch pc=30, inst=STORE_FAST(arg=1, lineno=442)
numba.core.byteflow - DEBUG - stack ['$phi18.0', '$28inplace_add.6']
numba.core.byteflow - DEBUG - dispatch pc=32, inst=JUMP_ABSOLUTE(arg=9, lineno=442)
numba.core.byteflow - DEBUG - stack ['$phi18.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=16, stack=('$phi18.0',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=16 nstack_initial=1)])
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=16 nstack_initial=1): {'$phi16.0'},
             State(pc_initial=18 nstack_initial=2): {'$phi18.1'},
             State(pc_initial=34 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {'$phi16.0': State(pc_initial=0 nstack_initial=0),
 '$phi18.1': State(pc_initial=16 nstack_initial=1)}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi18.0', State(pc_initial=18 nstack_initial=2))},
             '$phi18.0': {('$phi16.0', State(pc_initial=16 nstack_initial=1))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi16.0', State(pc_initial=16 nstack_initial=1))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
numba.core.byteflow - DEBUG - keep phismap: {'$phi16.0': {('$14get_iter.5', State(pc_initial=0 nstack_initial=0))},
 '$phi18.1': {('$16for_iter.2', State(pc_initial=16 nstack_initial=1))}}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi16.0': '$14get_iter.5'},
             State(pc_initial=16 nstack_initial=1): {'$phi18.1': '$16for_iter.2'}})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'value': '$2load_deref.0'}), (6, {'res': '$6load_global.1'}), (8, {'item': '$6load_global.1', 'res': '$8load_method.2'}), (10, {'res': '$a10.3'}), (12, {'func': '$8load_method.2', 'args': ['$a10.3'], 'res': '$12call_method.4'}), (14, {'value': '$12call_method.4', 'res': '$14get_iter.5'})), outgoing_phis={'$phi16.0': '$14get_iter.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: ('$14get_iter.5',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=16 nstack_initial=1):
AdaptBlockInfo(insts=((16, {'iterator': '$phi16.0', 'pair': '$16for_iter.1', 'indval': '$16for_iter.2', 'pred': '$16for_iter.3'}),), outgoing_phis={'$phi18.1': '$16for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={34: (), 18: ('$phi16.0', '$16for_iter.2')})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=18 nstack_initial=2):
AdaptBlockInfo(insts=((18, {'value': '$phi18.1'}), (20, {'res': '$c20.2'}), (22, {'res': '$v22.3'}), (24, {'item': '$v22.3', 'res': '$24load_method.4'}), (26, {'func': '$24load_method.4', 'args': [], 'res': '$26call_method.5'}), (28, {'lhs': '$c20.2', 'rhs': '$26call_method.5', 'res': '$28inplace_add.6'}), (30, {'value': '$28inplace_add.6'}), (32, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: ('$phi18.0',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=34 nstack_initial=0):
AdaptBlockInfo(insts=((34, {'res': '$c34.0'}), (36, {'res': '$a36.1'}), (38, {'item': '$a36.1', 'res': '$38load_attr.2'}), (40, {'lhs': '$c34.0', 'rhs': '$38load_attr.2', 'res': '$40binary_true_divide.3'}), (42, {'retval': '$40binary_true_divide.3', 'castval': '$42return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    c = freevar(acc_init: 0.0)               ['c']
    $6load_global.1 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$6load_global.1']
    $8load_method.2 = getattr(value=$6load_global.1, attr=nditer) ['$6load_global.1', '$8load_method.2']
    $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_method.4', '$8load_method.2', 'a']
    $14get_iter.5 = getiter(value=$12call_method.4) ['$12call_method.4', '$14get_iter.5']
    $phi16.0 = $14get_iter.5                 ['$14get_iter.5', '$phi16.0']
    jump 16                                  []
label 16:
    $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
    $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
    $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
    $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
    branch $16for_iter.3, 18, 34             ['$16for_iter.3']
label 18:
    v = $phi18.1                             ['$phi18.1', 'v']
    $24load_method.4 = getattr(value=v, attr=item) ['$24load_method.4', 'v']
    $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_method.4', '$26call_method.5']
    $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined) ['$26call_method.5', '$28inplace_add.6', 'c']
    c = $28inplace_add.6                     ['$28inplace_add.6', 'c']
    jump 16                                  []
label 34:
    $38load_attr.2 = getattr(value=a, attr=size) ['$38load_attr.2', 'a']
    $40binary_true_divide.3 = c / $38load_attr.2 ['$38load_attr.2', '$40binary_true_divide.3', 'c']
    $42return_value.4 = cast(value=$40binary_true_divide.3) ['$40binary_true_divide.3', '$42return_value.4']
    return $42return_value.4                 ['$42return_value.4']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752d54970>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: c = freevar(acc_init: 0.0)
numba.core.ssa - DEBUG - on stmt: $6load_global.1 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $8load_method.2 = getattr(value=$6load_global.1, attr=nditer)
numba.core.ssa - DEBUG - on stmt: $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $14get_iter.5 = getiter(value=$12call_method.4)
numba.core.ssa - DEBUG - on stmt: $phi16.0 = $14get_iter.5
numba.core.ssa - DEBUG - on stmt: jump 16
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 16
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752d54970>
numba.core.ssa - DEBUG - on stmt: $16for_iter.1 = iternext(value=$phi16.0)
numba.core.ssa - DEBUG - on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
numba.core.ssa - DEBUG - on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
numba.core.ssa - DEBUG - on stmt: $phi18.1 = $16for_iter.2
numba.core.ssa - DEBUG - on stmt: branch $16for_iter.3, 18, 34
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 18
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752d54970>
numba.core.ssa - DEBUG - on stmt: v = $phi18.1
numba.core.ssa - DEBUG - on stmt: $24load_method.4 = getattr(value=v, attr=item)
numba.core.ssa - DEBUG - on stmt: $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: c = $28inplace_add.6
numba.core.ssa - DEBUG - on stmt: jump 16
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 34
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752d54970>
numba.core.ssa - DEBUG - on stmt: $38load_attr.2 = getattr(value=a, attr=size)
numba.core.ssa - DEBUG - on stmt: $40binary_true_divide.3 = c / $38load_attr.2
numba.core.ssa - DEBUG - on stmt: $42return_value.4 = cast(value=$40binary_true_divide.3)
numba.core.ssa - DEBUG - on stmt: return $42return_value.4
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$12call_method.4': [(<numba.core.ir.Assign object at 0x708752b1e860>,
                                   0)],
             '$14get_iter.5': [(<numba.core.ir.Assign object at 0x708752b1c640>,
                                0)],
             '$16for_iter.1': [(<numba.core.ir.Assign object at 0x708752b1d4e0>,
                                16)],
             '$16for_iter.2': [(<numba.core.ir.Assign object at 0x708752b1e6e0>,
                                16)],
             '$16for_iter.3': [(<numba.core.ir.Assign object at 0x708752b1d1b0>,
                                16)],
             '$24load_method.4': [(<numba.core.ir.Assign object at 0x708752b1d3c0>,
                                   18)],
             '$26call_method.5': [(<numba.core.ir.Assign object at 0x708752b1ed40>,
                                   18)],
             '$28inplace_add.6': [(<numba.core.ir.Assign object at 0x708752b1c370>,
                                   18)],
             '$38load_attr.2': [(<numba.core.ir.Assign object at 0x708752b1faf0>,
                                 34)],
             '$40binary_true_divide.3': [(<numba.core.ir.Assign object at 0x708752b1f760>,
                                          34)],
             '$42return_value.4': [(<numba.core.ir.Assign object at 0x708752b1fb50>,
                                    34)],
             '$6load_global.1': [(<numba.core.ir.Assign object at 0x708752b1eaa0>,
                                  0)],
             '$8load_method.2': [(<numba.core.ir.Assign object at 0x708752b1f070>,
                                  0)],
             '$phi16.0': [(<numba.core.ir.Assign object at 0x708752b1e2c0>, 0)],
             '$phi18.1': [(<numba.core.ir.Assign object at 0x708752b1caf0>,
                           16)],
             'a': [(<numba.core.ir.Assign object at 0x708752b1e380>, 0)],
             'c': [(<numba.core.ir.Assign object at 0x708752b1c9a0>, 0),
                   (<numba.core.ir.Assign object at 0x708752b1e950>, 18)],
             'v': [(<numba.core.ir.Assign object at 0x708752b1f0d0>, 18)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x708752d54970>
numba.core.ssa - DEBUG - Fix SSA violator on var c
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752d56410>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: c = freevar(acc_init: 0.0)
numba.core.ssa - DEBUG - first assign: c
numba.core.ssa - DEBUG - replaced with: c = freevar(acc_init: 0.0)
numba.core.ssa - DEBUG - on stmt: $6load_global.1 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $8load_method.2 = getattr(value=$6load_global.1, attr=nditer)
numba.core.ssa - DEBUG - on stmt: $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $14get_iter.5 = getiter(value=$12call_method.4)
numba.core.ssa - DEBUG - on stmt: $phi16.0 = $14get_iter.5
numba.core.ssa - DEBUG - on stmt: jump 16
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 16
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752d56410>
numba.core.ssa - DEBUG - on stmt: $16for_iter.1 = iternext(value=$phi16.0)
numba.core.ssa - DEBUG - on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
numba.core.ssa - DEBUG - on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
numba.core.ssa - DEBUG - on stmt: $phi18.1 = $16for_iter.2
numba.core.ssa - DEBUG - on stmt: branch $16for_iter.3, 18, 34
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 18
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752d56410>
numba.core.ssa - DEBUG - on stmt: v = $phi18.1
numba.core.ssa - DEBUG - on stmt: $24load_method.4 = getattr(value=v, attr=item)
numba.core.ssa - DEBUG - on stmt: $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: c = $28inplace_add.6
numba.core.ssa - DEBUG - replaced with: c.1 = $28inplace_add.6
numba.core.ssa - DEBUG - on stmt: jump 16
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 34
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752d56410>
numba.core.ssa - DEBUG - on stmt: $38load_attr.2 = getattr(value=a, attr=size)
numba.core.ssa - DEBUG - on stmt: $40binary_true_divide.3 = c / $38load_attr.2
numba.core.ssa - DEBUG - on stmt: $42return_value.4 = cast(value=$40binary_true_divide.3)
numba.core.ssa - DEBUG - on stmt: return $42return_value.4
numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x708752d57e20>],
             18: [<numba.core.ir.Assign object at 0x708752d57250>]})
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752d56410>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: c = freevar(acc_init: 0.0)
numba.core.ssa - DEBUG - on stmt: $6load_global.1 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $8load_method.2 = getattr(value=$6load_global.1, attr=nditer)
numba.core.ssa - DEBUG - on stmt: $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $14get_iter.5 = getiter(value=$12call_method.4)
numba.core.ssa - DEBUG - on stmt: $phi16.0 = $14get_iter.5
numba.core.ssa - DEBUG - on stmt: jump 16
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 16
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752d56410>
numba.core.ssa - DEBUG - on stmt: $16for_iter.1 = iternext(value=$phi16.0)
numba.core.ssa - DEBUG - on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
numba.core.ssa - DEBUG - on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
numba.core.ssa - DEBUG - on stmt: $phi18.1 = $16for_iter.2
numba.core.ssa - DEBUG - on stmt: branch $16for_iter.3, 18, 34
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 18
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752d56410>
numba.core.ssa - DEBUG - on stmt: v = $phi18.1
numba.core.ssa - DEBUG - on stmt: $24load_method.4 = getattr(value=v, attr=item)
numba.core.ssa - DEBUG - on stmt: $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def var='c' stmt=$28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def_from_top label 18
numba.core.ssa - DEBUG - idom 16 from label 18
numba.core.ssa - DEBUG - find_def_from_bottom label 16
numba.core.ssa - DEBUG - find_def_from_top label 16
numba.core.ssa - DEBUG - insert phi node c.2 = phi(incoming_values=[], incoming_blocks=[]) at 16
numba.core.ssa - DEBUG - find_def_from_bottom label 0
numba.core.ssa - DEBUG - incoming_def c = freevar(acc_init: 0.0)
numba.core.ssa - DEBUG - find_def_from_bottom label 18
numba.core.ssa - DEBUG - incoming_def c.1 = $28inplace_add.6
numba.core.ssa - DEBUG - replaced with: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c.2, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: c.1 = $28inplace_add.6
numba.core.ssa - DEBUG - on stmt: jump 16
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 34
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752d56410>
numba.core.ssa - DEBUG - on stmt: $38load_attr.2 = getattr(value=a, attr=size)
numba.core.ssa - DEBUG - on stmt: $40binary_true_divide.3 = c / $38load_attr.2
numba.core.ssa - DEBUG - find_def var='c' stmt=$40binary_true_divide.3 = c / $38load_attr.2
numba.core.ssa - DEBUG - find_def_from_top label 34
numba.core.ssa - DEBUG - idom 16 from label 34
numba.core.ssa - DEBUG - find_def_from_bottom label 16
numba.core.ssa - DEBUG - replaced with: $40binary_true_divide.3 = c.2 / $38load_attr.2
numba.core.ssa - DEBUG - on stmt: $42return_value.4 = cast(value=$40binary_true_divide.3)
numba.core.ssa - DEBUG - on stmt: return $42return_value.4
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1209)
           2	LOAD_FAST(arg=0, lineno=1221)
           4	LOAD_CONST(arg=1, lineno=1221)
           6	BINARY_SUBSCR(arg=None, lineno=1221)
           8	LOAD_GLOBAL(arg=0, lineno=1221)
          10	LOAD_METHOD(arg=1, lineno=1221)
          12	LOAD_FAST(arg=0, lineno=1221)
          14	LOAD_CONST(arg=2, lineno=1221)
          16	LOAD_GLOBAL(arg=2, lineno=1221)
          18	LOAD_FAST(arg=2, lineno=1221)
          20	LOAD_FAST(arg=0, lineno=1221)
          22	LOAD_ATTR(arg=3, lineno=1221)
          24	LOAD_CONST(arg=1, lineno=1221)
          26	BINARY_SUBSCR(arg=None, lineno=1221)
          28	CALL_FUNCTION(arg=2, lineno=1221)
          30	BUILD_SLICE(arg=2, lineno=1221)
          32	BINARY_SUBSCR(arg=None, lineno=1221)
          34	CALL_METHOD(arg=1, lineno=1221)
          36	COMPARE_OP(arg=5, lineno=1221)
          38	LOAD_FAST(arg=7, lineno=1221)
          40	LOAD_CONST(arg=1, lineno=1221)
          42	STORE_SUBSCR(arg=None, lineno=1221)
          44	LOAD_FAST(arg=7, lineno=1222)
          46	LOAD_CONST(arg=1, lineno=1222)
          48	DUP_TOP_TWO(arg=None, lineno=1222)
          50	BINARY_SUBSCR(arg=None, lineno=1222)
          52	LOAD_FAST(arg=0, lineno=1222)
          54	LOAD_CONST(arg=1, lineno=1222)
          56	BINARY_SUBSCR(arg=None, lineno=1222)
          58	LOAD_GLOBAL(arg=0, lineno=1222)
          60	LOAD_METHOD(arg=4, lineno=1222)
          62	LOAD_FAST(arg=0, lineno=1222)
          64	LOAD_CONST(arg=2, lineno=1222)
          66	LOAD_GLOBAL(arg=2, lineno=1222)
          68	LOAD_FAST(arg=4, lineno=1222)
          70	LOAD_FAST(arg=0, lineno=1222)
          72	LOAD_ATTR(arg=3, lineno=1222)
          74	LOAD_CONST(arg=1, lineno=1222)
          76	BINARY_SUBSCR(arg=None, lineno=1222)
          78	CALL_FUNCTION(arg=2, lineno=1222)
          80	BUILD_SLICE(arg=2, lineno=1222)
          82	BINARY_SUBSCR(arg=None, lineno=1222)
          84	CALL_METHOD(arg=1, lineno=1222)
          86	LOAD_FAST(arg=5, lineno=1222)
          88	BINARY_ADD(arg=None, lineno=1222)
          90	COMPARE_OP(arg=5, lineno=1222)
          92	INPLACE_AND(arg=None, lineno=1222)
          94	ROT_THREE(arg=None, lineno=1222)
          96	STORE_SUBSCR(arg=None, lineno=1222)
          98	LOAD_FAST(arg=7, lineno=1224)
         100	LOAD_CONST(arg=1, lineno=1224)
         102	BINARY_SUBSCR(arg=None, lineno=1224)
         104	POP_JUMP_IF_FALSE(arg=59, lineno=1224)
         106	LOAD_FAST(arg=6, lineno=1225)
         108	LOAD_CONST(arg=3, lineno=1225)
         110	BINARY_ADD(arg=None, lineno=1225)
         112	STORE_FAST(arg=8, lineno=1225)
         114	JUMP_FORWARD(arg=2, lineno=1225)
>        116	LOAD_CONST(arg=3, lineno=1227)
         118	STORE_FAST(arg=8, lineno=1227)
>        120	LOAD_FAST(arg=8, lineno=1229)
         122	LOAD_FAST(arg=0, lineno=1229)
         124	LOAD_ATTR(arg=3, lineno=1229)
         126	LOAD_CONST(arg=1, lineno=1229)
         128	BINARY_SUBSCR(arg=None, lineno=1229)
         130	COMPARE_OP(arg=0, lineno=1229)
         132	POP_JUMP_IF_FALSE(arg=167, lineno=1229)
>        134	LOAD_GLOBAL(arg=0, lineno=1230)
         136	LOAD_METHOD(arg=1, lineno=1230)
         138	LOAD_FAST(arg=0, lineno=1230)
         140	LOAD_GLOBAL(arg=1, lineno=1230)
         142	LOAD_CONST(arg=1, lineno=1230)
         144	LOAD_FAST(arg=8, lineno=1230)
         146	LOAD_FAST(arg=1, lineno=1230)
         148	BINARY_SUBTRACT(arg=None, lineno=1230)
         150	CALL_FUNCTION(arg=2, lineno=1230)
         152	LOAD_GLOBAL(arg=2, lineno=1230)
         154	LOAD_FAST(arg=8, lineno=1230)
         156	LOAD_FAST(arg=2, lineno=1230)
         158	BINARY_ADD(arg=None, lineno=1230)
         160	LOAD_FAST(arg=0, lineno=1230)
         162	LOAD_ATTR(arg=3, lineno=1230)
         164	LOAD_CONST(arg=1, lineno=1230)
         166	BINARY_SUBSCR(arg=None, lineno=1230)
         168	CALL_FUNCTION(arg=2, lineno=1230)
         170	BUILD_SLICE(arg=2, lineno=1230)
         172	BINARY_SUBSCR(arg=None, lineno=1230)
         174	CALL_METHOD(arg=1, lineno=1230)
         176	STORE_FAST(arg=9, lineno=1230)
         178	LOAD_FAST(arg=0, lineno=1233)
         180	LOAD_FAST(arg=8, lineno=1233)
         182	BINARY_SUBSCR(arg=None, lineno=1233)
         184	LOAD_FAST(arg=9, lineno=1233)
         186	COMPARE_OP(arg=2, lineno=1233)
         188	LOAD_FAST(arg=7, lineno=1233)
         190	LOAD_FAST(arg=8, lineno=1233)
         192	STORE_SUBSCR(arg=None, lineno=1233)
         194	LOAD_FAST(arg=7, lineno=1235)
         196	LOAD_FAST(arg=8, lineno=1235)
         198	BINARY_SUBSCR(arg=None, lineno=1235)
         200	POP_JUMP_IF_TRUE(arg=107, lineno=1235)
         202	LOAD_FAST(arg=8, lineno=1236)
         204	LOAD_CONST(arg=3, lineno=1236)
         206	INPLACE_ADD(arg=None, lineno=1236)
         208	STORE_FAST(arg=8, lineno=1236)
         210	JUMP_ABSOLUTE(arg=61, lineno=1237)
>        212	LOAD_GLOBAL(arg=0, lineno=1239)
         214	LOAD_METHOD(arg=4, lineno=1239)
         216	LOAD_FAST(arg=0, lineno=1239)
         218	LOAD_GLOBAL(arg=1, lineno=1239)
         220	LOAD_CONST(arg=1, lineno=1239)
         222	LOAD_FAST(arg=8, lineno=1239)
         224	LOAD_FAST(arg=3, lineno=1239)
         226	BINARY_SUBTRACT(arg=None, lineno=1239)
         228	CALL_FUNCTION(arg=2, lineno=1239)
         230	LOAD_GLOBAL(arg=2, lineno=1239)
         232	LOAD_FAST(arg=8, lineno=1239)
         234	LOAD_FAST(arg=4, lineno=1239)
         236	BINARY_ADD(arg=None, lineno=1239)
         238	LOAD_FAST(arg=0, lineno=1239)
         240	LOAD_ATTR(arg=3, lineno=1239)
         242	LOAD_CONST(arg=1, lineno=1239)
         244	BINARY_SUBSCR(arg=None, lineno=1239)
         246	CALL_FUNCTION(arg=2, lineno=1239)
         248	BUILD_SLICE(arg=2, lineno=1239)
         250	BINARY_SUBSCR(arg=None, lineno=1239)
         252	CALL_METHOD(arg=1, lineno=1239)
         254	STORE_FAST(arg=10, lineno=1239)
         256	LOAD_FAST(arg=7, lineno=1240)
         258	LOAD_FAST(arg=8, lineno=1240)
         260	DUP_TOP_TWO(arg=None, lineno=1240)
         262	BINARY_SUBSCR(arg=None, lineno=1240)
         264	LOAD_FAST(arg=0, lineno=1240)
         266	LOAD_FAST(arg=8, lineno=1240)
         268	BINARY_SUBSCR(arg=None, lineno=1240)
         270	LOAD_FAST(arg=10, lineno=1240)
         272	LOAD_FAST(arg=5, lineno=1240)
         274	BINARY_ADD(arg=None, lineno=1240)
         276	COMPARE_OP(arg=5, lineno=1240)
         278	INPLACE_AND(arg=None, lineno=1240)
         280	ROT_THREE(arg=None, lineno=1240)
         282	STORE_SUBSCR(arg=None, lineno=1240)
         284	LOAD_FAST(arg=7, lineno=1242)
         286	LOAD_FAST(arg=8, lineno=1242)
         288	BINARY_SUBSCR(arg=None, lineno=1242)
         290	POP_JUMP_IF_TRUE(arg=152, lineno=1242)
         292	LOAD_FAST(arg=8, lineno=1243)
         294	LOAD_CONST(arg=3, lineno=1243)
         296	INPLACE_ADD(arg=None, lineno=1243)
         298	STORE_FAST(arg=8, lineno=1243)
         300	JUMP_ABSOLUTE(arg=61, lineno=1244)
>        302	LOAD_FAST(arg=8, lineno=1247)
         304	LOAD_FAST(arg=6, lineno=1247)
         306	LOAD_CONST(arg=3, lineno=1247)
         308	BINARY_ADD(arg=None, lineno=1247)
         310	INPLACE_ADD(arg=None, lineno=1247)
         312	STORE_FAST(arg=8, lineno=1247)
         314	LOAD_FAST(arg=8, lineno=1229)
         316	LOAD_FAST(arg=0, lineno=1229)
         318	LOAD_ATTR(arg=3, lineno=1229)
         320	LOAD_CONST(arg=1, lineno=1229)
         322	BINARY_SUBSCR(arg=None, lineno=1229)
         324	COMPARE_OP(arg=0, lineno=1229)
         326	POP_JUMP_IF_TRUE(arg=68, lineno=1229)
         328	LOAD_CONST(arg=2, lineno=1229)
         330	RETURN_VALUE(arg=None, lineno=1229)
>        332	LOAD_CONST(arg=2, lineno=1229)
         334	RETURN_VALUE(arg=None, lineno=1229)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1209)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1221)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$x2.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_GLOBAL(arg=0, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_METHOD(arg=1, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$8load_global.3']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5']
numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_GLOBAL(arg=2, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6']
numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=2, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7']
numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=0, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7', '$post_max18.8']
numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_ATTR(arg=3, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7', '$post_max18.8', '$x20.9']
numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=1, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7', '$post_max18.8', '$22load_attr.10']
numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7', '$post_max18.8', '$22load_attr.10', '$const24.11']
numba.core.byteflow - DEBUG - dispatch pc=28, inst=CALL_FUNCTION(arg=2, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7', '$post_max18.8', '$26binary_subscr.12']
numba.core.byteflow - DEBUG - dispatch pc=30, inst=BUILD_SLICE(arg=2, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$28call_function.13']
numba.core.byteflow - DEBUG - dispatch pc=32, inst=BINARY_SUBSCR(arg=None, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$30build_slice.15']
numba.core.byteflow - DEBUG - dispatch pc=34, inst=CALL_METHOD(arg=1, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$32binary_subscr.16']
numba.core.byteflow - DEBUG - dispatch pc=36, inst=COMPARE_OP(arg=5, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$34call_method.17']
numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=7, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$36compare_op.18']
numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$36compare_op.18', '$peaks38.19']
numba.core.byteflow - DEBUG - dispatch pc=42, inst=STORE_SUBSCR(arg=None, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$36compare_op.18', '$peaks38.19', '$const40.20']
numba.core.byteflow - DEBUG - dispatch pc=44, inst=LOAD_FAST(arg=7, lineno=1222)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=46, inst=LOAD_CONST(arg=1, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21']
numba.core.byteflow - DEBUG - dispatch pc=48, inst=DUP_TOP_TWO(arg=None, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22']
numba.core.byteflow - DEBUG - dispatch pc=50, inst=BINARY_SUBSCR(arg=None, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$48dup_top_two.23', '$48dup_top_two.24']
numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25']
numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$x52.26']
numba.core.byteflow - DEBUG - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$x52.26', '$const54.27']
numba.core.byteflow - DEBUG - dispatch pc=58, inst=LOAD_GLOBAL(arg=0, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28']
numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_METHOD(arg=4, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$58load_global.29']
numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=0, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30']
numba.core.byteflow - DEBUG - dispatch pc=64, inst=LOAD_CONST(arg=2, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31']
numba.core.byteflow - DEBUG - dispatch pc=66, inst=LOAD_GLOBAL(arg=2, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32']
numba.core.byteflow - DEBUG - dispatch pc=68, inst=LOAD_FAST(arg=4, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33']
numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_FAST(arg=0, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33', '$post_avg68.34']
numba.core.byteflow - DEBUG - dispatch pc=72, inst=LOAD_ATTR(arg=3, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33', '$post_avg68.34', '$x70.35']
numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_CONST(arg=1, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33', '$post_avg68.34', '$72load_attr.36']
numba.core.byteflow - DEBUG - dispatch pc=76, inst=BINARY_SUBSCR(arg=None, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33', '$post_avg68.34', '$72load_attr.36', '$const74.37']
numba.core.byteflow - DEBUG - dispatch pc=78, inst=CALL_FUNCTION(arg=2, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33', '$post_avg68.34', '$76binary_subscr.38']
numba.core.byteflow - DEBUG - dispatch pc=80, inst=BUILD_SLICE(arg=2, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$78call_function.39']
numba.core.byteflow - DEBUG - dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$80build_slice.41']
numba.core.byteflow - DEBUG - dispatch pc=84, inst=CALL_METHOD(arg=1, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$82binary_subscr.42']
numba.core.byteflow - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=5, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$84call_method.43']
numba.core.byteflow - DEBUG - dispatch pc=88, inst=BINARY_ADD(arg=None, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$84call_method.43', '$delta86.44']
numba.core.byteflow - DEBUG - dispatch pc=90, inst=COMPARE_OP(arg=5, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$88binary_add.45']
numba.core.byteflow - DEBUG - dispatch pc=92, inst=INPLACE_AND(arg=None, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$90compare_op.46']
numba.core.byteflow - DEBUG - dispatch pc=94, inst=ROT_THREE(arg=None, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$92inplace_and.47']
numba.core.byteflow - DEBUG - dispatch pc=96, inst=STORE_SUBSCR(arg=None, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$92inplace_and.47', '$peaks44.21', '$const46.22']
numba.core.byteflow - DEBUG - dispatch pc=98, inst=LOAD_FAST(arg=7, lineno=1224)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=1, lineno=1224)
numba.core.byteflow - DEBUG - stack ['$peaks98.48']
numba.core.byteflow - DEBUG - dispatch pc=102, inst=BINARY_SUBSCR(arg=None, lineno=1224)
numba.core.byteflow - DEBUG - stack ['$peaks98.48', '$const100.49']
numba.core.byteflow - DEBUG - dispatch pc=104, inst=POP_JUMP_IF_FALSE(arg=59, lineno=1224)
numba.core.byteflow - DEBUG - stack ['$102binary_subscr.50']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0), Edge(pc=116, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=116 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=106 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=106, inst=LOAD_FAST(arg=6, lineno=1225)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=3, lineno=1225)
numba.core.byteflow - DEBUG - stack ['$wait106.0']
numba.core.byteflow - DEBUG - dispatch pc=110, inst=BINARY_ADD(arg=None, lineno=1225)
numba.core.byteflow - DEBUG - stack ['$wait106.0', '$const108.1']
numba.core.byteflow - DEBUG - dispatch pc=112, inst=STORE_FAST(arg=8, lineno=1225)
numba.core.byteflow - DEBUG - stack ['$110binary_add.2']
numba.core.byteflow - DEBUG - dispatch pc=114, inst=JUMP_FORWARD(arg=2, lineno=1225)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=120, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=116 nstack_initial=0), State(pc_initial=120 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=116 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=116, inst=LOAD_CONST(arg=3, lineno=1227)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=118, inst=STORE_FAST(arg=8, lineno=1227)
numba.core.byteflow - DEBUG - stack ['$const116.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=120, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=120 nstack_initial=0), State(pc_initial=120 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=120 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=120, inst=LOAD_FAST(arg=8, lineno=1229)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=122, inst=LOAD_FAST(arg=0, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$n120.0']
numba.core.byteflow - DEBUG - dispatch pc=124, inst=LOAD_ATTR(arg=3, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$n120.0', '$x122.1']
numba.core.byteflow - DEBUG - dispatch pc=126, inst=LOAD_CONST(arg=1, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$n120.0', '$124load_attr.2']
numba.core.byteflow - DEBUG - dispatch pc=128, inst=BINARY_SUBSCR(arg=None, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$n120.0', '$124load_attr.2', '$const126.3']
numba.core.byteflow - DEBUG - dispatch pc=130, inst=COMPARE_OP(arg=0, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$n120.0', '$128binary_subscr.4']
numba.core.byteflow - DEBUG - dispatch pc=132, inst=POP_JUMP_IF_FALSE(arg=167, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$130compare_op.5']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=134, stack=(), blockstack=(), npush=0), Edge(pc=332, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=120 nstack_initial=0), State(pc_initial=134 nstack_initial=0), State(pc_initial=332 nstack_initial=0)])
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=134 nstack_initial=0), State(pc_initial=332 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=134 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=134, inst=LOAD_GLOBAL(arg=0, lineno=1230)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=136, inst=LOAD_METHOD(arg=1, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$134load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=138, inst=LOAD_FAST(arg=0, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1']
numba.core.byteflow - DEBUG - dispatch pc=140, inst=LOAD_GLOBAL(arg=1, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2']
numba.core.byteflow - DEBUG - dispatch pc=142, inst=LOAD_CONST(arg=1, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$140load_global.3']
numba.core.byteflow - DEBUG - dispatch pc=144, inst=LOAD_FAST(arg=8, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$140load_global.3', '$const142.4']
numba.core.byteflow - DEBUG - dispatch pc=146, inst=LOAD_FAST(arg=1, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$140load_global.3', '$const142.4', '$n144.5']
numba.core.byteflow - DEBUG - dispatch pc=148, inst=BINARY_SUBTRACT(arg=None, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$140load_global.3', '$const142.4', '$n144.5', '$pre_max146.6']
numba.core.byteflow - DEBUG - dispatch pc=150, inst=CALL_FUNCTION(arg=2, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$140load_global.3', '$const142.4', '$148binary_subtract.7']
numba.core.byteflow - DEBUG - dispatch pc=152, inst=LOAD_GLOBAL(arg=2, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$150call_function.8']
numba.core.byteflow - DEBUG - dispatch pc=154, inst=LOAD_FAST(arg=8, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9']
numba.core.byteflow - DEBUG - dispatch pc=156, inst=LOAD_FAST(arg=2, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$n154.10']
numba.core.byteflow - DEBUG - dispatch pc=158, inst=BINARY_ADD(arg=None, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$n154.10', '$post_max156.11']
numba.core.byteflow - DEBUG - dispatch pc=160, inst=LOAD_FAST(arg=0, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$158binary_add.12']
numba.core.byteflow - DEBUG - dispatch pc=162, inst=LOAD_ATTR(arg=3, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$158binary_add.12', '$x160.13']
numba.core.byteflow - DEBUG - dispatch pc=164, inst=LOAD_CONST(arg=1, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$158binary_add.12', '$162load_attr.14']
numba.core.byteflow - DEBUG - dispatch pc=166, inst=BINARY_SUBSCR(arg=None, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$158binary_add.12', '$162load_attr.14', '$const164.15']
numba.core.byteflow - DEBUG - dispatch pc=168, inst=CALL_FUNCTION(arg=2, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$158binary_add.12', '$166binary_subscr.16']
numba.core.byteflow - DEBUG - dispatch pc=170, inst=BUILD_SLICE(arg=2, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$168call_function.17']
numba.core.byteflow - DEBUG - dispatch pc=172, inst=BINARY_SUBSCR(arg=None, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$170build_slice.19']
numba.core.byteflow - DEBUG - dispatch pc=174, inst=CALL_METHOD(arg=1, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$172binary_subscr.20']
numba.core.byteflow - DEBUG - dispatch pc=176, inst=STORE_FAST(arg=9, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$174call_method.21']
numba.core.byteflow - DEBUG - dispatch pc=178, inst=LOAD_FAST(arg=0, lineno=1233)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=180, inst=LOAD_FAST(arg=8, lineno=1233)
numba.core.byteflow - DEBUG - stack ['$x178.22']
numba.core.byteflow - DEBUG - dispatch pc=182, inst=BINARY_SUBSCR(arg=None, lineno=1233)
numba.core.byteflow - DEBUG - stack ['$x178.22', '$n180.23']
numba.core.byteflow - DEBUG - dispatch pc=184, inst=LOAD_FAST(arg=9, lineno=1233)
numba.core.byteflow - DEBUG - stack ['$182binary_subscr.24']
numba.core.byteflow - DEBUG - dispatch pc=186, inst=COMPARE_OP(arg=2, lineno=1233)
numba.core.byteflow - DEBUG - stack ['$182binary_subscr.24', '$maxn184.25']
numba.core.byteflow - DEBUG - dispatch pc=188, inst=LOAD_FAST(arg=7, lineno=1233)
numba.core.byteflow - DEBUG - stack ['$186compare_op.26']
numba.core.byteflow - DEBUG - dispatch pc=190, inst=LOAD_FAST(arg=8, lineno=1233)
numba.core.byteflow - DEBUG - stack ['$186compare_op.26', '$peaks188.27']
numba.core.byteflow - DEBUG - dispatch pc=192, inst=STORE_SUBSCR(arg=None, lineno=1233)
numba.core.byteflow - DEBUG - stack ['$186compare_op.26', '$peaks188.27', '$n190.28']
numba.core.byteflow - DEBUG - dispatch pc=194, inst=LOAD_FAST(arg=7, lineno=1235)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=196, inst=LOAD_FAST(arg=8, lineno=1235)
numba.core.byteflow - DEBUG - stack ['$peaks194.29']
numba.core.byteflow - DEBUG - dispatch pc=198, inst=BINARY_SUBSCR(arg=None, lineno=1235)
numba.core.byteflow - DEBUG - stack ['$peaks194.29', '$n196.30']
numba.core.byteflow - DEBUG - dispatch pc=200, inst=POP_JUMP_IF_TRUE(arg=107, lineno=1235)
numba.core.byteflow - DEBUG - stack ['$198binary_subscr.31']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=202, stack=(), blockstack=(), npush=0), Edge(pc=212, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=332 nstack_initial=0), State(pc_initial=202 nstack_initial=0), State(pc_initial=212 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=332 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=332, inst=LOAD_CONST(arg=2, lineno=1229)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=334, inst=RETURN_VALUE(arg=None, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$const332.0']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=202 nstack_initial=0), State(pc_initial=212 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=202 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=202, inst=LOAD_FAST(arg=8, lineno=1236)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=204, inst=LOAD_CONST(arg=3, lineno=1236)
numba.core.byteflow - DEBUG - stack ['$n202.0']
numba.core.byteflow - DEBUG - dispatch pc=206, inst=INPLACE_ADD(arg=None, lineno=1236)
numba.core.byteflow - DEBUG - stack ['$n202.0', '$const204.1']
numba.core.byteflow - DEBUG - dispatch pc=208, inst=STORE_FAST(arg=8, lineno=1236)
numba.core.byteflow - DEBUG - stack ['$206inplace_add.2']
numba.core.byteflow - DEBUG - dispatch pc=210, inst=JUMP_ABSOLUTE(arg=61, lineno=1237)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=120, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=212 nstack_initial=0), State(pc_initial=120 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=212 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=212, inst=LOAD_GLOBAL(arg=0, lineno=1239)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=214, inst=LOAD_METHOD(arg=4, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$212load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=216, inst=LOAD_FAST(arg=0, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1']
numba.core.byteflow - DEBUG - dispatch pc=218, inst=LOAD_GLOBAL(arg=1, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2']
numba.core.byteflow - DEBUG - dispatch pc=220, inst=LOAD_CONST(arg=1, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$218load_global.3']
numba.core.byteflow - DEBUG - dispatch pc=222, inst=LOAD_FAST(arg=8, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$218load_global.3', '$const220.4']
numba.core.byteflow - DEBUG - dispatch pc=224, inst=LOAD_FAST(arg=3, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$218load_global.3', '$const220.4', '$n222.5']
numba.core.byteflow - DEBUG - dispatch pc=226, inst=BINARY_SUBTRACT(arg=None, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$218load_global.3', '$const220.4', '$n222.5', '$pre_avg224.6']
numba.core.byteflow - DEBUG - dispatch pc=228, inst=CALL_FUNCTION(arg=2, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$218load_global.3', '$const220.4', '$226binary_subtract.7']
numba.core.byteflow - DEBUG - dispatch pc=230, inst=LOAD_GLOBAL(arg=2, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$228call_function.8']
numba.core.byteflow - DEBUG - dispatch pc=232, inst=LOAD_FAST(arg=8, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9']
numba.core.byteflow - DEBUG - dispatch pc=234, inst=LOAD_FAST(arg=4, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$n232.10']
numba.core.byteflow - DEBUG - dispatch pc=236, inst=BINARY_ADD(arg=None, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$n232.10', '$post_avg234.11']
numba.core.byteflow - DEBUG - dispatch pc=238, inst=LOAD_FAST(arg=0, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$236binary_add.12']
numba.core.byteflow - DEBUG - dispatch pc=240, inst=LOAD_ATTR(arg=3, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$236binary_add.12', '$x238.13']
numba.core.byteflow - DEBUG - dispatch pc=242, inst=LOAD_CONST(arg=1, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$236binary_add.12', '$240load_attr.14']
numba.core.byteflow - DEBUG - dispatch pc=244, inst=BINARY_SUBSCR(arg=None, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$236binary_add.12', '$240load_attr.14', '$const242.15']
numba.core.byteflow - DEBUG - dispatch pc=246, inst=CALL_FUNCTION(arg=2, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$236binary_add.12', '$244binary_subscr.16']
numba.core.byteflow - DEBUG - dispatch pc=248, inst=BUILD_SLICE(arg=2, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$246call_function.17']
numba.core.byteflow - DEBUG - dispatch pc=250, inst=BINARY_SUBSCR(arg=None, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$248build_slice.19']
numba.core.byteflow - DEBUG - dispatch pc=252, inst=CALL_METHOD(arg=1, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$250binary_subscr.20']
numba.core.byteflow - DEBUG - dispatch pc=254, inst=STORE_FAST(arg=10, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$252call_method.21']
numba.core.byteflow - DEBUG - dispatch pc=256, inst=LOAD_FAST(arg=7, lineno=1240)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=258, inst=LOAD_FAST(arg=8, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22']
numba.core.byteflow - DEBUG - dispatch pc=260, inst=DUP_TOP_TWO(arg=None, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23']
numba.core.byteflow - DEBUG - dispatch pc=262, inst=BINARY_SUBSCR(arg=None, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23', '$260dup_top_two.24', '$260dup_top_two.25']
numba.core.byteflow - DEBUG - dispatch pc=264, inst=LOAD_FAST(arg=0, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26']
numba.core.byteflow - DEBUG - dispatch pc=266, inst=LOAD_FAST(arg=8, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$x264.27']
numba.core.byteflow - DEBUG - dispatch pc=268, inst=BINARY_SUBSCR(arg=None, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$x264.27', '$n266.28']
numba.core.byteflow - DEBUG - dispatch pc=270, inst=LOAD_FAST(arg=10, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$268binary_subscr.29']
numba.core.byteflow - DEBUG - dispatch pc=272, inst=LOAD_FAST(arg=5, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$268binary_subscr.29', '$avgn270.30']
numba.core.byteflow - DEBUG - dispatch pc=274, inst=BINARY_ADD(arg=None, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$268binary_subscr.29', '$avgn270.30', '$delta272.31']
numba.core.byteflow - DEBUG - dispatch pc=276, inst=COMPARE_OP(arg=5, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$268binary_subscr.29', '$274binary_add.32']
numba.core.byteflow - DEBUG - dispatch pc=278, inst=INPLACE_AND(arg=None, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$276compare_op.33']
numba.core.byteflow - DEBUG - dispatch pc=280, inst=ROT_THREE(arg=None, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23', '$278inplace_and.34']
numba.core.byteflow - DEBUG - dispatch pc=282, inst=STORE_SUBSCR(arg=None, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$278inplace_and.34', '$peaks256.22', '$n258.23']
numba.core.byteflow - DEBUG - dispatch pc=284, inst=LOAD_FAST(arg=7, lineno=1242)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=286, inst=LOAD_FAST(arg=8, lineno=1242)
numba.core.byteflow - DEBUG - stack ['$peaks284.35']
numba.core.byteflow - DEBUG - dispatch pc=288, inst=BINARY_SUBSCR(arg=None, lineno=1242)
numba.core.byteflow - DEBUG - stack ['$peaks284.35', '$n286.36']
numba.core.byteflow - DEBUG - dispatch pc=290, inst=POP_JUMP_IF_TRUE(arg=152, lineno=1242)
numba.core.byteflow - DEBUG - stack ['$288binary_subscr.37']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=292, stack=(), blockstack=(), npush=0), Edge(pc=302, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=120 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=292 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=292, inst=LOAD_FAST(arg=8, lineno=1243)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=294, inst=LOAD_CONST(arg=3, lineno=1243)
numba.core.byteflow - DEBUG - stack ['$n292.0']
numba.core.byteflow - DEBUG - dispatch pc=296, inst=INPLACE_ADD(arg=None, lineno=1243)
numba.core.byteflow - DEBUG - stack ['$n292.0', '$const294.1']
numba.core.byteflow - DEBUG - dispatch pc=298, inst=STORE_FAST(arg=8, lineno=1243)
numba.core.byteflow - DEBUG - stack ['$296inplace_add.2']
numba.core.byteflow - DEBUG - dispatch pc=300, inst=JUMP_ABSOLUTE(arg=61, lineno=1244)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=120, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=302 nstack_initial=0), State(pc_initial=120 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=302 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=302, inst=LOAD_FAST(arg=8, lineno=1247)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=304, inst=LOAD_FAST(arg=6, lineno=1247)
numba.core.byteflow - DEBUG - stack ['$n302.0']
numba.core.byteflow - DEBUG - dispatch pc=306, inst=LOAD_CONST(arg=3, lineno=1247)
numba.core.byteflow - DEBUG - stack ['$n302.0', '$wait304.1']
numba.core.byteflow - DEBUG - dispatch pc=308, inst=BINARY_ADD(arg=None, lineno=1247)
numba.core.byteflow - DEBUG - stack ['$n302.0', '$wait304.1', '$const306.2']
numba.core.byteflow - DEBUG - dispatch pc=310, inst=INPLACE_ADD(arg=None, lineno=1247)
numba.core.byteflow - DEBUG - stack ['$n302.0', '$308binary_add.3']
numba.core.byteflow - DEBUG - dispatch pc=312, inst=STORE_FAST(arg=8, lineno=1247)
numba.core.byteflow - DEBUG - stack ['$310inplace_add.4']
numba.core.byteflow - DEBUG - dispatch pc=314, inst=LOAD_FAST(arg=8, lineno=1229)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=316, inst=LOAD_FAST(arg=0, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$n314.5']
numba.core.byteflow - DEBUG - dispatch pc=318, inst=LOAD_ATTR(arg=3, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$n314.5', '$x316.6']
numba.core.byteflow - DEBUG - dispatch pc=320, inst=LOAD_CONST(arg=1, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$n314.5', '$318load_attr.7']
numba.core.byteflow - DEBUG - dispatch pc=322, inst=BINARY_SUBSCR(arg=None, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$n314.5', '$318load_attr.7', '$const320.8']
numba.core.byteflow - DEBUG - dispatch pc=324, inst=COMPARE_OP(arg=0, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$n314.5', '$322binary_subscr.9']
numba.core.byteflow - DEBUG - dispatch pc=326, inst=POP_JUMP_IF_TRUE(arg=68, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$324compare_op.10']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0), Edge(pc=134, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=120 nstack_initial=0), State(pc_initial=328 nstack_initial=0), State(pc_initial=134 nstack_initial=0)])
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=134 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=328 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=328, inst=LOAD_CONST(arg=2, lineno=1229)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=330, inst=RETURN_VALUE(arg=None, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$const328.0']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=134 nstack_initial=0)])
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=116 nstack_initial=0): set(),
             State(pc_initial=120 nstack_initial=0): set(),
             State(pc_initial=134 nstack_initial=0): set(),
             State(pc_initial=202 nstack_initial=0): set(),
             State(pc_initial=212 nstack_initial=0): set(),
             State(pc_initial=292 nstack_initial=0): set(),
             State(pc_initial=302 nstack_initial=0): set(),
             State(pc_initial=328 nstack_initial=0): set(),
             State(pc_initial=332 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - keep phismap: {}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$8load_global.3'}), (10, {'item': '$8load_global.3', 'res': '$10load_method.4'}), (12, {'res': '$x12.5'}), (14, {'res': '$const14.6'}), (16, {'res': '$16load_global.7'}), (18, {'res': '$post_max18.8'}), (20, {'res': '$x20.9'}), (22, {'item': '$x20.9', 'res': '$22load_attr.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$22load_attr.10', 'res': '$26binary_subscr.12'}), (28, {'func': '$16load_global.7', 'args': ['$post_max18.8', '$26binary_subscr.12'], 'res': '$28call_function.13'}), (30, {'start': '$const14.6', 'stop': '$28call_function.13', 'step': None, 'res': '$30build_slice.15', 'slicevar': '$30build_slice.14'}), (32, {'index': '$30build_slice.15', 'target': '$x12.5', 'res': '$32binary_subscr.16'}), (34, {'func': '$10load_method.4', 'args': ['$32binary_subscr.16'], 'res': '$34call_method.17'}), (36, {'lhs': '$6binary_subscr.2', 'rhs': '$34call_method.17', 'res': '$36compare_op.18'}), (38, {'res': '$peaks38.19'}), (40, {'res': '$const40.20'}), (42, {'target': '$peaks38.19', 'index': '$const40.20', 'value': '$36compare_op.18'}), (44, {'res': '$peaks44.21'}), (46, {'res': '$const46.22'}), (48, {'orig': ['$peaks44.21', '$const46.22'], 'duped': ['$48dup_top_two.23', '$48dup_top_two.24']}), (50, {'index': '$48dup_top_two.24', 'target': '$48dup_top_two.23', 'res': '$50binary_subscr.25'}), (52, {'res': '$x52.26'}), (54, {'res': '$const54.27'}), (56, {'index': '$const54.27', 'target': '$x52.26', 'res': '$56binary_subscr.28'}), (58, {'res': '$58load_global.29'}), (60, {'item': '$58load_global.29', 'res': '$60load_method.30'}), (62, {'res': '$x62.31'}), (64, {'res': '$const64.32'}), (66, {'res': '$66load_global.33'}), (68, {'res': '$post_avg68.34'}), (70, {'res': '$x70.35'}), (72, {'item': '$x70.35', 'res': '$72load_attr.36'}), (74, {'res': '$const74.37'}), (76, {'index': '$const74.37', 'target': '$72load_attr.36', 'res': '$76binary_subscr.38'}), (78, {'func': '$66load_global.33', 'args': ['$post_avg68.34', '$76binary_subscr.38'], 'res': '$78call_function.39'}), (80, {'start': '$const64.32', 'stop': '$78call_function.39', 'step': None, 'res': '$80build_slice.41', 'slicevar': '$80build_slice.40'}), (82, {'index': '$80build_slice.41', 'target': '$x62.31', 'res': '$82binary_subscr.42'}), (84, {'func': '$60load_method.30', 'args': ['$82binary_subscr.42'], 'res': '$84call_method.43'}), (86, {'res': '$delta86.44'}), (88, {'lhs': '$84call_method.43', 'rhs': '$delta86.44', 'res': '$88binary_add.45'}), (90, {'lhs': '$56binary_subscr.28', 'rhs': '$88binary_add.45', 'res': '$90compare_op.46'}), (92, {'lhs': '$50binary_subscr.25', 'rhs': '$90compare_op.46', 'res': '$92inplace_and.47'}), (96, {'target': '$peaks44.21', 'index': '$const46.22', 'value': '$92inplace_and.47'}), (98, {'res': '$peaks98.48'}), (100, {'res': '$const100.49'}), (102, {'index': '$const100.49', 'target': '$peaks98.48', 'res': '$102binary_subscr.50'}), (104, {'pred': '$102binary_subscr.50'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: (), 116: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$wait106.0'}), (108, {'res': '$const108.1'}), (110, {'lhs': '$wait106.0', 'rhs': '$const108.1', 'res': '$110binary_add.2'}), (112, {'value': '$110binary_add.2'}), (114, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={120: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=116 nstack_initial=0):
AdaptBlockInfo(insts=((116, {'res': '$const116.0'}), (118, {'value': '$const116.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={120: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=120 nstack_initial=0):
AdaptBlockInfo(insts=((120, {'res': '$n120.0'}), (122, {'res': '$x122.1'}), (124, {'item': '$x122.1', 'res': '$124load_attr.2'}), (126, {'res': '$const126.3'}), (128, {'index': '$const126.3', 'target': '$124load_attr.2', 'res': '$128binary_subscr.4'}), (130, {'lhs': '$n120.0', 'rhs': '$128binary_subscr.4', 'res': '$130compare_op.5'}), (132, {'pred': '$130compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={134: (), 332: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=134 nstack_initial=0):
AdaptBlockInfo(insts=((134, {'res': '$134load_global.0'}), (136, {'item': '$134load_global.0', 'res': '$136load_method.1'}), (138, {'res': '$x138.2'}), (140, {'res': '$140load_global.3'}), (142, {'res': '$const142.4'}), (144, {'res': '$n144.5'}), (146, {'res': '$pre_max146.6'}), (148, {'lhs': '$n144.5', 'rhs': '$pre_max146.6', 'res': '$148binary_subtract.7'}), (150, {'func': '$140load_global.3', 'args': ['$const142.4', '$148binary_subtract.7'], 'res': '$150call_function.8'}), (152, {'res': '$152load_global.9'}), (154, {'res': '$n154.10'}), (156, {'res': '$post_max156.11'}), (158, {'lhs': '$n154.10', 'rhs': '$post_max156.11', 'res': '$158binary_add.12'}), (160, {'res': '$x160.13'}), (162, {'item': '$x160.13', 'res': '$162load_attr.14'}), (164, {'res': '$const164.15'}), (166, {'index': '$const164.15', 'target': '$162load_attr.14', 'res': '$166binary_subscr.16'}), (168, {'func': '$152load_global.9', 'args': ['$158binary_add.12', '$166binary_subscr.16'], 'res': '$168call_function.17'}), (170, {'start': '$150call_function.8', 'stop': '$168call_function.17', 'step': None, 'res': '$170build_slice.19', 'slicevar': '$170build_slice.18'}), (172, {'index': '$170build_slice.19', 'target': '$x138.2', 'res': '$172binary_subscr.20'}), (174, {'func': '$136load_method.1', 'args': ['$172binary_subscr.20'], 'res': '$174call_method.21'}), (176, {'value': '$174call_method.21'}), (178, {'res': '$x178.22'}), (180, {'res': '$n180.23'}), (182, {'index': '$n180.23', 'target': '$x178.22', 'res': '$182binary_subscr.24'}), (184, {'res': '$maxn184.25'}), (186, {'lhs': '$182binary_subscr.24', 'rhs': '$maxn184.25', 'res': '$186compare_op.26'}), (188, {'res': '$peaks188.27'}), (190, {'res': '$n190.28'}), (192, {'target': '$peaks188.27', 'index': '$n190.28', 'value': '$186compare_op.26'}), (194, {'res': '$peaks194.29'}), (196, {'res': '$n196.30'}), (198, {'index': '$n196.30', 'target': '$peaks194.29', 'res': '$198binary_subscr.31'}), (200, {'pred': '$198binary_subscr.31'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={202: (), 212: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=202 nstack_initial=0):
AdaptBlockInfo(insts=((202, {'res': '$n202.0'}), (204, {'res': '$const204.1'}), (206, {'lhs': '$n202.0', 'rhs': '$const204.1', 'res': '$206inplace_add.2'}), (208, {'value': '$206inplace_add.2'}), (210, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={120: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=212 nstack_initial=0):
AdaptBlockInfo(insts=((212, {'res': '$212load_global.0'}), (214, {'item': '$212load_global.0', 'res': '$214load_method.1'}), (216, {'res': '$x216.2'}), (218, {'res': '$218load_global.3'}), (220, {'res': '$const220.4'}), (222, {'res': '$n222.5'}), (224, {'res': '$pre_avg224.6'}), (226, {'lhs': '$n222.5', 'rhs': '$pre_avg224.6', 'res': '$226binary_subtract.7'}), (228, {'func': '$218load_global.3', 'args': ['$const220.4', '$226binary_subtract.7'], 'res': '$228call_function.8'}), (230, {'res': '$230load_global.9'}), (232, {'res': '$n232.10'}), (234, {'res': '$post_avg234.11'}), (236, {'lhs': '$n232.10', 'rhs': '$post_avg234.11', 'res': '$236binary_add.12'}), (238, {'res': '$x238.13'}), (240, {'item': '$x238.13', 'res': '$240load_attr.14'}), (242, {'res': '$const242.15'}), (244, {'index': '$const242.15', 'target': '$240load_attr.14', 'res': '$244binary_subscr.16'}), (246, {'func': '$230load_global.9', 'args': ['$236binary_add.12', '$244binary_subscr.16'], 'res': '$246call_function.17'}), (248, {'start': '$228call_function.8', 'stop': '$246call_function.17', 'step': None, 'res': '$248build_slice.19', 'slicevar': '$248build_slice.18'}), (250, {'index': '$248build_slice.19', 'target': '$x216.2', 'res': '$250binary_subscr.20'}), (252, {'func': '$214load_method.1', 'args': ['$250binary_subscr.20'], 'res': '$252call_method.21'}), (254, {'value': '$252call_method.21'}), (256, {'res': '$peaks256.22'}), (258, {'res': '$n258.23'}), (260, {'orig': ['$peaks256.22', '$n258.23'], 'duped': ['$260dup_top_two.24', '$260dup_top_two.25']}), (262, {'index': '$260dup_top_two.25', 'target': '$260dup_top_two.24', 'res': '$262binary_subscr.26'}), (264, {'res': '$x264.27'}), (266, {'res': '$n266.28'}), (268, {'index': '$n266.28', 'target': '$x264.27', 'res': '$268binary_subscr.29'}), (270, {'res': '$avgn270.30'}), (272, {'res': '$delta272.31'}), (274, {'lhs': '$avgn270.30', 'rhs': '$delta272.31', 'res': '$274binary_add.32'}), (276, {'lhs': '$268binary_subscr.29', 'rhs': '$274binary_add.32', 'res': '$276compare_op.33'}), (278, {'lhs': '$262binary_subscr.26', 'rhs': '$276compare_op.33', 'res': '$278inplace_and.34'}), (282, {'target': '$peaks256.22', 'index': '$n258.23', 'value': '$278inplace_and.34'}), (284, {'res': '$peaks284.35'}), (286, {'res': '$n286.36'}), (288, {'index': '$n286.36', 'target': '$peaks284.35', 'res': '$288binary_subscr.37'}), (290, {'pred': '$288binary_subscr.37'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={292: (), 302: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=292 nstack_initial=0):
AdaptBlockInfo(insts=((292, {'res': '$n292.0'}), (294, {'res': '$const294.1'}), (296, {'lhs': '$n292.0', 'rhs': '$const294.1', 'res': '$296inplace_add.2'}), (298, {'value': '$296inplace_add.2'}), (300, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={120: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=302 nstack_initial=0):
AdaptBlockInfo(insts=((302, {'res': '$n302.0'}), (304, {'res': '$wait304.1'}), (306, {'res': '$const306.2'}), (308, {'lhs': '$wait304.1', 'rhs': '$const306.2', 'res': '$308binary_add.3'}), (310, {'lhs': '$n302.0', 'rhs': '$308binary_add.3', 'res': '$310inplace_add.4'}), (312, {'value': '$310inplace_add.4'}), (314, {'res': '$n314.5'}), (316, {'res': '$x316.6'}), (318, {'item': '$x316.6', 'res': '$318load_attr.7'}), (320, {'res': '$const320.8'}), (322, {'index': '$const320.8', 'target': '$318load_attr.7', 'res': '$322binary_subscr.9'}), (324, {'lhs': '$n314.5', 'rhs': '$322binary_subscr.9', 'res': '$324compare_op.10'}), (326, {'pred': '$324compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: (), 134: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=328 nstack_initial=0):
AdaptBlockInfo(insts=((328, {'res': '$const328.0'}), (330, {'retval': '$const328.0', 'castval': '$330return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=332 nstack_initial=0):
AdaptBlockInfo(insts=((332, {'res': '$const332.0'}), (334, {'retval': '$const332.0', 'castval': '$334return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    pre_max = arg(1, name=pre_max)           ['pre_max']
    post_max = arg(2, name=post_max)         ['post_max']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
    delta = arg(5, name=delta)               ['delta']
    wait = arg(6, name=wait)                 ['wait']
    peaks = arg(7, name=peaks)               ['peaks']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $8load_global.3 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.3']
    $10load_method.4 = getattr(value=$8load_global.3, attr=max) ['$10load_method.4', '$8load_global.3']
    $const14.6 = const(NoneType, None)       ['$const14.6']
    $16load_global.7 = global(min: <built-in function min>) ['$16load_global.7']
    $22load_attr.10 = getattr(value=x, attr=shape) ['$22load_attr.10', 'x']
    $const24.11 = const(int, 0)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=$22load_attr.10, index=$const24.11, fn=<built-in function getitem>) ['$22load_attr.10', '$26binary_subscr.12', '$const24.11']
    $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1209), Var($26binary_subscr.12, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_global.7', '$26binary_subscr.12', '$28call_function.13', 'post_max']
    $30build_slice.14 = global(slice: <class 'slice'>) ['$30build_slice.14']
    $30build_slice.15 = call $30build_slice.14($const14.6, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6, utils.py:1221), Var($28call_function.13, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None) ['$28call_function.13', '$30build_slice.14', '$30build_slice.15', '$const14.6']
    $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>) ['$30build_slice.15', '$32binary_subscr.16', 'x']
    $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_method.4', '$32binary_subscr.16', '$34call_method.17']
    $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17 ['$34call_method.17', '$36compare_op.18', '$6binary_subscr.2']
    $const40.20 = const(int, 0)              ['$const40.20']
    peaks[$const40.20] = $36compare_op.18    ['$36compare_op.18', '$const40.20', 'peaks']
    $const46.22 = const(int, 0)              ['$const46.22']
    $50binary_subscr.25 = getitem(value=peaks, index=$const46.22, fn=<built-in function getitem>) ['$50binary_subscr.25', '$const46.22', 'peaks']
    $const54.27 = const(int, 0)              ['$const54.27']
    $56binary_subscr.28 = getitem(value=x, index=$const54.27, fn=<built-in function getitem>) ['$56binary_subscr.28', '$const54.27', 'x']
    $58load_global.29 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.29']
    $60load_method.30 = getattr(value=$58load_global.29, attr=mean) ['$58load_global.29', '$60load_method.30']
    $const64.32 = const(NoneType, None)      ['$const64.32']
    $66load_global.33 = global(min: <built-in function min>) ['$66load_global.33']
    $72load_attr.36 = getattr(value=x, attr=shape) ['$72load_attr.36', 'x']
    $const74.37 = const(int, 0)              ['$const74.37']
    $76binary_subscr.38 = getitem(value=$72load_attr.36, index=$const74.37, fn=<built-in function getitem>) ['$72load_attr.36', '$76binary_subscr.38', '$const74.37']
    $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1209), Var($76binary_subscr.38, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.33', '$76binary_subscr.38', '$78call_function.39', 'post_avg']
    $80build_slice.40 = global(slice: <class 'slice'>) ['$80build_slice.40']
    $80build_slice.41 = call $80build_slice.40($const64.32, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32, utils.py:1222), Var($78call_function.39, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None) ['$78call_function.39', '$80build_slice.40', '$80build_slice.41', '$const64.32']
    $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>) ['$80build_slice.41', '$82binary_subscr.42', 'x']
    $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.30', '$82binary_subscr.42', '$84call_method.43']
    $88binary_add.45 = $84call_method.43 + delta ['$84call_method.43', '$88binary_add.45', 'delta']
    $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45 ['$56binary_subscr.28', '$88binary_add.45', '$90compare_op.46']
    $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined) ['$50binary_subscr.25', '$90compare_op.46', '$92inplace_and.47']
    peaks[$const46.22] = $92inplace_and.47   ['$92inplace_and.47', '$const46.22', 'peaks']
    $const100.49 = const(int, 0)             ['$const100.49']
    $102binary_subscr.50 = getitem(value=peaks, index=$const100.49, fn=<built-in function getitem>) ['$102binary_subscr.50', '$const100.49', 'peaks']
    bool104 = global(bool: <class 'bool'>)   ['bool104']
    $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None) ['$102binary_subscr.50', '$104pred', 'bool104']
    branch $104pred, 106, 116                ['$104pred']
label 106:
    $const108.1 = const(int, 1)              ['$const108.1']
    n = wait + $const108.1                   ['$const108.1', 'n', 'wait']
    jump 120                                 []
label 116:
    n = const(int, 1)                        ['n']
    jump 120                                 []
label 120:
    $124load_attr.2 = getattr(value=x, attr=shape) ['$124load_attr.2', 'x']
    $const126.3 = const(int, 0)              ['$const126.3']
    $128binary_subscr.4 = getitem(value=$124load_attr.2, index=$const126.3, fn=<built-in function getitem>) ['$124load_attr.2', '$128binary_subscr.4', '$const126.3']
    $130compare_op.5 = n < $128binary_subscr.4 ['$128binary_subscr.4', '$130compare_op.5', 'n']
    bool132 = global(bool: <class 'bool'>)   ['bool132']
    $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None) ['$130compare_op.5', '$132pred', 'bool132']
    branch $132pred, 134, 332                ['$132pred']
label 134:
    $134load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$134load_global.0']
    $136load_method.1 = getattr(value=$134load_global.0, attr=max) ['$134load_global.0', '$136load_method.1']
    $140load_global.3 = global(max: <built-in function max>) ['$140load_global.3']
    $const142.4 = const(int, 0)              ['$const142.4']
    $148binary_subtract.7 = n - pre_max      ['$148binary_subtract.7', 'n', 'pre_max']
    $150call_function.8 = call $140load_global.3($const142.4, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4, utils.py:1230), Var($148binary_subtract.7, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.3', '$148binary_subtract.7', '$150call_function.8', '$const142.4']
    $152load_global.9 = global(min: <built-in function min>) ['$152load_global.9']
    $158binary_add.12 = n + post_max         ['$158binary_add.12', 'n', 'post_max']
    $162load_attr.14 = getattr(value=x, attr=shape) ['$162load_attr.14', 'x']
    $const164.15 = const(int, 0)             ['$const164.15']
    $166binary_subscr.16 = getitem(value=$162load_attr.14, index=$const164.15, fn=<built-in function getitem>) ['$162load_attr.14', '$166binary_subscr.16', '$const164.15']
    $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1230), Var($166binary_subscr.16, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_global.9', '$158binary_add.12', '$166binary_subscr.16', '$168call_function.17']
    $170build_slice.18 = global(slice: <class 'slice'>) ['$170build_slice.18']
    $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1230), Var($168call_function.17, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None) ['$150call_function.8', '$168call_function.17', '$170build_slice.18', '$170build_slice.19']
    $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>) ['$170build_slice.19', '$172binary_subscr.20', 'x']
    maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$136load_method.1', '$172binary_subscr.20', 'maxn']
    $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$182binary_subscr.24', 'n', 'x']
    $186compare_op.26 = $182binary_subscr.24 == maxn ['$182binary_subscr.24', '$186compare_op.26', 'maxn']
    peaks[n] = $186compare_op.26             ['$186compare_op.26', 'n', 'peaks']
    $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$198binary_subscr.31', 'n', 'peaks']
    bool200 = global(bool: <class 'bool'>)   ['bool200']
    $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None) ['$198binary_subscr.31', '$200pred', 'bool200']
    branch $200pred, 212, 202                ['$200pred']
label 202:
    $const204.1 = const(int, 1)              ['$const204.1']
    $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined) ['$206inplace_add.2', '$const204.1', 'n']
    n = $206inplace_add.2                    ['$206inplace_add.2', 'n']
    jump 120                                 []
label 212:
    $212load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$212load_global.0']
    $214load_method.1 = getattr(value=$212load_global.0, attr=mean) ['$212load_global.0', '$214load_method.1']
    $218load_global.3 = global(max: <built-in function max>) ['$218load_global.3']
    $const220.4 = const(int, 0)              ['$const220.4']
    $226binary_subtract.7 = n - pre_avg      ['$226binary_subtract.7', 'n', 'pre_avg']
    $228call_function.8 = call $218load_global.3($const220.4, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4, utils.py:1239), Var($226binary_subtract.7, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$218load_global.3', '$226binary_subtract.7', '$228call_function.8', '$const220.4']
    $230load_global.9 = global(min: <built-in function min>) ['$230load_global.9']
    $236binary_add.12 = n + post_avg         ['$236binary_add.12', 'n', 'post_avg']
    $240load_attr.14 = getattr(value=x, attr=shape) ['$240load_attr.14', 'x']
    $const242.15 = const(int, 0)             ['$const242.15']
    $244binary_subscr.16 = getitem(value=$240load_attr.14, index=$const242.15, fn=<built-in function getitem>) ['$240load_attr.14', '$244binary_subscr.16', '$const242.15']
    $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1239), Var($244binary_subscr.16, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$230load_global.9', '$236binary_add.12', '$244binary_subscr.16', '$246call_function.17']
    $248build_slice.18 = global(slice: <class 'slice'>) ['$248build_slice.18']
    $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1239), Var($246call_function.17, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None) ['$228call_function.8', '$246call_function.17', '$248build_slice.18', '$248build_slice.19']
    $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>) ['$248build_slice.19', '$250binary_subscr.20', 'x']
    avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_method.1', '$250binary_subscr.20', 'avgn']
    $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$262binary_subscr.26', 'n', 'peaks']
    $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$268binary_subscr.29', 'n', 'x']
    $274binary_add.32 = avgn + delta         ['$274binary_add.32', 'avgn', 'delta']
    $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32 ['$268binary_subscr.29', '$274binary_add.32', '$276compare_op.33']
    $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined) ['$262binary_subscr.26', '$276compare_op.33', '$278inplace_and.34']
    peaks[n] = $278inplace_and.34            ['$278inplace_and.34', 'n', 'peaks']
    $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$288binary_subscr.37', 'n', 'peaks']
    bool290 = global(bool: <class 'bool'>)   ['bool290']
    $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None) ['$288binary_subscr.37', '$290pred', 'bool290']
    branch $290pred, 302, 292                ['$290pred']
label 292:
    $const294.1 = const(int, 1)              ['$const294.1']
    $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined) ['$296inplace_add.2', '$const294.1', 'n']
    n = $296inplace_add.2                    ['$296inplace_add.2', 'n']
    jump 120                                 []
label 302:
    $const306.2 = const(int, 1)              ['$const306.2']
    $308binary_add.3 = wait + $const306.2    ['$308binary_add.3', '$const306.2', 'wait']
    $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined) ['$308binary_add.3', '$310inplace_add.4', 'n']
    n = $310inplace_add.4                    ['$310inplace_add.4', 'n']
    $318load_attr.7 = getattr(value=x, attr=shape) ['$318load_attr.7', 'x']
    $const320.8 = const(int, 0)              ['$const320.8']
    $322binary_subscr.9 = getitem(value=$318load_attr.7, index=$const320.8, fn=<built-in function getitem>) ['$318load_attr.7', '$322binary_subscr.9', '$const320.8']
    $324compare_op.10 = n < $322binary_subscr.9 ['$322binary_subscr.9', '$324compare_op.10', 'n']
    bool326 = global(bool: <class 'bool'>)   ['bool326']
    $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None) ['$324compare_op.10', '$326pred', 'bool326']
    branch $326pred, 134, 328                ['$326pred']
label 328:
    $const328.0 = const(NoneType, None)      ['$const328.0']
    $330return_value.1 = cast(value=$const328.0) ['$330return_value.1', '$const328.0']
    return $330return_value.1                ['$330return_value.1']
label 332:
    $const332.0 = const(NoneType, None)      ['$const332.0']
    $334return_value.1 = cast(value=$const332.0) ['$334return_value.1', '$const332.0']
    return $334return_value.1                ['$334return_value.1']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752b4ef50>
numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
numba.core.ssa - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
numba.core.ssa - DEBUG - on stmt: post_max = arg(2, name=post_max)
numba.core.ssa - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
numba.core.ssa - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
numba.core.ssa - DEBUG - on stmt: delta = arg(5, name=delta)
numba.core.ssa - DEBUG - on stmt: wait = arg(6, name=wait)
numba.core.ssa - DEBUG - on stmt: peaks = arg(7, name=peaks)
numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $8load_global.3 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $10load_method.4 = getattr(value=$8load_global.3, attr=max)
numba.core.ssa - DEBUG - on stmt: $const14.6 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $16load_global.7 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $22load_attr.10 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const24.11 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1209), Var($26binary_subscr.12, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $30build_slice.14 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $30build_slice.15 = call $30build_slice.14($const14.6, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6, utils.py:1221), Var($28call_function.13, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17
numba.core.ssa - DEBUG - on stmt: $const40.20 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: peaks[0] = $36compare_op.18
numba.core.ssa - DEBUG - on stmt: $const46.22 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $const54.27 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $58load_global.29 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $60load_method.30 = getattr(value=$58load_global.29, attr=mean)
numba.core.ssa - DEBUG - on stmt: $const64.32 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $66load_global.33 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $72load_attr.36 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const74.37 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1209), Var($76binary_subscr.38, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $80build_slice.40 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $80build_slice.41 = call $80build_slice.40($const64.32, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32, utils.py:1222), Var($78call_function.39, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $88binary_add.45 = $84call_method.43 + delta
numba.core.ssa - DEBUG - on stmt: $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45
numba.core.ssa - DEBUG - on stmt: $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: peaks[0] = $92inplace_and.47
numba.core.ssa - DEBUG - on stmt: $const100.49 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: bool104 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $104pred, 106, 116
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 106
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752b4ef50>
numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: n = wait + $const108.1
numba.core.ssa - DEBUG - on stmt: jump 120
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 116
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752b4ef50>
numba.core.ssa - DEBUG - on stmt: n = const(int, 1)
numba.core.ssa - DEBUG - on stmt: jump 120
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 120
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752b4ef50>
numba.core.ssa - DEBUG - on stmt: $124load_attr.2 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const126.3 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $130compare_op.5 = n < $128binary_subscr.4
numba.core.ssa - DEBUG - on stmt: bool132 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $132pred, 134, 332
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 134
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752b4ef50>
numba.core.ssa - DEBUG - on stmt: $134load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $136load_method.1 = getattr(value=$134load_global.0, attr=max)
numba.core.ssa - DEBUG - on stmt: $140load_global.3 = global(max: <built-in function max>)
numba.core.ssa - DEBUG - on stmt: $const142.4 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $148binary_subtract.7 = n - pre_max
numba.core.ssa - DEBUG - on stmt: $150call_function.8 = call $140load_global.3($const142.4, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4, utils.py:1230), Var($148binary_subtract.7, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $152load_global.9 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $158binary_add.12 = n + post_max
numba.core.ssa - DEBUG - on stmt: $162load_attr.14 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const164.15 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1230), Var($166binary_subscr.16, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $170build_slice.18 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1230), Var($168call_function.17, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $186compare_op.26 = $182binary_subscr.24 == maxn
numba.core.ssa - DEBUG - on stmt: peaks[n] = $186compare_op.26
numba.core.ssa - DEBUG - on stmt: $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $200pred, 212, 202
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 202
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752b4ef50>
numba.core.ssa - DEBUG - on stmt: $const204.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: n = $206inplace_add.2
numba.core.ssa - DEBUG - on stmt: jump 333
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 212
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752b4ef50>
numba.core.ssa - DEBUG - on stmt: $212load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $214load_method.1 = getattr(value=$212load_global.0, attr=mean)
numba.core.ssa - DEBUG - on stmt: $218load_global.3 = global(max: <built-in function max>)
numba.core.ssa - DEBUG - on stmt: $const220.4 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $226binary_subtract.7 = n - pre_avg
numba.core.ssa - DEBUG - on stmt: $228call_function.8 = call $218load_global.3($const220.4, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4, utils.py:1239), Var($226binary_subtract.7, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $230load_global.9 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $236binary_add.12 = n + post_avg
numba.core.ssa - DEBUG - on stmt: $240load_attr.14 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const242.15 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1239), Var($244binary_subscr.16, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $248build_slice.18 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1239), Var($246call_function.17, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $274binary_add.32 = avgn + delta
numba.core.ssa - DEBUG - on stmt: $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32
numba.core.ssa - DEBUG - on stmt: $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: peaks[n] = $278inplace_and.34
numba.core.ssa - DEBUG - on stmt: $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $290pred, 302, 292
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 292
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752b4ef50>
numba.core.ssa - DEBUG - on stmt: $const294.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: n = $296inplace_add.2
numba.core.ssa - DEBUG - on stmt: jump 333
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 302
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752b4ef50>
numba.core.ssa - DEBUG - on stmt: $const306.2 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $308binary_add.3 = wait + $const306.2
numba.core.ssa - DEBUG - on stmt: $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: n = $310inplace_add.4
numba.core.ssa - DEBUG - on stmt: $318load_attr.7 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const320.8 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $324compare_op.10 = n < $322binary_subscr.9
numba.core.ssa - DEBUG - on stmt: bool326 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $326pred, 134, 328
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 328
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752b4ef50>
numba.core.ssa - DEBUG - on stmt: $const328.0 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $330return_value.1 = cast(value=$const328.0)
numba.core.ssa - DEBUG - on stmt: return $330return_value.1
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 332
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752b4ef50>
numba.core.ssa - DEBUG - on stmt: $const332.0 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $334return_value.1 = cast(value=$const332.0)
numba.core.ssa - DEBUG - on stmt: return $334return_value.1
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 333
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752b4ef50>
numba.core.ssa - DEBUG - on stmt: jump 120
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$102binary_subscr.50': [(<numba.core.ir.Assign object at 0x708752b4d540>,
                                       0)],
             '$104pred': [(<numba.core.ir.Assign object at 0x708752b193c0>, 0)],
             '$10load_method.4': [(<numba.core.ir.Assign object at 0x7087530c2c20>,
                                   0)],
             '$124load_attr.2': [(<numba.core.ir.Assign object at 0x708752b19c00>,
                                  120)],
             '$128binary_subscr.4': [(<numba.core.ir.Assign object at 0x708752b4dd20>,
                                      120)],
             '$130compare_op.5': [(<numba.core.ir.Assign object at 0x708752b1a0b0>,
                                   120)],
             '$132pred': [(<numba.core.ir.Assign object at 0x708752b1a320>,
                           120)],
             '$134load_global.0': [(<numba.core.ir.Assign object at 0x708752b1a500>,
                                    134)],
             '$136load_method.1': [(<numba.core.ir.Assign object at 0x708752b1a680>,
                                    134)],
             '$140load_global.3': [(<numba.core.ir.Assign object at 0x708752b1a920>,
                                    134)],
             '$148binary_subtract.7': [(<numba.core.ir.Assign object at 0x708752b1ae90>,
                                        134)],
             '$150call_function.8': [(<numba.core.ir.Assign object at 0x708752b1b040>,
                                      134)],
             '$152load_global.9': [(<numba.core.ir.Assign object at 0x708752b1b160>,
                                    134)],
             '$158binary_add.12': [(<numba.core.ir.Assign object at 0x708752b1b550>,
                                    134)],
             '$162load_attr.14': [(<numba.core.ir.Assign object at 0x708752b1b7c0>,
                                   134)],
             '$166binary_subscr.16': [(<numba.core.ir.Assign object at 0x708752b4d8a0>,
                                       134)],
             '$168call_function.17': [(<numba.core.ir.Assign object at 0x708752b1bca0>,
                                       134)],
             '$16load_global.7': [(<numba.core.ir.Assign object at 0x708752f9ff70>,
                                   0)],
             '$170build_slice.18': [(<numba.core.ir.Assign object at 0x708752b1bdc0>,
                                     134)],
             '$170build_slice.19': [(<numba.core.ir.Assign object at 0x708752b1bee0>,
                                     134)],
             '$172binary_subscr.20': [(<numba.core.ir.Assign object at 0x708752b400d0>,
                                       134)],
             '$182binary_subscr.24': [(<numba.core.ir.Assign object at 0x708752b40730>,
                                       134)],
             '$186compare_op.26': [(<numba.core.ir.Assign object at 0x708752b409d0>,
                                    134)],
             '$198binary_subscr.31': [(<numba.core.ir.Assign object at 0x708752b41090>,
                                       134)],
             '$200pred': [(<numba.core.ir.Assign object at 0x708752b41300>,
                           134)],
             '$206inplace_add.2': [(<numba.core.ir.Assign object at 0x708752b40dc0>,
                                    202)],
             '$212load_global.0': [(<numba.core.ir.Assign object at 0x708752b41660>,
                                    212)],
             '$214load_method.1': [(<numba.core.ir.Assign object at 0x708752b417e0>,
                                    212)],
             '$218load_global.3': [(<numba.core.ir.Assign object at 0x708752b41a80>,
                                    212)],
             '$226binary_subtract.7': [(<numba.core.ir.Assign object at 0x708752b41ff0>,
                                        212)],
             '$228call_function.8': [(<numba.core.ir.Assign object at 0x708752b421a0>,
                                      212)],
             '$22load_attr.10': [(<numba.core.ir.Assign object at 0x708752f9f700>,
                                  0)],
             '$230load_global.9': [(<numba.core.ir.Assign object at 0x708752b422c0>,
                                    212)],
             '$236binary_add.12': [(<numba.core.ir.Assign object at 0x708752b426b0>,
                                    212)],
             '$240load_attr.14': [(<numba.core.ir.Assign object at 0x708752b42920>,
                                   212)],
             '$244binary_subscr.16': [(<numba.core.ir.Assign object at 0x708752b4afe0>,
                                       212)],
             '$246call_function.17': [(<numba.core.ir.Assign object at 0x708752b42e00>,
                                       212)],
             '$248build_slice.18': [(<numba.core.ir.Assign object at 0x708752b42f20>,
                                     212)],
             '$248build_slice.19': [(<numba.core.ir.Assign object at 0x708752b43040>,
                                     212)],
             '$250binary_subscr.20': [(<numba.core.ir.Assign object at 0x708752b431f0>,
                                       212)],
             '$262binary_subscr.26': [(<numba.core.ir.Assign object at 0x708752b43a30>,
                                       212)],
             '$268binary_subscr.29': [(<numba.core.ir.Assign object at 0x708752b43df0>,
                                       212)],
             '$26binary_subscr.12': [(<numba.core.ir.Assign object at 0x708752b4d690>,
                                      0)],
             '$274binary_add.32': [(<numba.core.ir.Assign object at 0x708752b481f0>,
                                    212)],
             '$276compare_op.33': [(<numba.core.ir.Assign object at 0x708752b48370>,
                                    212)],
             '$278inplace_and.34': [(<numba.core.ir.Assign object at 0x708752b484f0>,
                                     212)],
             '$288binary_subscr.37': [(<numba.core.ir.Assign object at 0x708752b48970>,
                                       212)],
             '$28call_function.13': [(<numba.core.ir.Assign object at 0x708752d83be0>,
                                      0)],
             '$290pred': [(<numba.core.ir.Assign object at 0x708752b48be0>,
                           212)],
             '$296inplace_add.2': [(<numba.core.ir.Assign object at 0x708752b43cd0>,
                                    292)],
             '$308binary_add.3': [(<numba.core.ir.Assign object at 0x708752b49210>,
                                   302)],
             '$30build_slice.14': [(<numba.core.ir.Assign object at 0x708752e0ec50>,
                                    0)],
             '$30build_slice.15': [(<numba.core.ir.Assign object at 0x708752e0ec20>,
                                    0)],
             '$310inplace_add.4': [(<numba.core.ir.Assign object at 0x708752b49390>,
                                    302)],
             '$318load_attr.7': [(<numba.core.ir.Assign object at 0x708752b497e0>,
                                  302)],
             '$322binary_subscr.9': [(<numba.core.ir.Assign object at 0x708752e3e020>,
                                      302)],
             '$324compare_op.10': [(<numba.core.ir.Assign object at 0x708752b49c90>,
                                    302)],
             '$326pred': [(<numba.core.ir.Assign object at 0x708752b49f00>,
                           302)],
             '$32binary_subscr.16': [(<numba.core.ir.Assign object at 0x708753023d60>,
                                      0)],
             '$330return_value.1': [(<numba.core.ir.Assign object at 0x708752b4a1a0>,
                                     328)],
             '$334return_value.1': [(<numba.core.ir.Assign object at 0x708752b4a5c0>,
                                     332)],
             '$34call_method.17': [(<numba.core.ir.Assign object at 0x7087530221a0>,
                                    0)],
             '$36compare_op.18': [(<numba.core.ir.Assign object at 0x708753021f00>,
                                   0)],
             '$50binary_subscr.25': [(<numba.core.ir.Assign object at 0x708752b4d5d0>,
                                      0)],
             '$56binary_subscr.28': [(<numba.core.ir.Assign object at 0x708752b4d4e0>,
                                      0)],
             '$58load_global.29': [(<numba.core.ir.Assign object at 0x708752d01540>,
                                    0)],
             '$60load_method.30': [(<numba.core.ir.Assign object at 0x708752d01120>,
                                    0)],
             '$66load_global.33': [(<numba.core.ir.Assign object at 0x708752d00370>,
                                    0)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x708752b4d660>,
                                    0)],
             '$72load_attr.36': [(<numba.core.ir.Assign object at 0x708752d00b80>,
                                  0)],
             '$76binary_subscr.38': [(<numba.core.ir.Assign object at 0x708752b4d570>,
                                      0)],
             '$78call_function.39': [(<numba.core.ir.Assign object at 0x708752b18160>,
                                      0)],
             '$80build_slice.40': [(<numba.core.ir.Assign object at 0x708752b18280>,
                                    0)],
             '$80build_slice.41': [(<numba.core.ir.Assign object at 0x708752b183a0>,
                                    0)],
             '$82binary_subscr.42': [(<numba.core.ir.Assign object at 0x708752b18550>,
                                      0)],
             '$84call_method.43': [(<numba.core.ir.Assign object at 0x708752b18730>,
                                    0)],
             '$88binary_add.45': [(<numba.core.ir.Assign object at 0x708752b18970>,
                                   0)],
             '$8load_global.3': [(<numba.core.ir.Assign object at 0x7087530c2b60>,
                                  0)],
             '$90compare_op.46': [(<numba.core.ir.Assign object at 0x708752b18af0>,
                                   0)],
             '$92inplace_and.47': [(<numba.core.ir.Assign object at 0x708752b18c70>,
                                    0)],
             '$const100.49': [(<numba.core.ir.Assign object at 0x708752b18fa0>,
                               0)],
             '$const108.1': [(<numba.core.ir.Assign object at 0x708752d011b0>,
                              106)],
             '$const126.3': [(<numba.core.ir.Assign object at 0x708752b19d80>,
                              120)],
             '$const14.6': [(<numba.core.ir.Assign object at 0x708752f9feb0>,
                             0)],
             '$const142.4': [(<numba.core.ir.Assign object at 0x708752b1aaa0>,
                              134)],
             '$const164.15': [(<numba.core.ir.Assign object at 0x708752b1b940>,
                               134)],
             '$const204.1': [(<numba.core.ir.Assign object at 0x708752b404f0>,
                              202)],
             '$const220.4': [(<numba.core.ir.Assign object at 0x708752b41c00>,
                              212)],
             '$const24.11': [(<numba.core.ir.Assign object at 0x708752f9e7a0>,
                              0)],
             '$const242.15': [(<numba.core.ir.Assign object at 0x708752b42aa0>,
                               212)],
             '$const294.1': [(<numba.core.ir.Assign object at 0x708752b436a0>,
                              292)],
             '$const306.2': [(<numba.core.ir.Assign object at 0x708752b49060>,
                              302)],
             '$const320.8': [(<numba.core.ir.Assign object at 0x708752b49960>,
                              302)],
             '$const328.0': [(<numba.core.ir.Assign object at 0x708752b4a020>,
                              328)],
             '$const332.0': [(<numba.core.ir.Assign object at 0x708752b4a440>,
                              332)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x708752fff730>,
                            0)],
             '$const40.20': [(<numba.core.ir.Assign object at 0x7087532c5c60>,
                              0)],
             '$const46.22': [(<numba.core.ir.Assign object at 0x708752fb7c10>,
                              0)],
             '$const54.27': [(<numba.core.ir.Assign object at 0x708752d00d00>,
                              0)],
             '$const64.32': [(<numba.core.ir.Assign object at 0x708752d02d40>,
                              0)],
             '$const74.37': [(<numba.core.ir.Assign object at 0x708752d02860>,
                              0)],
             'avgn': [(<numba.core.ir.Assign object at 0x708752b433d0>, 212)],
             'bool104': [(<numba.core.ir.Assign object at 0x708752b192a0>, 0)],
             'bool132': [(<numba.core.ir.Assign object at 0x708752b1a200>,
                          120)],
             'bool200': [(<numba.core.ir.Assign object at 0x708752b411e0>,
                          134)],
             'bool290': [(<numba.core.ir.Assign object at 0x708752b48ac0>,
                          212)],
             'bool326': [(<numba.core.ir.Assign object at 0x708752b49de0>,
                          302)],
             'delta': [(<numba.core.ir.Assign object at 0x70875302d1e0>, 0)],
             'maxn': [(<numba.core.ir.Assign object at 0x708752b402b0>, 134)],
             'n': [(<numba.core.ir.Assign object at 0x708752b18790>, 106),
                   (<numba.core.ir.Assign object at 0x708752b19720>, 116),
                   (<numba.core.ir.Assign object at 0x708752b413c0>, 202),
                   (<numba.core.ir.Assign object at 0x708752b48040>, 292),
                   (<numba.core.ir.Assign object at 0x708752b49450>, 302)],
             'peaks': [(<numba.core.ir.Assign object at 0x70875302dd50>, 0)],
             'post_avg': [(<numba.core.ir.Assign object at 0x70875302d2a0>, 0)],
             'post_max': [(<numba.core.ir.Assign object at 0x708752e3fac0>, 0)],
             'pre_avg': [(<numba.core.ir.Assign object at 0x70875302d330>, 0)],
             'pre_max': [(<numba.core.ir.Assign object at 0x708752e3d2d0>, 0)],
             'wait': [(<numba.core.ir.Assign object at 0x70875302f910>, 0)],
             'x': [(<numba.core.ir.Assign object at 0x708752e3df90>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x708752b1abc0>
numba.core.ssa - DEBUG - Fix SSA violator on var n
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e3d4e0>
numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
numba.core.ssa - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
numba.core.ssa - DEBUG - on stmt: post_max = arg(2, name=post_max)
numba.core.ssa - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
numba.core.ssa - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
numba.core.ssa - DEBUG - on stmt: delta = arg(5, name=delta)
numba.core.ssa - DEBUG - on stmt: wait = arg(6, name=wait)
numba.core.ssa - DEBUG - on stmt: peaks = arg(7, name=peaks)
numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $8load_global.3 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $10load_method.4 = getattr(value=$8load_global.3, attr=max)
numba.core.ssa - DEBUG - on stmt: $const14.6 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $16load_global.7 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $22load_attr.10 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const24.11 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1209), Var($26binary_subscr.12, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $30build_slice.14 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $30build_slice.15 = call $30build_slice.14($const14.6, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6, utils.py:1221), Var($28call_function.13, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17
numba.core.ssa - DEBUG - on stmt: $const40.20 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: peaks[0] = $36compare_op.18
numba.core.ssa - DEBUG - on stmt: $const46.22 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $const54.27 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $58load_global.29 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $60load_method.30 = getattr(value=$58load_global.29, attr=mean)
numba.core.ssa - DEBUG - on stmt: $const64.32 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $66load_global.33 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $72load_attr.36 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const74.37 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1209), Var($76binary_subscr.38, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $80build_slice.40 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $80build_slice.41 = call $80build_slice.40($const64.32, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32, utils.py:1222), Var($78call_function.39, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $88binary_add.45 = $84call_method.43 + delta
numba.core.ssa - DEBUG - on stmt: $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45
numba.core.ssa - DEBUG - on stmt: $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: peaks[0] = $92inplace_and.47
numba.core.ssa - DEBUG - on stmt: $const100.49 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: bool104 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $104pred, 106, 116
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 106
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e3d4e0>
numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: n = wait + $const108.1
numba.core.ssa - DEBUG - first assign: n
numba.core.ssa - DEBUG - replaced with: n = wait + $const108.1
numba.core.ssa - DEBUG - on stmt: jump 120
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 116
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e3d4e0>
numba.core.ssa - DEBUG - on stmt: n = const(int, 1)
numba.core.ssa - DEBUG - replaced with: n.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: jump 120
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 120
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e3d4e0>
numba.core.ssa - DEBUG - on stmt: $124load_attr.2 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const126.3 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $130compare_op.5 = n < $128binary_subscr.4
numba.core.ssa - DEBUG - on stmt: bool132 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $132pred, 134, 332
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 134
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e3d4e0>
numba.core.ssa - DEBUG - on stmt: $134load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $136load_method.1 = getattr(value=$134load_global.0, attr=max)
numba.core.ssa - DEBUG - on stmt: $140load_global.3 = global(max: <built-in function max>)
numba.core.ssa - DEBUG - on stmt: $const142.4 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $148binary_subtract.7 = n - pre_max
numba.core.ssa - DEBUG - on stmt: $150call_function.8 = call $140load_global.3($const142.4, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4, utils.py:1230), Var($148binary_subtract.7, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $152load_global.9 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $158binary_add.12 = n + post_max
numba.core.ssa - DEBUG - on stmt: $162load_attr.14 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const164.15 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1230), Var($166binary_subscr.16, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $170build_slice.18 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1230), Var($168call_function.17, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $186compare_op.26 = $182binary_subscr.24 == maxn
numba.core.ssa - DEBUG - on stmt: peaks[n] = $186compare_op.26
numba.core.ssa - DEBUG - on stmt: $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $200pred, 212, 202
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 202
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e3d4e0>
numba.core.ssa - DEBUG - on stmt: $const204.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: n = $206inplace_add.2
numba.core.ssa - DEBUG - replaced with: n.2 = $206inplace_add.2
numba.core.ssa - DEBUG - on stmt: jump 333
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 212
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e3d4e0>
numba.core.ssa - DEBUG - on stmt: $212load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $214load_method.1 = getattr(value=$212load_global.0, attr=mean)
numba.core.ssa - DEBUG - on stmt: $218load_global.3 = global(max: <built-in function max>)
numba.core.ssa - DEBUG - on stmt: $const220.4 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $226binary_subtract.7 = n - pre_avg
numba.core.ssa - DEBUG - on stmt: $228call_function.8 = call $218load_global.3($const220.4, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4, utils.py:1239), Var($226binary_subtract.7, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $230load_global.9 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $236binary_add.12 = n + post_avg
numba.core.ssa - DEBUG - on stmt: $240load_attr.14 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const242.15 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1239), Var($244binary_subscr.16, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $248build_slice.18 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1239), Var($246call_function.17, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $274binary_add.32 = avgn + delta
numba.core.ssa - DEBUG - on stmt: $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32
numba.core.ssa - DEBUG - on stmt: $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: peaks[n] = $278inplace_and.34
numba.core.ssa - DEBUG - on stmt: $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $290pred, 302, 292
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 292
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e3d4e0>
numba.core.ssa - DEBUG - on stmt: $const294.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: n = $296inplace_add.2
numba.core.ssa - DEBUG - replaced with: n.3 = $296inplace_add.2
numba.core.ssa - DEBUG - on stmt: jump 333
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e3d4e0>
numba.core.ssa - DEBUG - on stmt: $const306.2 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $308binary_add.3 = wait + $const306.2
numba.core.ssa - DEBUG - on stmt: $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: n = $310inplace_add.4
numba.core.ssa - DEBUG - replaced with: n.4 = $310inplace_add.4
numba.core.ssa - DEBUG - on stmt: $318load_attr.7 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const320.8 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $324compare_op.10 = n < $322binary_subscr.9
numba.core.ssa - DEBUG - on stmt: bool326 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $326pred, 134, 328
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 328
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e3d4e0>
numba.core.ssa - DEBUG - on stmt: $const328.0 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $330return_value.1 = cast(value=$const328.0)
numba.core.ssa - DEBUG - on stmt: return $330return_value.1
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 332
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e3d4e0>
numba.core.ssa - DEBUG - on stmt: $const332.0 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $334return_value.1 = cast(value=$const332.0)
numba.core.ssa - DEBUG - on stmt: return $334return_value.1
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 333
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e3d4e0>
numba.core.ssa - DEBUG - on stmt: jump 120
numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {106: [<numba.core.ir.Assign object at 0x708752fc45e0>],
             116: [<numba.core.ir.Assign object at 0x708752b4bd30>],
             202: [<numba.core.ir.Assign object at 0x708752b4bb50>],
             292: [<numba.core.ir.Assign object at 0x708752b4b9d0>],
             302: [<numba.core.ir.Assign object at 0x708752b4abf0>]})
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e3d4e0>
numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
numba.core.ssa - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
numba.core.ssa - DEBUG - on stmt: post_max = arg(2, name=post_max)
numba.core.ssa - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
numba.core.ssa - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
numba.core.ssa - DEBUG - on stmt: delta = arg(5, name=delta)
numba.core.ssa - DEBUG - on stmt: wait = arg(6, name=wait)
numba.core.ssa - DEBUG - on stmt: peaks = arg(7, name=peaks)
numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $8load_global.3 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $10load_method.4 = getattr(value=$8load_global.3, attr=max)
numba.core.ssa - DEBUG - on stmt: $const14.6 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $16load_global.7 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $22load_attr.10 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const24.11 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1209), Var($26binary_subscr.12, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $30build_slice.14 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $30build_slice.15 = call $30build_slice.14($const14.6, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6, utils.py:1221), Var($28call_function.13, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17
numba.core.ssa - DEBUG - on stmt: $const40.20 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: peaks[0] = $36compare_op.18
numba.core.ssa - DEBUG - on stmt: $const46.22 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $const54.27 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $58load_global.29 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $60load_method.30 = getattr(value=$58load_global.29, attr=mean)
numba.core.ssa - DEBUG - on stmt: $const64.32 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $66load_global.33 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $72load_attr.36 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const74.37 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1209), Var($76binary_subscr.38, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $80build_slice.40 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $80build_slice.41 = call $80build_slice.40($const64.32, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32, utils.py:1222), Var($78call_function.39, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $88binary_add.45 = $84call_method.43 + delta
numba.core.ssa - DEBUG - on stmt: $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45
numba.core.ssa - DEBUG - on stmt: $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: peaks[0] = $92inplace_and.47
numba.core.ssa - DEBUG - on stmt: $const100.49 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: bool104 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $104pred, 106, 116
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 106
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e3d4e0>
numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: n = wait + $const108.1
numba.core.ssa - DEBUG - on stmt: jump 120
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 116
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e3d4e0>
numba.core.ssa - DEBUG - on stmt: n.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: jump 120
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 120
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e3d4e0>
numba.core.ssa - DEBUG - on stmt: $124load_attr.2 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const126.3 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $130compare_op.5 = n < $128binary_subscr.4
numba.core.ssa - DEBUG - find_def var='n' stmt=$130compare_op.5 = n < $128binary_subscr.4
numba.core.ssa - DEBUG - find_def_from_top label 120
numba.core.ssa - DEBUG - insert phi node n.5 = phi(incoming_values=[], incoming_blocks=[]) at 120
numba.core.ssa - DEBUG - find_def_from_bottom label 106
numba.core.ssa - DEBUG - incoming_def n = wait + $const108.1
numba.core.ssa - DEBUG - find_def_from_bottom label 116
numba.core.ssa - DEBUG - incoming_def n.1 = const(int, 1)
numba.core.ssa - DEBUG - find_def_from_bottom label 333
numba.core.ssa - DEBUG - find_def_from_top label 333
numba.core.ssa - DEBUG - insert phi node n.6 = phi(incoming_values=[], incoming_blocks=[]) at 333
numba.core.ssa - DEBUG - find_def_from_bottom label 202
numba.core.ssa - DEBUG - incoming_def n.2 = $206inplace_add.2
numba.core.ssa - DEBUG - find_def_from_bottom label 292
numba.core.ssa - DEBUG - incoming_def n.3 = $296inplace_add.2
numba.core.ssa - DEBUG - incoming_def n.6 = phi(incoming_values=[Var(n.2, utils.py:1236), Var(n.3, utils.py:1243)], incoming_blocks=[202, 292])
numba.core.ssa - DEBUG - replaced with: $130compare_op.5 = n.5 < $128binary_subscr.4
numba.core.ssa - DEBUG - on stmt: bool132 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $132pred, 134, 332
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 134
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e3d4e0>
numba.core.ssa - DEBUG - on stmt: $134load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $136load_method.1 = getattr(value=$134load_global.0, attr=max)
numba.core.ssa - DEBUG - on stmt: $140load_global.3 = global(max: <built-in function max>)
numba.core.ssa - DEBUG - on stmt: $const142.4 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $148binary_subtract.7 = n - pre_max
numba.core.ssa - DEBUG - find_def var='n' stmt=$148binary_subtract.7 = n - pre_max
numba.core.ssa - DEBUG - find_def_from_top label 134
numba.core.ssa - DEBUG - insert phi node n.7 = phi(incoming_values=[], incoming_blocks=[]) at 134
numba.core.ssa - DEBUG - find_def_from_bottom label 120
numba.core.ssa - DEBUG - incoming_def n.5 = phi(incoming_values=[Var(n, utils.py:1225), Var(n.1, utils.py:1227), Var(n.6, utils.py:1229)], incoming_blocks=[106, 116, 333])
numba.core.ssa - DEBUG - find_def_from_bottom label 302
numba.core.ssa - DEBUG - incoming_def n.4 = $310inplace_add.4
numba.core.ssa - DEBUG - replaced with: $148binary_subtract.7 = n.7 - pre_max
numba.core.ssa - DEBUG - on stmt: $150call_function.8 = call $140load_global.3($const142.4, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4, utils.py:1230), Var($148binary_subtract.7, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $152load_global.9 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $158binary_add.12 = n + post_max
numba.core.ssa - DEBUG - find_def var='n' stmt=$158binary_add.12 = n + post_max
numba.core.ssa - DEBUG - replaced with: $158binary_add.12 = n.7 + post_max
numba.core.ssa - DEBUG - on stmt: $162load_attr.14 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const164.15 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1230), Var($166binary_subscr.16, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $170build_slice.18 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1230), Var($168call_function.17, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - find_def var='n' stmt=$182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - replaced with: $182binary_subscr.24 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $186compare_op.26 = $182binary_subscr.24 == maxn
numba.core.ssa - DEBUG - on stmt: peaks[n] = $186compare_op.26
numba.core.ssa - DEBUG - find_def var='n' stmt=peaks[n] = $186compare_op.26
numba.core.ssa - DEBUG - replaced with: peaks[n.7] = $186compare_op.26
numba.core.ssa - DEBUG - on stmt: $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - find_def var='n' stmt=$198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - replaced with: $198binary_subscr.31 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $200pred, 212, 202
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 202
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e3d4e0>
numba.core.ssa - DEBUG - on stmt: $const204.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def var='n' stmt=$206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def_from_top label 202
numba.core.ssa - DEBUG - idom 134 from label 202
numba.core.ssa - DEBUG - find_def_from_bottom label 134
numba.core.ssa - DEBUG - replaced with: $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: n.2 = $206inplace_add.2
numba.core.ssa - DEBUG - on stmt: jump 333
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 212
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e3d4e0>
numba.core.ssa - DEBUG - on stmt: $212load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $214load_method.1 = getattr(value=$212load_global.0, attr=mean)
numba.core.ssa - DEBUG - on stmt: $218load_global.3 = global(max: <built-in function max>)
numba.core.ssa - DEBUG - on stmt: $const220.4 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $226binary_subtract.7 = n - pre_avg
numba.core.ssa - DEBUG - find_def var='n' stmt=$226binary_subtract.7 = n - pre_avg
numba.core.ssa - DEBUG - find_def_from_top label 212
numba.core.ssa - DEBUG - idom 134 from label 212
numba.core.ssa - DEBUG - find_def_from_bottom label 134
numba.core.ssa - DEBUG - replaced with: $226binary_subtract.7 = n.7 - pre_avg
numba.core.ssa - DEBUG - on stmt: $228call_function.8 = call $218load_global.3($const220.4, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4, utils.py:1239), Var($226binary_subtract.7, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $230load_global.9 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $236binary_add.12 = n + post_avg
numba.core.ssa - DEBUG - find_def var='n' stmt=$236binary_add.12 = n + post_avg
numba.core.ssa - DEBUG - find_def_from_top label 212
numba.core.ssa - DEBUG - idom 134 from label 212
numba.core.ssa - DEBUG - find_def_from_bottom label 134
numba.core.ssa - DEBUG - replaced with: $236binary_add.12 = n.7 + post_avg
numba.core.ssa - DEBUG - on stmt: $240load_attr.14 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const242.15 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1239), Var($244binary_subscr.16, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $248build_slice.18 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1239), Var($246call_function.17, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - find_def var='n' stmt=$262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - find_def_from_top label 212
numba.core.ssa - DEBUG - idom 134 from label 212
numba.core.ssa - DEBUG - find_def_from_bottom label 134
numba.core.ssa - DEBUG - replaced with: $262binary_subscr.26 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - find_def var='n' stmt=$268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - find_def_from_top label 212
numba.core.ssa - DEBUG - idom 134 from label 212
numba.core.ssa - DEBUG - find_def_from_bottom label 134
numba.core.ssa - DEBUG - replaced with: $268binary_subscr.29 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $274binary_add.32 = avgn + delta
numba.core.ssa - DEBUG - on stmt: $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32
numba.core.ssa - DEBUG - on stmt: $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: peaks[n] = $278inplace_and.34
numba.core.ssa - DEBUG - find_def var='n' stmt=peaks[n] = $278inplace_and.34
numba.core.ssa - DEBUG - find_def_from_top label 212
numba.core.ssa - DEBUG - idom 134 from label 212
numba.core.ssa - DEBUG - find_def_from_bottom label 134
numba.core.ssa - DEBUG - replaced with: peaks[n.7] = $278inplace_and.34
numba.core.ssa - DEBUG - on stmt: $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - find_def var='n' stmt=$288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - find_def_from_top label 212
numba.core.ssa - DEBUG - idom 134 from label 212
numba.core.ssa - DEBUG - find_def_from_bottom label 134
numba.core.ssa - DEBUG - replaced with: $288binary_subscr.37 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $290pred, 302, 292
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 292
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e3d4e0>
numba.core.ssa - DEBUG - on stmt: $const294.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def var='n' stmt=$296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def_from_top label 292
numba.core.ssa - DEBUG - idom 212 from label 292
numba.core.ssa - DEBUG - find_def_from_bottom label 212
numba.core.ssa - DEBUG - find_def_from_top label 212
numba.core.ssa - DEBUG - idom 134 from label 212
numba.core.ssa - DEBUG - find_def_from_bottom label 134
numba.core.ssa - DEBUG - replaced with: $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: n.3 = $296inplace_add.2
numba.core.ssa - DEBUG - on stmt: jump 333
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e3d4e0>
numba.core.ssa - DEBUG - on stmt: $const306.2 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $308binary_add.3 = wait + $const306.2
numba.core.ssa - DEBUG - on stmt: $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def var='n' stmt=$310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def_from_top label 302
numba.core.ssa - DEBUG - idom 212 from label 302
numba.core.ssa - DEBUG - find_def_from_bottom label 212
numba.core.ssa - DEBUG - find_def_from_top label 212
numba.core.ssa - DEBUG - idom 134 from label 212
numba.core.ssa - DEBUG - find_def_from_bottom label 134
numba.core.ssa - DEBUG - replaced with: $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: n.4 = $310inplace_add.4
numba.core.ssa - DEBUG - on stmt: $318load_attr.7 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const320.8 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $324compare_op.10 = n < $322binary_subscr.9
numba.core.ssa - DEBUG - find_def var='n' stmt=$324compare_op.10 = n < $322binary_subscr.9
numba.core.ssa - DEBUG - replaced with: $324compare_op.10 = n.4 < $322binary_subscr.9
numba.core.ssa - DEBUG - on stmt: bool326 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $326pred, 134, 328
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 328
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e3d4e0>
numba.core.ssa - DEBUG - on stmt: $const328.0 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $330return_value.1 = cast(value=$const328.0)
numba.core.ssa - DEBUG - on stmt: return $330return_value.1
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 332
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e3d4e0>
numba.core.ssa - DEBUG - on stmt: $const332.0 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $334return_value.1 = cast(value=$const332.0)
numba.core.ssa - DEBUG - on stmt: return $334return_value.1
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 333
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e3d4e0>
numba.core.ssa - DEBUG - on stmt: jump 120
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=570)
           2	LOAD_FAST(arg=0, lineno=571)
           4	LOAD_ATTR(arg=0, lineno=571)
           6	LOAD_CONST(arg=1, lineno=571)
           8	COMPARE_OP(arg=2, lineno=571)
          10	POP_JUMP_IF_FALSE(arg=11, lineno=571)
          12	LOAD_GLOBAL(arg=1, lineno=572)
          14	LOAD_CONST(arg=2, lineno=572)
          16	CALL_FUNCTION(arg=1, lineno=572)
          18	RAISE_VARARGS(arg=1, lineno=572)
>         20	LOAD_GLOBAL(arg=2, lineno=575)
          22	LOAD_METHOD(arg=3, lineno=575)
          24	LOAD_FAST(arg=0, lineno=575)
          26	CALL_METHOD(arg=1, lineno=575)
          28	STORE_FAST(arg=1, lineno=575)
          30	LOAD_GLOBAL(arg=4, lineno=576)
          32	LOAD_FAST(arg=1, lineno=576)
          34	CALL_FUNCTION(arg=1, lineno=576)
          36	LOAD_METHOD(arg=5, lineno=576)
          38	LOAD_CONST(arg=1, lineno=576)
          40	CALL_METHOD(arg=1, lineno=576)
          42	STORE_FAST(arg=2, lineno=576)
          44	LOAD_DEREF(arg=1, lineno=577)
          46	LOAD_FAST(arg=2, lineno=577)
          48	CALL_FUNCTION(arg=1, lineno=577)
          50	POP_JUMP_IF_FALSE(arg=29, lineno=577)
          52	LOAD_FAST(arg=2, lineno=578)
          54	RETURN_VALUE(arg=None, lineno=578)
>         56	LOAD_FAST(arg=1, lineno=580)
          58	GET_ITER(arg=None, lineno=580)
>         60	FOR_ITER(arg=21, lineno=580)
          62	STORE_FAST(arg=3, lineno=580)
          64	LOAD_FAST(arg=3, lineno=581)
          66	LOAD_METHOD(arg=6, lineno=581)
          68	CALL_METHOD(arg=0, lineno=581)
          70	STORE_FAST(arg=4, lineno=581)
          72	LOAD_DEREF(arg=1, lineno=582)
          74	LOAD_FAST(arg=4, lineno=582)
          76	CALL_FUNCTION(arg=1, lineno=582)
          78	POP_JUMP_IF_FALSE(arg=45, lineno=582)
          80	LOAD_FAST(arg=4, lineno=583)
          82	ROT_TWO(arg=None, lineno=583)
          84	POP_TOP(arg=None, lineno=583)
          86	RETURN_VALUE(arg=None, lineno=583)
>         88	LOAD_DEREF(arg=0, lineno=584)
          90	LOAD_FAST(arg=4, lineno=584)
          92	LOAD_FAST(arg=2, lineno=584)
          94	CALL_FUNCTION(arg=2, lineno=584)
          96	POP_JUMP_IF_FALSE(arg=52, lineno=584)
          98	LOAD_FAST(arg=4, lineno=585)
         100	STORE_FAST(arg=2, lineno=585)
>        102	JUMP_ABSOLUTE(arg=31, lineno=585)
>        104	LOAD_FAST(arg=2, lineno=586)
         106	RETURN_VALUE(arg=None, lineno=586)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=570)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=571)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=571)
numba.core.byteflow - DEBUG - stack ['$a2.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=571)
numba.core.byteflow - DEBUG - stack ['$4load_attr.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=COMPARE_OP(arg=2, lineno=571)
numba.core.byteflow - DEBUG - stack ['$4load_attr.1', '$const6.2']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=POP_JUMP_IF_FALSE(arg=11, lineno=571)
numba.core.byteflow - DEBUG - stack ['$8compare_op.3']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=12, stack=(), blockstack=(), npush=0), Edge(pc=20, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=12 nstack_initial=0), State(pc_initial=20 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=12 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_GLOBAL(arg=1, lineno=572)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=572)
numba.core.byteflow - DEBUG - stack ['$12load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=16, inst=CALL_FUNCTION(arg=1, lineno=572)
numba.core.byteflow - DEBUG - stack ['$12load_global.0', '$const14.1']
numba.core.byteflow - DEBUG - dispatch pc=18, inst=RAISE_VARARGS(arg=1, lineno=572)
numba.core.byteflow - DEBUG - stack ['$16call_function.2']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=20 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=20 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_GLOBAL(arg=2, lineno=575)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_METHOD(arg=3, lineno=575)
numba.core.byteflow - DEBUG - stack ['$20load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=575)
numba.core.byteflow - DEBUG - stack ['$22load_method.1']
numba.core.byteflow - DEBUG - dispatch pc=26, inst=CALL_METHOD(arg=1, lineno=575)
numba.core.byteflow - DEBUG - stack ['$22load_method.1', '$a24.2']
numba.core.byteflow - DEBUG - dispatch pc=28, inst=STORE_FAST(arg=1, lineno=575)
numba.core.byteflow - DEBUG - stack ['$26call_method.3']
numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_GLOBAL(arg=4, lineno=576)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=576)
numba.core.byteflow - DEBUG - stack ['$30load_global.4']
numba.core.byteflow - DEBUG - dispatch pc=34, inst=CALL_FUNCTION(arg=1, lineno=576)
numba.core.byteflow - DEBUG - stack ['$30load_global.4', '$it32.5']
numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_METHOD(arg=5, lineno=576)
numba.core.byteflow - DEBUG - stack ['$34call_function.6']
numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_CONST(arg=1, lineno=576)
numba.core.byteflow - DEBUG - stack ['$36load_method.7']
numba.core.byteflow - DEBUG - dispatch pc=40, inst=CALL_METHOD(arg=1, lineno=576)
numba.core.byteflow - DEBUG - stack ['$36load_method.7', '$const38.8']
numba.core.byteflow - DEBUG - dispatch pc=42, inst=STORE_FAST(arg=2, lineno=576)
numba.core.byteflow - DEBUG - stack ['$40call_method.9']
numba.core.byteflow - DEBUG - dispatch pc=44, inst=LOAD_DEREF(arg=1, lineno=577)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=46, inst=LOAD_FAST(arg=2, lineno=577)
numba.core.byteflow - DEBUG - stack ['$44load_deref.10']
numba.core.byteflow - DEBUG - dispatch pc=48, inst=CALL_FUNCTION(arg=1, lineno=577)
numba.core.byteflow - DEBUG - stack ['$44load_deref.10', '$max_value46.11']
numba.core.byteflow - DEBUG - dispatch pc=50, inst=POP_JUMP_IF_FALSE(arg=29, lineno=577)
numba.core.byteflow - DEBUG - stack ['$48call_function.12']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0), Edge(pc=56, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=56 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=2, lineno=578)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=54, inst=RETURN_VALUE(arg=None, lineno=578)
numba.core.byteflow - DEBUG - stack ['$max_value52.0']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=56 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=56 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=56, inst=LOAD_FAST(arg=1, lineno=580)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=58, inst=GET_ITER(arg=None, lineno=580)
numba.core.byteflow - DEBUG - stack ['$it56.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=60, stack=('$58get_iter.1',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=60 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi60.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=60 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=60, inst=FOR_ITER(arg=21, lineno=580)
numba.core.byteflow - DEBUG - stack ['$phi60.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=104, stack=(), blockstack=(), npush=0), Edge(pc=62, stack=('$phi60.0', '$60for_iter.2'), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=104 nstack_initial=0), State(pc_initial=62 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=104 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=104, inst=LOAD_FAST(arg=2, lineno=586)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=106, inst=RETURN_VALUE(arg=None, lineno=586)
numba.core.byteflow - DEBUG - stack ['$max_value104.0']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=62 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: ['$phi62.0', '$phi62.1']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=62 nstack_initial=2)
numba.core.byteflow - DEBUG - dispatch pc=62, inst=STORE_FAST(arg=3, lineno=580)
numba.core.byteflow - DEBUG - stack ['$phi62.0', '$phi62.1']
numba.core.byteflow - DEBUG - dispatch pc=64, inst=LOAD_FAST(arg=3, lineno=581)
numba.core.byteflow - DEBUG - stack ['$phi62.0']
numba.core.byteflow - DEBUG - dispatch pc=66, inst=LOAD_METHOD(arg=6, lineno=581)
numba.core.byteflow - DEBUG - stack ['$phi62.0', '$view64.2']
numba.core.byteflow - DEBUG - dispatch pc=68, inst=CALL_METHOD(arg=0, lineno=581)
numba.core.byteflow - DEBUG - stack ['$phi62.0', '$66load_method.3']
numba.core.byteflow - DEBUG - dispatch pc=70, inst=STORE_FAST(arg=4, lineno=581)
numba.core.byteflow - DEBUG - stack ['$phi62.0', '$68call_method.4']
numba.core.byteflow - DEBUG - dispatch pc=72, inst=LOAD_DEREF(arg=1, lineno=582)
numba.core.byteflow - DEBUG - stack ['$phi62.0']
numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=4, lineno=582)
numba.core.byteflow - DEBUG - stack ['$phi62.0', '$72load_deref.5']
numba.core.byteflow - DEBUG - dispatch pc=76, inst=CALL_FUNCTION(arg=1, lineno=582)
numba.core.byteflow - DEBUG - stack ['$phi62.0', '$72load_deref.5', '$v74.6']
numba.core.byteflow - DEBUG - dispatch pc=78, inst=POP_JUMP_IF_FALSE(arg=45, lineno=582)
numba.core.byteflow - DEBUG - stack ['$phi62.0', '$76call_function.7']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$phi62.0',), blockstack=(), npush=0), Edge(pc=88, stack=('$phi62.0',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1), State(pc_initial=88 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi80.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=80, inst=LOAD_FAST(arg=4, lineno=583)
numba.core.byteflow - DEBUG - stack ['$phi80.0']
numba.core.byteflow - DEBUG - dispatch pc=82, inst=ROT_TWO(arg=None, lineno=583)
numba.core.byteflow - DEBUG - stack ['$phi80.0', '$v80.1']
numba.core.byteflow - DEBUG - dispatch pc=84, inst=POP_TOP(arg=None, lineno=583)
numba.core.byteflow - DEBUG - stack ['$v80.1', '$phi80.0']
numba.core.byteflow - DEBUG - dispatch pc=86, inst=RETURN_VALUE(arg=None, lineno=583)
numba.core.byteflow - DEBUG - stack ['$v80.1']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=88 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi88.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=88 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=88, inst=LOAD_DEREF(arg=0, lineno=584)
numba.core.byteflow - DEBUG - stack ['$phi88.0']
numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_FAST(arg=4, lineno=584)
numba.core.byteflow - DEBUG - stack ['$phi88.0', '$88load_deref.1']
numba.core.byteflow - DEBUG - dispatch pc=92, inst=LOAD_FAST(arg=2, lineno=584)
numba.core.byteflow - DEBUG - stack ['$phi88.0', '$88load_deref.1', '$v90.2']
numba.core.byteflow - DEBUG - dispatch pc=94, inst=CALL_FUNCTION(arg=2, lineno=584)
numba.core.byteflow - DEBUG - stack ['$phi88.0', '$88load_deref.1', '$v90.2', '$max_value92.3']
numba.core.byteflow - DEBUG - dispatch pc=96, inst=POP_JUMP_IF_FALSE(arg=52, lineno=584)
numba.core.byteflow - DEBUG - stack ['$phi88.0', '$94call_function.4']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=98, stack=('$phi88.0',), blockstack=(), npush=0), Edge(pc=102, stack=('$phi88.0',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=98 nstack_initial=1), State(pc_initial=102 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi98.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=98 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=98, inst=LOAD_FAST(arg=4, lineno=585)
numba.core.byteflow - DEBUG - stack ['$phi98.0']
numba.core.byteflow - DEBUG - dispatch pc=100, inst=STORE_FAST(arg=2, lineno=585)
numba.core.byteflow - DEBUG - stack ['$phi98.0', '$v98.1']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=102, stack=('$phi98.0',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=1), State(pc_initial=102 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi102.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=102, inst=JUMP_ABSOLUTE(arg=31, lineno=585)
numba.core.byteflow - DEBUG - stack ['$phi102.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=60, stack=('$phi102.0',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=1), State(pc_initial=60 nstack_initial=1)])
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=60 nstack_initial=1)])
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=12 nstack_initial=0): set(),
             State(pc_initial=20 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=56 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=1): {'$phi60.0'},
             State(pc_initial=62 nstack_initial=2): {'$phi62.1'},
             State(pc_initial=80 nstack_initial=1): set(),
             State(pc_initial=88 nstack_initial=1): set(),
             State(pc_initial=98 nstack_initial=1): set(),
             State(pc_initial=102 nstack_initial=1): set(),
             State(pc_initial=104 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {'$phi60.0': State(pc_initial=56 nstack_initial=0),
 '$phi62.1': State(pc_initial=60 nstack_initial=1)}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$phi88.0', State(pc_initial=88 nstack_initial=1)),
                           ('$phi98.0', State(pc_initial=98 nstack_initial=1))},
             '$phi60.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0)),
                          ('$phi102.0',
                           State(pc_initial=102 nstack_initial=1))},
             '$phi62.0': {('$phi60.0', State(pc_initial=60 nstack_initial=1))},
             '$phi62.1': {('$60for_iter.2',
                           State(pc_initial=60 nstack_initial=1))},
             '$phi80.0': {('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi88.0': {('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi98.0': {('$phi88.0', State(pc_initial=88 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi60.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0)),
                          ('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi62.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0)),
                          ('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi62.1': {('$60for_iter.2',
                           State(pc_initial=60 nstack_initial=1))},
             '$phi80.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi88.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi98.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$58get_iter.1',
                            State(pc_initial=56 nstack_initial=0))},
             '$phi60.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi62.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi62.1': {('$60for_iter.2',
                           State(pc_initial=60 nstack_initial=1))},
             '$phi80.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi88.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi98.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$58get_iter.1',
                            State(pc_initial=56 nstack_initial=0))},
             '$phi60.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi62.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi62.1': {('$60for_iter.2',
                           State(pc_initial=60 nstack_initial=1))},
             '$phi80.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi88.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi98.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))}})
numba.core.byteflow - DEBUG - keep phismap: {'$phi60.0': {('$58get_iter.1', State(pc_initial=56 nstack_initial=0))},
 '$phi62.1': {('$60for_iter.2', State(pc_initial=60 nstack_initial=1))}}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=56 nstack_initial=0): {'$phi60.0': '$58get_iter.1'},
             State(pc_initial=60 nstack_initial=1): {'$phi62.1': '$60for_iter.2'}})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$a2.0'}), (4, {'item': '$a2.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2'}), (8, {'lhs': '$4load_attr.1', 'rhs': '$const6.2', 'res': '$8compare_op.3'}), (10, {'pred': '$8compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={12: (), 20: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=12 nstack_initial=0):
AdaptBlockInfo(insts=((12, {'res': '$12load_global.0'}), (14, {'res': '$const14.1'}), (16, {'func': '$12load_global.0', 'args': ['$const14.1'], 'res': '$16call_function.2'}), (18, {'exc': '$16call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=20 nstack_initial=0):
AdaptBlockInfo(insts=((20, {'res': '$20load_global.0'}), (22, {'item': '$20load_global.0', 'res': '$22load_method.1'}), (24, {'res': '$a24.2'}), (26, {'func': '$22load_method.1', 'args': ['$a24.2'], 'res': '$26call_method.3'}), (28, {'value': '$26call_method.3'}), (30, {'res': '$30load_global.4'}), (32, {'res': '$it32.5'}), (34, {'func': '$30load_global.4', 'args': ['$it32.5'], 'res': '$34call_function.6'}), (36, {'item': '$34call_function.6', 'res': '$36load_method.7'}), (38, {'res': '$const38.8'}), (40, {'func': '$36load_method.7', 'args': ['$const38.8'], 'res': '$40call_method.9'}), (42, {'value': '$40call_method.9'}), (44, {'res': '$44load_deref.10'}), (46, {'res': '$max_value46.11'}), (48, {'func': '$44load_deref.10', 'args': ['$max_value46.11'], 'res': '$48call_function.12'}), (50, {'pred': '$48call_function.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: (), 56: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$max_value52.0'}), (54, {'retval': '$max_value52.0', 'castval': '$54return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=56 nstack_initial=0):
AdaptBlockInfo(insts=((56, {'res': '$it56.0'}), (58, {'value': '$it56.0', 'res': '$58get_iter.1'})), outgoing_phis={'$phi60.0': '$58get_iter.1'}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: ('$58get_iter.1',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=60 nstack_initial=1):
AdaptBlockInfo(insts=((60, {'iterator': '$phi60.0', 'pair': '$60for_iter.1', 'indval': '$60for_iter.2', 'pred': '$60for_iter.3'}),), outgoing_phis={'$phi62.1': '$60for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={104: (), 62: ('$phi60.0', '$60for_iter.2')})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=62 nstack_initial=2):
AdaptBlockInfo(insts=((62, {'value': '$phi62.1'}), (64, {'res': '$view64.2'}), (66, {'item': '$view64.2', 'res': '$66load_method.3'}), (68, {'func': '$66load_method.3', 'args': [], 'res': '$68call_method.4'}), (70, {'value': '$68call_method.4'}), (72, {'res': '$72load_deref.5'}), (74, {'res': '$v74.6'}), (76, {'func': '$72load_deref.5', 'args': ['$v74.6'], 'res': '$76call_function.7'}), (78, {'pred': '$76call_function.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi62.0',), 88: ('$phi62.0',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'res': '$v80.1'}), (86, {'retval': '$v80.1', 'castval': '$86return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=88 nstack_initial=1):
AdaptBlockInfo(insts=((88, {'res': '$88load_deref.1'}), (90, {'res': '$v90.2'}), (92, {'res': '$max_value92.3'}), (94, {'func': '$88load_deref.1', 'args': ['$v90.2', '$max_value92.3'], 'res': '$94call_function.4'}), (96, {'pred': '$94call_function.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={98: ('$phi88.0',), 102: ('$phi88.0',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=98 nstack_initial=1):
AdaptBlockInfo(insts=((98, {'res': '$v98.1'}), (100, {'value': '$v98.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: ('$phi98.0',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=102 nstack_initial=1):
AdaptBlockInfo(insts=((102, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: ('$phi102.0',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=104 nstack_initial=0):
AdaptBlockInfo(insts=((104, {'res': '$max_value104.0'}), (106, {'retval': '$max_value104.0', 'castval': '$106return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    $4load_attr.1 = getattr(value=a, attr=size) ['$4load_attr.1', 'a']
    $const6.2 = const(int, 0)                ['$const6.2']
    $8compare_op.3 = $4load_attr.1 == $const6.2 ['$4load_attr.1', '$8compare_op.3', '$const6.2']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    branch $10pred, 12, 20                   ['$10pred']
label 12:
    $12load_global.0 = global(ValueError: <class 'ValueError'>) ['$12load_global.0']
    $const14.1 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const14.1']
    $16call_function.2 = call $12load_global.0($const14.1, func=$12load_global.0, args=[Var($const14.1, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16call_function.2', '$const14.1']
    raise $16call_function.2                 ['$16call_function.2']
label 20:
    $20load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.0']
    $22load_method.1 = getattr(value=$20load_global.0, attr=nditer) ['$20load_global.0', '$22load_method.1']
    it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.1', 'a', 'it']
    $30load_global.4 = global(next: <built-in function next>) ['$30load_global.4']
    $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.4', '$34call_function.6', 'it']
    $36load_method.7 = getattr(value=$34call_function.6, attr=take) ['$34call_function.6', '$36load_method.7']
    $const38.8 = const(int, 0)               ['$const38.8']
    max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_method.7', '$const38.8', 'max_value']
    $44load_deref.10 = freevar(pre_return_func: <function return_false at 0x708808b940d0>) ['$44load_deref.10']
    $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_deref.10', '$48call_function.12', 'max_value']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None) ['$48call_function.12', '$50pred', 'bool50']
    branch $50pred, 52, 56                   ['$50pred']
label 52:
    $54return_value.1 = cast(value=max_value) ['$54return_value.1', 'max_value']
    return $54return_value.1                 ['$54return_value.1']
label 56:
    $58get_iter.1 = getiter(value=it)        ['$58get_iter.1', 'it']
    $phi60.0 = $58get_iter.1                 ['$58get_iter.1', '$phi60.0']
    jump 60                                  []
label 60:
    $60for_iter.1 = iternext(value=$phi60.0) ['$60for_iter.1', '$phi60.0']
    $60for_iter.2 = pair_first(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.2']
    $60for_iter.3 = pair_second(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.3']
    $phi62.1 = $60for_iter.2                 ['$60for_iter.2', '$phi62.1']
    branch $60for_iter.3, 62, 104            ['$60for_iter.3']
label 62:
    view = $phi62.1                          ['$phi62.1', 'view']
    $66load_method.3 = getattr(value=view, attr=item) ['$66load_method.3', 'view']
    v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_method.3', 'v']
    $72load_deref.5 = freevar(pre_return_func: <function return_false at 0x708808b940d0>) ['$72load_deref.5']
    $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_deref.5', '$76call_function.7', 'v']
    bool78 = global(bool: <class 'bool'>)    ['bool78']
    $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None) ['$76call_function.7', '$78pred', 'bool78']
    branch $78pred, 80, 88                   ['$78pred']
label 80:
    $86return_value.2 = cast(value=v)        ['$86return_value.2', 'v']
    return $86return_value.2                 ['$86return_value.2']
label 88:
    $88load_deref.1 = freevar(comparator: <function max_comparator at 0x708808b2fb50>) ['$88load_deref.1']
    $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$88load_deref.1', '$94call_function.4', 'max_value', 'v']
    bool96 = global(bool: <class 'bool'>)    ['bool96']
    $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None) ['$94call_function.4', '$96pred', 'bool96']
    branch $96pred, 98, 102                  ['$96pred']
label 98:
    max_value = v                            ['max_value', 'v']
    jump 102                                 []
label 102:
    jump 60                                  []
label 104:
    $106return_value.1 = cast(value=max_value) ['$106return_value.1', 'max_value']
    return $106return_value.1                ['$106return_value.1']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752b75270>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: $4load_attr.1 = getattr(value=a, attr=size)
numba.core.ssa - DEBUG - on stmt: $const6.2 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $8compare_op.3 = $4load_attr.1 == $const6.2
numba.core.ssa - DEBUG - on stmt: bool10 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $10pred, 12, 20
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 12
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752b75270>
numba.core.ssa - DEBUG - on stmt: $12load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const14.1 = const(str, zero-size array to reduction operation maximum which has no identity)
numba.core.ssa - DEBUG - on stmt: $16call_function.2 = call $12load_global.0($const14.1, func=$12load_global.0, args=[Var($const14.1, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 20
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752b75270>
numba.core.ssa - DEBUG - on stmt: $20load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $22load_method.1 = getattr(value=$20load_global.0, attr=nditer)
numba.core.ssa - DEBUG - on stmt: it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $30load_global.4 = global(next: <built-in function next>)
numba.core.ssa - DEBUG - on stmt: $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $36load_method.7 = getattr(value=$34call_function.6, attr=take)
numba.core.ssa - DEBUG - on stmt: $const38.8 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $44load_deref.10 = freevar(pre_return_func: <function return_false at 0x708808b940d0>)
numba.core.ssa - DEBUG - on stmt: $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $50pred, 52, 56
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 52
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752b75270>
numba.core.ssa - DEBUG - on stmt: $54return_value.1 = cast(value=max_value)
numba.core.ssa - DEBUG - on stmt: return $54return_value.1
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 56
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752b75270>
numba.core.ssa - DEBUG - on stmt: $58get_iter.1 = getiter(value=it)
numba.core.ssa - DEBUG - on stmt: $phi60.0 = $58get_iter.1
numba.core.ssa - DEBUG - on stmt: jump 60
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 60
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752b75270>
numba.core.ssa - DEBUG - on stmt: $60for_iter.1 = iternext(value=$phi60.0)
numba.core.ssa - DEBUG - on stmt: $60for_iter.2 = pair_first(value=$60for_iter.1)
numba.core.ssa - DEBUG - on stmt: $60for_iter.3 = pair_second(value=$60for_iter.1)
numba.core.ssa - DEBUG - on stmt: $phi62.1 = $60for_iter.2
numba.core.ssa - DEBUG - on stmt: branch $60for_iter.3, 62, 104
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 62
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752b75270>
numba.core.ssa - DEBUG - on stmt: view = $phi62.1
numba.core.ssa - DEBUG - on stmt: $66load_method.3 = getattr(value=view, attr=item)
numba.core.ssa - DEBUG - on stmt: v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $72load_deref.5 = freevar(pre_return_func: <function return_false at 0x708808b940d0>)
numba.core.ssa - DEBUG - on stmt: $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: bool78 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $78pred, 80, 88
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 80
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752b75270>
numba.core.ssa - DEBUG - on stmt: $86return_value.2 = cast(value=v)
numba.core.ssa - DEBUG - on stmt: return $86return_value.2
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 88
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752b75270>
numba.core.ssa - DEBUG - on stmt: $88load_deref.1 = freevar(comparator: <function max_comparator at 0x708808b2fb50>)
numba.core.ssa - DEBUG - on stmt: $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: bool96 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $96pred, 98, 102
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 98
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752b75270>
numba.core.ssa - DEBUG - on stmt: max_value = v
numba.core.ssa - DEBUG - on stmt: jump 102
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 102
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752b75270>
numba.core.ssa - DEBUG - on stmt: jump 60
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 104
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752b75270>
numba.core.ssa - DEBUG - on stmt: $106return_value.1 = cast(value=max_value)
numba.core.ssa - DEBUG - on stmt: return $106return_value.1
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$106return_value.1': [(<numba.core.ir.Assign object at 0x708752b6a0e0>,
                                     104)],
             '$10pred': [(<numba.core.ir.Assign object at 0x708752b59db0>, 0)],
             '$12load_global.0': [(<numba.core.ir.Assign object at 0x708752b58eb0>,
                                   12)],
             '$16call_function.2': [(<numba.core.ir.Assign object at 0x708752b593f0>,
                                     12)],
             '$20load_global.0': [(<numba.core.ir.Assign object at 0x708752b59660>,
                                   20)],
             '$22load_method.1': [(<numba.core.ir.Assign object at 0x708752b5a080>,
                                   20)],
             '$30load_global.4': [(<numba.core.ir.Assign object at 0x708752b5a5c0>,
                                   20)],
             '$34call_function.6': [(<numba.core.ir.Assign object at 0x708752b5a8c0>,
                                     20)],
             '$36load_method.7': [(<numba.core.ir.Assign object at 0x708752b5a9e0>,
                                   20)],
             '$44load_deref.10': [(<numba.core.ir.Assign object at 0x708752b5af80>,
                                   20)],
             '$48call_function.12': [(<numba.core.ir.Assign object at 0x708752b5b280>,
                                      20)],
             '$4load_attr.1': [(<numba.core.ir.Assign object at 0x708752b4ffa0>,
                                0)],
             '$50pred': [(<numba.core.ir.Assign object at 0x708752b5b4c0>, 20)],
             '$54return_value.1': [(<numba.core.ir.Assign object at 0x708752b5b6a0>,
                                    52)],
             '$58get_iter.1': [(<numba.core.ir.Assign object at 0x708752b5ba00>,
                                56)],
             '$60for_iter.1': [(<numba.core.ir.Assign object at 0x708752b5bd30>,
                                60)],
             '$60for_iter.2': [(<numba.core.ir.Assign object at 0x708752b5be50>,
                                60)],
             '$60for_iter.3': [(<numba.core.ir.Assign object at 0x708752b5bf70>,
                                60)],
             '$66load_method.3': [(<numba.core.ir.Assign object at 0x708752b68520>,
                                   62)],
             '$72load_deref.5': [(<numba.core.ir.Assign object at 0x708752b68940>,
                                  62)],
             '$76call_function.7': [(<numba.core.ir.Assign object at 0x708752b68c40>,
                                     62)],
             '$78pred': [(<numba.core.ir.Assign object at 0x708752b68e80>, 62)],
             '$86return_value.2': [(<numba.core.ir.Assign object at 0x708752b69120>,
                                    80)],
             '$88load_deref.1': [(<numba.core.ir.Assign object at 0x708752b69360>,
                                  88)],
             '$8compare_op.3': [(<numba.core.ir.Assign object at 0x708752b5a020>,
                                 0)],
             '$94call_function.4': [(<numba.core.ir.Assign object at 0x708752b69780>,
                                     88)],
             '$96pred': [(<numba.core.ir.Assign object at 0x708752b699c0>, 88)],
             '$const14.1': [(<numba.core.ir.Assign object at 0x708752b59300>,
                             12)],
             '$const38.8': [(<numba.core.ir.Assign object at 0x708752b5ab60>,
                             20)],
             '$const6.2': [(<numba.core.ir.Assign object at 0x708752b59ae0>,
                            0)],
             '$phi60.0': [(<numba.core.ir.Assign object at 0x708752b5b910>,
                           56)],
             '$phi62.1': [(<numba.core.ir.Assign object at 0x708752b5bc70>,
                           60)],
             'a': [(<numba.core.ir.Assign object at 0x708752b4f700>, 0)],
             'bool10': [(<numba.core.ir.Assign object at 0x708752b59ed0>, 0)],
             'bool50': [(<numba.core.ir.Assign object at 0x708752b5b3a0>, 20)],
             'bool78': [(<numba.core.ir.Assign object at 0x708752b68d60>, 62)],
             'bool96': [(<numba.core.ir.Assign object at 0x708752b698a0>, 88)],
             'it': [(<numba.core.ir.Assign object at 0x708752b5a3b0>, 20)],
             'max_value': [(<numba.core.ir.Assign object at 0x708752b5ad70>,
                            20),
                           (<numba.core.ir.Assign object at 0x708752b69c30>,
                            98)],
             'v': [(<numba.core.ir.Assign object at 0x708752b68730>, 62)],
             'view': [(<numba.core.ir.Assign object at 0x708752b68280>, 62)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x708752b59b40>
numba.core.ssa - DEBUG - Fix SSA violator on var max_value
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752b59ab0>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: $4load_attr.1 = getattr(value=a, attr=size)
numba.core.ssa - DEBUG - on stmt: $const6.2 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $8compare_op.3 = $4load_attr.1 == $const6.2
numba.core.ssa - DEBUG - on stmt: bool10 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $10pred, 12, 20
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 12
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752b59ab0>
numba.core.ssa - DEBUG - on stmt: $12load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const14.1 = const(str, zero-size array to reduction operation maximum which has no identity)
numba.core.ssa - DEBUG - on stmt: $16call_function.2 = call $12load_global.0($const14.1, func=$12load_global.0, args=[Var($const14.1, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 20
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752b59ab0>
numba.core.ssa - DEBUG - on stmt: $20load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $22load_method.1 = getattr(value=$20load_global.0, attr=nditer)
numba.core.ssa - DEBUG - on stmt: it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $30load_global.4 = global(next: <built-in function next>)
numba.core.ssa - DEBUG - on stmt: $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $36load_method.7 = getattr(value=$34call_function.6, attr=take)
numba.core.ssa - DEBUG - on stmt: $const38.8 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - first assign: max_value
numba.core.ssa - DEBUG - replaced with: max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $44load_deref.10 = freevar(pre_return_func: <function return_false at 0x708808b940d0>)
numba.core.ssa - DEBUG - on stmt: $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $50pred, 52, 56
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 52
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752b59ab0>
numba.core.ssa - DEBUG - on stmt: $54return_value.1 = cast(value=max_value)
numba.core.ssa - DEBUG - on stmt: return $54return_value.1
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 56
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752b59ab0>
numba.core.ssa - DEBUG - on stmt: $58get_iter.1 = getiter(value=it)
numba.core.ssa - DEBUG - on stmt: $phi60.0 = $58get_iter.1
numba.core.ssa - DEBUG - on stmt: jump 60
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 60
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752b59ab0>
numba.core.ssa - DEBUG - on stmt: $60for_iter.1 = iternext(value=$phi60.0)
numba.core.ssa - DEBUG - on stmt: $60for_iter.2 = pair_first(value=$60for_iter.1)
numba.core.ssa - DEBUG - on stmt: $60for_iter.3 = pair_second(value=$60for_iter.1)
numba.core.ssa - DEBUG - on stmt: $phi62.1 = $60for_iter.2
numba.core.ssa - DEBUG - on stmt: branch $60for_iter.3, 62, 104
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 62
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752b59ab0>
numba.core.ssa - DEBUG - on stmt: view = $phi62.1
numba.core.ssa - DEBUG - on stmt: $66load_method.3 = getattr(value=view, attr=item)
numba.core.ssa - DEBUG - on stmt: v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $72load_deref.5 = freevar(pre_return_func: <function return_false at 0x708808b940d0>)
numba.core.ssa - DEBUG - on stmt: $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: bool78 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $78pred, 80, 88
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752b59ab0>
numba.core.ssa - DEBUG - on stmt: $86return_value.2 = cast(value=v)
numba.core.ssa - DEBUG - on stmt: return $86return_value.2
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 88
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752b59ab0>
numba.core.ssa - DEBUG - on stmt: $88load_deref.1 = freevar(comparator: <function max_comparator at 0x708808b2fb50>)
numba.core.ssa - DEBUG - on stmt: $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: bool96 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $96pred, 98, 102
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752b59ab0>
numba.core.ssa - DEBUG - on stmt: max_value = v
numba.core.ssa - DEBUG - replaced with: max_value.1 = v
numba.core.ssa - DEBUG - on stmt: jump 102
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 102
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752b59ab0>
numba.core.ssa - DEBUG - on stmt: jump 60
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 104
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752b59ab0>
numba.core.ssa - DEBUG - on stmt: $106return_value.1 = cast(value=max_value)
numba.core.ssa - DEBUG - on stmt: return $106return_value.1
numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {20: [<numba.core.ir.Assign object at 0x708752b6b310>],
             98: [<numba.core.ir.Assign object at 0x708752b6baf0>]})
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752b59ab0>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: $4load_attr.1 = getattr(value=a, attr=size)
numba.core.ssa - DEBUG - on stmt: $const6.2 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $8compare_op.3 = $4load_attr.1 == $const6.2
numba.core.ssa - DEBUG - on stmt: bool10 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $10pred, 12, 20
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 12
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752b59ab0>
numba.core.ssa - DEBUG - on stmt: $12load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const14.1 = const(str, zero-size array to reduction operation maximum which has no identity)
numba.core.ssa - DEBUG - on stmt: $16call_function.2 = call $12load_global.0($const14.1, func=$12load_global.0, args=[Var($const14.1, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 20
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752b59ab0>
numba.core.ssa - DEBUG - on stmt: $20load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $22load_method.1 = getattr(value=$20load_global.0, attr=nditer)
numba.core.ssa - DEBUG - on stmt: it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $30load_global.4 = global(next: <built-in function next>)
numba.core.ssa - DEBUG - on stmt: $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $36load_method.7 = getattr(value=$34call_function.6, attr=take)
numba.core.ssa - DEBUG - on stmt: $const38.8 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $44load_deref.10 = freevar(pre_return_func: <function return_false at 0x708808b940d0>)
numba.core.ssa - DEBUG - on stmt: $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - find_def var='max_value' stmt=$48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $50pred, 52, 56
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 52
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752b59ab0>
numba.core.ssa - DEBUG - on stmt: $54return_value.1 = cast(value=max_value)
numba.core.ssa - DEBUG - find_def var='max_value' stmt=$54return_value.1 = cast(value=max_value)
numba.core.ssa - DEBUG - find_def_from_top label 52
numba.core.ssa - DEBUG - idom 20 from label 52
numba.core.ssa - DEBUG - find_def_from_bottom label 20
numba.core.ssa - DEBUG - on stmt: return $54return_value.1
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 56
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752b59ab0>
numba.core.ssa - DEBUG - on stmt: $58get_iter.1 = getiter(value=it)
numba.core.ssa - DEBUG - on stmt: $phi60.0 = $58get_iter.1
numba.core.ssa - DEBUG - on stmt: jump 60
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 60
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752b59ab0>
numba.core.ssa - DEBUG - on stmt: $60for_iter.1 = iternext(value=$phi60.0)
numba.core.ssa - DEBUG - on stmt: $60for_iter.2 = pair_first(value=$60for_iter.1)
numba.core.ssa - DEBUG - on stmt: $60for_iter.3 = pair_second(value=$60for_iter.1)
numba.core.ssa - DEBUG - on stmt: $phi62.1 = $60for_iter.2
numba.core.ssa - DEBUG - on stmt: branch $60for_iter.3, 62, 104
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 62
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752b59ab0>
numba.core.ssa - DEBUG - on stmt: view = $phi62.1
numba.core.ssa - DEBUG - on stmt: $66load_method.3 = getattr(value=view, attr=item)
numba.core.ssa - DEBUG - on stmt: v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $72load_deref.5 = freevar(pre_return_func: <function return_false at 0x708808b940d0>)
numba.core.ssa - DEBUG - on stmt: $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: bool78 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $78pred, 80, 88
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752b59ab0>
numba.core.ssa - DEBUG - on stmt: $86return_value.2 = cast(value=v)
numba.core.ssa - DEBUG - on stmt: return $86return_value.2
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 88
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752b59ab0>
numba.core.ssa - DEBUG - on stmt: $88load_deref.1 = freevar(comparator: <function max_comparator at 0x708808b2fb50>)
numba.core.ssa - DEBUG - on stmt: $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - find_def var='max_value' stmt=$94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - find_def_from_top label 88
numba.core.ssa - DEBUG - idom 62 from label 88
numba.core.ssa - DEBUG - find_def_from_bottom label 62
numba.core.ssa - DEBUG - find_def_from_top label 62
numba.core.ssa - DEBUG - idom 60 from label 62
numba.core.ssa - DEBUG - find_def_from_bottom label 60
numba.core.ssa - DEBUG - find_def_from_top label 60
numba.core.ssa - DEBUG - insert phi node max_value.2 = phi(incoming_values=[], incoming_blocks=[]) at 60
numba.core.ssa - DEBUG - find_def_from_bottom label 56
numba.core.ssa - DEBUG - find_def_from_top label 56
numba.core.ssa - DEBUG - idom 20 from label 56
numba.core.ssa - DEBUG - find_def_from_bottom label 20
numba.core.ssa - DEBUG - incoming_def max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - find_def_from_bottom label 102
numba.core.ssa - DEBUG - find_def_from_top label 102
numba.core.ssa - DEBUG - insert phi node max_value.3 = phi(incoming_values=[], incoming_blocks=[]) at 102
numba.core.ssa - DEBUG - find_def_from_bottom label 88
numba.core.ssa - DEBUG - find_def_from_top label 88
numba.core.ssa - DEBUG - idom 62 from label 88
numba.core.ssa - DEBUG - find_def_from_bottom label 62
numba.core.ssa - DEBUG - find_def_from_top label 62
numba.core.ssa - DEBUG - idom 60 from label 62
numba.core.ssa - DEBUG - find_def_from_bottom label 60
numba.core.ssa - DEBUG - incoming_def max_value.2 = phi(incoming_values=[Var(max_value, arraymath.py:576)], incoming_blocks=[56])
numba.core.ssa - DEBUG - find_def_from_bottom label 98
numba.core.ssa - DEBUG - incoming_def max_value.1 = v
numba.core.ssa - DEBUG - incoming_def max_value.3 = phi(incoming_values=[Var(max_value.2, arraymath.py:584), Var(max_value.1, arraymath.py:585)], incoming_blocks=[88, 98])
numba.core.ssa - DEBUG - replaced with: $94call_function.4 = call $88load_deref.1(v, max_value.2, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value.2, arraymath.py:584)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: bool96 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $96pred, 98, 102
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752b59ab0>
numba.core.ssa - DEBUG - on stmt: max_value.1 = v
numba.core.ssa - DEBUG - on stmt: jump 102
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 102
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752b59ab0>
numba.core.ssa - DEBUG - on stmt: jump 60
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 104
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752b59ab0>
numba.core.ssa - DEBUG - on stmt: $106return_value.1 = cast(value=max_value)
numba.core.ssa - DEBUG - find_def var='max_value' stmt=$106return_value.1 = cast(value=max_value)
numba.core.ssa - DEBUG - find_def_from_top label 104
numba.core.ssa - DEBUG - idom 60 from label 104
numba.core.ssa - DEBUG - find_def_from_bottom label 60
numba.core.ssa - DEBUG - replaced with: $106return_value.1 = cast(value=max_value.2)
numba.core.ssa - DEBUG - on stmt: return $106return_value.1
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=4691)
           2	LOAD_FAST(arg=1, lineno=4692)
           4	LOAD_FAST(arg=0, lineno=4692)
           6	LOAD_ATTR(arg=0, lineno=4692)
           8	LOAD_CONST(arg=1, lineno=4692)
          10	BINARY_SUBTRACT(arg=None, lineno=4692)
          12	COMPARE_OP(arg=4, lineno=4692)
          14	POP_JUMP_IF_TRUE(arg=15, lineno=4692)
          16	LOAD_FAST(arg=1, lineno=4692)
          18	LOAD_FAST(arg=0, lineno=4692)
          20	LOAD_ATTR(arg=0, lineno=4692)
          22	UNARY_NEGATIVE(arg=None, lineno=4692)
          24	COMPARE_OP(arg=0, lineno=4692)
          26	POP_JUMP_IF_FALSE(arg=19, lineno=4692)
>         28	LOAD_GLOBAL(arg=1, lineno=4693)
          30	LOAD_CONST(arg=2, lineno=4693)
          32	CALL_FUNCTION(arg=1, lineno=4693)
          34	RAISE_VARARGS(arg=1, lineno=4693)
>         36	LOAD_FAST(arg=0, lineno=4694)
          38	LOAD_METHOD(arg=2, lineno=4694)
          40	CALL_METHOD(arg=0, lineno=4694)
          42	LOAD_FAST(arg=1, lineno=4694)
          44	BINARY_SUBSCR(arg=None, lineno=4694)
          46	RETURN_VALUE(arg=None, lineno=4694)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=4691)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=1, lineno=4692)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$indices2.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$indices2.0', '$a4.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_CONST(arg=1, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$indices2.0', '$6load_attr.2']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=BINARY_SUBTRACT(arg=None, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$indices2.0', '$6load_attr.2', '$const8.3']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=COMPARE_OP(arg=4, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$indices2.0', '$10binary_subtract.4']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=POP_JUMP_IF_TRUE(arg=15, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$12compare_op.5']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=16, stack=(), blockstack=(), npush=0), Edge(pc=28, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=16 nstack_initial=0), State(pc_initial=28 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=16 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=4692)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$indices16.0']
numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_ATTR(arg=0, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$indices16.0', '$a18.1']
numba.core.byteflow - DEBUG - dispatch pc=22, inst=UNARY_NEGATIVE(arg=None, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$indices16.0', '$20load_attr.2']
numba.core.byteflow - DEBUG - dispatch pc=24, inst=COMPARE_OP(arg=0, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$indices16.0', '$22unary_negative.3']
numba.core.byteflow - DEBUG - dispatch pc=26, inst=POP_JUMP_IF_FALSE(arg=19, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$24compare_op.4']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=28, stack=(), blockstack=(), npush=0), Edge(pc=36, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=28 nstack_initial=0), State(pc_initial=28 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=28 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=28, inst=LOAD_GLOBAL(arg=1, lineno=4693)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=2, lineno=4693)
numba.core.byteflow - DEBUG - stack ['$28load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=32, inst=CALL_FUNCTION(arg=1, lineno=4693)
numba.core.byteflow - DEBUG - stack ['$28load_global.0', '$const30.1']
numba.core.byteflow - DEBUG - dispatch pc=34, inst=RAISE_VARARGS(arg=1, lineno=4693)
numba.core.byteflow - DEBUG - stack ['$32call_function.2']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=28 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=36 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=36 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=4694)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_METHOD(arg=2, lineno=4694)
numba.core.byteflow - DEBUG - stack ['$a36.0']
numba.core.byteflow - DEBUG - dispatch pc=40, inst=CALL_METHOD(arg=0, lineno=4694)
numba.core.byteflow - DEBUG - stack ['$38load_method.1']
numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_FAST(arg=1, lineno=4694)
numba.core.byteflow - DEBUG - stack ['$40call_method.2']
numba.core.byteflow - DEBUG - dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=4694)
numba.core.byteflow - DEBUG - stack ['$40call_method.2', '$indices42.3']
numba.core.byteflow - DEBUG - dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=4694)
numba.core.byteflow - DEBUG - stack ['$44binary_subscr.4']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=16 nstack_initial=0): set(),
             State(pc_initial=28 nstack_initial=0): set(),
             State(pc_initial=36 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - keep phismap: {}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$indices2.0'}), (4, {'res': '$a4.1'}), (6, {'item': '$a4.1', 'res': '$6load_attr.2'}), (8, {'res': '$const8.3'}), (10, {'lhs': '$6load_attr.2', 'rhs': '$const8.3', 'res': '$10binary_subtract.4'}), (12, {'lhs': '$indices2.0', 'rhs': '$10binary_subtract.4', 'res': '$12compare_op.5'}), (14, {'pred': '$12compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: (), 28: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=16 nstack_initial=0):
AdaptBlockInfo(insts=((16, {'res': '$indices16.0'}), (18, {'res': '$a18.1'}), (20, {'item': '$a18.1', 'res': '$20load_attr.2'}), (22, {'value': '$20load_attr.2', 'res': '$22unary_negative.3'}), (24, {'lhs': '$indices16.0', 'rhs': '$22unary_negative.3', 'res': '$24compare_op.4'}), (26, {'pred': '$24compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: (), 36: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=28 nstack_initial=0):
AdaptBlockInfo(insts=((28, {'res': '$28load_global.0'}), (30, {'res': '$const30.1'}), (32, {'func': '$28load_global.0', 'args': ['$const30.1'], 'res': '$32call_function.2'}), (34, {'exc': '$32call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'res': '$a36.0'}), (38, {'item': '$a36.0', 'res': '$38load_method.1'}), (40, {'func': '$38load_method.1', 'args': [], 'res': '$40call_method.2'}), (42, {'res': '$indices42.3'}), (44, {'index': '$indices42.3', 'target': '$40call_method.2', 'res': '$44binary_subscr.4'}), (46, {'retval': '$44binary_subscr.4', 'castval': '$46return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $const8.3 = const(int, 1)                ['$const8.3']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    branch $14pred, 28, 16                   ['$14pred']
label 16:
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
    branch $26pred, 28, 36                   ['$26pred']
label 28:
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $const30.1 = const(str, Index out of bounds) ['$const30.1']
    $32call_function.2 = call $28load_global.0($const30.1, func=$28load_global.0, args=[Var($const30.1, arrayobj.py:4693)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1']
    raise $32call_function.2                 ['$32call_function.2']
label 36:
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752b6a770>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: indices = arg(1, name=indices)
numba.core.ssa - DEBUG - on stmt: $6load_attr.2 = getattr(value=a, attr=size)
numba.core.ssa - DEBUG - on stmt: $const8.3 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $10binary_subtract.4 = $6load_attr.2 - $const8.3
numba.core.ssa - DEBUG - on stmt: $12compare_op.5 = indices > $10binary_subtract.4
numba.core.ssa - DEBUG - on stmt: bool14 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $14pred, 28, 16
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 16
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752b6a770>
numba.core.ssa - DEBUG - on stmt: $20load_attr.2 = getattr(value=a, attr=size)
numba.core.ssa - DEBUG - on stmt: $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2)
numba.core.ssa - DEBUG - on stmt: $24compare_op.4 = indices < $22unary_negative.3
numba.core.ssa - DEBUG - on stmt: bool26 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $26pred, 28, 36
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 28
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752b6a770>
numba.core.ssa - DEBUG - on stmt: $28load_global.0 = global(IndexError: <class 'IndexError'>)
numba.core.ssa - DEBUG - on stmt: $const30.1 = const(str, Index out of bounds)
numba.core.ssa - DEBUG - on stmt: $32call_function.2 = call $28load_global.0($const30.1, func=$28load_global.0, args=[Var($const30.1, arrayobj.py:4693)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'IndexError'>('Index out of bounds')
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 36
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752b6a770>
numba.core.ssa - DEBUG - on stmt: $38load_method.1 = getattr(value=a, attr=ravel)
numba.core.ssa - DEBUG - on stmt: $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $46return_value.5 = cast(value=$44binary_subscr.4)
numba.core.ssa - DEBUG - on stmt: return $46return_value.5
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10binary_subtract.4': [(<numba.core.ir.Assign object at 0x708752b7e380>,
                                       0)],
             '$12compare_op.5': [(<numba.core.ir.Assign object at 0x708752b7e500>,
                                  0)],
             '$14pred': [(<numba.core.ir.Assign object at 0x708752b7e770>, 0)],
             '$20load_attr.2': [(<numba.core.ir.Assign object at 0x708752b7eb90>,
                                 16)],
             '$22unary_negative.3': [(<numba.core.ir.Assign object at 0x708752b7ed10>,
                                      16)],
             '$24compare_op.4': [(<numba.core.ir.Assign object at 0x708752b7eec0>,
                                  16)],
             '$26pred': [(<numba.core.ir.Assign object at 0x708752b7f130>, 16)],
             '$28load_global.0': [(<numba.core.ir.Assign object at 0x708752b7f310>,
                                   28)],
             '$32call_function.2': [(<numba.core.ir.Assign object at 0x708752b7f670>,
                                     28)],
             '$38load_method.1': [(<numba.core.ir.Assign object at 0x708752b7fa30>,
                                   36)],
             '$40call_method.2': [(<numba.core.ir.Assign object at 0x708752b7fc40>,
                                   36)],
             '$44binary_subscr.4': [(<numba.core.ir.Assign object at 0x708752b7fe80>,
                                     36)],
             '$46return_value.5': [(<numba.core.ir.Assign object at 0x708752b7ffd0>,
                                    36)],
             '$6load_attr.2': [(<numba.core.ir.Assign object at 0x708752b7c250>,
                                0)],
             '$const30.1': [(<numba.core.ir.Assign object at 0x708752b7f490>,
                             28)],
             '$const8.3': [(<numba.core.ir.Assign object at 0x708752b7c040>,
                            0)],
             'a': [(<numba.core.ir.Assign object at 0x708752b7e200>, 0)],
             'bool14': [(<numba.core.ir.Assign object at 0x708752b7e650>, 0)],
             'bool26': [(<numba.core.ir.Assign object at 0x708752b7f010>, 16)],
             'indices': [(<numba.core.ir.Assign object at 0x708752b7c790>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x708752b6a770>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2230)
           2	LOAD_FAST(arg=0, lineno=2232)
           4	LOAD_METHOD(arg=0, lineno=2232)
           6	LOAD_FAST(arg=0, lineno=2232)
           8	LOAD_ATTR(arg=1, lineno=2232)
          10	CALL_METHOD(arg=1, lineno=2232)
          12	RETURN_VALUE(arg=None, lineno=2232)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2230)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2232)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_METHOD(arg=0, lineno=2232)
numba.core.byteflow - DEBUG - stack ['$ary2.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=2232)
numba.core.byteflow - DEBUG - stack ['$4load_method.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_ATTR(arg=1, lineno=2232)
numba.core.byteflow - DEBUG - stack ['$4load_method.1', '$ary6.2']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=CALL_METHOD(arg=1, lineno=2232)
numba.core.byteflow - DEBUG - stack ['$4load_method.1', '$8load_attr.3']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=2232)
numba.core.byteflow - DEBUG - stack ['$10call_method.4']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - keep phismap: {}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$ary2.0'}), (4, {'item': '$ary2.0', 'res': '$4load_method.1'}), (6, {'res': '$ary6.2'}), (8, {'item': '$ary6.2', 'res': '$8load_attr.3'}), (10, {'func': '$4load_method.1', 'args': ['$8load_attr.3'], 'res': '$10call_method.4'}), (12, {'retval': '$10call_method.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    ary = arg(0, name=ary)                   ['ary']
    $4load_method.1 = getattr(value=ary, attr=reshape) ['$4load_method.1', 'ary']
    $8load_attr.3 = getattr(value=ary, attr=size) ['$8load_attr.3', 'ary']
    $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2232)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', '$8load_attr.3']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752b9b700>
numba.core.ssa - DEBUG - on stmt: ary = arg(0, name=ary)
numba.core.ssa - DEBUG - on stmt: $4load_method.1 = getattr(value=ary, attr=reshape)
numba.core.ssa - DEBUG - on stmt: $8load_attr.3 = getattr(value=ary, attr=size)
numba.core.ssa - DEBUG - on stmt: $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2232)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $12return_value.5 = cast(value=$10call_method.4)
numba.core.ssa - DEBUG - on stmt: return $12return_value.5
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10call_method.4': [(<numba.core.ir.Assign object at 0x708752b99d50>,
                                   0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x708752b99e40>,
                                    0)],
             '$4load_method.1': [(<numba.core.ir.Assign object at 0x708752b998a0>,
                                  0)],
             '$8load_attr.3': [(<numba.core.ir.Assign object at 0x708752b99b40>,
                                0)],
             'ary': [(<numba.core.ir.Assign object at 0x708752b85cc0>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x708752b9b700>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=486)
           2	LOAD_CONST(arg=1, lineno=488)
           4	RETURN_VALUE(arg=None, lineno=488)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=486)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_CONST(arg=1, lineno=488)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=RETURN_VALUE(arg=None, lineno=488)
numba.core.byteflow - DEBUG - stack ['$const2.0']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - keep phismap: {}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$const2.0'}), (4, {'retval': '$const2.0', 'castval': '$4return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    $const2.0 = const(bool, False)           ['$const2.0']
    $4return_value.1 = cast(value=$const2.0) ['$4return_value.1', '$const2.0']
    return $4return_value.1                  ['$4return_value.1']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752b6a770>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: $const2.0 = const(bool, False)
numba.core.ssa - DEBUG - on stmt: $4return_value.1 = cast(value=$const2.0)
numba.core.ssa - DEBUG - on stmt: return $4return_value.1
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$4return_value.1': [(<numba.core.ir.Assign object at 0x708752c00cd0>,
                                   0)],
             '$const2.0': [(<numba.core.ir.Assign object at 0x708752c00b50>,
                            0)],
             'a': [(<numba.core.ir.Assign object at 0x708752c00400>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x708752b6a770>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=481)
           2	LOAD_FAST(arg=0, lineno=483)
           4	LOAD_FAST(arg=1, lineno=483)
           6	COMPARE_OP(arg=4, lineno=483)
           8	RETURN_VALUE(arg=None, lineno=483)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=481)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=483)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=483)
numba.core.byteflow - DEBUG - stack ['$a2.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=COMPARE_OP(arg=4, lineno=483)
numba.core.byteflow - DEBUG - stack ['$a2.0', '$min_val4.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=RETURN_VALUE(arg=None, lineno=483)
numba.core.byteflow - DEBUG - stack ['$6compare_op.2']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - keep phismap: {}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$a2.0'}), (4, {'res': '$min_val4.1'}), (6, {'lhs': '$a2.0', 'rhs': '$min_val4.1', 'res': '$6compare_op.2'}), (8, {'retval': '$6compare_op.2', 'castval': '$8return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    min_val = arg(1, name=min_val)           ['min_val']
    $6compare_op.2 = a > min_val             ['$6compare_op.2', 'a', 'min_val']
    $8return_value.3 = cast(value=$6compare_op.2) ['$6compare_op.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752828b20>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: min_val = arg(1, name=min_val)
numba.core.ssa - DEBUG - on stmt: $6compare_op.2 = a > min_val
numba.core.ssa - DEBUG - on stmt: $8return_value.3 = cast(value=$6compare_op.2)
numba.core.ssa - DEBUG - on stmt: return $8return_value.3
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$6compare_op.2': [(<numba.core.ir.Assign object at 0x708752829570>,
                                 0)],
             '$8return_value.3': [(<numba.core.ir.Assign object at 0x7087528296c0>,
                                   0)],
             'a': [(<numba.core.ir.Assign object at 0x7087528283a0>, 0)],
             'min_val': [(<numba.core.ir.Assign object at 0x708752828640>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x708752828b20>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=437)
           2	LOAD_DEREF(arg=0, lineno=440)
           4	STORE_FAST(arg=1, lineno=440)
           6	LOAD_GLOBAL(arg=0, lineno=441)
           8	LOAD_METHOD(arg=1, lineno=441)
          10	LOAD_FAST(arg=0, lineno=441)
          12	CALL_METHOD(arg=1, lineno=441)
          14	GET_ITER(arg=None, lineno=441)
>         16	FOR_ITER(arg=8, lineno=441)
          18	STORE_FAST(arg=2, lineno=441)
          20	LOAD_FAST(arg=1, lineno=442)
          22	LOAD_FAST(arg=2, lineno=442)
          24	LOAD_METHOD(arg=2, lineno=442)
          26	CALL_METHOD(arg=0, lineno=442)
          28	INPLACE_ADD(arg=None, lineno=442)
          30	STORE_FAST(arg=1, lineno=442)
          32	JUMP_ABSOLUTE(arg=9, lineno=442)
>         34	LOAD_FAST(arg=1, lineno=443)
          36	LOAD_FAST(arg=0, lineno=443)
          38	LOAD_ATTR(arg=3, lineno=443)
          40	BINARY_TRUE_DIVIDE(arg=None, lineno=443)
          42	RETURN_VALUE(arg=None, lineno=443)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=437)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_DEREF(arg=0, lineno=440)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=STORE_FAST(arg=1, lineno=440)
numba.core.byteflow - DEBUG - stack ['$2load_deref.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_GLOBAL(arg=0, lineno=441)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_METHOD(arg=1, lineno=441)
numba.core.byteflow - DEBUG - stack ['$6load_global.1']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=441)
numba.core.byteflow - DEBUG - stack ['$8load_method.2']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=CALL_METHOD(arg=1, lineno=441)
numba.core.byteflow - DEBUG - stack ['$8load_method.2', '$a10.3']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=GET_ITER(arg=None, lineno=441)
numba.core.byteflow - DEBUG - stack ['$12call_method.4']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=16, stack=('$14get_iter.5',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=16 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi16.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=16 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=16, inst=FOR_ITER(arg=8, lineno=441)
numba.core.byteflow - DEBUG - stack ['$phi16.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=34, stack=(), blockstack=(), npush=0), Edge(pc=18, stack=('$phi16.0', '$16for_iter.2'), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=34 nstack_initial=0), State(pc_initial=18 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=34 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=34, inst=LOAD_FAST(arg=1, lineno=443)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=443)
numba.core.byteflow - DEBUG - stack ['$c34.0']
numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_ATTR(arg=3, lineno=443)
numba.core.byteflow - DEBUG - stack ['$c34.0', '$a36.1']
numba.core.byteflow - DEBUG - dispatch pc=40, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=443)
numba.core.byteflow - DEBUG - stack ['$c34.0', '$38load_attr.2']
numba.core.byteflow - DEBUG - dispatch pc=42, inst=RETURN_VALUE(arg=None, lineno=443)
numba.core.byteflow - DEBUG - stack ['$40binary_true_divide.3']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=18 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: ['$phi18.0', '$phi18.1']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=18 nstack_initial=2)
numba.core.byteflow - DEBUG - dispatch pc=18, inst=STORE_FAST(arg=2, lineno=441)
numba.core.byteflow - DEBUG - stack ['$phi18.0', '$phi18.1']
numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=1, lineno=442)
numba.core.byteflow - DEBUG - stack ['$phi18.0']
numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=2, lineno=442)
numba.core.byteflow - DEBUG - stack ['$phi18.0', '$c20.2']
numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_METHOD(arg=2, lineno=442)
numba.core.byteflow - DEBUG - stack ['$phi18.0', '$c20.2', '$v22.3']
numba.core.byteflow - DEBUG - dispatch pc=26, inst=CALL_METHOD(arg=0, lineno=442)
numba.core.byteflow - DEBUG - stack ['$phi18.0', '$c20.2', '$24load_method.4']
numba.core.byteflow - DEBUG - dispatch pc=28, inst=INPLACE_ADD(arg=None, lineno=442)
numba.core.byteflow - DEBUG - stack ['$phi18.0', '$c20.2', '$26call_method.5']
numba.core.byteflow - DEBUG - dispatch pc=30, inst=STORE_FAST(arg=1, lineno=442)
numba.core.byteflow - DEBUG - stack ['$phi18.0', '$28inplace_add.6']
numba.core.byteflow - DEBUG - dispatch pc=32, inst=JUMP_ABSOLUTE(arg=9, lineno=442)
numba.core.byteflow - DEBUG - stack ['$phi18.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=16, stack=('$phi18.0',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=16 nstack_initial=1)])
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=16 nstack_initial=1): {'$phi16.0'},
             State(pc_initial=18 nstack_initial=2): {'$phi18.1'},
             State(pc_initial=34 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {'$phi16.0': State(pc_initial=0 nstack_initial=0),
 '$phi18.1': State(pc_initial=16 nstack_initial=1)}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi18.0', State(pc_initial=18 nstack_initial=2))},
             '$phi18.0': {('$phi16.0', State(pc_initial=16 nstack_initial=1))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi16.0', State(pc_initial=16 nstack_initial=1))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
numba.core.byteflow - DEBUG - keep phismap: {'$phi16.0': {('$14get_iter.5', State(pc_initial=0 nstack_initial=0))},
 '$phi18.1': {('$16for_iter.2', State(pc_initial=16 nstack_initial=1))}}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi16.0': '$14get_iter.5'},
             State(pc_initial=16 nstack_initial=1): {'$phi18.1': '$16for_iter.2'}})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'value': '$2load_deref.0'}), (6, {'res': '$6load_global.1'}), (8, {'item': '$6load_global.1', 'res': '$8load_method.2'}), (10, {'res': '$a10.3'}), (12, {'func': '$8load_method.2', 'args': ['$a10.3'], 'res': '$12call_method.4'}), (14, {'value': '$12call_method.4', 'res': '$14get_iter.5'})), outgoing_phis={'$phi16.0': '$14get_iter.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: ('$14get_iter.5',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=16 nstack_initial=1):
AdaptBlockInfo(insts=((16, {'iterator': '$phi16.0', 'pair': '$16for_iter.1', 'indval': '$16for_iter.2', 'pred': '$16for_iter.3'}),), outgoing_phis={'$phi18.1': '$16for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={34: (), 18: ('$phi16.0', '$16for_iter.2')})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=18 nstack_initial=2):
AdaptBlockInfo(insts=((18, {'value': '$phi18.1'}), (20, {'res': '$c20.2'}), (22, {'res': '$v22.3'}), (24, {'item': '$v22.3', 'res': '$24load_method.4'}), (26, {'func': '$24load_method.4', 'args': [], 'res': '$26call_method.5'}), (28, {'lhs': '$c20.2', 'rhs': '$26call_method.5', 'res': '$28inplace_add.6'}), (30, {'value': '$28inplace_add.6'}), (32, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: ('$phi18.0',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=34 nstack_initial=0):
AdaptBlockInfo(insts=((34, {'res': '$c34.0'}), (36, {'res': '$a36.1'}), (38, {'item': '$a36.1', 'res': '$38load_attr.2'}), (40, {'lhs': '$c34.0', 'rhs': '$38load_attr.2', 'res': '$40binary_true_divide.3'}), (42, {'retval': '$40binary_true_divide.3', 'castval': '$42return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    c = freevar(acc_init: 0.0)               ['c']
    $6load_global.1 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$6load_global.1']
    $8load_method.2 = getattr(value=$6load_global.1, attr=nditer) ['$6load_global.1', '$8load_method.2']
    $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_method.4', '$8load_method.2', 'a']
    $14get_iter.5 = getiter(value=$12call_method.4) ['$12call_method.4', '$14get_iter.5']
    $phi16.0 = $14get_iter.5                 ['$14get_iter.5', '$phi16.0']
    jump 16                                  []
label 16:
    $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
    $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
    $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
    $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
    branch $16for_iter.3, 18, 34             ['$16for_iter.3']
label 18:
    v = $phi18.1                             ['$phi18.1', 'v']
    $24load_method.4 = getattr(value=v, attr=item) ['$24load_method.4', 'v']
    $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_method.4', '$26call_method.5']
    $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined) ['$26call_method.5', '$28inplace_add.6', 'c']
    c = $28inplace_add.6                     ['$28inplace_add.6', 'c']
    jump 16                                  []
label 34:
    $38load_attr.2 = getattr(value=a, attr=size) ['$38load_attr.2', 'a']
    $40binary_true_divide.3 = c / $38load_attr.2 ['$38load_attr.2', '$40binary_true_divide.3', 'c']
    $42return_value.4 = cast(value=$40binary_true_divide.3) ['$40binary_true_divide.3', '$42return_value.4']
    return $42return_value.4                 ['$42return_value.4']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752815540>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: c = freevar(acc_init: 0.0)
numba.core.ssa - DEBUG - on stmt: $6load_global.1 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $8load_method.2 = getattr(value=$6load_global.1, attr=nditer)
numba.core.ssa - DEBUG - on stmt: $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $14get_iter.5 = getiter(value=$12call_method.4)
numba.core.ssa - DEBUG - on stmt: $phi16.0 = $14get_iter.5
numba.core.ssa - DEBUG - on stmt: jump 16
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 16
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752815540>
numba.core.ssa - DEBUG - on stmt: $16for_iter.1 = iternext(value=$phi16.0)
numba.core.ssa - DEBUG - on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
numba.core.ssa - DEBUG - on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
numba.core.ssa - DEBUG - on stmt: $phi18.1 = $16for_iter.2
numba.core.ssa - DEBUG - on stmt: branch $16for_iter.3, 18, 34
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 18
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752815540>
numba.core.ssa - DEBUG - on stmt: v = $phi18.1
numba.core.ssa - DEBUG - on stmt: $24load_method.4 = getattr(value=v, attr=item)
numba.core.ssa - DEBUG - on stmt: $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: c = $28inplace_add.6
numba.core.ssa - DEBUG - on stmt: jump 16
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 34
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752815540>
numba.core.ssa - DEBUG - on stmt: $38load_attr.2 = getattr(value=a, attr=size)
numba.core.ssa - DEBUG - on stmt: $40binary_true_divide.3 = c / $38load_attr.2
numba.core.ssa - DEBUG - on stmt: $42return_value.4 = cast(value=$40binary_true_divide.3)
numba.core.ssa - DEBUG - on stmt: return $42return_value.4
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$12call_method.4': [(<numba.core.ir.Assign object at 0x708752814a00>,
                                   0)],
             '$14get_iter.5': [(<numba.core.ir.Assign object at 0x708752814250>,
                                0)],
             '$16for_iter.1': [(<numba.core.ir.Assign object at 0x708752816a10>,
                                16)],
             '$16for_iter.2': [(<numba.core.ir.Assign object at 0x708752814c10>,
                                16)],
             '$16for_iter.3': [(<numba.core.ir.Assign object at 0x708752814a90>,
                                16)],
             '$24load_method.4': [(<numba.core.ir.Assign object at 0x708752814f40>,
                                   18)],
             '$26call_method.5': [(<numba.core.ir.Assign object at 0x70875283c520>,
                                   18)],
             '$28inplace_add.6': [(<numba.core.ir.Assign object at 0x70875283ca60>,
                                   18)],
             '$38load_attr.2': [(<numba.core.ir.Assign object at 0x708752b59a50>,
                                 34)],
             '$40binary_true_divide.3': [(<numba.core.ir.Assign object at 0x708752b4f070>,
                                          34)],
             '$42return_value.4': [(<numba.core.ir.Assign object at 0x708752b4ea10>,
                                    34)],
             '$6load_global.1': [(<numba.core.ir.Assign object at 0x708752817c10>,
                                  0)],
             '$8load_method.2': [(<numba.core.ir.Assign object at 0x708752817ac0>,
                                  0)],
             '$phi16.0': [(<numba.core.ir.Assign object at 0x708752816dd0>, 0)],
             '$phi18.1': [(<numba.core.ir.Assign object at 0x708752815fc0>,
                           16)],
             'a': [(<numba.core.ir.Assign object at 0x70875283c250>, 0)],
             'c': [(<numba.core.ir.Assign object at 0x708752816a70>, 0),
                   (<numba.core.ir.Assign object at 0x70875283c7c0>, 18)],
             'v': [(<numba.core.ir.Assign object at 0x708752814d00>, 18)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x708752815540>
numba.core.ssa - DEBUG - Fix SSA violator on var c
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7087528171c0>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: c = freevar(acc_init: 0.0)
numba.core.ssa - DEBUG - first assign: c
numba.core.ssa - DEBUG - replaced with: c = freevar(acc_init: 0.0)
numba.core.ssa - DEBUG - on stmt: $6load_global.1 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $8load_method.2 = getattr(value=$6load_global.1, attr=nditer)
numba.core.ssa - DEBUG - on stmt: $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $14get_iter.5 = getiter(value=$12call_method.4)
numba.core.ssa - DEBUG - on stmt: $phi16.0 = $14get_iter.5
numba.core.ssa - DEBUG - on stmt: jump 16
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 16
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7087528171c0>
numba.core.ssa - DEBUG - on stmt: $16for_iter.1 = iternext(value=$phi16.0)
numba.core.ssa - DEBUG - on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
numba.core.ssa - DEBUG - on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
numba.core.ssa - DEBUG - on stmt: $phi18.1 = $16for_iter.2
numba.core.ssa - DEBUG - on stmt: branch $16for_iter.3, 18, 34
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 18
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7087528171c0>
numba.core.ssa - DEBUG - on stmt: v = $phi18.1
numba.core.ssa - DEBUG - on stmt: $24load_method.4 = getattr(value=v, attr=item)
numba.core.ssa - DEBUG - on stmt: $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: c = $28inplace_add.6
numba.core.ssa - DEBUG - replaced with: c.1 = $28inplace_add.6
numba.core.ssa - DEBUG - on stmt: jump 16
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 34
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x7087528171c0>
numba.core.ssa - DEBUG - on stmt: $38load_attr.2 = getattr(value=a, attr=size)
numba.core.ssa - DEBUG - on stmt: $40binary_true_divide.3 = c / $38load_attr.2
numba.core.ssa - DEBUG - on stmt: $42return_value.4 = cast(value=$40binary_true_divide.3)
numba.core.ssa - DEBUG - on stmt: return $42return_value.4
numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x708752817340>],
             18: [<numba.core.ir.Assign object at 0x708752817700>]})
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087528171c0>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: c = freevar(acc_init: 0.0)
numba.core.ssa - DEBUG - on stmt: $6load_global.1 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $8load_method.2 = getattr(value=$6load_global.1, attr=nditer)
numba.core.ssa - DEBUG - on stmt: $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $14get_iter.5 = getiter(value=$12call_method.4)
numba.core.ssa - DEBUG - on stmt: $phi16.0 = $14get_iter.5
numba.core.ssa - DEBUG - on stmt: jump 16
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 16
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087528171c0>
numba.core.ssa - DEBUG - on stmt: $16for_iter.1 = iternext(value=$phi16.0)
numba.core.ssa - DEBUG - on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
numba.core.ssa - DEBUG - on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
numba.core.ssa - DEBUG - on stmt: $phi18.1 = $16for_iter.2
numba.core.ssa - DEBUG - on stmt: branch $16for_iter.3, 18, 34
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 18
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087528171c0>
numba.core.ssa - DEBUG - on stmt: v = $phi18.1
numba.core.ssa - DEBUG - on stmt: $24load_method.4 = getattr(value=v, attr=item)
numba.core.ssa - DEBUG - on stmt: $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def var='c' stmt=$28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def_from_top label 18
numba.core.ssa - DEBUG - idom 16 from label 18
numba.core.ssa - DEBUG - find_def_from_bottom label 16
numba.core.ssa - DEBUG - find_def_from_top label 16
numba.core.ssa - DEBUG - insert phi node c.2 = phi(incoming_values=[], incoming_blocks=[]) at 16
numba.core.ssa - DEBUG - find_def_from_bottom label 0
numba.core.ssa - DEBUG - incoming_def c = freevar(acc_init: 0.0)
numba.core.ssa - DEBUG - find_def_from_bottom label 18
numba.core.ssa - DEBUG - incoming_def c.1 = $28inplace_add.6
numba.core.ssa - DEBUG - replaced with: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c.2, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: c.1 = $28inplace_add.6
numba.core.ssa - DEBUG - on stmt: jump 16
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 34
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087528171c0>
numba.core.ssa - DEBUG - on stmt: $38load_attr.2 = getattr(value=a, attr=size)
numba.core.ssa - DEBUG - on stmt: $40binary_true_divide.3 = c / $38load_attr.2
numba.core.ssa - DEBUG - find_def var='c' stmt=$40binary_true_divide.3 = c / $38load_attr.2
numba.core.ssa - DEBUG - find_def_from_top label 34
numba.core.ssa - DEBUG - idom 16 from label 34
numba.core.ssa - DEBUG - find_def_from_bottom label 16
numba.core.ssa - DEBUG - replaced with: $40binary_true_divide.3 = c.2 / $38load_attr.2
numba.core.ssa - DEBUG - on stmt: $42return_value.4 = cast(value=$40binary_true_divide.3)
numba.core.ssa - DEBUG - on stmt: return $42return_value.4
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1209)
           2	LOAD_FAST(arg=0, lineno=1221)
           4	LOAD_CONST(arg=1, lineno=1221)
           6	BINARY_SUBSCR(arg=None, lineno=1221)
           8	LOAD_GLOBAL(arg=0, lineno=1221)
          10	LOAD_METHOD(arg=1, lineno=1221)
          12	LOAD_FAST(arg=0, lineno=1221)
          14	LOAD_CONST(arg=2, lineno=1221)
          16	LOAD_GLOBAL(arg=2, lineno=1221)
          18	LOAD_FAST(arg=2, lineno=1221)
          20	LOAD_FAST(arg=0, lineno=1221)
          22	LOAD_ATTR(arg=3, lineno=1221)
          24	LOAD_CONST(arg=1, lineno=1221)
          26	BINARY_SUBSCR(arg=None, lineno=1221)
          28	CALL_FUNCTION(arg=2, lineno=1221)
          30	BUILD_SLICE(arg=2, lineno=1221)
          32	BINARY_SUBSCR(arg=None, lineno=1221)
          34	CALL_METHOD(arg=1, lineno=1221)
          36	COMPARE_OP(arg=5, lineno=1221)
          38	LOAD_FAST(arg=7, lineno=1221)
          40	LOAD_CONST(arg=1, lineno=1221)
          42	STORE_SUBSCR(arg=None, lineno=1221)
          44	LOAD_FAST(arg=7, lineno=1222)
          46	LOAD_CONST(arg=1, lineno=1222)
          48	DUP_TOP_TWO(arg=None, lineno=1222)
          50	BINARY_SUBSCR(arg=None, lineno=1222)
          52	LOAD_FAST(arg=0, lineno=1222)
          54	LOAD_CONST(arg=1, lineno=1222)
          56	BINARY_SUBSCR(arg=None, lineno=1222)
          58	LOAD_GLOBAL(arg=0, lineno=1222)
          60	LOAD_METHOD(arg=4, lineno=1222)
          62	LOAD_FAST(arg=0, lineno=1222)
          64	LOAD_CONST(arg=2, lineno=1222)
          66	LOAD_GLOBAL(arg=2, lineno=1222)
          68	LOAD_FAST(arg=4, lineno=1222)
          70	LOAD_FAST(arg=0, lineno=1222)
          72	LOAD_ATTR(arg=3, lineno=1222)
          74	LOAD_CONST(arg=1, lineno=1222)
          76	BINARY_SUBSCR(arg=None, lineno=1222)
          78	CALL_FUNCTION(arg=2, lineno=1222)
          80	BUILD_SLICE(arg=2, lineno=1222)
          82	BINARY_SUBSCR(arg=None, lineno=1222)
          84	CALL_METHOD(arg=1, lineno=1222)
          86	LOAD_FAST(arg=5, lineno=1222)
          88	BINARY_ADD(arg=None, lineno=1222)
          90	COMPARE_OP(arg=5, lineno=1222)
          92	INPLACE_AND(arg=None, lineno=1222)
          94	ROT_THREE(arg=None, lineno=1222)
          96	STORE_SUBSCR(arg=None, lineno=1222)
          98	LOAD_FAST(arg=7, lineno=1224)
         100	LOAD_CONST(arg=1, lineno=1224)
         102	BINARY_SUBSCR(arg=None, lineno=1224)
         104	POP_JUMP_IF_FALSE(arg=59, lineno=1224)
         106	LOAD_FAST(arg=6, lineno=1225)
         108	LOAD_CONST(arg=3, lineno=1225)
         110	BINARY_ADD(arg=None, lineno=1225)
         112	STORE_FAST(arg=8, lineno=1225)
         114	JUMP_FORWARD(arg=2, lineno=1225)
>        116	LOAD_CONST(arg=3, lineno=1227)
         118	STORE_FAST(arg=8, lineno=1227)
>        120	LOAD_FAST(arg=8, lineno=1229)
         122	LOAD_FAST(arg=0, lineno=1229)
         124	LOAD_ATTR(arg=3, lineno=1229)
         126	LOAD_CONST(arg=1, lineno=1229)
         128	BINARY_SUBSCR(arg=None, lineno=1229)
         130	COMPARE_OP(arg=0, lineno=1229)
         132	POP_JUMP_IF_FALSE(arg=167, lineno=1229)
>        134	LOAD_GLOBAL(arg=0, lineno=1230)
         136	LOAD_METHOD(arg=1, lineno=1230)
         138	LOAD_FAST(arg=0, lineno=1230)
         140	LOAD_GLOBAL(arg=1, lineno=1230)
         142	LOAD_CONST(arg=1, lineno=1230)
         144	LOAD_FAST(arg=8, lineno=1230)
         146	LOAD_FAST(arg=1, lineno=1230)
         148	BINARY_SUBTRACT(arg=None, lineno=1230)
         150	CALL_FUNCTION(arg=2, lineno=1230)
         152	LOAD_GLOBAL(arg=2, lineno=1230)
         154	LOAD_FAST(arg=8, lineno=1230)
         156	LOAD_FAST(arg=2, lineno=1230)
         158	BINARY_ADD(arg=None, lineno=1230)
         160	LOAD_FAST(arg=0, lineno=1230)
         162	LOAD_ATTR(arg=3, lineno=1230)
         164	LOAD_CONST(arg=1, lineno=1230)
         166	BINARY_SUBSCR(arg=None, lineno=1230)
         168	CALL_FUNCTION(arg=2, lineno=1230)
         170	BUILD_SLICE(arg=2, lineno=1230)
         172	BINARY_SUBSCR(arg=None, lineno=1230)
         174	CALL_METHOD(arg=1, lineno=1230)
         176	STORE_FAST(arg=9, lineno=1230)
         178	LOAD_FAST(arg=0, lineno=1233)
         180	LOAD_FAST(arg=8, lineno=1233)
         182	BINARY_SUBSCR(arg=None, lineno=1233)
         184	LOAD_FAST(arg=9, lineno=1233)
         186	COMPARE_OP(arg=2, lineno=1233)
         188	LOAD_FAST(arg=7, lineno=1233)
         190	LOAD_FAST(arg=8, lineno=1233)
         192	STORE_SUBSCR(arg=None, lineno=1233)
         194	LOAD_FAST(arg=7, lineno=1235)
         196	LOAD_FAST(arg=8, lineno=1235)
         198	BINARY_SUBSCR(arg=None, lineno=1235)
         200	POP_JUMP_IF_TRUE(arg=107, lineno=1235)
         202	LOAD_FAST(arg=8, lineno=1236)
         204	LOAD_CONST(arg=3, lineno=1236)
         206	INPLACE_ADD(arg=None, lineno=1236)
         208	STORE_FAST(arg=8, lineno=1236)
         210	JUMP_ABSOLUTE(arg=61, lineno=1237)
>        212	LOAD_GLOBAL(arg=0, lineno=1239)
         214	LOAD_METHOD(arg=4, lineno=1239)
         216	LOAD_FAST(arg=0, lineno=1239)
         218	LOAD_GLOBAL(arg=1, lineno=1239)
         220	LOAD_CONST(arg=1, lineno=1239)
         222	LOAD_FAST(arg=8, lineno=1239)
         224	LOAD_FAST(arg=3, lineno=1239)
         226	BINARY_SUBTRACT(arg=None, lineno=1239)
         228	CALL_FUNCTION(arg=2, lineno=1239)
         230	LOAD_GLOBAL(arg=2, lineno=1239)
         232	LOAD_FAST(arg=8, lineno=1239)
         234	LOAD_FAST(arg=4, lineno=1239)
         236	BINARY_ADD(arg=None, lineno=1239)
         238	LOAD_FAST(arg=0, lineno=1239)
         240	LOAD_ATTR(arg=3, lineno=1239)
         242	LOAD_CONST(arg=1, lineno=1239)
         244	BINARY_SUBSCR(arg=None, lineno=1239)
         246	CALL_FUNCTION(arg=2, lineno=1239)
         248	BUILD_SLICE(arg=2, lineno=1239)
         250	BINARY_SUBSCR(arg=None, lineno=1239)
         252	CALL_METHOD(arg=1, lineno=1239)
         254	STORE_FAST(arg=10, lineno=1239)
         256	LOAD_FAST(arg=7, lineno=1240)
         258	LOAD_FAST(arg=8, lineno=1240)
         260	DUP_TOP_TWO(arg=None, lineno=1240)
         262	BINARY_SUBSCR(arg=None, lineno=1240)
         264	LOAD_FAST(arg=0, lineno=1240)
         266	LOAD_FAST(arg=8, lineno=1240)
         268	BINARY_SUBSCR(arg=None, lineno=1240)
         270	LOAD_FAST(arg=10, lineno=1240)
         272	LOAD_FAST(arg=5, lineno=1240)
         274	BINARY_ADD(arg=None, lineno=1240)
         276	COMPARE_OP(arg=5, lineno=1240)
         278	INPLACE_AND(arg=None, lineno=1240)
         280	ROT_THREE(arg=None, lineno=1240)
         282	STORE_SUBSCR(arg=None, lineno=1240)
         284	LOAD_FAST(arg=7, lineno=1242)
         286	LOAD_FAST(arg=8, lineno=1242)
         288	BINARY_SUBSCR(arg=None, lineno=1242)
         290	POP_JUMP_IF_TRUE(arg=152, lineno=1242)
         292	LOAD_FAST(arg=8, lineno=1243)
         294	LOAD_CONST(arg=3, lineno=1243)
         296	INPLACE_ADD(arg=None, lineno=1243)
         298	STORE_FAST(arg=8, lineno=1243)
         300	JUMP_ABSOLUTE(arg=61, lineno=1244)
>        302	LOAD_FAST(arg=8, lineno=1247)
         304	LOAD_FAST(arg=6, lineno=1247)
         306	LOAD_CONST(arg=3, lineno=1247)
         308	BINARY_ADD(arg=None, lineno=1247)
         310	INPLACE_ADD(arg=None, lineno=1247)
         312	STORE_FAST(arg=8, lineno=1247)
         314	LOAD_FAST(arg=8, lineno=1229)
         316	LOAD_FAST(arg=0, lineno=1229)
         318	LOAD_ATTR(arg=3, lineno=1229)
         320	LOAD_CONST(arg=1, lineno=1229)
         322	BINARY_SUBSCR(arg=None, lineno=1229)
         324	COMPARE_OP(arg=0, lineno=1229)
         326	POP_JUMP_IF_TRUE(arg=68, lineno=1229)
         328	LOAD_CONST(arg=2, lineno=1229)
         330	RETURN_VALUE(arg=None, lineno=1229)
>        332	LOAD_CONST(arg=2, lineno=1229)
         334	RETURN_VALUE(arg=None, lineno=1229)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1209)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=1221)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$x2.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=BINARY_SUBSCR(arg=None, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$x2.0', '$const4.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_GLOBAL(arg=0, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_METHOD(arg=1, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$8load_global.3']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5']
numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_GLOBAL(arg=2, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6']
numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=2, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7']
numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=0, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7', '$post_max18.8']
numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_ATTR(arg=3, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7', '$post_max18.8', '$x20.9']
numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_CONST(arg=1, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7', '$post_max18.8', '$22load_attr.10']
numba.core.byteflow - DEBUG - dispatch pc=26, inst=BINARY_SUBSCR(arg=None, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7', '$post_max18.8', '$22load_attr.10', '$const24.11']
numba.core.byteflow - DEBUG - dispatch pc=28, inst=CALL_FUNCTION(arg=2, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$16load_global.7', '$post_max18.8', '$26binary_subscr.12']
numba.core.byteflow - DEBUG - dispatch pc=30, inst=BUILD_SLICE(arg=2, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$const14.6', '$28call_function.13']
numba.core.byteflow - DEBUG - dispatch pc=32, inst=BINARY_SUBSCR(arg=None, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$x12.5', '$30build_slice.15']
numba.core.byteflow - DEBUG - dispatch pc=34, inst=CALL_METHOD(arg=1, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$10load_method.4', '$32binary_subscr.16']
numba.core.byteflow - DEBUG - dispatch pc=36, inst=COMPARE_OP(arg=5, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$6binary_subscr.2', '$34call_method.17']
numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=7, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$36compare_op.18']
numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_CONST(arg=1, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$36compare_op.18', '$peaks38.19']
numba.core.byteflow - DEBUG - dispatch pc=42, inst=STORE_SUBSCR(arg=None, lineno=1221)
numba.core.byteflow - DEBUG - stack ['$36compare_op.18', '$peaks38.19', '$const40.20']
numba.core.byteflow - DEBUG - dispatch pc=44, inst=LOAD_FAST(arg=7, lineno=1222)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=46, inst=LOAD_CONST(arg=1, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21']
numba.core.byteflow - DEBUG - dispatch pc=48, inst=DUP_TOP_TWO(arg=None, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22']
numba.core.byteflow - DEBUG - dispatch pc=50, inst=BINARY_SUBSCR(arg=None, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$48dup_top_two.23', '$48dup_top_two.24']
numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25']
numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=1, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$x52.26']
numba.core.byteflow - DEBUG - dispatch pc=56, inst=BINARY_SUBSCR(arg=None, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$x52.26', '$const54.27']
numba.core.byteflow - DEBUG - dispatch pc=58, inst=LOAD_GLOBAL(arg=0, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28']
numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_METHOD(arg=4, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$58load_global.29']
numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=0, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30']
numba.core.byteflow - DEBUG - dispatch pc=64, inst=LOAD_CONST(arg=2, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31']
numba.core.byteflow - DEBUG - dispatch pc=66, inst=LOAD_GLOBAL(arg=2, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32']
numba.core.byteflow - DEBUG - dispatch pc=68, inst=LOAD_FAST(arg=4, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33']
numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_FAST(arg=0, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33', '$post_avg68.34']
numba.core.byteflow - DEBUG - dispatch pc=72, inst=LOAD_ATTR(arg=3, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33', '$post_avg68.34', '$x70.35']
numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_CONST(arg=1, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33', '$post_avg68.34', '$72load_attr.36']
numba.core.byteflow - DEBUG - dispatch pc=76, inst=BINARY_SUBSCR(arg=None, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33', '$post_avg68.34', '$72load_attr.36', '$const74.37']
numba.core.byteflow - DEBUG - dispatch pc=78, inst=CALL_FUNCTION(arg=2, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$66load_global.33', '$post_avg68.34', '$76binary_subscr.38']
numba.core.byteflow - DEBUG - dispatch pc=80, inst=BUILD_SLICE(arg=2, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$const64.32', '$78call_function.39']
numba.core.byteflow - DEBUG - dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$x62.31', '$80build_slice.41']
numba.core.byteflow - DEBUG - dispatch pc=84, inst=CALL_METHOD(arg=1, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$60load_method.30', '$82binary_subscr.42']
numba.core.byteflow - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=5, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$84call_method.43']
numba.core.byteflow - DEBUG - dispatch pc=88, inst=BINARY_ADD(arg=None, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$84call_method.43', '$delta86.44']
numba.core.byteflow - DEBUG - dispatch pc=90, inst=COMPARE_OP(arg=5, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$56binary_subscr.28', '$88binary_add.45']
numba.core.byteflow - DEBUG - dispatch pc=92, inst=INPLACE_AND(arg=None, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$50binary_subscr.25', '$90compare_op.46']
numba.core.byteflow - DEBUG - dispatch pc=94, inst=ROT_THREE(arg=None, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$peaks44.21', '$const46.22', '$92inplace_and.47']
numba.core.byteflow - DEBUG - dispatch pc=96, inst=STORE_SUBSCR(arg=None, lineno=1222)
numba.core.byteflow - DEBUG - stack ['$92inplace_and.47', '$peaks44.21', '$const46.22']
numba.core.byteflow - DEBUG - dispatch pc=98, inst=LOAD_FAST(arg=7, lineno=1224)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=100, inst=LOAD_CONST(arg=1, lineno=1224)
numba.core.byteflow - DEBUG - stack ['$peaks98.48']
numba.core.byteflow - DEBUG - dispatch pc=102, inst=BINARY_SUBSCR(arg=None, lineno=1224)
numba.core.byteflow - DEBUG - stack ['$peaks98.48', '$const100.49']
numba.core.byteflow - DEBUG - dispatch pc=104, inst=POP_JUMP_IF_FALSE(arg=59, lineno=1224)
numba.core.byteflow - DEBUG - stack ['$102binary_subscr.50']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0), Edge(pc=116, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=116 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=106 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=106, inst=LOAD_FAST(arg=6, lineno=1225)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=3, lineno=1225)
numba.core.byteflow - DEBUG - stack ['$wait106.0']
numba.core.byteflow - DEBUG - dispatch pc=110, inst=BINARY_ADD(arg=None, lineno=1225)
numba.core.byteflow - DEBUG - stack ['$wait106.0', '$const108.1']
numba.core.byteflow - DEBUG - dispatch pc=112, inst=STORE_FAST(arg=8, lineno=1225)
numba.core.byteflow - DEBUG - stack ['$110binary_add.2']
numba.core.byteflow - DEBUG - dispatch pc=114, inst=JUMP_FORWARD(arg=2, lineno=1225)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=120, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=116 nstack_initial=0), State(pc_initial=120 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=116 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=116, inst=LOAD_CONST(arg=3, lineno=1227)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=118, inst=STORE_FAST(arg=8, lineno=1227)
numba.core.byteflow - DEBUG - stack ['$const116.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=120, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=120 nstack_initial=0), State(pc_initial=120 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=120 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=120, inst=LOAD_FAST(arg=8, lineno=1229)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=122, inst=LOAD_FAST(arg=0, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$n120.0']
numba.core.byteflow - DEBUG - dispatch pc=124, inst=LOAD_ATTR(arg=3, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$n120.0', '$x122.1']
numba.core.byteflow - DEBUG - dispatch pc=126, inst=LOAD_CONST(arg=1, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$n120.0', '$124load_attr.2']
numba.core.byteflow - DEBUG - dispatch pc=128, inst=BINARY_SUBSCR(arg=None, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$n120.0', '$124load_attr.2', '$const126.3']
numba.core.byteflow - DEBUG - dispatch pc=130, inst=COMPARE_OP(arg=0, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$n120.0', '$128binary_subscr.4']
numba.core.byteflow - DEBUG - dispatch pc=132, inst=POP_JUMP_IF_FALSE(arg=167, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$130compare_op.5']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=134, stack=(), blockstack=(), npush=0), Edge(pc=332, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=120 nstack_initial=0), State(pc_initial=134 nstack_initial=0), State(pc_initial=332 nstack_initial=0)])
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=134 nstack_initial=0), State(pc_initial=332 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=134 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=134, inst=LOAD_GLOBAL(arg=0, lineno=1230)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=136, inst=LOAD_METHOD(arg=1, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$134load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=138, inst=LOAD_FAST(arg=0, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1']
numba.core.byteflow - DEBUG - dispatch pc=140, inst=LOAD_GLOBAL(arg=1, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2']
numba.core.byteflow - DEBUG - dispatch pc=142, inst=LOAD_CONST(arg=1, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$140load_global.3']
numba.core.byteflow - DEBUG - dispatch pc=144, inst=LOAD_FAST(arg=8, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$140load_global.3', '$const142.4']
numba.core.byteflow - DEBUG - dispatch pc=146, inst=LOAD_FAST(arg=1, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$140load_global.3', '$const142.4', '$n144.5']
numba.core.byteflow - DEBUG - dispatch pc=148, inst=BINARY_SUBTRACT(arg=None, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$140load_global.3', '$const142.4', '$n144.5', '$pre_max146.6']
numba.core.byteflow - DEBUG - dispatch pc=150, inst=CALL_FUNCTION(arg=2, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$140load_global.3', '$const142.4', '$148binary_subtract.7']
numba.core.byteflow - DEBUG - dispatch pc=152, inst=LOAD_GLOBAL(arg=2, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$150call_function.8']
numba.core.byteflow - DEBUG - dispatch pc=154, inst=LOAD_FAST(arg=8, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9']
numba.core.byteflow - DEBUG - dispatch pc=156, inst=LOAD_FAST(arg=2, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$n154.10']
numba.core.byteflow - DEBUG - dispatch pc=158, inst=BINARY_ADD(arg=None, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$n154.10', '$post_max156.11']
numba.core.byteflow - DEBUG - dispatch pc=160, inst=LOAD_FAST(arg=0, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$158binary_add.12']
numba.core.byteflow - DEBUG - dispatch pc=162, inst=LOAD_ATTR(arg=3, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$158binary_add.12', '$x160.13']
numba.core.byteflow - DEBUG - dispatch pc=164, inst=LOAD_CONST(arg=1, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$158binary_add.12', '$162load_attr.14']
numba.core.byteflow - DEBUG - dispatch pc=166, inst=BINARY_SUBSCR(arg=None, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$158binary_add.12', '$162load_attr.14', '$const164.15']
numba.core.byteflow - DEBUG - dispatch pc=168, inst=CALL_FUNCTION(arg=2, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$152load_global.9', '$158binary_add.12', '$166binary_subscr.16']
numba.core.byteflow - DEBUG - dispatch pc=170, inst=BUILD_SLICE(arg=2, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$150call_function.8', '$168call_function.17']
numba.core.byteflow - DEBUG - dispatch pc=172, inst=BINARY_SUBSCR(arg=None, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$x138.2', '$170build_slice.19']
numba.core.byteflow - DEBUG - dispatch pc=174, inst=CALL_METHOD(arg=1, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$136load_method.1', '$172binary_subscr.20']
numba.core.byteflow - DEBUG - dispatch pc=176, inst=STORE_FAST(arg=9, lineno=1230)
numba.core.byteflow - DEBUG - stack ['$174call_method.21']
numba.core.byteflow - DEBUG - dispatch pc=178, inst=LOAD_FAST(arg=0, lineno=1233)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=180, inst=LOAD_FAST(arg=8, lineno=1233)
numba.core.byteflow - DEBUG - stack ['$x178.22']
numba.core.byteflow - DEBUG - dispatch pc=182, inst=BINARY_SUBSCR(arg=None, lineno=1233)
numba.core.byteflow - DEBUG - stack ['$x178.22', '$n180.23']
numba.core.byteflow - DEBUG - dispatch pc=184, inst=LOAD_FAST(arg=9, lineno=1233)
numba.core.byteflow - DEBUG - stack ['$182binary_subscr.24']
numba.core.byteflow - DEBUG - dispatch pc=186, inst=COMPARE_OP(arg=2, lineno=1233)
numba.core.byteflow - DEBUG - stack ['$182binary_subscr.24', '$maxn184.25']
numba.core.byteflow - DEBUG - dispatch pc=188, inst=LOAD_FAST(arg=7, lineno=1233)
numba.core.byteflow - DEBUG - stack ['$186compare_op.26']
numba.core.byteflow - DEBUG - dispatch pc=190, inst=LOAD_FAST(arg=8, lineno=1233)
numba.core.byteflow - DEBUG - stack ['$186compare_op.26', '$peaks188.27']
numba.core.byteflow - DEBUG - dispatch pc=192, inst=STORE_SUBSCR(arg=None, lineno=1233)
numba.core.byteflow - DEBUG - stack ['$186compare_op.26', '$peaks188.27', '$n190.28']
numba.core.byteflow - DEBUG - dispatch pc=194, inst=LOAD_FAST(arg=7, lineno=1235)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=196, inst=LOAD_FAST(arg=8, lineno=1235)
numba.core.byteflow - DEBUG - stack ['$peaks194.29']
numba.core.byteflow - DEBUG - dispatch pc=198, inst=BINARY_SUBSCR(arg=None, lineno=1235)
numba.core.byteflow - DEBUG - stack ['$peaks194.29', '$n196.30']
numba.core.byteflow - DEBUG - dispatch pc=200, inst=POP_JUMP_IF_TRUE(arg=107, lineno=1235)
numba.core.byteflow - DEBUG - stack ['$198binary_subscr.31']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=202, stack=(), blockstack=(), npush=0), Edge(pc=212, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=332 nstack_initial=0), State(pc_initial=202 nstack_initial=0), State(pc_initial=212 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=332 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=332, inst=LOAD_CONST(arg=2, lineno=1229)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=334, inst=RETURN_VALUE(arg=None, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$const332.0']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=202 nstack_initial=0), State(pc_initial=212 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=202 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=202, inst=LOAD_FAST(arg=8, lineno=1236)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=204, inst=LOAD_CONST(arg=3, lineno=1236)
numba.core.byteflow - DEBUG - stack ['$n202.0']
numba.core.byteflow - DEBUG - dispatch pc=206, inst=INPLACE_ADD(arg=None, lineno=1236)
numba.core.byteflow - DEBUG - stack ['$n202.0', '$const204.1']
numba.core.byteflow - DEBUG - dispatch pc=208, inst=STORE_FAST(arg=8, lineno=1236)
numba.core.byteflow - DEBUG - stack ['$206inplace_add.2']
numba.core.byteflow - DEBUG - dispatch pc=210, inst=JUMP_ABSOLUTE(arg=61, lineno=1237)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=120, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=212 nstack_initial=0), State(pc_initial=120 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=212 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=212, inst=LOAD_GLOBAL(arg=0, lineno=1239)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=214, inst=LOAD_METHOD(arg=4, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$212load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=216, inst=LOAD_FAST(arg=0, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1']
numba.core.byteflow - DEBUG - dispatch pc=218, inst=LOAD_GLOBAL(arg=1, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2']
numba.core.byteflow - DEBUG - dispatch pc=220, inst=LOAD_CONST(arg=1, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$218load_global.3']
numba.core.byteflow - DEBUG - dispatch pc=222, inst=LOAD_FAST(arg=8, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$218load_global.3', '$const220.4']
numba.core.byteflow - DEBUG - dispatch pc=224, inst=LOAD_FAST(arg=3, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$218load_global.3', '$const220.4', '$n222.5']
numba.core.byteflow - DEBUG - dispatch pc=226, inst=BINARY_SUBTRACT(arg=None, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$218load_global.3', '$const220.4', '$n222.5', '$pre_avg224.6']
numba.core.byteflow - DEBUG - dispatch pc=228, inst=CALL_FUNCTION(arg=2, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$218load_global.3', '$const220.4', '$226binary_subtract.7']
numba.core.byteflow - DEBUG - dispatch pc=230, inst=LOAD_GLOBAL(arg=2, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$228call_function.8']
numba.core.byteflow - DEBUG - dispatch pc=232, inst=LOAD_FAST(arg=8, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9']
numba.core.byteflow - DEBUG - dispatch pc=234, inst=LOAD_FAST(arg=4, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$n232.10']
numba.core.byteflow - DEBUG - dispatch pc=236, inst=BINARY_ADD(arg=None, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$n232.10', '$post_avg234.11']
numba.core.byteflow - DEBUG - dispatch pc=238, inst=LOAD_FAST(arg=0, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$236binary_add.12']
numba.core.byteflow - DEBUG - dispatch pc=240, inst=LOAD_ATTR(arg=3, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$236binary_add.12', '$x238.13']
numba.core.byteflow - DEBUG - dispatch pc=242, inst=LOAD_CONST(arg=1, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$236binary_add.12', '$240load_attr.14']
numba.core.byteflow - DEBUG - dispatch pc=244, inst=BINARY_SUBSCR(arg=None, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$236binary_add.12', '$240load_attr.14', '$const242.15']
numba.core.byteflow - DEBUG - dispatch pc=246, inst=CALL_FUNCTION(arg=2, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$230load_global.9', '$236binary_add.12', '$244binary_subscr.16']
numba.core.byteflow - DEBUG - dispatch pc=248, inst=BUILD_SLICE(arg=2, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$228call_function.8', '$246call_function.17']
numba.core.byteflow - DEBUG - dispatch pc=250, inst=BINARY_SUBSCR(arg=None, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$x216.2', '$248build_slice.19']
numba.core.byteflow - DEBUG - dispatch pc=252, inst=CALL_METHOD(arg=1, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$214load_method.1', '$250binary_subscr.20']
numba.core.byteflow - DEBUG - dispatch pc=254, inst=STORE_FAST(arg=10, lineno=1239)
numba.core.byteflow - DEBUG - stack ['$252call_method.21']
numba.core.byteflow - DEBUG - dispatch pc=256, inst=LOAD_FAST(arg=7, lineno=1240)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=258, inst=LOAD_FAST(arg=8, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22']
numba.core.byteflow - DEBUG - dispatch pc=260, inst=DUP_TOP_TWO(arg=None, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23']
numba.core.byteflow - DEBUG - dispatch pc=262, inst=BINARY_SUBSCR(arg=None, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23', '$260dup_top_two.24', '$260dup_top_two.25']
numba.core.byteflow - DEBUG - dispatch pc=264, inst=LOAD_FAST(arg=0, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26']
numba.core.byteflow - DEBUG - dispatch pc=266, inst=LOAD_FAST(arg=8, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$x264.27']
numba.core.byteflow - DEBUG - dispatch pc=268, inst=BINARY_SUBSCR(arg=None, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$x264.27', '$n266.28']
numba.core.byteflow - DEBUG - dispatch pc=270, inst=LOAD_FAST(arg=10, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$268binary_subscr.29']
numba.core.byteflow - DEBUG - dispatch pc=272, inst=LOAD_FAST(arg=5, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$268binary_subscr.29', '$avgn270.30']
numba.core.byteflow - DEBUG - dispatch pc=274, inst=BINARY_ADD(arg=None, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$268binary_subscr.29', '$avgn270.30', '$delta272.31']
numba.core.byteflow - DEBUG - dispatch pc=276, inst=COMPARE_OP(arg=5, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$268binary_subscr.29', '$274binary_add.32']
numba.core.byteflow - DEBUG - dispatch pc=278, inst=INPLACE_AND(arg=None, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23', '$262binary_subscr.26', '$276compare_op.33']
numba.core.byteflow - DEBUG - dispatch pc=280, inst=ROT_THREE(arg=None, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$peaks256.22', '$n258.23', '$278inplace_and.34']
numba.core.byteflow - DEBUG - dispatch pc=282, inst=STORE_SUBSCR(arg=None, lineno=1240)
numba.core.byteflow - DEBUG - stack ['$278inplace_and.34', '$peaks256.22', '$n258.23']
numba.core.byteflow - DEBUG - dispatch pc=284, inst=LOAD_FAST(arg=7, lineno=1242)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=286, inst=LOAD_FAST(arg=8, lineno=1242)
numba.core.byteflow - DEBUG - stack ['$peaks284.35']
numba.core.byteflow - DEBUG - dispatch pc=288, inst=BINARY_SUBSCR(arg=None, lineno=1242)
numba.core.byteflow - DEBUG - stack ['$peaks284.35', '$n286.36']
numba.core.byteflow - DEBUG - dispatch pc=290, inst=POP_JUMP_IF_TRUE(arg=152, lineno=1242)
numba.core.byteflow - DEBUG - stack ['$288binary_subscr.37']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=292, stack=(), blockstack=(), npush=0), Edge(pc=302, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=120 nstack_initial=0), State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=292 nstack_initial=0), State(pc_initial=302 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=292 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=292, inst=LOAD_FAST(arg=8, lineno=1243)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=294, inst=LOAD_CONST(arg=3, lineno=1243)
numba.core.byteflow - DEBUG - stack ['$n292.0']
numba.core.byteflow - DEBUG - dispatch pc=296, inst=INPLACE_ADD(arg=None, lineno=1243)
numba.core.byteflow - DEBUG - stack ['$n292.0', '$const294.1']
numba.core.byteflow - DEBUG - dispatch pc=298, inst=STORE_FAST(arg=8, lineno=1243)
numba.core.byteflow - DEBUG - stack ['$296inplace_add.2']
numba.core.byteflow - DEBUG - dispatch pc=300, inst=JUMP_ABSOLUTE(arg=61, lineno=1244)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=120, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=302 nstack_initial=0), State(pc_initial=120 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=302 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=302, inst=LOAD_FAST(arg=8, lineno=1247)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=304, inst=LOAD_FAST(arg=6, lineno=1247)
numba.core.byteflow - DEBUG - stack ['$n302.0']
numba.core.byteflow - DEBUG - dispatch pc=306, inst=LOAD_CONST(arg=3, lineno=1247)
numba.core.byteflow - DEBUG - stack ['$n302.0', '$wait304.1']
numba.core.byteflow - DEBUG - dispatch pc=308, inst=BINARY_ADD(arg=None, lineno=1247)
numba.core.byteflow - DEBUG - stack ['$n302.0', '$wait304.1', '$const306.2']
numba.core.byteflow - DEBUG - dispatch pc=310, inst=INPLACE_ADD(arg=None, lineno=1247)
numba.core.byteflow - DEBUG - stack ['$n302.0', '$308binary_add.3']
numba.core.byteflow - DEBUG - dispatch pc=312, inst=STORE_FAST(arg=8, lineno=1247)
numba.core.byteflow - DEBUG - stack ['$310inplace_add.4']
numba.core.byteflow - DEBUG - dispatch pc=314, inst=LOAD_FAST(arg=8, lineno=1229)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=316, inst=LOAD_FAST(arg=0, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$n314.5']
numba.core.byteflow - DEBUG - dispatch pc=318, inst=LOAD_ATTR(arg=3, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$n314.5', '$x316.6']
numba.core.byteflow - DEBUG - dispatch pc=320, inst=LOAD_CONST(arg=1, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$n314.5', '$318load_attr.7']
numba.core.byteflow - DEBUG - dispatch pc=322, inst=BINARY_SUBSCR(arg=None, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$n314.5', '$318load_attr.7', '$const320.8']
numba.core.byteflow - DEBUG - dispatch pc=324, inst=COMPARE_OP(arg=0, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$n314.5', '$322binary_subscr.9']
numba.core.byteflow - DEBUG - dispatch pc=326, inst=POP_JUMP_IF_TRUE(arg=68, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$324compare_op.10']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=328, stack=(), blockstack=(), npush=0), Edge(pc=134, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=120 nstack_initial=0), State(pc_initial=328 nstack_initial=0), State(pc_initial=134 nstack_initial=0)])
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=328 nstack_initial=0), State(pc_initial=134 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=328 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=328, inst=LOAD_CONST(arg=2, lineno=1229)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=330, inst=RETURN_VALUE(arg=None, lineno=1229)
numba.core.byteflow - DEBUG - stack ['$const328.0']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=134 nstack_initial=0)])
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=116 nstack_initial=0): set(),
             State(pc_initial=120 nstack_initial=0): set(),
             State(pc_initial=134 nstack_initial=0): set(),
             State(pc_initial=202 nstack_initial=0): set(),
             State(pc_initial=212 nstack_initial=0): set(),
             State(pc_initial=292 nstack_initial=0): set(),
             State(pc_initial=302 nstack_initial=0): set(),
             State(pc_initial=328 nstack_initial=0): set(),
             State(pc_initial=332 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - keep phismap: {}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'res': '$const4.1'}), (6, {'index': '$const4.1', 'target': '$x2.0', 'res': '$6binary_subscr.2'}), (8, {'res': '$8load_global.3'}), (10, {'item': '$8load_global.3', 'res': '$10load_method.4'}), (12, {'res': '$x12.5'}), (14, {'res': '$const14.6'}), (16, {'res': '$16load_global.7'}), (18, {'res': '$post_max18.8'}), (20, {'res': '$x20.9'}), (22, {'item': '$x20.9', 'res': '$22load_attr.10'}), (24, {'res': '$const24.11'}), (26, {'index': '$const24.11', 'target': '$22load_attr.10', 'res': '$26binary_subscr.12'}), (28, {'func': '$16load_global.7', 'args': ['$post_max18.8', '$26binary_subscr.12'], 'res': '$28call_function.13'}), (30, {'start': '$const14.6', 'stop': '$28call_function.13', 'step': None, 'res': '$30build_slice.15', 'slicevar': '$30build_slice.14'}), (32, {'index': '$30build_slice.15', 'target': '$x12.5', 'res': '$32binary_subscr.16'}), (34, {'func': '$10load_method.4', 'args': ['$32binary_subscr.16'], 'res': '$34call_method.17'}), (36, {'lhs': '$6binary_subscr.2', 'rhs': '$34call_method.17', 'res': '$36compare_op.18'}), (38, {'res': '$peaks38.19'}), (40, {'res': '$const40.20'}), (42, {'target': '$peaks38.19', 'index': '$const40.20', 'value': '$36compare_op.18'}), (44, {'res': '$peaks44.21'}), (46, {'res': '$const46.22'}), (48, {'orig': ['$peaks44.21', '$const46.22'], 'duped': ['$48dup_top_two.23', '$48dup_top_two.24']}), (50, {'index': '$48dup_top_two.24', 'target': '$48dup_top_two.23', 'res': '$50binary_subscr.25'}), (52, {'res': '$x52.26'}), (54, {'res': '$const54.27'}), (56, {'index': '$const54.27', 'target': '$x52.26', 'res': '$56binary_subscr.28'}), (58, {'res': '$58load_global.29'}), (60, {'item': '$58load_global.29', 'res': '$60load_method.30'}), (62, {'res': '$x62.31'}), (64, {'res': '$const64.32'}), (66, {'res': '$66load_global.33'}), (68, {'res': '$post_avg68.34'}), (70, {'res': '$x70.35'}), (72, {'item': '$x70.35', 'res': '$72load_attr.36'}), (74, {'res': '$const74.37'}), (76, {'index': '$const74.37', 'target': '$72load_attr.36', 'res': '$76binary_subscr.38'}), (78, {'func': '$66load_global.33', 'args': ['$post_avg68.34', '$76binary_subscr.38'], 'res': '$78call_function.39'}), (80, {'start': '$const64.32', 'stop': '$78call_function.39', 'step': None, 'res': '$80build_slice.41', 'slicevar': '$80build_slice.40'}), (82, {'index': '$80build_slice.41', 'target': '$x62.31', 'res': '$82binary_subscr.42'}), (84, {'func': '$60load_method.30', 'args': ['$82binary_subscr.42'], 'res': '$84call_method.43'}), (86, {'res': '$delta86.44'}), (88, {'lhs': '$84call_method.43', 'rhs': '$delta86.44', 'res': '$88binary_add.45'}), (90, {'lhs': '$56binary_subscr.28', 'rhs': '$88binary_add.45', 'res': '$90compare_op.46'}), (92, {'lhs': '$50binary_subscr.25', 'rhs': '$90compare_op.46', 'res': '$92inplace_and.47'}), (96, {'target': '$peaks44.21', 'index': '$const46.22', 'value': '$92inplace_and.47'}), (98, {'res': '$peaks98.48'}), (100, {'res': '$const100.49'}), (102, {'index': '$const100.49', 'target': '$peaks98.48', 'res': '$102binary_subscr.50'}), (104, {'pred': '$102binary_subscr.50'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: (), 116: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$wait106.0'}), (108, {'res': '$const108.1'}), (110, {'lhs': '$wait106.0', 'rhs': '$const108.1', 'res': '$110binary_add.2'}), (112, {'value': '$110binary_add.2'}), (114, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={120: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=116 nstack_initial=0):
AdaptBlockInfo(insts=((116, {'res': '$const116.0'}), (118, {'value': '$const116.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={120: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=120 nstack_initial=0):
AdaptBlockInfo(insts=((120, {'res': '$n120.0'}), (122, {'res': '$x122.1'}), (124, {'item': '$x122.1', 'res': '$124load_attr.2'}), (126, {'res': '$const126.3'}), (128, {'index': '$const126.3', 'target': '$124load_attr.2', 'res': '$128binary_subscr.4'}), (130, {'lhs': '$n120.0', 'rhs': '$128binary_subscr.4', 'res': '$130compare_op.5'}), (132, {'pred': '$130compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={134: (), 332: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=134 nstack_initial=0):
AdaptBlockInfo(insts=((134, {'res': '$134load_global.0'}), (136, {'item': '$134load_global.0', 'res': '$136load_method.1'}), (138, {'res': '$x138.2'}), (140, {'res': '$140load_global.3'}), (142, {'res': '$const142.4'}), (144, {'res': '$n144.5'}), (146, {'res': '$pre_max146.6'}), (148, {'lhs': '$n144.5', 'rhs': '$pre_max146.6', 'res': '$148binary_subtract.7'}), (150, {'func': '$140load_global.3', 'args': ['$const142.4', '$148binary_subtract.7'], 'res': '$150call_function.8'}), (152, {'res': '$152load_global.9'}), (154, {'res': '$n154.10'}), (156, {'res': '$post_max156.11'}), (158, {'lhs': '$n154.10', 'rhs': '$post_max156.11', 'res': '$158binary_add.12'}), (160, {'res': '$x160.13'}), (162, {'item': '$x160.13', 'res': '$162load_attr.14'}), (164, {'res': '$const164.15'}), (166, {'index': '$const164.15', 'target': '$162load_attr.14', 'res': '$166binary_subscr.16'}), (168, {'func': '$152load_global.9', 'args': ['$158binary_add.12', '$166binary_subscr.16'], 'res': '$168call_function.17'}), (170, {'start': '$150call_function.8', 'stop': '$168call_function.17', 'step': None, 'res': '$170build_slice.19', 'slicevar': '$170build_slice.18'}), (172, {'index': '$170build_slice.19', 'target': '$x138.2', 'res': '$172binary_subscr.20'}), (174, {'func': '$136load_method.1', 'args': ['$172binary_subscr.20'], 'res': '$174call_method.21'}), (176, {'value': '$174call_method.21'}), (178, {'res': '$x178.22'}), (180, {'res': '$n180.23'}), (182, {'index': '$n180.23', 'target': '$x178.22', 'res': '$182binary_subscr.24'}), (184, {'res': '$maxn184.25'}), (186, {'lhs': '$182binary_subscr.24', 'rhs': '$maxn184.25', 'res': '$186compare_op.26'}), (188, {'res': '$peaks188.27'}), (190, {'res': '$n190.28'}), (192, {'target': '$peaks188.27', 'index': '$n190.28', 'value': '$186compare_op.26'}), (194, {'res': '$peaks194.29'}), (196, {'res': '$n196.30'}), (198, {'index': '$n196.30', 'target': '$peaks194.29', 'res': '$198binary_subscr.31'}), (200, {'pred': '$198binary_subscr.31'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={202: (), 212: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=202 nstack_initial=0):
AdaptBlockInfo(insts=((202, {'res': '$n202.0'}), (204, {'res': '$const204.1'}), (206, {'lhs': '$n202.0', 'rhs': '$const204.1', 'res': '$206inplace_add.2'}), (208, {'value': '$206inplace_add.2'}), (210, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={120: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=212 nstack_initial=0):
AdaptBlockInfo(insts=((212, {'res': '$212load_global.0'}), (214, {'item': '$212load_global.0', 'res': '$214load_method.1'}), (216, {'res': '$x216.2'}), (218, {'res': '$218load_global.3'}), (220, {'res': '$const220.4'}), (222, {'res': '$n222.5'}), (224, {'res': '$pre_avg224.6'}), (226, {'lhs': '$n222.5', 'rhs': '$pre_avg224.6', 'res': '$226binary_subtract.7'}), (228, {'func': '$218load_global.3', 'args': ['$const220.4', '$226binary_subtract.7'], 'res': '$228call_function.8'}), (230, {'res': '$230load_global.9'}), (232, {'res': '$n232.10'}), (234, {'res': '$post_avg234.11'}), (236, {'lhs': '$n232.10', 'rhs': '$post_avg234.11', 'res': '$236binary_add.12'}), (238, {'res': '$x238.13'}), (240, {'item': '$x238.13', 'res': '$240load_attr.14'}), (242, {'res': '$const242.15'}), (244, {'index': '$const242.15', 'target': '$240load_attr.14', 'res': '$244binary_subscr.16'}), (246, {'func': '$230load_global.9', 'args': ['$236binary_add.12', '$244binary_subscr.16'], 'res': '$246call_function.17'}), (248, {'start': '$228call_function.8', 'stop': '$246call_function.17', 'step': None, 'res': '$248build_slice.19', 'slicevar': '$248build_slice.18'}), (250, {'index': '$248build_slice.19', 'target': '$x216.2', 'res': '$250binary_subscr.20'}), (252, {'func': '$214load_method.1', 'args': ['$250binary_subscr.20'], 'res': '$252call_method.21'}), (254, {'value': '$252call_method.21'}), (256, {'res': '$peaks256.22'}), (258, {'res': '$n258.23'}), (260, {'orig': ['$peaks256.22', '$n258.23'], 'duped': ['$260dup_top_two.24', '$260dup_top_two.25']}), (262, {'index': '$260dup_top_two.25', 'target': '$260dup_top_two.24', 'res': '$262binary_subscr.26'}), (264, {'res': '$x264.27'}), (266, {'res': '$n266.28'}), (268, {'index': '$n266.28', 'target': '$x264.27', 'res': '$268binary_subscr.29'}), (270, {'res': '$avgn270.30'}), (272, {'res': '$delta272.31'}), (274, {'lhs': '$avgn270.30', 'rhs': '$delta272.31', 'res': '$274binary_add.32'}), (276, {'lhs': '$268binary_subscr.29', 'rhs': '$274binary_add.32', 'res': '$276compare_op.33'}), (278, {'lhs': '$262binary_subscr.26', 'rhs': '$276compare_op.33', 'res': '$278inplace_and.34'}), (282, {'target': '$peaks256.22', 'index': '$n258.23', 'value': '$278inplace_and.34'}), (284, {'res': '$peaks284.35'}), (286, {'res': '$n286.36'}), (288, {'index': '$n286.36', 'target': '$peaks284.35', 'res': '$288binary_subscr.37'}), (290, {'pred': '$288binary_subscr.37'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={292: (), 302: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=292 nstack_initial=0):
AdaptBlockInfo(insts=((292, {'res': '$n292.0'}), (294, {'res': '$const294.1'}), (296, {'lhs': '$n292.0', 'rhs': '$const294.1', 'res': '$296inplace_add.2'}), (298, {'value': '$296inplace_add.2'}), (300, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={120: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=302 nstack_initial=0):
AdaptBlockInfo(insts=((302, {'res': '$n302.0'}), (304, {'res': '$wait304.1'}), (306, {'res': '$const306.2'}), (308, {'lhs': '$wait304.1', 'rhs': '$const306.2', 'res': '$308binary_add.3'}), (310, {'lhs': '$n302.0', 'rhs': '$308binary_add.3', 'res': '$310inplace_add.4'}), (312, {'value': '$310inplace_add.4'}), (314, {'res': '$n314.5'}), (316, {'res': '$x316.6'}), (318, {'item': '$x316.6', 'res': '$318load_attr.7'}), (320, {'res': '$const320.8'}), (322, {'index': '$const320.8', 'target': '$318load_attr.7', 'res': '$322binary_subscr.9'}), (324, {'lhs': '$n314.5', 'rhs': '$322binary_subscr.9', 'res': '$324compare_op.10'}), (326, {'pred': '$324compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={328: (), 134: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=328 nstack_initial=0):
AdaptBlockInfo(insts=((328, {'res': '$const328.0'}), (330, {'retval': '$const328.0', 'castval': '$330return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=332 nstack_initial=0):
AdaptBlockInfo(insts=((332, {'res': '$const332.0'}), (334, {'retval': '$const332.0', 'castval': '$334return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    pre_max = arg(1, name=pre_max)           ['pre_max']
    post_max = arg(2, name=post_max)         ['post_max']
    pre_avg = arg(3, name=pre_avg)           ['pre_avg']
    post_avg = arg(4, name=post_avg)         ['post_avg']
    delta = arg(5, name=delta)               ['delta']
    wait = arg(6, name=wait)                 ['wait']
    peaks = arg(7, name=peaks)               ['peaks']
    $const4.1 = const(int, 0)                ['$const4.1']
    $6binary_subscr.2 = getitem(value=x, index=$const4.1, fn=<built-in function getitem>) ['$6binary_subscr.2', '$const4.1', 'x']
    $8load_global.3 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$8load_global.3']
    $10load_method.4 = getattr(value=$8load_global.3, attr=max) ['$10load_method.4', '$8load_global.3']
    $const14.6 = const(NoneType, None)       ['$const14.6']
    $16load_global.7 = global(min: <built-in function min>) ['$16load_global.7']
    $22load_attr.10 = getattr(value=x, attr=shape) ['$22load_attr.10', 'x']
    $const24.11 = const(int, 0)              ['$const24.11']
    $26binary_subscr.12 = getitem(value=$22load_attr.10, index=$const24.11, fn=<built-in function getitem>) ['$22load_attr.10', '$26binary_subscr.12', '$const24.11']
    $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1209), Var($26binary_subscr.12, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_global.7', '$26binary_subscr.12', '$28call_function.13', 'post_max']
    $30build_slice.14 = global(slice: <class 'slice'>) ['$30build_slice.14']
    $30build_slice.15 = call $30build_slice.14($const14.6, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6, utils.py:1221), Var($28call_function.13, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None) ['$28call_function.13', '$30build_slice.14', '$30build_slice.15', '$const14.6']
    $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>) ['$30build_slice.15', '$32binary_subscr.16', 'x']
    $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_method.4', '$32binary_subscr.16', '$34call_method.17']
    $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17 ['$34call_method.17', '$36compare_op.18', '$6binary_subscr.2']
    $const40.20 = const(int, 0)              ['$const40.20']
    peaks[$const40.20] = $36compare_op.18    ['$36compare_op.18', '$const40.20', 'peaks']
    $const46.22 = const(int, 0)              ['$const46.22']
    $50binary_subscr.25 = getitem(value=peaks, index=$const46.22, fn=<built-in function getitem>) ['$50binary_subscr.25', '$const46.22', 'peaks']
    $const54.27 = const(int, 0)              ['$const54.27']
    $56binary_subscr.28 = getitem(value=x, index=$const54.27, fn=<built-in function getitem>) ['$56binary_subscr.28', '$const54.27', 'x']
    $58load_global.29 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$58load_global.29']
    $60load_method.30 = getattr(value=$58load_global.29, attr=mean) ['$58load_global.29', '$60load_method.30']
    $const64.32 = const(NoneType, None)      ['$const64.32']
    $66load_global.33 = global(min: <built-in function min>) ['$66load_global.33']
    $72load_attr.36 = getattr(value=x, attr=shape) ['$72load_attr.36', 'x']
    $const74.37 = const(int, 0)              ['$const74.37']
    $76binary_subscr.38 = getitem(value=$72load_attr.36, index=$const74.37, fn=<built-in function getitem>) ['$72load_attr.36', '$76binary_subscr.38', '$const74.37']
    $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1209), Var($76binary_subscr.38, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_global.33', '$76binary_subscr.38', '$78call_function.39', 'post_avg']
    $80build_slice.40 = global(slice: <class 'slice'>) ['$80build_slice.40']
    $80build_slice.41 = call $80build_slice.40($const64.32, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32, utils.py:1222), Var($78call_function.39, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None) ['$78call_function.39', '$80build_slice.40', '$80build_slice.41', '$const64.32']
    $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>) ['$80build_slice.41', '$82binary_subscr.42', 'x']
    $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None) ['$60load_method.30', '$82binary_subscr.42', '$84call_method.43']
    $88binary_add.45 = $84call_method.43 + delta ['$84call_method.43', '$88binary_add.45', 'delta']
    $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45 ['$56binary_subscr.28', '$88binary_add.45', '$90compare_op.46']
    $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined) ['$50binary_subscr.25', '$90compare_op.46', '$92inplace_and.47']
    peaks[$const46.22] = $92inplace_and.47   ['$92inplace_and.47', '$const46.22', 'peaks']
    $const100.49 = const(int, 0)             ['$const100.49']
    $102binary_subscr.50 = getitem(value=peaks, index=$const100.49, fn=<built-in function getitem>) ['$102binary_subscr.50', '$const100.49', 'peaks']
    bool104 = global(bool: <class 'bool'>)   ['bool104']
    $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None) ['$102binary_subscr.50', '$104pred', 'bool104']
    branch $104pred, 106, 116                ['$104pred']
label 106:
    $const108.1 = const(int, 1)              ['$const108.1']
    n = wait + $const108.1                   ['$const108.1', 'n', 'wait']
    jump 120                                 []
label 116:
    n = const(int, 1)                        ['n']
    jump 120                                 []
label 120:
    $124load_attr.2 = getattr(value=x, attr=shape) ['$124load_attr.2', 'x']
    $const126.3 = const(int, 0)              ['$const126.3']
    $128binary_subscr.4 = getitem(value=$124load_attr.2, index=$const126.3, fn=<built-in function getitem>) ['$124load_attr.2', '$128binary_subscr.4', '$const126.3']
    $130compare_op.5 = n < $128binary_subscr.4 ['$128binary_subscr.4', '$130compare_op.5', 'n']
    bool132 = global(bool: <class 'bool'>)   ['bool132']
    $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None) ['$130compare_op.5', '$132pred', 'bool132']
    branch $132pred, 134, 332                ['$132pred']
label 134:
    $134load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$134load_global.0']
    $136load_method.1 = getattr(value=$134load_global.0, attr=max) ['$134load_global.0', '$136load_method.1']
    $140load_global.3 = global(max: <built-in function max>) ['$140load_global.3']
    $const142.4 = const(int, 0)              ['$const142.4']
    $148binary_subtract.7 = n - pre_max      ['$148binary_subtract.7', 'n', 'pre_max']
    $150call_function.8 = call $140load_global.3($const142.4, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4, utils.py:1230), Var($148binary_subtract.7, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$140load_global.3', '$148binary_subtract.7', '$150call_function.8', '$const142.4']
    $152load_global.9 = global(min: <built-in function min>) ['$152load_global.9']
    $158binary_add.12 = n + post_max         ['$158binary_add.12', 'n', 'post_max']
    $162load_attr.14 = getattr(value=x, attr=shape) ['$162load_attr.14', 'x']
    $const164.15 = const(int, 0)             ['$const164.15']
    $166binary_subscr.16 = getitem(value=$162load_attr.14, index=$const164.15, fn=<built-in function getitem>) ['$162load_attr.14', '$166binary_subscr.16', '$const164.15']
    $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1230), Var($166binary_subscr.16, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$152load_global.9', '$158binary_add.12', '$166binary_subscr.16', '$168call_function.17']
    $170build_slice.18 = global(slice: <class 'slice'>) ['$170build_slice.18']
    $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1230), Var($168call_function.17, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None) ['$150call_function.8', '$168call_function.17', '$170build_slice.18', '$170build_slice.19']
    $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>) ['$170build_slice.19', '$172binary_subscr.20', 'x']
    maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None) ['$136load_method.1', '$172binary_subscr.20', 'maxn']
    $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$182binary_subscr.24', 'n', 'x']
    $186compare_op.26 = $182binary_subscr.24 == maxn ['$182binary_subscr.24', '$186compare_op.26', 'maxn']
    peaks[n] = $186compare_op.26             ['$186compare_op.26', 'n', 'peaks']
    $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$198binary_subscr.31', 'n', 'peaks']
    bool200 = global(bool: <class 'bool'>)   ['bool200']
    $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None) ['$198binary_subscr.31', '$200pred', 'bool200']
    branch $200pred, 212, 202                ['$200pred']
label 202:
    $const204.1 = const(int, 1)              ['$const204.1']
    $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined) ['$206inplace_add.2', '$const204.1', 'n']
    n = $206inplace_add.2                    ['$206inplace_add.2', 'n']
    jump 120                                 []
label 212:
    $212load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$212load_global.0']
    $214load_method.1 = getattr(value=$212load_global.0, attr=mean) ['$212load_global.0', '$214load_method.1']
    $218load_global.3 = global(max: <built-in function max>) ['$218load_global.3']
    $const220.4 = const(int, 0)              ['$const220.4']
    $226binary_subtract.7 = n - pre_avg      ['$226binary_subtract.7', 'n', 'pre_avg']
    $228call_function.8 = call $218load_global.3($const220.4, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4, utils.py:1239), Var($226binary_subtract.7, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$218load_global.3', '$226binary_subtract.7', '$228call_function.8', '$const220.4']
    $230load_global.9 = global(min: <built-in function min>) ['$230load_global.9']
    $236binary_add.12 = n + post_avg         ['$236binary_add.12', 'n', 'post_avg']
    $240load_attr.14 = getattr(value=x, attr=shape) ['$240load_attr.14', 'x']
    $const242.15 = const(int, 0)             ['$const242.15']
    $244binary_subscr.16 = getitem(value=$240load_attr.14, index=$const242.15, fn=<built-in function getitem>) ['$240load_attr.14', '$244binary_subscr.16', '$const242.15']
    $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1239), Var($244binary_subscr.16, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$230load_global.9', '$236binary_add.12', '$244binary_subscr.16', '$246call_function.17']
    $248build_slice.18 = global(slice: <class 'slice'>) ['$248build_slice.18']
    $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1239), Var($246call_function.17, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None) ['$228call_function.8', '$246call_function.17', '$248build_slice.18', '$248build_slice.19']
    $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>) ['$248build_slice.19', '$250binary_subscr.20', 'x']
    avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None) ['$214load_method.1', '$250binary_subscr.20', 'avgn']
    $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$262binary_subscr.26', 'n', 'peaks']
    $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>) ['$268binary_subscr.29', 'n', 'x']
    $274binary_add.32 = avgn + delta         ['$274binary_add.32', 'avgn', 'delta']
    $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32 ['$268binary_subscr.29', '$274binary_add.32', '$276compare_op.33']
    $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined) ['$262binary_subscr.26', '$276compare_op.33', '$278inplace_and.34']
    peaks[n] = $278inplace_and.34            ['$278inplace_and.34', 'n', 'peaks']
    $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>) ['$288binary_subscr.37', 'n', 'peaks']
    bool290 = global(bool: <class 'bool'>)   ['bool290']
    $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None) ['$288binary_subscr.37', '$290pred', 'bool290']
    branch $290pred, 302, 292                ['$290pred']
label 292:
    $const294.1 = const(int, 1)              ['$const294.1']
    $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined) ['$296inplace_add.2', '$const294.1', 'n']
    n = $296inplace_add.2                    ['$296inplace_add.2', 'n']
    jump 120                                 []
label 302:
    $const306.2 = const(int, 1)              ['$const306.2']
    $308binary_add.3 = wait + $const306.2    ['$308binary_add.3', '$const306.2', 'wait']
    $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined) ['$308binary_add.3', '$310inplace_add.4', 'n']
    n = $310inplace_add.4                    ['$310inplace_add.4', 'n']
    $318load_attr.7 = getattr(value=x, attr=shape) ['$318load_attr.7', 'x']
    $const320.8 = const(int, 0)              ['$const320.8']
    $322binary_subscr.9 = getitem(value=$318load_attr.7, index=$const320.8, fn=<built-in function getitem>) ['$318load_attr.7', '$322binary_subscr.9', '$const320.8']
    $324compare_op.10 = n < $322binary_subscr.9 ['$322binary_subscr.9', '$324compare_op.10', 'n']
    bool326 = global(bool: <class 'bool'>)   ['bool326']
    $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None) ['$324compare_op.10', '$326pred', 'bool326']
    branch $326pred, 134, 328                ['$326pred']
label 328:
    $const328.0 = const(NoneType, None)      ['$const328.0']
    $330return_value.1 = cast(value=$const328.0) ['$330return_value.1', '$const328.0']
    return $330return_value.1                ['$330return_value.1']
label 332:
    $const332.0 = const(NoneType, None)      ['$const332.0']
    $334return_value.1 = cast(value=$const332.0) ['$334return_value.1', '$const332.0']
    return $334return_value.1                ['$334return_value.1']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752ddf2b0>
numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
numba.core.ssa - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
numba.core.ssa - DEBUG - on stmt: post_max = arg(2, name=post_max)
numba.core.ssa - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
numba.core.ssa - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
numba.core.ssa - DEBUG - on stmt: delta = arg(5, name=delta)
numba.core.ssa - DEBUG - on stmt: wait = arg(6, name=wait)
numba.core.ssa - DEBUG - on stmt: peaks = arg(7, name=peaks)
numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $8load_global.3 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $10load_method.4 = getattr(value=$8load_global.3, attr=max)
numba.core.ssa - DEBUG - on stmt: $const14.6 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $16load_global.7 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $22load_attr.10 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const24.11 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1209), Var($26binary_subscr.12, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $30build_slice.14 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $30build_slice.15 = call $30build_slice.14($const14.6, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6, utils.py:1221), Var($28call_function.13, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17
numba.core.ssa - DEBUG - on stmt: $const40.20 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: peaks[0] = $36compare_op.18
numba.core.ssa - DEBUG - on stmt: $const46.22 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $const54.27 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $58load_global.29 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $60load_method.30 = getattr(value=$58load_global.29, attr=mean)
numba.core.ssa - DEBUG - on stmt: $const64.32 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $66load_global.33 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $72load_attr.36 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const74.37 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1209), Var($76binary_subscr.38, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $80build_slice.40 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $80build_slice.41 = call $80build_slice.40($const64.32, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32, utils.py:1222), Var($78call_function.39, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $88binary_add.45 = $84call_method.43 + delta
numba.core.ssa - DEBUG - on stmt: $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45
numba.core.ssa - DEBUG - on stmt: $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: peaks[0] = $92inplace_and.47
numba.core.ssa - DEBUG - on stmt: $const100.49 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: bool104 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $104pred, 106, 116
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 106
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752ddf2b0>
numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: n = wait + $const108.1
numba.core.ssa - DEBUG - on stmt: jump 120
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 116
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752ddf2b0>
numba.core.ssa - DEBUG - on stmt: n = const(int, 1)
numba.core.ssa - DEBUG - on stmt: jump 120
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 120
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752ddf2b0>
numba.core.ssa - DEBUG - on stmt: $124load_attr.2 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const126.3 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $130compare_op.5 = n < $128binary_subscr.4
numba.core.ssa - DEBUG - on stmt: bool132 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $132pred, 134, 332
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 134
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752ddf2b0>
numba.core.ssa - DEBUG - on stmt: $134load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $136load_method.1 = getattr(value=$134load_global.0, attr=max)
numba.core.ssa - DEBUG - on stmt: $140load_global.3 = global(max: <built-in function max>)
numba.core.ssa - DEBUG - on stmt: $const142.4 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $148binary_subtract.7 = n - pre_max
numba.core.ssa - DEBUG - on stmt: $150call_function.8 = call $140load_global.3($const142.4, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4, utils.py:1230), Var($148binary_subtract.7, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $152load_global.9 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $158binary_add.12 = n + post_max
numba.core.ssa - DEBUG - on stmt: $162load_attr.14 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const164.15 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1230), Var($166binary_subscr.16, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $170build_slice.18 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1230), Var($168call_function.17, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $186compare_op.26 = $182binary_subscr.24 == maxn
numba.core.ssa - DEBUG - on stmt: peaks[n] = $186compare_op.26
numba.core.ssa - DEBUG - on stmt: $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $200pred, 212, 202
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 202
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752ddf2b0>
numba.core.ssa - DEBUG - on stmt: $const204.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: n = $206inplace_add.2
numba.core.ssa - DEBUG - on stmt: jump 333
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 212
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752ddf2b0>
numba.core.ssa - DEBUG - on stmt: $212load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $214load_method.1 = getattr(value=$212load_global.0, attr=mean)
numba.core.ssa - DEBUG - on stmt: $218load_global.3 = global(max: <built-in function max>)
numba.core.ssa - DEBUG - on stmt: $const220.4 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $226binary_subtract.7 = n - pre_avg
numba.core.ssa - DEBUG - on stmt: $228call_function.8 = call $218load_global.3($const220.4, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4, utils.py:1239), Var($226binary_subtract.7, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $230load_global.9 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $236binary_add.12 = n + post_avg
numba.core.ssa - DEBUG - on stmt: $240load_attr.14 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const242.15 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1239), Var($244binary_subscr.16, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $248build_slice.18 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1239), Var($246call_function.17, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $274binary_add.32 = avgn + delta
numba.core.ssa - DEBUG - on stmt: $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32
numba.core.ssa - DEBUG - on stmt: $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: peaks[n] = $278inplace_and.34
numba.core.ssa - DEBUG - on stmt: $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $290pred, 302, 292
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 292
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752ddf2b0>
numba.core.ssa - DEBUG - on stmt: $const294.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: n = $296inplace_add.2
numba.core.ssa - DEBUG - on stmt: jump 333
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 302
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752ddf2b0>
numba.core.ssa - DEBUG - on stmt: $const306.2 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $308binary_add.3 = wait + $const306.2
numba.core.ssa - DEBUG - on stmt: $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: n = $310inplace_add.4
numba.core.ssa - DEBUG - on stmt: $318load_attr.7 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const320.8 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $324compare_op.10 = n < $322binary_subscr.9
numba.core.ssa - DEBUG - on stmt: bool326 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $326pred, 134, 328
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 328
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752ddf2b0>
numba.core.ssa - DEBUG - on stmt: $const328.0 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $330return_value.1 = cast(value=$const328.0)
numba.core.ssa - DEBUG - on stmt: return $330return_value.1
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 332
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752ddf2b0>
numba.core.ssa - DEBUG - on stmt: $const332.0 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $334return_value.1 = cast(value=$const332.0)
numba.core.ssa - DEBUG - on stmt: return $334return_value.1
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 333
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752ddf2b0>
numba.core.ssa - DEBUG - on stmt: jump 120
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$102binary_subscr.50': [(<numba.core.ir.Assign object at 0x708752ddd6c0>,
                                       0)],
             '$104pred': [(<numba.core.ir.Assign object at 0x708752c43c70>, 0)],
             '$10load_method.4': [(<numba.core.ir.Assign object at 0x708752b406a0>,
                                   0)],
             '$124load_attr.2': [(<numba.core.ir.Assign object at 0x708752c40130>,
                                  120)],
             '$128binary_subscr.4': [(<numba.core.ir.Assign object at 0x708752ddf760>,
                                      120)],
             '$130compare_op.5': [(<numba.core.ir.Assign object at 0x708752c436d0>,
                                   120)],
             '$132pred': [(<numba.core.ir.Assign object at 0x708752c43160>,
                           120)],
             '$134load_global.0': [(<numba.core.ir.Assign object at 0x708752c41960>,
                                    134)],
             '$136load_method.1': [(<numba.core.ir.Assign object at 0x708752c41240>,
                                    134)],
             '$140load_global.3': [(<numba.core.ir.Assign object at 0x708752c43c10>,
                                    134)],
             '$148binary_subtract.7': [(<numba.core.ir.Assign object at 0x708752c41f00>,
                                        134)],
             '$150call_function.8': [(<numba.core.ir.Assign object at 0x708752c407c0>,
                                      134)],
             '$152load_global.9': [(<numba.core.ir.Assign object at 0x708752c414b0>,
                                    134)],
             '$158binary_add.12': [(<numba.core.ir.Assign object at 0x708752c40c10>,
                                    134)],
             '$162load_attr.14': [(<numba.core.ir.Assign object at 0x708752c40a30>,
                                   134)],
             '$166binary_subscr.16': [(<numba.core.ir.Assign object at 0x708752dde140>,
                                       134)],
             '$168call_function.17': [(<numba.core.ir.Assign object at 0x708752ebf1c0>,
                                       134)],
             '$16load_global.7': [(<numba.core.ir.Assign object at 0x708752b413c0>,
                                   0)],
             '$170build_slice.18': [(<numba.core.ir.Assign object at 0x708752ebed40>,
                                     134)],
             '$170build_slice.19': [(<numba.core.ir.Assign object at 0x708752ebe170>,
                                     134)],
             '$172binary_subscr.20': [(<numba.core.ir.Assign object at 0x708752ebde10>,
                                       134)],
             '$182binary_subscr.24': [(<numba.core.ir.Assign object at 0x708752ebc8b0>,
                                       134)],
             '$186compare_op.26': [(<numba.core.ir.Assign object at 0x708752ebefe0>,
                                    134)],
             '$198binary_subscr.31': [(<numba.core.ir.Assign object at 0x708752ebd330>,
                                       134)],
             '$200pred': [(<numba.core.ir.Assign object at 0x708752d69990>,
                           134)],
             '$206inplace_add.2': [(<numba.core.ir.Assign object at 0x708752c40f10>,
                                    202)],
             '$212load_global.0': [(<numba.core.ir.Assign object at 0x708752d6ab00>,
                                    212)],
             '$214load_method.1': [(<numba.core.ir.Assign object at 0x708752d69b40>,
                                    212)],
             '$218load_global.3': [(<numba.core.ir.Assign object at 0x708752d6a470>,
                                    212)],
             '$226binary_subtract.7': [(<numba.core.ir.Assign object at 0x708752d689d0>,
                                        212)],
             '$228call_function.8': [(<numba.core.ir.Assign object at 0x708752d6a5f0>,
                                      212)],
             '$22load_attr.10': [(<numba.core.ir.Assign object at 0x708753013400>,
                                  0)],
             '$230load_global.9': [(<numba.core.ir.Assign object at 0x708752d68160>,
                                    212)],
             '$236binary_add.12': [(<numba.core.ir.Assign object at 0x708752d68580>,
                                    212)],
             '$240load_attr.14': [(<numba.core.ir.Assign object at 0x708752d6a8f0>,
                                   212)],
             '$244binary_subscr.16': [(<numba.core.ir.Assign object at 0x708752c0d630>,
                                       212)],
             '$246call_function.17': [(<numba.core.ir.Assign object at 0x708752d6a890>,
                                       212)],
             '$248build_slice.18': [(<numba.core.ir.Assign object at 0x708752d6b940>,
                                     212)],
             '$248build_slice.19': [(<numba.core.ir.Assign object at 0x708752d6a7a0>,
                                     212)],
             '$250binary_subscr.20': [(<numba.core.ir.Assign object at 0x708752d6b850>,
                                       212)],
             '$262binary_subscr.26': [(<numba.core.ir.Assign object at 0x708752d69060>,
                                       212)],
             '$268binary_subscr.29': [(<numba.core.ir.Assign object at 0x708752d6bf10>,
                                       212)],
             '$26binary_subscr.12': [(<numba.core.ir.Assign object at 0x708752b4b010>,
                                      0)],
             '$274binary_add.32': [(<numba.core.ir.Assign object at 0x708752d69090>,
                                    212)],
             '$276compare_op.33': [(<numba.core.ir.Assign object at 0x708752d69450>,
                                    212)],
             '$278inplace_and.34': [(<numba.core.ir.Assign object at 0x708752d682b0>,
                                     212)],
             '$288binary_subscr.37': [(<numba.core.ir.Assign object at 0x708752d6b9a0>,
                                       212)],
             '$28call_function.13': [(<numba.core.ir.Assign object at 0x708752c00670>,
                                      0)],
             '$290pred': [(<numba.core.ir.Assign object at 0x708752d698d0>,
                           212)],
             '$296inplace_add.2': [(<numba.core.ir.Assign object at 0x708752d6b250>,
                                    292)],
             '$308binary_add.3': [(<numba.core.ir.Assign object at 0x708752d551e0>,
                                   302)],
             '$30build_slice.14': [(<numba.core.ir.Assign object at 0x708752c4b8e0>,
                                    0)],
             '$30build_slice.15': [(<numba.core.ir.Assign object at 0x708753103f40>,
                                    0)],
             '$310inplace_add.4': [(<numba.core.ir.Assign object at 0x708752d55d50>,
                                    302)],
             '$318load_attr.7': [(<numba.core.ir.Assign object at 0x708752d55ea0>,
                                  302)],
             '$322binary_subscr.9': [(<numba.core.ir.Assign object at 0x708752b48e50>,
                                      302)],
             '$324compare_op.10': [(<numba.core.ir.Assign object at 0x708752d54b50>,
                                    302)],
             '$326pred': [(<numba.core.ir.Assign object at 0x708752d54b80>,
                           302)],
             '$32binary_subscr.16': [(<numba.core.ir.Assign object at 0x708753103400>,
                                      0)],
             '$330return_value.1': [(<numba.core.ir.Assign object at 0x708752c0cd00>,
                                     328)],
             '$334return_value.1': [(<numba.core.ir.Assign object at 0x708752c0eb60>,
                                     332)],
             '$34call_method.17': [(<numba.core.ir.Assign object at 0x7087531038e0>,
                                    0)],
             '$36compare_op.18': [(<numba.core.ir.Assign object at 0x70875322f9a0>,
                                   0)],
             '$50binary_subscr.25': [(<numba.core.ir.Assign object at 0x708752b4a950>,
                                      0)],
             '$56binary_subscr.28': [(<numba.core.ir.Assign object at 0x708752ddfb50>,
                                      0)],
             '$58load_global.29': [(<numba.core.ir.Assign object at 0x708753169ff0>,
                                    0)],
             '$60load_method.30': [(<numba.core.ir.Assign object at 0x708752f862c0>,
                                    0)],
             '$66load_global.33': [(<numba.core.ir.Assign object at 0x708752c6bdc0>,
                                    0)],
             '$6binary_subscr.2': [(<numba.core.ir.Assign object at 0x708752b4be80>,
                                    0)],
             '$72load_attr.36': [(<numba.core.ir.Assign object at 0x708752c6be50>,
                                  0)],
             '$76binary_subscr.38': [(<numba.core.ir.Assign object at 0x708752ddfd00>,
                                      0)],
             '$78call_function.39': [(<numba.core.ir.Assign object at 0x708752c6a080>,
                                      0)],
             '$80build_slice.40': [(<numba.core.ir.Assign object at 0x708752c6aa70>,
                                    0)],
             '$80build_slice.41': [(<numba.core.ir.Assign object at 0x708752c6a710>,
                                    0)],
             '$82binary_subscr.42': [(<numba.core.ir.Assign object at 0x708752c68790>,
                                      0)],
             '$84call_method.43': [(<numba.core.ir.Assign object at 0x708752c69360>,
                                    0)],
             '$88binary_add.45': [(<numba.core.ir.Assign object at 0x708752c69720>,
                                   0)],
             '$8load_global.3': [(<numba.core.ir.Assign object at 0x708752b439a0>,
                                  0)],
             '$90compare_op.46': [(<numba.core.ir.Assign object at 0x708752c6a950>,
                                   0)],
             '$92inplace_and.47': [(<numba.core.ir.Assign object at 0x708752c6abf0>,
                                    0)],
             '$const100.49': [(<numba.core.ir.Assign object at 0x708752c6bac0>,
                               0)],
             '$const108.1': [(<numba.core.ir.Assign object at 0x708752f86470>,
                              106)],
             '$const126.3': [(<numba.core.ir.Assign object at 0x708752c41870>,
                              120)],
             '$const14.6': [(<numba.core.ir.Assign object at 0x708752b42c50>,
                             0)],
             '$const142.4': [(<numba.core.ir.Assign object at 0x708752c43e50>,
                              134)],
             '$const164.15': [(<numba.core.ir.Assign object at 0x708752c43e20>,
                               134)],
             '$const204.1': [(<numba.core.ir.Assign object at 0x708752c42f80>,
                              202)],
             '$const220.4': [(<numba.core.ir.Assign object at 0x708752d69510>,
                              212)],
             '$const24.11': [(<numba.core.ir.Assign object at 0x708753010a90>,
                              0)],
             '$const242.15': [(<numba.core.ir.Assign object at 0x708752d69cc0>,
                               212)],
             '$const294.1': [(<numba.core.ir.Assign object at 0x708752d6a0b0>,
                              292)],
             '$const306.2': [(<numba.core.ir.Assign object at 0x708752d557e0>,
                              302)],
             '$const320.8': [(<numba.core.ir.Assign object at 0x708752d56440>,
                              302)],
             '$const328.0': [(<numba.core.ir.Assign object at 0x708752d54790>,
                              328)],
             '$const332.0': [(<numba.core.ir.Assign object at 0x708752c0d900>,
                              332)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x708752e39bd0>,
                            0)],
             '$const40.20': [(<numba.core.ir.Assign object at 0x708752b4d420>,
                              0)],
             '$const46.22': [(<numba.core.ir.Assign object at 0x708752dddea0>,
                              0)],
             '$const54.27': [(<numba.core.ir.Assign object at 0x708752d54850>,
                              0)],
             '$const64.32': [(<numba.core.ir.Assign object at 0x708752c68340>,
                              0)],
             '$const74.37': [(<numba.core.ir.Assign object at 0x708752c6bee0>,
                              0)],
             'avgn': [(<numba.core.ir.Assign object at 0x708752d6b6a0>, 212)],
             'bool104': [(<numba.core.ir.Assign object at 0x708752c439d0>, 0)],
             'bool132': [(<numba.core.ir.Assign object at 0x708752c43820>,
                          120)],
             'bool200': [(<numba.core.ir.Assign object at 0x708752ebd060>,
                          134)],
             'bool290': [(<numba.core.ir.Assign object at 0x708752d69ab0>,
                          212)],
             'bool326': [(<numba.core.ir.Assign object at 0x708752d57f10>,
                          302)],
             'delta': [(<numba.core.ir.Assign object at 0x708752b1b4c0>, 0)],
             'maxn': [(<numba.core.ir.Assign object at 0x708752ebeda0>, 134)],
             'n': [(<numba.core.ir.Assign object at 0x708752c69750>, 106),
                   (<numba.core.ir.Assign object at 0x708752c419f0>, 116),
                   (<numba.core.ir.Assign object at 0x708752d69390>, 202),
                   (<numba.core.ir.Assign object at 0x708752d6bd30>, 292),
                   (<numba.core.ir.Assign object at 0x708752d55a80>, 302)],
             'peaks': [(<numba.core.ir.Assign object at 0x708752b19150>, 0)],
             'post_avg': [(<numba.core.ir.Assign object at 0x708752b1ace0>, 0)],
             'post_max': [(<numba.core.ir.Assign object at 0x708752b19ea0>, 0)],
             'pre_avg': [(<numba.core.ir.Assign object at 0x708752b1ba60>, 0)],
             'pre_max': [(<numba.core.ir.Assign object at 0x708752b4b2b0>, 0)],
             'wait': [(<numba.core.ir.Assign object at 0x708752b1ae90>, 0)],
             'x': [(<numba.core.ir.Assign object at 0x708752b4b3d0>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x708752e1d1b0>
numba.core.ssa - DEBUG - Fix SSA violator on var n
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752d6b310>
numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
numba.core.ssa - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
numba.core.ssa - DEBUG - on stmt: post_max = arg(2, name=post_max)
numba.core.ssa - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
numba.core.ssa - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
numba.core.ssa - DEBUG - on stmt: delta = arg(5, name=delta)
numba.core.ssa - DEBUG - on stmt: wait = arg(6, name=wait)
numba.core.ssa - DEBUG - on stmt: peaks = arg(7, name=peaks)
numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $8load_global.3 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $10load_method.4 = getattr(value=$8load_global.3, attr=max)
numba.core.ssa - DEBUG - on stmt: $const14.6 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $16load_global.7 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $22load_attr.10 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const24.11 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1209), Var($26binary_subscr.12, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $30build_slice.14 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $30build_slice.15 = call $30build_slice.14($const14.6, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6, utils.py:1221), Var($28call_function.13, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17
numba.core.ssa - DEBUG - on stmt: $const40.20 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: peaks[0] = $36compare_op.18
numba.core.ssa - DEBUG - on stmt: $const46.22 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $const54.27 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $58load_global.29 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $60load_method.30 = getattr(value=$58load_global.29, attr=mean)
numba.core.ssa - DEBUG - on stmt: $const64.32 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $66load_global.33 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $72load_attr.36 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const74.37 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1209), Var($76binary_subscr.38, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $80build_slice.40 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $80build_slice.41 = call $80build_slice.40($const64.32, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32, utils.py:1222), Var($78call_function.39, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $88binary_add.45 = $84call_method.43 + delta
numba.core.ssa - DEBUG - on stmt: $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45
numba.core.ssa - DEBUG - on stmt: $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: peaks[0] = $92inplace_and.47
numba.core.ssa - DEBUG - on stmt: $const100.49 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: bool104 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $104pred, 106, 116
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 106
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752d6b310>
numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: n = wait + $const108.1
numba.core.ssa - DEBUG - first assign: n
numba.core.ssa - DEBUG - replaced with: n = wait + $const108.1
numba.core.ssa - DEBUG - on stmt: jump 120
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 116
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752d6b310>
numba.core.ssa - DEBUG - on stmt: n = const(int, 1)
numba.core.ssa - DEBUG - replaced with: n.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: jump 120
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 120
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752d6b310>
numba.core.ssa - DEBUG - on stmt: $124load_attr.2 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const126.3 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $130compare_op.5 = n < $128binary_subscr.4
numba.core.ssa - DEBUG - on stmt: bool132 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $132pred, 134, 332
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 134
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752d6b310>
numba.core.ssa - DEBUG - on stmt: $134load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $136load_method.1 = getattr(value=$134load_global.0, attr=max)
numba.core.ssa - DEBUG - on stmt: $140load_global.3 = global(max: <built-in function max>)
numba.core.ssa - DEBUG - on stmt: $const142.4 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $148binary_subtract.7 = n - pre_max
numba.core.ssa - DEBUG - on stmt: $150call_function.8 = call $140load_global.3($const142.4, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4, utils.py:1230), Var($148binary_subtract.7, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $152load_global.9 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $158binary_add.12 = n + post_max
numba.core.ssa - DEBUG - on stmt: $162load_attr.14 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const164.15 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1230), Var($166binary_subscr.16, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $170build_slice.18 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1230), Var($168call_function.17, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $186compare_op.26 = $182binary_subscr.24 == maxn
numba.core.ssa - DEBUG - on stmt: peaks[n] = $186compare_op.26
numba.core.ssa - DEBUG - on stmt: $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $200pred, 212, 202
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 202
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752d6b310>
numba.core.ssa - DEBUG - on stmt: $const204.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: n = $206inplace_add.2
numba.core.ssa - DEBUG - replaced with: n.2 = $206inplace_add.2
numba.core.ssa - DEBUG - on stmt: jump 333
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 212
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752d6b310>
numba.core.ssa - DEBUG - on stmt: $212load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $214load_method.1 = getattr(value=$212load_global.0, attr=mean)
numba.core.ssa - DEBUG - on stmt: $218load_global.3 = global(max: <built-in function max>)
numba.core.ssa - DEBUG - on stmt: $const220.4 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $226binary_subtract.7 = n - pre_avg
numba.core.ssa - DEBUG - on stmt: $228call_function.8 = call $218load_global.3($const220.4, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4, utils.py:1239), Var($226binary_subtract.7, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $230load_global.9 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $236binary_add.12 = n + post_avg
numba.core.ssa - DEBUG - on stmt: $240load_attr.14 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const242.15 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1239), Var($244binary_subscr.16, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $248build_slice.18 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1239), Var($246call_function.17, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $274binary_add.32 = avgn + delta
numba.core.ssa - DEBUG - on stmt: $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32
numba.core.ssa - DEBUG - on stmt: $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: peaks[n] = $278inplace_and.34
numba.core.ssa - DEBUG - on stmt: $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $290pred, 302, 292
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 292
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752d6b310>
numba.core.ssa - DEBUG - on stmt: $const294.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: n = $296inplace_add.2
numba.core.ssa - DEBUG - replaced with: n.3 = $296inplace_add.2
numba.core.ssa - DEBUG - on stmt: jump 333
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752d6b310>
numba.core.ssa - DEBUG - on stmt: $const306.2 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $308binary_add.3 = wait + $const306.2
numba.core.ssa - DEBUG - on stmt: $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: n = $310inplace_add.4
numba.core.ssa - DEBUG - replaced with: n.4 = $310inplace_add.4
numba.core.ssa - DEBUG - on stmt: $318load_attr.7 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const320.8 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $324compare_op.10 = n < $322binary_subscr.9
numba.core.ssa - DEBUG - on stmt: bool326 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $326pred, 134, 328
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 328
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752d6b310>
numba.core.ssa - DEBUG - on stmt: $const328.0 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $330return_value.1 = cast(value=$const328.0)
numba.core.ssa - DEBUG - on stmt: return $330return_value.1
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 332
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752d6b310>
numba.core.ssa - DEBUG - on stmt: $const332.0 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $334return_value.1 = cast(value=$const332.0)
numba.core.ssa - DEBUG - on stmt: return $334return_value.1
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 333
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752d6b310>
numba.core.ssa - DEBUG - on stmt: jump 120
numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {106: [<numba.core.ir.Assign object at 0x708752c0de10>],
             116: [<numba.core.ir.Assign object at 0x708752c0f520>],
             202: [<numba.core.ir.Assign object at 0x708752c0d450>],
             292: [<numba.core.ir.Assign object at 0x708752c0fb80>],
             302: [<numba.core.ir.Assign object at 0x708752c0fd00>]})
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752d6b310>
numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
numba.core.ssa - DEBUG - on stmt: pre_max = arg(1, name=pre_max)
numba.core.ssa - DEBUG - on stmt: post_max = arg(2, name=post_max)
numba.core.ssa - DEBUG - on stmt: pre_avg = arg(3, name=pre_avg)
numba.core.ssa - DEBUG - on stmt: post_avg = arg(4, name=post_avg)
numba.core.ssa - DEBUG - on stmt: delta = arg(5, name=delta)
numba.core.ssa - DEBUG - on stmt: wait = arg(6, name=wait)
numba.core.ssa - DEBUG - on stmt: peaks = arg(7, name=peaks)
numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $6binary_subscr.2 = static_getitem(value=x, index=0, index_var=$const4.1, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $8load_global.3 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $10load_method.4 = getattr(value=$8load_global.3, attr=max)
numba.core.ssa - DEBUG - on stmt: $const14.6 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $16load_global.7 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $22load_attr.10 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const24.11 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $26binary_subscr.12 = static_getitem(value=$22load_attr.10, index=0, index_var=$const24.11, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $28call_function.13 = call $16load_global.7(post_max, $26binary_subscr.12, func=$16load_global.7, args=[Var(post_max, utils.py:1209), Var($26binary_subscr.12, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $30build_slice.14 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $30build_slice.15 = call $30build_slice.14($const14.6, $28call_function.13, func=$30build_slice.14, args=(Var($const14.6, utils.py:1221), Var($28call_function.13, utils.py:1221)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $32binary_subscr.16 = getitem(value=x, index=$30build_slice.15, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $34call_method.17 = call $10load_method.4($32binary_subscr.16, func=$10load_method.4, args=[Var($32binary_subscr.16, utils.py:1221)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $36compare_op.18 = $6binary_subscr.2 >= $34call_method.17
numba.core.ssa - DEBUG - on stmt: $const40.20 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: peaks[0] = $36compare_op.18
numba.core.ssa - DEBUG - on stmt: $const46.22 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $50binary_subscr.25 = static_getitem(value=peaks, index=0, index_var=$const46.22, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $const54.27 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $56binary_subscr.28 = static_getitem(value=x, index=0, index_var=$const54.27, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $58load_global.29 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $60load_method.30 = getattr(value=$58load_global.29, attr=mean)
numba.core.ssa - DEBUG - on stmt: $const64.32 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $66load_global.33 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $72load_attr.36 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const74.37 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $76binary_subscr.38 = static_getitem(value=$72load_attr.36, index=0, index_var=$const74.37, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $78call_function.39 = call $66load_global.33(post_avg, $76binary_subscr.38, func=$66load_global.33, args=[Var(post_avg, utils.py:1209), Var($76binary_subscr.38, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $80build_slice.40 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $80build_slice.41 = call $80build_slice.40($const64.32, $78call_function.39, func=$80build_slice.40, args=(Var($const64.32, utils.py:1222), Var($78call_function.39, utils.py:1222)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $82binary_subscr.42 = getitem(value=x, index=$80build_slice.41, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $84call_method.43 = call $60load_method.30($82binary_subscr.42, func=$60load_method.30, args=[Var($82binary_subscr.42, utils.py:1222)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $88binary_add.45 = $84call_method.43 + delta
numba.core.ssa - DEBUG - on stmt: $90compare_op.46 = $56binary_subscr.28 >= $88binary_add.45
numba.core.ssa - DEBUG - on stmt: $92inplace_and.47 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$50binary_subscr.25, rhs=$90compare_op.46, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: peaks[0] = $92inplace_and.47
numba.core.ssa - DEBUG - on stmt: $const100.49 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $102binary_subscr.50 = static_getitem(value=peaks, index=0, index_var=$const100.49, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: bool104 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $104pred = call bool104($102binary_subscr.50, func=bool104, args=(Var($102binary_subscr.50, utils.py:1224),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $104pred, 106, 116
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 106
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752d6b310>
numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: n = wait + $const108.1
numba.core.ssa - DEBUG - on stmt: jump 120
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 116
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752d6b310>
numba.core.ssa - DEBUG - on stmt: n.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: jump 120
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 120
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752d6b310>
numba.core.ssa - DEBUG - on stmt: $124load_attr.2 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const126.3 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $128binary_subscr.4 = static_getitem(value=$124load_attr.2, index=0, index_var=$const126.3, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $130compare_op.5 = n < $128binary_subscr.4
numba.core.ssa - DEBUG - find_def var='n' stmt=$130compare_op.5 = n < $128binary_subscr.4
numba.core.ssa - DEBUG - find_def_from_top label 120
numba.core.ssa - DEBUG - insert phi node n.5 = phi(incoming_values=[], incoming_blocks=[]) at 120
numba.core.ssa - DEBUG - find_def_from_bottom label 106
numba.core.ssa - DEBUG - incoming_def n = wait + $const108.1
numba.core.ssa - DEBUG - find_def_from_bottom label 116
numba.core.ssa - DEBUG - incoming_def n.1 = const(int, 1)
numba.core.ssa - DEBUG - find_def_from_bottom label 333
numba.core.ssa - DEBUG - find_def_from_top label 333
numba.core.ssa - DEBUG - insert phi node n.6 = phi(incoming_values=[], incoming_blocks=[]) at 333
numba.core.ssa - DEBUG - find_def_from_bottom label 202
numba.core.ssa - DEBUG - incoming_def n.2 = $206inplace_add.2
numba.core.ssa - DEBUG - find_def_from_bottom label 292
numba.core.ssa - DEBUG - incoming_def n.3 = $296inplace_add.2
numba.core.ssa - DEBUG - incoming_def n.6 = phi(incoming_values=[Var(n.2, utils.py:1236), Var(n.3, utils.py:1243)], incoming_blocks=[202, 292])
numba.core.ssa - DEBUG - replaced with: $130compare_op.5 = n.5 < $128binary_subscr.4
numba.core.ssa - DEBUG - on stmt: bool132 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $132pred = call bool132($130compare_op.5, func=bool132, args=(Var($130compare_op.5, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $132pred, 134, 332
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 134
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752d6b310>
numba.core.ssa - DEBUG - on stmt: $134load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $136load_method.1 = getattr(value=$134load_global.0, attr=max)
numba.core.ssa - DEBUG - on stmt: $140load_global.3 = global(max: <built-in function max>)
numba.core.ssa - DEBUG - on stmt: $const142.4 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $148binary_subtract.7 = n - pre_max
numba.core.ssa - DEBUG - find_def var='n' stmt=$148binary_subtract.7 = n - pre_max
numba.core.ssa - DEBUG - find_def_from_top label 134
numba.core.ssa - DEBUG - insert phi node n.7 = phi(incoming_values=[], incoming_blocks=[]) at 134
numba.core.ssa - DEBUG - find_def_from_bottom label 120
numba.core.ssa - DEBUG - incoming_def n.5 = phi(incoming_values=[Var(n, utils.py:1225), Var(n.1, utils.py:1227), Var(n.6, utils.py:1229)], incoming_blocks=[106, 116, 333])
numba.core.ssa - DEBUG - find_def_from_bottom label 302
numba.core.ssa - DEBUG - incoming_def n.4 = $310inplace_add.4
numba.core.ssa - DEBUG - replaced with: $148binary_subtract.7 = n.7 - pre_max
numba.core.ssa - DEBUG - on stmt: $150call_function.8 = call $140load_global.3($const142.4, $148binary_subtract.7, func=$140load_global.3, args=[Var($const142.4, utils.py:1230), Var($148binary_subtract.7, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $152load_global.9 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $158binary_add.12 = n + post_max
numba.core.ssa - DEBUG - find_def var='n' stmt=$158binary_add.12 = n + post_max
numba.core.ssa - DEBUG - replaced with: $158binary_add.12 = n.7 + post_max
numba.core.ssa - DEBUG - on stmt: $162load_attr.14 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const164.15 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $166binary_subscr.16 = static_getitem(value=$162load_attr.14, index=0, index_var=$const164.15, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $168call_function.17 = call $152load_global.9($158binary_add.12, $166binary_subscr.16, func=$152load_global.9, args=[Var($158binary_add.12, utils.py:1230), Var($166binary_subscr.16, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $170build_slice.18 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $170build_slice.19 = call $170build_slice.18($150call_function.8, $168call_function.17, func=$170build_slice.18, args=(Var($150call_function.8, utils.py:1230), Var($168call_function.17, utils.py:1230)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $172binary_subscr.20 = getitem(value=x, index=$170build_slice.19, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: maxn = call $136load_method.1($172binary_subscr.20, func=$136load_method.1, args=[Var($172binary_subscr.20, utils.py:1230)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - find_def var='n' stmt=$182binary_subscr.24 = getitem(value=x, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - replaced with: $182binary_subscr.24 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $186compare_op.26 = $182binary_subscr.24 == maxn
numba.core.ssa - DEBUG - on stmt: peaks[n] = $186compare_op.26
numba.core.ssa - DEBUG - find_def var='n' stmt=peaks[n] = $186compare_op.26
numba.core.ssa - DEBUG - replaced with: peaks[n.7] = $186compare_op.26
numba.core.ssa - DEBUG - on stmt: $198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - find_def var='n' stmt=$198binary_subscr.31 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - replaced with: $198binary_subscr.31 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: bool200 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $200pred = call bool200($198binary_subscr.31, func=bool200, args=(Var($198binary_subscr.31, utils.py:1235),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $200pred, 212, 202
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 202
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752d6b310>
numba.core.ssa - DEBUG - on stmt: $const204.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def var='n' stmt=$206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def_from_top label 202
numba.core.ssa - DEBUG - idom 134 from label 202
numba.core.ssa - DEBUG - find_def_from_bottom label 134
numba.core.ssa - DEBUG - replaced with: $206inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const204.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: n.2 = $206inplace_add.2
numba.core.ssa - DEBUG - on stmt: jump 333
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 212
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752d6b310>
numba.core.ssa - DEBUG - on stmt: $212load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $214load_method.1 = getattr(value=$212load_global.0, attr=mean)
numba.core.ssa - DEBUG - on stmt: $218load_global.3 = global(max: <built-in function max>)
numba.core.ssa - DEBUG - on stmt: $const220.4 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $226binary_subtract.7 = n - pre_avg
numba.core.ssa - DEBUG - find_def var='n' stmt=$226binary_subtract.7 = n - pre_avg
numba.core.ssa - DEBUG - find_def_from_top label 212
numba.core.ssa - DEBUG - idom 134 from label 212
numba.core.ssa - DEBUG - find_def_from_bottom label 134
numba.core.ssa - DEBUG - replaced with: $226binary_subtract.7 = n.7 - pre_avg
numba.core.ssa - DEBUG - on stmt: $228call_function.8 = call $218load_global.3($const220.4, $226binary_subtract.7, func=$218load_global.3, args=[Var($const220.4, utils.py:1239), Var($226binary_subtract.7, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $230load_global.9 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $236binary_add.12 = n + post_avg
numba.core.ssa - DEBUG - find_def var='n' stmt=$236binary_add.12 = n + post_avg
numba.core.ssa - DEBUG - find_def_from_top label 212
numba.core.ssa - DEBUG - idom 134 from label 212
numba.core.ssa - DEBUG - find_def_from_bottom label 134
numba.core.ssa - DEBUG - replaced with: $236binary_add.12 = n.7 + post_avg
numba.core.ssa - DEBUG - on stmt: $240load_attr.14 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const242.15 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $244binary_subscr.16 = static_getitem(value=$240load_attr.14, index=0, index_var=$const242.15, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $246call_function.17 = call $230load_global.9($236binary_add.12, $244binary_subscr.16, func=$230load_global.9, args=[Var($236binary_add.12, utils.py:1239), Var($244binary_subscr.16, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $248build_slice.18 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $248build_slice.19 = call $248build_slice.18($228call_function.8, $246call_function.17, func=$248build_slice.18, args=(Var($228call_function.8, utils.py:1239), Var($246call_function.17, utils.py:1239)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $250binary_subscr.20 = getitem(value=x, index=$248build_slice.19, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: avgn = call $214load_method.1($250binary_subscr.20, func=$214load_method.1, args=[Var($250binary_subscr.20, utils.py:1239)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - find_def var='n' stmt=$262binary_subscr.26 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - find_def_from_top label 212
numba.core.ssa - DEBUG - idom 134 from label 212
numba.core.ssa - DEBUG - find_def_from_bottom label 134
numba.core.ssa - DEBUG - replaced with: $262binary_subscr.26 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - find_def var='n' stmt=$268binary_subscr.29 = getitem(value=x, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - find_def_from_top label 212
numba.core.ssa - DEBUG - idom 134 from label 212
numba.core.ssa - DEBUG - find_def_from_bottom label 134
numba.core.ssa - DEBUG - replaced with: $268binary_subscr.29 = getitem(value=x, index=n.7, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $274binary_add.32 = avgn + delta
numba.core.ssa - DEBUG - on stmt: $276compare_op.33 = $268binary_subscr.29 >= $274binary_add.32
numba.core.ssa - DEBUG - on stmt: $278inplace_and.34 = inplace_binop(fn=<built-in function iand>, immutable_fn=<built-in function and_>, lhs=$262binary_subscr.26, rhs=$276compare_op.33, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: peaks[n] = $278inplace_and.34
numba.core.ssa - DEBUG - find_def var='n' stmt=peaks[n] = $278inplace_and.34
numba.core.ssa - DEBUG - find_def_from_top label 212
numba.core.ssa - DEBUG - idom 134 from label 212
numba.core.ssa - DEBUG - find_def_from_bottom label 134
numba.core.ssa - DEBUG - replaced with: peaks[n.7] = $278inplace_and.34
numba.core.ssa - DEBUG - on stmt: $288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - find_def var='n' stmt=$288binary_subscr.37 = getitem(value=peaks, index=n, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - find_def_from_top label 212
numba.core.ssa - DEBUG - idom 134 from label 212
numba.core.ssa - DEBUG - find_def_from_bottom label 134
numba.core.ssa - DEBUG - replaced with: $288binary_subscr.37 = getitem(value=peaks, index=n.7, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: bool290 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $290pred = call bool290($288binary_subscr.37, func=bool290, args=(Var($288binary_subscr.37, utils.py:1242),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $290pred, 302, 292
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 292
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752d6b310>
numba.core.ssa - DEBUG - on stmt: $const294.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def var='n' stmt=$296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def_from_top label 292
numba.core.ssa - DEBUG - idom 212 from label 292
numba.core.ssa - DEBUG - find_def_from_bottom label 212
numba.core.ssa - DEBUG - find_def_from_top label 212
numba.core.ssa - DEBUG - idom 134 from label 212
numba.core.ssa - DEBUG - find_def_from_bottom label 134
numba.core.ssa - DEBUG - replaced with: $296inplace_add.2 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$const294.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: n.3 = $296inplace_add.2
numba.core.ssa - DEBUG - on stmt: jump 333
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752d6b310>
numba.core.ssa - DEBUG - on stmt: $const306.2 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $308binary_add.3 = wait + $const306.2
numba.core.ssa - DEBUG - on stmt: $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def var='n' stmt=$310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def_from_top label 302
numba.core.ssa - DEBUG - idom 212 from label 302
numba.core.ssa - DEBUG - find_def_from_bottom label 212
numba.core.ssa - DEBUG - find_def_from_top label 212
numba.core.ssa - DEBUG - idom 134 from label 212
numba.core.ssa - DEBUG - find_def_from_bottom label 134
numba.core.ssa - DEBUG - replaced with: $310inplace_add.4 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=n.7, rhs=$308binary_add.3, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: n.4 = $310inplace_add.4
numba.core.ssa - DEBUG - on stmt: $318load_attr.7 = getattr(value=x, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const320.8 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $322binary_subscr.9 = static_getitem(value=$318load_attr.7, index=0, index_var=$const320.8, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $324compare_op.10 = n < $322binary_subscr.9
numba.core.ssa - DEBUG - find_def var='n' stmt=$324compare_op.10 = n < $322binary_subscr.9
numba.core.ssa - DEBUG - replaced with: $324compare_op.10 = n.4 < $322binary_subscr.9
numba.core.ssa - DEBUG - on stmt: bool326 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $326pred = call bool326($324compare_op.10, func=bool326, args=(Var($324compare_op.10, utils.py:1229),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $326pred, 134, 328
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 328
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752d6b310>
numba.core.ssa - DEBUG - on stmt: $const328.0 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $330return_value.1 = cast(value=$const328.0)
numba.core.ssa - DEBUG - on stmt: return $330return_value.1
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 332
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752d6b310>
numba.core.ssa - DEBUG - on stmt: $const332.0 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $334return_value.1 = cast(value=$const332.0)
numba.core.ssa - DEBUG - on stmt: return $334return_value.1
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 333
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752d6b310>
numba.core.ssa - DEBUG - on stmt: jump 120
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=570)
           2	LOAD_FAST(arg=0, lineno=571)
           4	LOAD_ATTR(arg=0, lineno=571)
           6	LOAD_CONST(arg=1, lineno=571)
           8	COMPARE_OP(arg=2, lineno=571)
          10	POP_JUMP_IF_FALSE(arg=11, lineno=571)
          12	LOAD_GLOBAL(arg=1, lineno=572)
          14	LOAD_CONST(arg=2, lineno=572)
          16	CALL_FUNCTION(arg=1, lineno=572)
          18	RAISE_VARARGS(arg=1, lineno=572)
>         20	LOAD_GLOBAL(arg=2, lineno=575)
          22	LOAD_METHOD(arg=3, lineno=575)
          24	LOAD_FAST(arg=0, lineno=575)
          26	CALL_METHOD(arg=1, lineno=575)
          28	STORE_FAST(arg=1, lineno=575)
          30	LOAD_GLOBAL(arg=4, lineno=576)
          32	LOAD_FAST(arg=1, lineno=576)
          34	CALL_FUNCTION(arg=1, lineno=576)
          36	LOAD_METHOD(arg=5, lineno=576)
          38	LOAD_CONST(arg=1, lineno=576)
          40	CALL_METHOD(arg=1, lineno=576)
          42	STORE_FAST(arg=2, lineno=576)
          44	LOAD_DEREF(arg=1, lineno=577)
          46	LOAD_FAST(arg=2, lineno=577)
          48	CALL_FUNCTION(arg=1, lineno=577)
          50	POP_JUMP_IF_FALSE(arg=29, lineno=577)
          52	LOAD_FAST(arg=2, lineno=578)
          54	RETURN_VALUE(arg=None, lineno=578)
>         56	LOAD_FAST(arg=1, lineno=580)
          58	GET_ITER(arg=None, lineno=580)
>         60	FOR_ITER(arg=21, lineno=580)
          62	STORE_FAST(arg=3, lineno=580)
          64	LOAD_FAST(arg=3, lineno=581)
          66	LOAD_METHOD(arg=6, lineno=581)
          68	CALL_METHOD(arg=0, lineno=581)
          70	STORE_FAST(arg=4, lineno=581)
          72	LOAD_DEREF(arg=1, lineno=582)
          74	LOAD_FAST(arg=4, lineno=582)
          76	CALL_FUNCTION(arg=1, lineno=582)
          78	POP_JUMP_IF_FALSE(arg=45, lineno=582)
          80	LOAD_FAST(arg=4, lineno=583)
          82	ROT_TWO(arg=None, lineno=583)
          84	POP_TOP(arg=None, lineno=583)
          86	RETURN_VALUE(arg=None, lineno=583)
>         88	LOAD_DEREF(arg=0, lineno=584)
          90	LOAD_FAST(arg=4, lineno=584)
          92	LOAD_FAST(arg=2, lineno=584)
          94	CALL_FUNCTION(arg=2, lineno=584)
          96	POP_JUMP_IF_FALSE(arg=52, lineno=584)
          98	LOAD_FAST(arg=4, lineno=585)
         100	STORE_FAST(arg=2, lineno=585)
>        102	JUMP_ABSOLUTE(arg=31, lineno=585)
>        104	LOAD_FAST(arg=2, lineno=586)
         106	RETURN_VALUE(arg=None, lineno=586)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=570)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=571)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=571)
numba.core.byteflow - DEBUG - stack ['$a2.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=571)
numba.core.byteflow - DEBUG - stack ['$4load_attr.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=COMPARE_OP(arg=2, lineno=571)
numba.core.byteflow - DEBUG - stack ['$4load_attr.1', '$const6.2']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=POP_JUMP_IF_FALSE(arg=11, lineno=571)
numba.core.byteflow - DEBUG - stack ['$8compare_op.3']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=12, stack=(), blockstack=(), npush=0), Edge(pc=20, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=12 nstack_initial=0), State(pc_initial=20 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=12 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_GLOBAL(arg=1, lineno=572)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_CONST(arg=2, lineno=572)
numba.core.byteflow - DEBUG - stack ['$12load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=16, inst=CALL_FUNCTION(arg=1, lineno=572)
numba.core.byteflow - DEBUG - stack ['$12load_global.0', '$const14.1']
numba.core.byteflow - DEBUG - dispatch pc=18, inst=RAISE_VARARGS(arg=1, lineno=572)
numba.core.byteflow - DEBUG - stack ['$16call_function.2']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=20 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=20 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_GLOBAL(arg=2, lineno=575)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_METHOD(arg=3, lineno=575)
numba.core.byteflow - DEBUG - stack ['$20load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_FAST(arg=0, lineno=575)
numba.core.byteflow - DEBUG - stack ['$22load_method.1']
numba.core.byteflow - DEBUG - dispatch pc=26, inst=CALL_METHOD(arg=1, lineno=575)
numba.core.byteflow - DEBUG - stack ['$22load_method.1', '$a24.2']
numba.core.byteflow - DEBUG - dispatch pc=28, inst=STORE_FAST(arg=1, lineno=575)
numba.core.byteflow - DEBUG - stack ['$26call_method.3']
numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_GLOBAL(arg=4, lineno=576)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=1, lineno=576)
numba.core.byteflow - DEBUG - stack ['$30load_global.4']
numba.core.byteflow - DEBUG - dispatch pc=34, inst=CALL_FUNCTION(arg=1, lineno=576)
numba.core.byteflow - DEBUG - stack ['$30load_global.4', '$it32.5']
numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_METHOD(arg=5, lineno=576)
numba.core.byteflow - DEBUG - stack ['$34call_function.6']
numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_CONST(arg=1, lineno=576)
numba.core.byteflow - DEBUG - stack ['$36load_method.7']
numba.core.byteflow - DEBUG - dispatch pc=40, inst=CALL_METHOD(arg=1, lineno=576)
numba.core.byteflow - DEBUG - stack ['$36load_method.7', '$const38.8']
numba.core.byteflow - DEBUG - dispatch pc=42, inst=STORE_FAST(arg=2, lineno=576)
numba.core.byteflow - DEBUG - stack ['$40call_method.9']
numba.core.byteflow - DEBUG - dispatch pc=44, inst=LOAD_DEREF(arg=1, lineno=577)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=46, inst=LOAD_FAST(arg=2, lineno=577)
numba.core.byteflow - DEBUG - stack ['$44load_deref.10']
numba.core.byteflow - DEBUG - dispatch pc=48, inst=CALL_FUNCTION(arg=1, lineno=577)
numba.core.byteflow - DEBUG - stack ['$44load_deref.10', '$max_value46.11']
numba.core.byteflow - DEBUG - dispatch pc=50, inst=POP_JUMP_IF_FALSE(arg=29, lineno=577)
numba.core.byteflow - DEBUG - stack ['$48call_function.12']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0), Edge(pc=56, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=56 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=2, lineno=578)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=54, inst=RETURN_VALUE(arg=None, lineno=578)
numba.core.byteflow - DEBUG - stack ['$max_value52.0']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=56 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=56 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=56, inst=LOAD_FAST(arg=1, lineno=580)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=58, inst=GET_ITER(arg=None, lineno=580)
numba.core.byteflow - DEBUG - stack ['$it56.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=60, stack=('$58get_iter.1',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=60 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi60.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=60 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=60, inst=FOR_ITER(arg=21, lineno=580)
numba.core.byteflow - DEBUG - stack ['$phi60.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=104, stack=(), blockstack=(), npush=0), Edge(pc=62, stack=('$phi60.0', '$60for_iter.2'), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=104 nstack_initial=0), State(pc_initial=62 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=104 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=104, inst=LOAD_FAST(arg=2, lineno=586)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=106, inst=RETURN_VALUE(arg=None, lineno=586)
numba.core.byteflow - DEBUG - stack ['$max_value104.0']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=62 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: ['$phi62.0', '$phi62.1']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=62 nstack_initial=2)
numba.core.byteflow - DEBUG - dispatch pc=62, inst=STORE_FAST(arg=3, lineno=580)
numba.core.byteflow - DEBUG - stack ['$phi62.0', '$phi62.1']
numba.core.byteflow - DEBUG - dispatch pc=64, inst=LOAD_FAST(arg=3, lineno=581)
numba.core.byteflow - DEBUG - stack ['$phi62.0']
numba.core.byteflow - DEBUG - dispatch pc=66, inst=LOAD_METHOD(arg=6, lineno=581)
numba.core.byteflow - DEBUG - stack ['$phi62.0', '$view64.2']
numba.core.byteflow - DEBUG - dispatch pc=68, inst=CALL_METHOD(arg=0, lineno=581)
numba.core.byteflow - DEBUG - stack ['$phi62.0', '$66load_method.3']
numba.core.byteflow - DEBUG - dispatch pc=70, inst=STORE_FAST(arg=4, lineno=581)
numba.core.byteflow - DEBUG - stack ['$phi62.0', '$68call_method.4']
numba.core.byteflow - DEBUG - dispatch pc=72, inst=LOAD_DEREF(arg=1, lineno=582)
numba.core.byteflow - DEBUG - stack ['$phi62.0']
numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=4, lineno=582)
numba.core.byteflow - DEBUG - stack ['$phi62.0', '$72load_deref.5']
numba.core.byteflow - DEBUG - dispatch pc=76, inst=CALL_FUNCTION(arg=1, lineno=582)
numba.core.byteflow - DEBUG - stack ['$phi62.0', '$72load_deref.5', '$v74.6']
numba.core.byteflow - DEBUG - dispatch pc=78, inst=POP_JUMP_IF_FALSE(arg=45, lineno=582)
numba.core.byteflow - DEBUG - stack ['$phi62.0', '$76call_function.7']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$phi62.0',), blockstack=(), npush=0), Edge(pc=88, stack=('$phi62.0',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1), State(pc_initial=88 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi80.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=80, inst=LOAD_FAST(arg=4, lineno=583)
numba.core.byteflow - DEBUG - stack ['$phi80.0']
numba.core.byteflow - DEBUG - dispatch pc=82, inst=ROT_TWO(arg=None, lineno=583)
numba.core.byteflow - DEBUG - stack ['$phi80.0', '$v80.1']
numba.core.byteflow - DEBUG - dispatch pc=84, inst=POP_TOP(arg=None, lineno=583)
numba.core.byteflow - DEBUG - stack ['$v80.1', '$phi80.0']
numba.core.byteflow - DEBUG - dispatch pc=86, inst=RETURN_VALUE(arg=None, lineno=583)
numba.core.byteflow - DEBUG - stack ['$v80.1']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=88 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi88.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=88 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=88, inst=LOAD_DEREF(arg=0, lineno=584)
numba.core.byteflow - DEBUG - stack ['$phi88.0']
numba.core.byteflow - DEBUG - dispatch pc=90, inst=LOAD_FAST(arg=4, lineno=584)
numba.core.byteflow - DEBUG - stack ['$phi88.0', '$88load_deref.1']
numba.core.byteflow - DEBUG - dispatch pc=92, inst=LOAD_FAST(arg=2, lineno=584)
numba.core.byteflow - DEBUG - stack ['$phi88.0', '$88load_deref.1', '$v90.2']
numba.core.byteflow - DEBUG - dispatch pc=94, inst=CALL_FUNCTION(arg=2, lineno=584)
numba.core.byteflow - DEBUG - stack ['$phi88.0', '$88load_deref.1', '$v90.2', '$max_value92.3']
numba.core.byteflow - DEBUG - dispatch pc=96, inst=POP_JUMP_IF_FALSE(arg=52, lineno=584)
numba.core.byteflow - DEBUG - stack ['$phi88.0', '$94call_function.4']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=98, stack=('$phi88.0',), blockstack=(), npush=0), Edge(pc=102, stack=('$phi88.0',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=98 nstack_initial=1), State(pc_initial=102 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi98.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=98 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=98, inst=LOAD_FAST(arg=4, lineno=585)
numba.core.byteflow - DEBUG - stack ['$phi98.0']
numba.core.byteflow - DEBUG - dispatch pc=100, inst=STORE_FAST(arg=2, lineno=585)
numba.core.byteflow - DEBUG - stack ['$phi98.0', '$v98.1']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=102, stack=('$phi98.0',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=1), State(pc_initial=102 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi102.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=102 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=102, inst=JUMP_ABSOLUTE(arg=31, lineno=585)
numba.core.byteflow - DEBUG - stack ['$phi102.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=60, stack=('$phi102.0',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=102 nstack_initial=1), State(pc_initial=60 nstack_initial=1)])
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=60 nstack_initial=1)])
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=12 nstack_initial=0): set(),
             State(pc_initial=20 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=56 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=1): {'$phi60.0'},
             State(pc_initial=62 nstack_initial=2): {'$phi62.1'},
             State(pc_initial=80 nstack_initial=1): set(),
             State(pc_initial=88 nstack_initial=1): set(),
             State(pc_initial=98 nstack_initial=1): set(),
             State(pc_initial=102 nstack_initial=1): set(),
             State(pc_initial=104 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {'$phi60.0': State(pc_initial=56 nstack_initial=0),
 '$phi62.1': State(pc_initial=60 nstack_initial=1)}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$phi88.0', State(pc_initial=88 nstack_initial=1)),
                           ('$phi98.0', State(pc_initial=98 nstack_initial=1))},
             '$phi60.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0)),
                          ('$phi102.0',
                           State(pc_initial=102 nstack_initial=1))},
             '$phi62.0': {('$phi60.0', State(pc_initial=60 nstack_initial=1))},
             '$phi62.1': {('$60for_iter.2',
                           State(pc_initial=60 nstack_initial=1))},
             '$phi80.0': {('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi88.0': {('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi98.0': {('$phi88.0', State(pc_initial=88 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi60.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0)),
                          ('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi62.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0)),
                          ('$phi62.0', State(pc_initial=62 nstack_initial=2))},
             '$phi62.1': {('$60for_iter.2',
                           State(pc_initial=60 nstack_initial=1))},
             '$phi80.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi88.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi98.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$58get_iter.1',
                            State(pc_initial=56 nstack_initial=0))},
             '$phi60.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi62.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi62.1': {('$60for_iter.2',
                           State(pc_initial=60 nstack_initial=1))},
             '$phi80.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi88.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi98.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi102.0': {('$58get_iter.1',
                            State(pc_initial=56 nstack_initial=0))},
             '$phi60.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi62.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi62.1': {('$60for_iter.2',
                           State(pc_initial=60 nstack_initial=1))},
             '$phi80.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi88.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))},
             '$phi98.0': {('$58get_iter.1',
                           State(pc_initial=56 nstack_initial=0))}})
numba.core.byteflow - DEBUG - keep phismap: {'$phi60.0': {('$58get_iter.1', State(pc_initial=56 nstack_initial=0))},
 '$phi62.1': {('$60for_iter.2', State(pc_initial=60 nstack_initial=1))}}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=56 nstack_initial=0): {'$phi60.0': '$58get_iter.1'},
             State(pc_initial=60 nstack_initial=1): {'$phi62.1': '$60for_iter.2'}})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$a2.0'}), (4, {'item': '$a2.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2'}), (8, {'lhs': '$4load_attr.1', 'rhs': '$const6.2', 'res': '$8compare_op.3'}), (10, {'pred': '$8compare_op.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={12: (), 20: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=12 nstack_initial=0):
AdaptBlockInfo(insts=((12, {'res': '$12load_global.0'}), (14, {'res': '$const14.1'}), (16, {'func': '$12load_global.0', 'args': ['$const14.1'], 'res': '$16call_function.2'}), (18, {'exc': '$16call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=20 nstack_initial=0):
AdaptBlockInfo(insts=((20, {'res': '$20load_global.0'}), (22, {'item': '$20load_global.0', 'res': '$22load_method.1'}), (24, {'res': '$a24.2'}), (26, {'func': '$22load_method.1', 'args': ['$a24.2'], 'res': '$26call_method.3'}), (28, {'value': '$26call_method.3'}), (30, {'res': '$30load_global.4'}), (32, {'res': '$it32.5'}), (34, {'func': '$30load_global.4', 'args': ['$it32.5'], 'res': '$34call_function.6'}), (36, {'item': '$34call_function.6', 'res': '$36load_method.7'}), (38, {'res': '$const38.8'}), (40, {'func': '$36load_method.7', 'args': ['$const38.8'], 'res': '$40call_method.9'}), (42, {'value': '$40call_method.9'}), (44, {'res': '$44load_deref.10'}), (46, {'res': '$max_value46.11'}), (48, {'func': '$44load_deref.10', 'args': ['$max_value46.11'], 'res': '$48call_function.12'}), (50, {'pred': '$48call_function.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: (), 56: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$max_value52.0'}), (54, {'retval': '$max_value52.0', 'castval': '$54return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=56 nstack_initial=0):
AdaptBlockInfo(insts=((56, {'res': '$it56.0'}), (58, {'value': '$it56.0', 'res': '$58get_iter.1'})), outgoing_phis={'$phi60.0': '$58get_iter.1'}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: ('$58get_iter.1',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=60 nstack_initial=1):
AdaptBlockInfo(insts=((60, {'iterator': '$phi60.0', 'pair': '$60for_iter.1', 'indval': '$60for_iter.2', 'pred': '$60for_iter.3'}),), outgoing_phis={'$phi62.1': '$60for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={104: (), 62: ('$phi60.0', '$60for_iter.2')})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=62 nstack_initial=2):
AdaptBlockInfo(insts=((62, {'value': '$phi62.1'}), (64, {'res': '$view64.2'}), (66, {'item': '$view64.2', 'res': '$66load_method.3'}), (68, {'func': '$66load_method.3', 'args': [], 'res': '$68call_method.4'}), (70, {'value': '$68call_method.4'}), (72, {'res': '$72load_deref.5'}), (74, {'res': '$v74.6'}), (76, {'func': '$72load_deref.5', 'args': ['$v74.6'], 'res': '$76call_function.7'}), (78, {'pred': '$76call_function.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi62.0',), 88: ('$phi62.0',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'res': '$v80.1'}), (86, {'retval': '$v80.1', 'castval': '$86return_value.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=88 nstack_initial=1):
AdaptBlockInfo(insts=((88, {'res': '$88load_deref.1'}), (90, {'res': '$v90.2'}), (92, {'res': '$max_value92.3'}), (94, {'func': '$88load_deref.1', 'args': ['$v90.2', '$max_value92.3'], 'res': '$94call_function.4'}), (96, {'pred': '$94call_function.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={98: ('$phi88.0',), 102: ('$phi88.0',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=98 nstack_initial=1):
AdaptBlockInfo(insts=((98, {'res': '$v98.1'}), (100, {'value': '$v98.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={102: ('$phi98.0',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=102 nstack_initial=1):
AdaptBlockInfo(insts=((102, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: ('$phi102.0',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=104 nstack_initial=0):
AdaptBlockInfo(insts=((104, {'res': '$max_value104.0'}), (106, {'retval': '$max_value104.0', 'castval': '$106return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    $4load_attr.1 = getattr(value=a, attr=size) ['$4load_attr.1', 'a']
    $const6.2 = const(int, 0)                ['$const6.2']
    $8compare_op.3 = $4load_attr.1 == $const6.2 ['$4load_attr.1', '$8compare_op.3', '$const6.2']
    bool10 = global(bool: <class 'bool'>)    ['bool10']
    $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None) ['$10pred', '$8compare_op.3', 'bool10']
    branch $10pred, 12, 20                   ['$10pred']
label 12:
    $12load_global.0 = global(ValueError: <class 'ValueError'>) ['$12load_global.0']
    $const14.1 = const(str, zero-size array to reduction operation maximum which has no identity) ['$const14.1']
    $16call_function.2 = call $12load_global.0($const14.1, func=$12load_global.0, args=[Var($const14.1, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_global.0', '$16call_function.2', '$const14.1']
    raise $16call_function.2                 ['$16call_function.2']
label 20:
    $20load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.0']
    $22load_method.1 = getattr(value=$20load_global.0, attr=nditer) ['$20load_global.0', '$22load_method.1']
    it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.1', 'a', 'it']
    $30load_global.4 = global(next: <built-in function next>) ['$30load_global.4']
    $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None) ['$30load_global.4', '$34call_function.6', 'it']
    $36load_method.7 = getattr(value=$34call_function.6, attr=take) ['$34call_function.6', '$36load_method.7']
    $const38.8 = const(int, 0)               ['$const38.8']
    max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$36load_method.7', '$const38.8', 'max_value']
    $44load_deref.10 = freevar(pre_return_func: <function return_false at 0x708808b940d0>) ['$44load_deref.10']
    $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$44load_deref.10', '$48call_function.12', 'max_value']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None) ['$48call_function.12', '$50pred', 'bool50']
    branch $50pred, 52, 56                   ['$50pred']
label 52:
    $54return_value.1 = cast(value=max_value) ['$54return_value.1', 'max_value']
    return $54return_value.1                 ['$54return_value.1']
label 56:
    $58get_iter.1 = getiter(value=it)        ['$58get_iter.1', 'it']
    $phi60.0 = $58get_iter.1                 ['$58get_iter.1', '$phi60.0']
    jump 60                                  []
label 60:
    $60for_iter.1 = iternext(value=$phi60.0) ['$60for_iter.1', '$phi60.0']
    $60for_iter.2 = pair_first(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.2']
    $60for_iter.3 = pair_second(value=$60for_iter.1) ['$60for_iter.1', '$60for_iter.3']
    $phi62.1 = $60for_iter.2                 ['$60for_iter.2', '$phi62.1']
    branch $60for_iter.3, 62, 104            ['$60for_iter.3']
label 62:
    view = $phi62.1                          ['$phi62.1', 'view']
    $66load_method.3 = getattr(value=view, attr=item) ['$66load_method.3', 'view']
    v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$66load_method.3', 'v']
    $72load_deref.5 = freevar(pre_return_func: <function return_false at 0x708808b940d0>) ['$72load_deref.5']
    $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_deref.5', '$76call_function.7', 'v']
    bool78 = global(bool: <class 'bool'>)    ['bool78']
    $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None) ['$76call_function.7', '$78pred', 'bool78']
    branch $78pred, 80, 88                   ['$78pred']
label 80:
    $86return_value.2 = cast(value=v)        ['$86return_value.2', 'v']
    return $86return_value.2                 ['$86return_value.2']
label 88:
    $88load_deref.1 = freevar(comparator: <function max_comparator at 0x708808b2fb50>) ['$88load_deref.1']
    $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None) ['$88load_deref.1', '$94call_function.4', 'max_value', 'v']
    bool96 = global(bool: <class 'bool'>)    ['bool96']
    $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None) ['$94call_function.4', '$96pred', 'bool96']
    branch $96pred, 98, 102                  ['$96pred']
label 98:
    max_value = v                            ['max_value', 'v']
    jump 102                                 []
label 102:
    jump 60                                  []
label 104:
    $106return_value.1 = cast(value=max_value) ['$106return_value.1', 'max_value']
    return $106return_value.1                ['$106return_value.1']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752f0abf0>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: $4load_attr.1 = getattr(value=a, attr=size)
numba.core.ssa - DEBUG - on stmt: $const6.2 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $8compare_op.3 = $4load_attr.1 == $const6.2
numba.core.ssa - DEBUG - on stmt: bool10 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $10pred, 12, 20
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 12
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752f0abf0>
numba.core.ssa - DEBUG - on stmt: $12load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const14.1 = const(str, zero-size array to reduction operation maximum which has no identity)
numba.core.ssa - DEBUG - on stmt: $16call_function.2 = call $12load_global.0($const14.1, func=$12load_global.0, args=[Var($const14.1, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 20
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752f0abf0>
numba.core.ssa - DEBUG - on stmt: $20load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $22load_method.1 = getattr(value=$20load_global.0, attr=nditer)
numba.core.ssa - DEBUG - on stmt: it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $30load_global.4 = global(next: <built-in function next>)
numba.core.ssa - DEBUG - on stmt: $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $36load_method.7 = getattr(value=$34call_function.6, attr=take)
numba.core.ssa - DEBUG - on stmt: $const38.8 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $44load_deref.10 = freevar(pre_return_func: <function return_false at 0x708808b940d0>)
numba.core.ssa - DEBUG - on stmt: $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $50pred, 52, 56
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 52
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752f0abf0>
numba.core.ssa - DEBUG - on stmt: $54return_value.1 = cast(value=max_value)
numba.core.ssa - DEBUG - on stmt: return $54return_value.1
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 56
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752f0abf0>
numba.core.ssa - DEBUG - on stmt: $58get_iter.1 = getiter(value=it)
numba.core.ssa - DEBUG - on stmt: $phi60.0 = $58get_iter.1
numba.core.ssa - DEBUG - on stmt: jump 60
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 60
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752f0abf0>
numba.core.ssa - DEBUG - on stmt: $60for_iter.1 = iternext(value=$phi60.0)
numba.core.ssa - DEBUG - on stmt: $60for_iter.2 = pair_first(value=$60for_iter.1)
numba.core.ssa - DEBUG - on stmt: $60for_iter.3 = pair_second(value=$60for_iter.1)
numba.core.ssa - DEBUG - on stmt: $phi62.1 = $60for_iter.2
numba.core.ssa - DEBUG - on stmt: branch $60for_iter.3, 62, 104
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 62
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752f0abf0>
numba.core.ssa - DEBUG - on stmt: view = $phi62.1
numba.core.ssa - DEBUG - on stmt: $66load_method.3 = getattr(value=view, attr=item)
numba.core.ssa - DEBUG - on stmt: v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $72load_deref.5 = freevar(pre_return_func: <function return_false at 0x708808b940d0>)
numba.core.ssa - DEBUG - on stmt: $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: bool78 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $78pred, 80, 88
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 80
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752f0abf0>
numba.core.ssa - DEBUG - on stmt: $86return_value.2 = cast(value=v)
numba.core.ssa - DEBUG - on stmt: return $86return_value.2
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 88
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752f0abf0>
numba.core.ssa - DEBUG - on stmt: $88load_deref.1 = freevar(comparator: <function max_comparator at 0x708808b2fb50>)
numba.core.ssa - DEBUG - on stmt: $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: bool96 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $96pred, 98, 102
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 98
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752f0abf0>
numba.core.ssa - DEBUG - on stmt: max_value = v
numba.core.ssa - DEBUG - on stmt: jump 102
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 102
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752f0abf0>
numba.core.ssa - DEBUG - on stmt: jump 60
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 104
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752f0abf0>
numba.core.ssa - DEBUG - on stmt: $106return_value.1 = cast(value=max_value)
numba.core.ssa - DEBUG - on stmt: return $106return_value.1
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$106return_value.1': [(<numba.core.ir.Assign object at 0x708752f08ca0>,
                                     104)],
             '$10pred': [(<numba.core.ir.Assign object at 0x708752b1c7f0>, 0)],
             '$12load_global.0': [(<numba.core.ir.Assign object at 0x708752b1ec50>,
                                   12)],
             '$16call_function.2': [(<numba.core.ir.Assign object at 0x708752b1dbd0>,
                                     12)],
             '$20load_global.0': [(<numba.core.ir.Assign object at 0x708752b1ded0>,
                                   20)],
             '$22load_method.1': [(<numba.core.ir.Assign object at 0x708752b1f250>,
                                   20)],
             '$30load_global.4': [(<numba.core.ir.Assign object at 0x708752b1d2d0>,
                                   20)],
             '$34call_function.6': [(<numba.core.ir.Assign object at 0x708752b1c5b0>,
                                     20)],
             '$36load_method.7': [(<numba.core.ir.Assign object at 0x708752b1cfa0>,
                                   20)],
             '$44load_deref.10': [(<numba.core.ir.Assign object at 0x708752eda140>,
                                   20)],
             '$48call_function.12': [(<numba.core.ir.Assign object at 0x708752edbc10>,
                                      20)],
             '$4load_attr.1': [(<numba.core.ir.Assign object at 0x708752ddd330>,
                                0)],
             '$50pred': [(<numba.core.ir.Assign object at 0x708752edbb80>, 20)],
             '$54return_value.1': [(<numba.core.ir.Assign object at 0x708752edbd30>,
                                    52)],
             '$58get_iter.1': [(<numba.core.ir.Assign object at 0x708752edba60>,
                                56)],
             '$60for_iter.1': [(<numba.core.ir.Assign object at 0x708752ed9690>,
                                60)],
             '$60for_iter.2': [(<numba.core.ir.Assign object at 0x708752ed8490>,
                                60)],
             '$60for_iter.3': [(<numba.core.ir.Assign object at 0x708752ed92d0>,
                                60)],
             '$66load_method.3': [(<numba.core.ir.Assign object at 0x708752df1ba0>,
                                   62)],
             '$72load_deref.5': [(<numba.core.ir.Assign object at 0x708752df2020>,
                                  62)],
             '$76call_function.7': [(<numba.core.ir.Assign object at 0x708752df35b0>,
                                     62)],
             '$78pred': [(<numba.core.ir.Assign object at 0x708752df12d0>, 62)],
             '$86return_value.2': [(<numba.core.ir.Assign object at 0x708752f08490>,
                                    80)],
             '$88load_deref.1': [(<numba.core.ir.Assign object at 0x708752f097b0>,
                                  88)],
             '$8compare_op.3': [(<numba.core.ir.Assign object at 0x708752b1f9a0>,
                                 0)],
             '$94call_function.4': [(<numba.core.ir.Assign object at 0x708752f08160>,
                                     88)],
             '$96pred': [(<numba.core.ir.Assign object at 0x708752f0a2c0>, 88)],
             '$const14.1': [(<numba.core.ir.Assign object at 0x708752b1e110>,
                             12)],
             '$const38.8': [(<numba.core.ir.Assign object at 0x708752b1c250>,
                             20)],
             '$const6.2': [(<numba.core.ir.Assign object at 0x708752b1fb80>,
                            0)],
             '$phi60.0': [(<numba.core.ir.Assign object at 0x708752edbb20>,
                           56)],
             '$phi62.1': [(<numba.core.ir.Assign object at 0x708752ed9660>,
                           60)],
             'a': [(<numba.core.ir.Assign object at 0x708752ddc400>, 0)],
             'bool10': [(<numba.core.ir.Assign object at 0x708752b1f6d0>, 0)],
             'bool50': [(<numba.core.ir.Assign object at 0x708752edb400>, 20)],
             'bool78': [(<numba.core.ir.Assign object at 0x708752df25c0>, 62)],
             'bool96': [(<numba.core.ir.Assign object at 0x708752f0bd90>, 88)],
             'it': [(<numba.core.ir.Assign object at 0x708752b1efb0>, 20)],
             'max_value': [(<numba.core.ir.Assign object at 0x708752b1e080>,
                            20),
                           (<numba.core.ir.Assign object at 0x708752ddeec0>,
                            98)],
             'v': [(<numba.core.ir.Assign object at 0x708752df13c0>, 62)],
             'view': [(<numba.core.ir.Assign object at 0x708752df1b70>, 62)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x708752f0abf0>
numba.core.ssa - DEBUG - Fix SSA violator on var max_value
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752f0ae30>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: $4load_attr.1 = getattr(value=a, attr=size)
numba.core.ssa - DEBUG - on stmt: $const6.2 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $8compare_op.3 = $4load_attr.1 == $const6.2
numba.core.ssa - DEBUG - on stmt: bool10 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $10pred, 12, 20
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 12
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752f0ae30>
numba.core.ssa - DEBUG - on stmt: $12load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const14.1 = const(str, zero-size array to reduction operation maximum which has no identity)
numba.core.ssa - DEBUG - on stmt: $16call_function.2 = call $12load_global.0($const14.1, func=$12load_global.0, args=[Var($const14.1, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 20
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752f0ae30>
numba.core.ssa - DEBUG - on stmt: $20load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $22load_method.1 = getattr(value=$20load_global.0, attr=nditer)
numba.core.ssa - DEBUG - on stmt: it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $30load_global.4 = global(next: <built-in function next>)
numba.core.ssa - DEBUG - on stmt: $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $36load_method.7 = getattr(value=$34call_function.6, attr=take)
numba.core.ssa - DEBUG - on stmt: $const38.8 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - first assign: max_value
numba.core.ssa - DEBUG - replaced with: max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $44load_deref.10 = freevar(pre_return_func: <function return_false at 0x708808b940d0>)
numba.core.ssa - DEBUG - on stmt: $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $50pred, 52, 56
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 52
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752f0ae30>
numba.core.ssa - DEBUG - on stmt: $54return_value.1 = cast(value=max_value)
numba.core.ssa - DEBUG - on stmt: return $54return_value.1
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 56
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752f0ae30>
numba.core.ssa - DEBUG - on stmt: $58get_iter.1 = getiter(value=it)
numba.core.ssa - DEBUG - on stmt: $phi60.0 = $58get_iter.1
numba.core.ssa - DEBUG - on stmt: jump 60
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 60
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752f0ae30>
numba.core.ssa - DEBUG - on stmt: $60for_iter.1 = iternext(value=$phi60.0)
numba.core.ssa - DEBUG - on stmt: $60for_iter.2 = pair_first(value=$60for_iter.1)
numba.core.ssa - DEBUG - on stmt: $60for_iter.3 = pair_second(value=$60for_iter.1)
numba.core.ssa - DEBUG - on stmt: $phi62.1 = $60for_iter.2
numba.core.ssa - DEBUG - on stmt: branch $60for_iter.3, 62, 104
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 62
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752f0ae30>
numba.core.ssa - DEBUG - on stmt: view = $phi62.1
numba.core.ssa - DEBUG - on stmt: $66load_method.3 = getattr(value=view, attr=item)
numba.core.ssa - DEBUG - on stmt: v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $72load_deref.5 = freevar(pre_return_func: <function return_false at 0x708808b940d0>)
numba.core.ssa - DEBUG - on stmt: $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: bool78 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $78pred, 80, 88
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752f0ae30>
numba.core.ssa - DEBUG - on stmt: $86return_value.2 = cast(value=v)
numba.core.ssa - DEBUG - on stmt: return $86return_value.2
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 88
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752f0ae30>
numba.core.ssa - DEBUG - on stmt: $88load_deref.1 = freevar(comparator: <function max_comparator at 0x708808b2fb50>)
numba.core.ssa - DEBUG - on stmt: $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: bool96 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $96pred, 98, 102
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752f0ae30>
numba.core.ssa - DEBUG - on stmt: max_value = v
numba.core.ssa - DEBUG - replaced with: max_value.1 = v
numba.core.ssa - DEBUG - on stmt: jump 102
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 102
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752f0ae30>
numba.core.ssa - DEBUG - on stmt: jump 60
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 104
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752f0ae30>
numba.core.ssa - DEBUG - on stmt: $106return_value.1 = cast(value=max_value)
numba.core.ssa - DEBUG - on stmt: return $106return_value.1
numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {20: [<numba.core.ir.Assign object at 0x708752f0a8f0>],
             98: [<numba.core.ir.Assign object at 0x708752f08580>]})
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752f0ae30>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: $4load_attr.1 = getattr(value=a, attr=size)
numba.core.ssa - DEBUG - on stmt: $const6.2 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $8compare_op.3 = $4load_attr.1 == $const6.2
numba.core.ssa - DEBUG - on stmt: bool10 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $10pred = call bool10($8compare_op.3, func=bool10, args=(Var($8compare_op.3, arraymath.py:571),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $10pred, 12, 20
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 12
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752f0ae30>
numba.core.ssa - DEBUG - on stmt: $12load_global.0 = global(ValueError: <class 'ValueError'>)
numba.core.ssa - DEBUG - on stmt: $const14.1 = const(str, zero-size array to reduction operation maximum which has no identity)
numba.core.ssa - DEBUG - on stmt: $16call_function.2 = call $12load_global.0($const14.1, func=$12load_global.0, args=[Var($const14.1, arraymath.py:572)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'ValueError'>('zero-size array to reduction operation maximum which has no identity')
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 20
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752f0ae30>
numba.core.ssa - DEBUG - on stmt: $20load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $22load_method.1 = getattr(value=$20load_global.0, attr=nditer)
numba.core.ssa - DEBUG - on stmt: it = call $22load_method.1(a, func=$22load_method.1, args=[Var(a, arraymath.py:570)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $30load_global.4 = global(next: <built-in function next>)
numba.core.ssa - DEBUG - on stmt: $34call_function.6 = call $30load_global.4(it, func=$30load_global.4, args=[Var(it, arraymath.py:575)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $36load_method.7 = getattr(value=$34call_function.6, attr=take)
numba.core.ssa - DEBUG - on stmt: $const38.8 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $44load_deref.10 = freevar(pre_return_func: <function return_false at 0x708808b940d0>)
numba.core.ssa - DEBUG - on stmt: $48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - find_def var='max_value' stmt=$48call_function.12 = call $44load_deref.10(max_value, func=$44load_deref.10, args=[Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48call_function.12, func=bool50, args=(Var($48call_function.12, arraymath.py:577),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $50pred, 52, 56
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 52
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752f0ae30>
numba.core.ssa - DEBUG - on stmt: $54return_value.1 = cast(value=max_value)
numba.core.ssa - DEBUG - find_def var='max_value' stmt=$54return_value.1 = cast(value=max_value)
numba.core.ssa - DEBUG - find_def_from_top label 52
numba.core.ssa - DEBUG - idom 20 from label 52
numba.core.ssa - DEBUG - find_def_from_bottom label 20
numba.core.ssa - DEBUG - on stmt: return $54return_value.1
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 56
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752f0ae30>
numba.core.ssa - DEBUG - on stmt: $58get_iter.1 = getiter(value=it)
numba.core.ssa - DEBUG - on stmt: $phi60.0 = $58get_iter.1
numba.core.ssa - DEBUG - on stmt: jump 60
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 60
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752f0ae30>
numba.core.ssa - DEBUG - on stmt: $60for_iter.1 = iternext(value=$phi60.0)
numba.core.ssa - DEBUG - on stmt: $60for_iter.2 = pair_first(value=$60for_iter.1)
numba.core.ssa - DEBUG - on stmt: $60for_iter.3 = pair_second(value=$60for_iter.1)
numba.core.ssa - DEBUG - on stmt: $phi62.1 = $60for_iter.2
numba.core.ssa - DEBUG - on stmt: branch $60for_iter.3, 62, 104
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 62
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752f0ae30>
numba.core.ssa - DEBUG - on stmt: view = $phi62.1
numba.core.ssa - DEBUG - on stmt: $66load_method.3 = getattr(value=view, attr=item)
numba.core.ssa - DEBUG - on stmt: v = call $66load_method.3(func=$66load_method.3, args=[], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $72load_deref.5 = freevar(pre_return_func: <function return_false at 0x708808b940d0>)
numba.core.ssa - DEBUG - on stmt: $76call_function.7 = call $72load_deref.5(v, func=$72load_deref.5, args=[Var(v, arraymath.py:581)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: bool78 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $78pred = call bool78($76call_function.7, func=bool78, args=(Var($76call_function.7, arraymath.py:582),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $78pred, 80, 88
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752f0ae30>
numba.core.ssa - DEBUG - on stmt: $86return_value.2 = cast(value=v)
numba.core.ssa - DEBUG - on stmt: return $86return_value.2
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 88
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752f0ae30>
numba.core.ssa - DEBUG - on stmt: $88load_deref.1 = freevar(comparator: <function max_comparator at 0x708808b2fb50>)
numba.core.ssa - DEBUG - on stmt: $94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - find_def var='max_value' stmt=$94call_function.4 = call $88load_deref.1(v, max_value, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - find_def_from_top label 88
numba.core.ssa - DEBUG - idom 62 from label 88
numba.core.ssa - DEBUG - find_def_from_bottom label 62
numba.core.ssa - DEBUG - find_def_from_top label 62
numba.core.ssa - DEBUG - idom 60 from label 62
numba.core.ssa - DEBUG - find_def_from_bottom label 60
numba.core.ssa - DEBUG - find_def_from_top label 60
numba.core.ssa - DEBUG - insert phi node max_value.2 = phi(incoming_values=[], incoming_blocks=[]) at 60
numba.core.ssa - DEBUG - find_def_from_bottom label 56
numba.core.ssa - DEBUG - find_def_from_top label 56
numba.core.ssa - DEBUG - idom 20 from label 56
numba.core.ssa - DEBUG - find_def_from_bottom label 20
numba.core.ssa - DEBUG - incoming_def max_value = call $36load_method.7($const38.8, func=$36load_method.7, args=[Var($const38.8, arraymath.py:576)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - find_def_from_bottom label 102
numba.core.ssa - DEBUG - find_def_from_top label 102
numba.core.ssa - DEBUG - insert phi node max_value.3 = phi(incoming_values=[], incoming_blocks=[]) at 102
numba.core.ssa - DEBUG - find_def_from_bottom label 88
numba.core.ssa - DEBUG - find_def_from_top label 88
numba.core.ssa - DEBUG - idom 62 from label 88
numba.core.ssa - DEBUG - find_def_from_bottom label 62
numba.core.ssa - DEBUG - find_def_from_top label 62
numba.core.ssa - DEBUG - idom 60 from label 62
numba.core.ssa - DEBUG - find_def_from_bottom label 60
numba.core.ssa - DEBUG - incoming_def max_value.2 = phi(incoming_values=[Var(max_value, arraymath.py:576)], incoming_blocks=[56])
numba.core.ssa - DEBUG - find_def_from_bottom label 98
numba.core.ssa - DEBUG - incoming_def max_value.1 = v
numba.core.ssa - DEBUG - incoming_def max_value.3 = phi(incoming_values=[Var(max_value.2, arraymath.py:584), Var(max_value.1, arraymath.py:585)], incoming_blocks=[88, 98])
numba.core.ssa - DEBUG - replaced with: $94call_function.4 = call $88load_deref.1(v, max_value.2, func=$88load_deref.1, args=[Var(v, arraymath.py:581), Var(max_value.2, arraymath.py:584)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: bool96 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $96pred = call bool96($94call_function.4, func=bool96, args=(Var($94call_function.4, arraymath.py:584),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $96pred, 98, 102
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752f0ae30>
numba.core.ssa - DEBUG - on stmt: max_value.1 = v
numba.core.ssa - DEBUG - on stmt: jump 102
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 102
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752f0ae30>
numba.core.ssa - DEBUG - on stmt: jump 60
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 104
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752f0ae30>
numba.core.ssa - DEBUG - on stmt: $106return_value.1 = cast(value=max_value)
numba.core.ssa - DEBUG - find_def var='max_value' stmt=$106return_value.1 = cast(value=max_value)
numba.core.ssa - DEBUG - find_def_from_top label 104
numba.core.ssa - DEBUG - idom 60 from label 104
numba.core.ssa - DEBUG - find_def_from_bottom label 60
numba.core.ssa - DEBUG - replaced with: $106return_value.1 = cast(value=max_value.2)
numba.core.ssa - DEBUG - on stmt: return $106return_value.1
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=4691)
           2	LOAD_FAST(arg=1, lineno=4692)
           4	LOAD_FAST(arg=0, lineno=4692)
           6	LOAD_ATTR(arg=0, lineno=4692)
           8	LOAD_CONST(arg=1, lineno=4692)
          10	BINARY_SUBTRACT(arg=None, lineno=4692)
          12	COMPARE_OP(arg=4, lineno=4692)
          14	POP_JUMP_IF_TRUE(arg=15, lineno=4692)
          16	LOAD_FAST(arg=1, lineno=4692)
          18	LOAD_FAST(arg=0, lineno=4692)
          20	LOAD_ATTR(arg=0, lineno=4692)
          22	UNARY_NEGATIVE(arg=None, lineno=4692)
          24	COMPARE_OP(arg=0, lineno=4692)
          26	POP_JUMP_IF_FALSE(arg=19, lineno=4692)
>         28	LOAD_GLOBAL(arg=1, lineno=4693)
          30	LOAD_CONST(arg=2, lineno=4693)
          32	CALL_FUNCTION(arg=1, lineno=4693)
          34	RAISE_VARARGS(arg=1, lineno=4693)
>         36	LOAD_FAST(arg=0, lineno=4694)
          38	LOAD_METHOD(arg=2, lineno=4694)
          40	CALL_METHOD(arg=0, lineno=4694)
          42	LOAD_FAST(arg=1, lineno=4694)
          44	BINARY_SUBSCR(arg=None, lineno=4694)
          46	RETURN_VALUE(arg=None, lineno=4694)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=4691)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=1, lineno=4692)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$indices2.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_ATTR(arg=0, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$indices2.0', '$a4.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_CONST(arg=1, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$indices2.0', '$6load_attr.2']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=BINARY_SUBTRACT(arg=None, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$indices2.0', '$6load_attr.2', '$const8.3']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=COMPARE_OP(arg=4, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$indices2.0', '$10binary_subtract.4']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=POP_JUMP_IF_TRUE(arg=15, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$12compare_op.5']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=16, stack=(), blockstack=(), npush=0), Edge(pc=28, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=16 nstack_initial=0), State(pc_initial=28 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=16 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=1, lineno=4692)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=0, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$indices16.0']
numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_ATTR(arg=0, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$indices16.0', '$a18.1']
numba.core.byteflow - DEBUG - dispatch pc=22, inst=UNARY_NEGATIVE(arg=None, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$indices16.0', '$20load_attr.2']
numba.core.byteflow - DEBUG - dispatch pc=24, inst=COMPARE_OP(arg=0, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$indices16.0', '$22unary_negative.3']
numba.core.byteflow - DEBUG - dispatch pc=26, inst=POP_JUMP_IF_FALSE(arg=19, lineno=4692)
numba.core.byteflow - DEBUG - stack ['$24compare_op.4']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=28, stack=(), blockstack=(), npush=0), Edge(pc=36, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=28 nstack_initial=0), State(pc_initial=28 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=28 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=28, inst=LOAD_GLOBAL(arg=1, lineno=4693)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=2, lineno=4693)
numba.core.byteflow - DEBUG - stack ['$28load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=32, inst=CALL_FUNCTION(arg=1, lineno=4693)
numba.core.byteflow - DEBUG - stack ['$28load_global.0', '$const30.1']
numba.core.byteflow - DEBUG - dispatch pc=34, inst=RAISE_VARARGS(arg=1, lineno=4693)
numba.core.byteflow - DEBUG - stack ['$32call_function.2']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=28 nstack_initial=0), State(pc_initial=36 nstack_initial=0)])
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=36 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=36 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=4694)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_METHOD(arg=2, lineno=4694)
numba.core.byteflow - DEBUG - stack ['$a36.0']
numba.core.byteflow - DEBUG - dispatch pc=40, inst=CALL_METHOD(arg=0, lineno=4694)
numba.core.byteflow - DEBUG - stack ['$38load_method.1']
numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_FAST(arg=1, lineno=4694)
numba.core.byteflow - DEBUG - stack ['$40call_method.2']
numba.core.byteflow - DEBUG - dispatch pc=44, inst=BINARY_SUBSCR(arg=None, lineno=4694)
numba.core.byteflow - DEBUG - stack ['$40call_method.2', '$indices42.3']
numba.core.byteflow - DEBUG - dispatch pc=46, inst=RETURN_VALUE(arg=None, lineno=4694)
numba.core.byteflow - DEBUG - stack ['$44binary_subscr.4']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=16 nstack_initial=0): set(),
             State(pc_initial=28 nstack_initial=0): set(),
             State(pc_initial=36 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - keep phismap: {}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$indices2.0'}), (4, {'res': '$a4.1'}), (6, {'item': '$a4.1', 'res': '$6load_attr.2'}), (8, {'res': '$const8.3'}), (10, {'lhs': '$6load_attr.2', 'rhs': '$const8.3', 'res': '$10binary_subtract.4'}), (12, {'lhs': '$indices2.0', 'rhs': '$10binary_subtract.4', 'res': '$12compare_op.5'}), (14, {'pred': '$12compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: (), 28: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=16 nstack_initial=0):
AdaptBlockInfo(insts=((16, {'res': '$indices16.0'}), (18, {'res': '$a18.1'}), (20, {'item': '$a18.1', 'res': '$20load_attr.2'}), (22, {'value': '$20load_attr.2', 'res': '$22unary_negative.3'}), (24, {'lhs': '$indices16.0', 'rhs': '$22unary_negative.3', 'res': '$24compare_op.4'}), (26, {'pred': '$24compare_op.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={28: (), 36: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=28 nstack_initial=0):
AdaptBlockInfo(insts=((28, {'res': '$28load_global.0'}), (30, {'res': '$const30.1'}), (32, {'func': '$28load_global.0', 'args': ['$const30.1'], 'res': '$32call_function.2'}), (34, {'exc': '$32call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=36 nstack_initial=0):
AdaptBlockInfo(insts=((36, {'res': '$a36.0'}), (38, {'item': '$a36.0', 'res': '$38load_method.1'}), (40, {'func': '$38load_method.1', 'args': [], 'res': '$40call_method.2'}), (42, {'res': '$indices42.3'}), (44, {'index': '$indices42.3', 'target': '$40call_method.2', 'res': '$44binary_subscr.4'}), (46, {'retval': '$44binary_subscr.4', 'castval': '$46return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    indices = arg(1, name=indices)           ['indices']
    $6load_attr.2 = getattr(value=a, attr=size) ['$6load_attr.2', 'a']
    $const8.3 = const(int, 1)                ['$const8.3']
    $10binary_subtract.4 = $6load_attr.2 - $const8.3 ['$10binary_subtract.4', '$6load_attr.2', '$const8.3']
    $12compare_op.5 = indices > $10binary_subtract.4 ['$10binary_subtract.4', '$12compare_op.5', 'indices']
    bool14 = global(bool: <class 'bool'>)    ['bool14']
    $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None) ['$12compare_op.5', '$14pred', 'bool14']
    branch $14pred, 28, 16                   ['$14pred']
label 16:
    $20load_attr.2 = getattr(value=a, attr=size) ['$20load_attr.2', 'a']
    $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2) ['$20load_attr.2', '$22unary_negative.3']
    $24compare_op.4 = indices < $22unary_negative.3 ['$22unary_negative.3', '$24compare_op.4', 'indices']
    bool26 = global(bool: <class 'bool'>)    ['bool26']
    $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None) ['$24compare_op.4', '$26pred', 'bool26']
    branch $26pred, 28, 36                   ['$26pred']
label 28:
    $28load_global.0 = global(IndexError: <class 'IndexError'>) ['$28load_global.0']
    $const30.1 = const(str, Index out of bounds) ['$const30.1']
    $32call_function.2 = call $28load_global.0($const30.1, func=$28load_global.0, args=[Var($const30.1, arrayobj.py:4693)], kws=(), vararg=None, varkwarg=None, target=None) ['$28load_global.0', '$32call_function.2', '$const30.1']
    raise $32call_function.2                 ['$32call_function.2']
label 36:
    $38load_method.1 = getattr(value=a, attr=ravel) ['$38load_method.1', 'a']
    $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$38load_method.1', '$40call_method.2']
    $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>) ['$40call_method.2', '$44binary_subscr.4', 'indices']
    $46return_value.5 = cast(value=$44binary_subscr.4) ['$44binary_subscr.4', '$46return_value.5']
    return $46return_value.5                 ['$46return_value.5']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752f0bd00>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: indices = arg(1, name=indices)
numba.core.ssa - DEBUG - on stmt: $6load_attr.2 = getattr(value=a, attr=size)
numba.core.ssa - DEBUG - on stmt: $const8.3 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $10binary_subtract.4 = $6load_attr.2 - $const8.3
numba.core.ssa - DEBUG - on stmt: $12compare_op.5 = indices > $10binary_subtract.4
numba.core.ssa - DEBUG - on stmt: bool14 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $14pred = call bool14($12compare_op.5, func=bool14, args=(Var($12compare_op.5, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $14pred, 28, 16
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 16
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752f0bd00>
numba.core.ssa - DEBUG - on stmt: $20load_attr.2 = getattr(value=a, attr=size)
numba.core.ssa - DEBUG - on stmt: $22unary_negative.3 = unary(fn=<built-in function neg>, value=$20load_attr.2)
numba.core.ssa - DEBUG - on stmt: $24compare_op.4 = indices < $22unary_negative.3
numba.core.ssa - DEBUG - on stmt: bool26 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $26pred = call bool26($24compare_op.4, func=bool26, args=(Var($24compare_op.4, arrayobj.py:4692),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $26pred, 28, 36
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 28
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752f0bd00>
numba.core.ssa - DEBUG - on stmt: $28load_global.0 = global(IndexError: <class 'IndexError'>)
numba.core.ssa - DEBUG - on stmt: $const30.1 = const(str, Index out of bounds)
numba.core.ssa - DEBUG - on stmt: $32call_function.2 = call $28load_global.0($const30.1, func=$28load_global.0, args=[Var($const30.1, arrayobj.py:4693)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'IndexError'>('Index out of bounds')
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 36
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752f0bd00>
numba.core.ssa - DEBUG - on stmt: $38load_method.1 = getattr(value=a, attr=ravel)
numba.core.ssa - DEBUG - on stmt: $40call_method.2 = call $38load_method.1(func=$38load_method.1, args=[], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $44binary_subscr.4 = getitem(value=$40call_method.2, index=indices, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $46return_value.5 = cast(value=$44binary_subscr.4)
numba.core.ssa - DEBUG - on stmt: return $46return_value.5
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10binary_subtract.4': [(<numba.core.ir.Assign object at 0x708752d18790>,
                                       0)],
             '$12compare_op.5': [(<numba.core.ir.Assign object at 0x708752d19fc0>,
                                  0)],
             '$14pred': [(<numba.core.ir.Assign object at 0x708752d19240>, 0)],
             '$20load_attr.2': [(<numba.core.ir.Assign object at 0x708752d1a380>,
                                 16)],
             '$22unary_negative.3': [(<numba.core.ir.Assign object at 0x708752d187f0>,
                                      16)],
             '$24compare_op.4': [(<numba.core.ir.Assign object at 0x708752d1bf10>,
                                  16)],
             '$26pred': [(<numba.core.ir.Assign object at 0x708752d1b6a0>, 16)],
             '$28load_global.0': [(<numba.core.ir.Assign object at 0x708752d1bdf0>,
                                   28)],
             '$32call_function.2': [(<numba.core.ir.Assign object at 0x708752d1b640>,
                                     28)],
             '$38load_method.1': [(<numba.core.ir.Assign object at 0x708752d1afb0>,
                                   36)],
             '$40call_method.2': [(<numba.core.ir.Assign object at 0x708752d1ab00>,
                                   36)],
             '$44binary_subscr.4': [(<numba.core.ir.Assign object at 0x708752d1aa70>,
                                     36)],
             '$46return_value.5': [(<numba.core.ir.Assign object at 0x708752d1a920>,
                                    36)],
             '$6load_attr.2': [(<numba.core.ir.Assign object at 0x708752f09ed0>,
                                0)],
             '$const30.1': [(<numba.core.ir.Assign object at 0x708752d1ad40>,
                             28)],
             '$const8.3': [(<numba.core.ir.Assign object at 0x708752f08400>,
                            0)],
             'a': [(<numba.core.ir.Assign object at 0x708752f0ada0>, 0)],
             'bool14': [(<numba.core.ir.Assign object at 0x708752d19d80>, 0)],
             'bool26': [(<numba.core.ir.Assign object at 0x708752d18a30>, 16)],
             'indices': [(<numba.core.ir.Assign object at 0x708752f0b1c0>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x708752f0bd00>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2230)
           2	LOAD_FAST(arg=0, lineno=2232)
           4	LOAD_METHOD(arg=0, lineno=2232)
           6	LOAD_FAST(arg=0, lineno=2232)
           8	LOAD_ATTR(arg=1, lineno=2232)
          10	CALL_METHOD(arg=1, lineno=2232)
          12	RETURN_VALUE(arg=None, lineno=2232)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2230)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2232)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_METHOD(arg=0, lineno=2232)
numba.core.byteflow - DEBUG - stack ['$ary2.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=2232)
numba.core.byteflow - DEBUG - stack ['$4load_method.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_ATTR(arg=1, lineno=2232)
numba.core.byteflow - DEBUG - stack ['$4load_method.1', '$ary6.2']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=CALL_METHOD(arg=1, lineno=2232)
numba.core.byteflow - DEBUG - stack ['$4load_method.1', '$8load_attr.3']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=2232)
numba.core.byteflow - DEBUG - stack ['$10call_method.4']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - keep phismap: {}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$ary2.0'}), (4, {'item': '$ary2.0', 'res': '$4load_method.1'}), (6, {'res': '$ary6.2'}), (8, {'item': '$ary6.2', 'res': '$8load_attr.3'}), (10, {'func': '$4load_method.1', 'args': ['$8load_attr.3'], 'res': '$10call_method.4'}), (12, {'retval': '$10call_method.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    ary = arg(0, name=ary)                   ['ary']
    $4load_method.1 = getattr(value=ary, attr=reshape) ['$4load_method.1', 'ary']
    $8load_attr.3 = getattr(value=ary, attr=size) ['$8load_attr.3', 'ary']
    $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2232)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', '$8load_attr.3']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752d1a680>
numba.core.ssa - DEBUG - on stmt: ary = arg(0, name=ary)
numba.core.ssa - DEBUG - on stmt: $4load_method.1 = getattr(value=ary, attr=reshape)
numba.core.ssa - DEBUG - on stmt: $8load_attr.3 = getattr(value=ary, attr=size)
numba.core.ssa - DEBUG - on stmt: $10call_method.4 = call $4load_method.1($8load_attr.3, func=$4load_method.1, args=[Var($8load_attr.3, arrayobj.py:2232)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $12return_value.5 = cast(value=$10call_method.4)
numba.core.ssa - DEBUG - on stmt: return $12return_value.5
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10call_method.4': [(<numba.core.ir.Assign object at 0x708752d82890>,
                                   0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x708752d81cf0>,
                                    0)],
             '$4load_method.1': [(<numba.core.ir.Assign object at 0x708752d83f10>,
                                  0)],
             '$8load_attr.3': [(<numba.core.ir.Assign object at 0x708752d80310>,
                                0)],
             'ary': [(<numba.core.ir.Assign object at 0x708752d80220>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x708752d1a680>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=486)
           2	LOAD_CONST(arg=1, lineno=488)
           4	RETURN_VALUE(arg=None, lineno=488)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=486)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_CONST(arg=1, lineno=488)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=RETURN_VALUE(arg=None, lineno=488)
numba.core.byteflow - DEBUG - stack ['$const2.0']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - keep phismap: {}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$const2.0'}), (4, {'retval': '$const2.0', 'castval': '$4return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    $const2.0 = const(bool, False)           ['$const2.0']
    $4return_value.1 = cast(value=$const2.0) ['$4return_value.1', '$const2.0']
    return $4return_value.1                  ['$4return_value.1']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x70875331b550>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: $const2.0 = const(bool, False)
numba.core.ssa - DEBUG - on stmt: $4return_value.1 = cast(value=$const2.0)
numba.core.ssa - DEBUG - on stmt: return $4return_value.1
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$4return_value.1': [(<numba.core.ir.Assign object at 0x7087533c34f0>,
                                   0)],
             '$const2.0': [(<numba.core.ir.Assign object at 0x708753318880>,
                            0)],
             'a': [(<numba.core.ir.Assign object at 0x708753318fd0>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x70875331b550>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=481)
           2	LOAD_FAST(arg=0, lineno=483)
           4	LOAD_FAST(arg=1, lineno=483)
           6	COMPARE_OP(arg=4, lineno=483)
           8	RETURN_VALUE(arg=None, lineno=483)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=481)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=483)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=483)
numba.core.byteflow - DEBUG - stack ['$a2.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=COMPARE_OP(arg=4, lineno=483)
numba.core.byteflow - DEBUG - stack ['$a2.0', '$min_val4.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=RETURN_VALUE(arg=None, lineno=483)
numba.core.byteflow - DEBUG - stack ['$6compare_op.2']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - keep phismap: {}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$a2.0'}), (4, {'res': '$min_val4.1'}), (6, {'lhs': '$a2.0', 'rhs': '$min_val4.1', 'res': '$6compare_op.2'}), (8, {'retval': '$6compare_op.2', 'castval': '$8return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    min_val = arg(1, name=min_val)           ['min_val']
    $6compare_op.2 = a > min_val             ['$6compare_op.2', 'a', 'min_val']
    $8return_value.3 = cast(value=$6compare_op.2) ['$6compare_op.2', '$8return_value.3']
    return $8return_value.3                  ['$8return_value.3']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708753540a00>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: min_val = arg(1, name=min_val)
numba.core.ssa - DEBUG - on stmt: $6compare_op.2 = a > min_val
numba.core.ssa - DEBUG - on stmt: $8return_value.3 = cast(value=$6compare_op.2)
numba.core.ssa - DEBUG - on stmt: return $8return_value.3
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$6compare_op.2': [(<numba.core.ir.Assign object at 0x708753543640>,
                                 0)],
             '$8return_value.3': [(<numba.core.ir.Assign object at 0x7087535427a0>,
                                   0)],
             'a': [(<numba.core.ir.Assign object at 0x7087535428c0>, 0)],
             'min_val': [(<numba.core.ir.Assign object at 0x708753541ab0>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x708753540a00>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=437)
           2	LOAD_DEREF(arg=0, lineno=440)
           4	STORE_FAST(arg=1, lineno=440)
           6	LOAD_GLOBAL(arg=0, lineno=441)
           8	LOAD_METHOD(arg=1, lineno=441)
          10	LOAD_FAST(arg=0, lineno=441)
          12	CALL_METHOD(arg=1, lineno=441)
          14	GET_ITER(arg=None, lineno=441)
>         16	FOR_ITER(arg=8, lineno=441)
          18	STORE_FAST(arg=2, lineno=441)
          20	LOAD_FAST(arg=1, lineno=442)
          22	LOAD_FAST(arg=2, lineno=442)
          24	LOAD_METHOD(arg=2, lineno=442)
          26	CALL_METHOD(arg=0, lineno=442)
          28	INPLACE_ADD(arg=None, lineno=442)
          30	STORE_FAST(arg=1, lineno=442)
          32	JUMP_ABSOLUTE(arg=9, lineno=442)
>         34	LOAD_FAST(arg=1, lineno=443)
          36	LOAD_FAST(arg=0, lineno=443)
          38	LOAD_ATTR(arg=3, lineno=443)
          40	BINARY_TRUE_DIVIDE(arg=None, lineno=443)
          42	RETURN_VALUE(arg=None, lineno=443)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=437)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_DEREF(arg=0, lineno=440)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=STORE_FAST(arg=1, lineno=440)
numba.core.byteflow - DEBUG - stack ['$2load_deref.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_GLOBAL(arg=0, lineno=441)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_METHOD(arg=1, lineno=441)
numba.core.byteflow - DEBUG - stack ['$6load_global.1']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=441)
numba.core.byteflow - DEBUG - stack ['$8load_method.2']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=CALL_METHOD(arg=1, lineno=441)
numba.core.byteflow - DEBUG - stack ['$8load_method.2', '$a10.3']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=GET_ITER(arg=None, lineno=441)
numba.core.byteflow - DEBUG - stack ['$12call_method.4']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=16, stack=('$14get_iter.5',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=16 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi16.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=16 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=16, inst=FOR_ITER(arg=8, lineno=441)
numba.core.byteflow - DEBUG - stack ['$phi16.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=34, stack=(), blockstack=(), npush=0), Edge(pc=18, stack=('$phi16.0', '$16for_iter.2'), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=34 nstack_initial=0), State(pc_initial=18 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=34 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=34, inst=LOAD_FAST(arg=1, lineno=443)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=0, lineno=443)
numba.core.byteflow - DEBUG - stack ['$c34.0']
numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_ATTR(arg=3, lineno=443)
numba.core.byteflow - DEBUG - stack ['$c34.0', '$a36.1']
numba.core.byteflow - DEBUG - dispatch pc=40, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=443)
numba.core.byteflow - DEBUG - stack ['$c34.0', '$38load_attr.2']
numba.core.byteflow - DEBUG - dispatch pc=42, inst=RETURN_VALUE(arg=None, lineno=443)
numba.core.byteflow - DEBUG - stack ['$40binary_true_divide.3']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=18 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: ['$phi18.0', '$phi18.1']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=18 nstack_initial=2)
numba.core.byteflow - DEBUG - dispatch pc=18, inst=STORE_FAST(arg=2, lineno=441)
numba.core.byteflow - DEBUG - stack ['$phi18.0', '$phi18.1']
numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=1, lineno=442)
numba.core.byteflow - DEBUG - stack ['$phi18.0']
numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_FAST(arg=2, lineno=442)
numba.core.byteflow - DEBUG - stack ['$phi18.0', '$c20.2']
numba.core.byteflow - DEBUG - dispatch pc=24, inst=LOAD_METHOD(arg=2, lineno=442)
numba.core.byteflow - DEBUG - stack ['$phi18.0', '$c20.2', '$v22.3']
numba.core.byteflow - DEBUG - dispatch pc=26, inst=CALL_METHOD(arg=0, lineno=442)
numba.core.byteflow - DEBUG - stack ['$phi18.0', '$c20.2', '$24load_method.4']
numba.core.byteflow - DEBUG - dispatch pc=28, inst=INPLACE_ADD(arg=None, lineno=442)
numba.core.byteflow - DEBUG - stack ['$phi18.0', '$c20.2', '$26call_method.5']
numba.core.byteflow - DEBUG - dispatch pc=30, inst=STORE_FAST(arg=1, lineno=442)
numba.core.byteflow - DEBUG - stack ['$phi18.0', '$28inplace_add.6']
numba.core.byteflow - DEBUG - dispatch pc=32, inst=JUMP_ABSOLUTE(arg=9, lineno=442)
numba.core.byteflow - DEBUG - stack ['$phi18.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=16, stack=('$phi18.0',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=16 nstack_initial=1)])
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=16 nstack_initial=1): {'$phi16.0'},
             State(pc_initial=18 nstack_initial=2): {'$phi18.1'},
             State(pc_initial=34 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {'$phi16.0': State(pc_initial=0 nstack_initial=0),
 '$phi18.1': State(pc_initial=16 nstack_initial=1)}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi18.0', State(pc_initial=18 nstack_initial=2))},
             '$phi18.0': {('$phi16.0', State(pc_initial=16 nstack_initial=1))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi16.0', State(pc_initial=16 nstack_initial=1))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi16.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.0': {('$14get_iter.5',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi18.1': {('$16for_iter.2',
                           State(pc_initial=16 nstack_initial=1))}})
numba.core.byteflow - DEBUG - keep phismap: {'$phi16.0': {('$14get_iter.5', State(pc_initial=0 nstack_initial=0))},
 '$phi18.1': {('$16for_iter.2', State(pc_initial=16 nstack_initial=1))}}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi16.0': '$14get_iter.5'},
             State(pc_initial=16 nstack_initial=1): {'$phi18.1': '$16for_iter.2'}})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'value': '$2load_deref.0'}), (6, {'res': '$6load_global.1'}), (8, {'item': '$6load_global.1', 'res': '$8load_method.2'}), (10, {'res': '$a10.3'}), (12, {'func': '$8load_method.2', 'args': ['$a10.3'], 'res': '$12call_method.4'}), (14, {'value': '$12call_method.4', 'res': '$14get_iter.5'})), outgoing_phis={'$phi16.0': '$14get_iter.5'}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: ('$14get_iter.5',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=16 nstack_initial=1):
AdaptBlockInfo(insts=((16, {'iterator': '$phi16.0', 'pair': '$16for_iter.1', 'indval': '$16for_iter.2', 'pred': '$16for_iter.3'}),), outgoing_phis={'$phi18.1': '$16for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={34: (), 18: ('$phi16.0', '$16for_iter.2')})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=18 nstack_initial=2):
AdaptBlockInfo(insts=((18, {'value': '$phi18.1'}), (20, {'res': '$c20.2'}), (22, {'res': '$v22.3'}), (24, {'item': '$v22.3', 'res': '$24load_method.4'}), (26, {'func': '$24load_method.4', 'args': [], 'res': '$26call_method.5'}), (28, {'lhs': '$c20.2', 'rhs': '$26call_method.5', 'res': '$28inplace_add.6'}), (30, {'value': '$28inplace_add.6'}), (32, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={16: ('$phi18.0',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=34 nstack_initial=0):
AdaptBlockInfo(insts=((34, {'res': '$c34.0'}), (36, {'res': '$a36.1'}), (38, {'item': '$a36.1', 'res': '$38load_attr.2'}), (40, {'lhs': '$c34.0', 'rhs': '$38load_attr.2', 'res': '$40binary_true_divide.3'}), (42, {'retval': '$40binary_true_divide.3', 'castval': '$42return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    c = freevar(acc_init: 0.0)               ['c']
    $6load_global.1 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$6load_global.1']
    $8load_method.2 = getattr(value=$6load_global.1, attr=nditer) ['$6load_global.1', '$8load_method.2']
    $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None) ['$12call_method.4', '$8load_method.2', 'a']
    $14get_iter.5 = getiter(value=$12call_method.4) ['$12call_method.4', '$14get_iter.5']
    $phi16.0 = $14get_iter.5                 ['$14get_iter.5', '$phi16.0']
    jump 16                                  []
label 16:
    $16for_iter.1 = iternext(value=$phi16.0) ['$16for_iter.1', '$phi16.0']
    $16for_iter.2 = pair_first(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.2']
    $16for_iter.3 = pair_second(value=$16for_iter.1) ['$16for_iter.1', '$16for_iter.3']
    $phi18.1 = $16for_iter.2                 ['$16for_iter.2', '$phi18.1']
    branch $16for_iter.3, 18, 34             ['$16for_iter.3']
label 18:
    v = $phi18.1                             ['$phi18.1', 'v']
    $24load_method.4 = getattr(value=v, attr=item) ['$24load_method.4', 'v']
    $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$24load_method.4', '$26call_method.5']
    $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined) ['$26call_method.5', '$28inplace_add.6', 'c']
    c = $28inplace_add.6                     ['$28inplace_add.6', 'c']
    jump 16                                  []
label 34:
    $38load_attr.2 = getattr(value=a, attr=size) ['$38load_attr.2', 'a']
    $40binary_true_divide.3 = c / $38load_attr.2 ['$38load_attr.2', '$40binary_true_divide.3', 'c']
    $42return_value.4 = cast(value=$40binary_true_divide.3) ['$40binary_true_divide.3', '$42return_value.4']
    return $42return_value.4                 ['$42return_value.4']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708753432020>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: c = freevar(acc_init: 0.0)
numba.core.ssa - DEBUG - on stmt: $6load_global.1 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $8load_method.2 = getattr(value=$6load_global.1, attr=nditer)
numba.core.ssa - DEBUG - on stmt: $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $14get_iter.5 = getiter(value=$12call_method.4)
numba.core.ssa - DEBUG - on stmt: $phi16.0 = $14get_iter.5
numba.core.ssa - DEBUG - on stmt: jump 16
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 16
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708753432020>
numba.core.ssa - DEBUG - on stmt: $16for_iter.1 = iternext(value=$phi16.0)
numba.core.ssa - DEBUG - on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
numba.core.ssa - DEBUG - on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
numba.core.ssa - DEBUG - on stmt: $phi18.1 = $16for_iter.2
numba.core.ssa - DEBUG - on stmt: branch $16for_iter.3, 18, 34
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 18
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708753432020>
numba.core.ssa - DEBUG - on stmt: v = $phi18.1
numba.core.ssa - DEBUG - on stmt: $24load_method.4 = getattr(value=v, attr=item)
numba.core.ssa - DEBUG - on stmt: $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: c = $28inplace_add.6
numba.core.ssa - DEBUG - on stmt: jump 16
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 34
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708753432020>
numba.core.ssa - DEBUG - on stmt: $38load_attr.2 = getattr(value=a, attr=size)
numba.core.ssa - DEBUG - on stmt: $40binary_true_divide.3 = c / $38load_attr.2
numba.core.ssa - DEBUG - on stmt: $42return_value.4 = cast(value=$40binary_true_divide.3)
numba.core.ssa - DEBUG - on stmt: return $42return_value.4
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$12call_method.4': [(<numba.core.ir.Assign object at 0x70875352ffd0>,
                                   0)],
             '$14get_iter.5': [(<numba.core.ir.Assign object at 0x7087531854b0>,
                                0)],
             '$16for_iter.1': [(<numba.core.ir.Assign object at 0x7087531848e0>,
                                16)],
             '$16for_iter.2': [(<numba.core.ir.Assign object at 0x708753184c40>,
                                16)],
             '$16for_iter.3': [(<numba.core.ir.Assign object at 0x708753185300>,
                                16)],
             '$24load_method.4': [(<numba.core.ir.Assign object at 0x708753184190>,
                                   18)],
             '$26call_method.5': [(<numba.core.ir.Assign object at 0x708753187490>,
                                   18)],
             '$28inplace_add.6': [(<numba.core.ir.Assign object at 0x708753187730>,
                                   18)],
             '$38load_attr.2': [(<numba.core.ir.Assign object at 0x708753186ef0>,
                                 34)],
             '$40binary_true_divide.3': [(<numba.core.ir.Assign object at 0x708753185540>,
                                          34)],
             '$42return_value.4': [(<numba.core.ir.Assign object at 0x708753185000>,
                                    34)],
             '$6load_global.1': [(<numba.core.ir.Assign object at 0x70875352f460>,
                                  0)],
             '$8load_method.2': [(<numba.core.ir.Assign object at 0x70875352cd90>,
                                  0)],
             '$phi16.0': [(<numba.core.ir.Assign object at 0x70875352e860>, 0)],
             '$phi18.1': [(<numba.core.ir.Assign object at 0x708753187e20>,
                           16)],
             'a': [(<numba.core.ir.Assign object at 0x70875352e9b0>, 0)],
             'c': [(<numba.core.ir.Assign object at 0x70875352eb90>, 0),
                   (<numba.core.ir.Assign object at 0x7087531871c0>, 18)],
             'v': [(<numba.core.ir.Assign object at 0x708753185090>, 18)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x708753432020>
numba.core.ssa - DEBUG - Fix SSA violator on var c
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708753433d60>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: c = freevar(acc_init: 0.0)
numba.core.ssa - DEBUG - first assign: c
numba.core.ssa - DEBUG - replaced with: c = freevar(acc_init: 0.0)
numba.core.ssa - DEBUG - on stmt: $6load_global.1 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $8load_method.2 = getattr(value=$6load_global.1, attr=nditer)
numba.core.ssa - DEBUG - on stmt: $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $14get_iter.5 = getiter(value=$12call_method.4)
numba.core.ssa - DEBUG - on stmt: $phi16.0 = $14get_iter.5
numba.core.ssa - DEBUG - on stmt: jump 16
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 16
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708753433d60>
numba.core.ssa - DEBUG - on stmt: $16for_iter.1 = iternext(value=$phi16.0)
numba.core.ssa - DEBUG - on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
numba.core.ssa - DEBUG - on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
numba.core.ssa - DEBUG - on stmt: $phi18.1 = $16for_iter.2
numba.core.ssa - DEBUG - on stmt: branch $16for_iter.3, 18, 34
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 18
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708753433d60>
numba.core.ssa - DEBUG - on stmt: v = $phi18.1
numba.core.ssa - DEBUG - on stmt: $24load_method.4 = getattr(value=v, attr=item)
numba.core.ssa - DEBUG - on stmt: $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: c = $28inplace_add.6
numba.core.ssa - DEBUG - replaced with: c.1 = $28inplace_add.6
numba.core.ssa - DEBUG - on stmt: jump 16
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 34
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708753433d60>
numba.core.ssa - DEBUG - on stmt: $38load_attr.2 = getattr(value=a, attr=size)
numba.core.ssa - DEBUG - on stmt: $40binary_true_divide.3 = c / $38load_attr.2
numba.core.ssa - DEBUG - on stmt: $42return_value.4 = cast(value=$40binary_true_divide.3)
numba.core.ssa - DEBUG - on stmt: return $42return_value.4
numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7087534321d0>],
             18: [<numba.core.ir.Assign object at 0x7087534333d0>]})
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708753433d60>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: c = freevar(acc_init: 0.0)
numba.core.ssa - DEBUG - on stmt: $6load_global.1 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $8load_method.2 = getattr(value=$6load_global.1, attr=nditer)
numba.core.ssa - DEBUG - on stmt: $12call_method.4 = call $8load_method.2(a, func=$8load_method.2, args=[Var(a, arraymath.py:437)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $14get_iter.5 = getiter(value=$12call_method.4)
numba.core.ssa - DEBUG - on stmt: $phi16.0 = $14get_iter.5
numba.core.ssa - DEBUG - on stmt: jump 16
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 16
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708753433d60>
numba.core.ssa - DEBUG - on stmt: $16for_iter.1 = iternext(value=$phi16.0)
numba.core.ssa - DEBUG - on stmt: $16for_iter.2 = pair_first(value=$16for_iter.1)
numba.core.ssa - DEBUG - on stmt: $16for_iter.3 = pair_second(value=$16for_iter.1)
numba.core.ssa - DEBUG - on stmt: $phi18.1 = $16for_iter.2
numba.core.ssa - DEBUG - on stmt: branch $16for_iter.3, 18, 34
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 18
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708753433d60>
numba.core.ssa - DEBUG - on stmt: v = $phi18.1
numba.core.ssa - DEBUG - on stmt: $24load_method.4 = getattr(value=v, attr=item)
numba.core.ssa - DEBUG - on stmt: $26call_method.5 = call $24load_method.4(func=$24load_method.4, args=[], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def var='c' stmt=$28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def_from_top label 18
numba.core.ssa - DEBUG - idom 16 from label 18
numba.core.ssa - DEBUG - find_def_from_bottom label 16
numba.core.ssa - DEBUG - find_def_from_top label 16
numba.core.ssa - DEBUG - insert phi node c.2 = phi(incoming_values=[], incoming_blocks=[]) at 16
numba.core.ssa - DEBUG - find_def_from_bottom label 0
numba.core.ssa - DEBUG - incoming_def c = freevar(acc_init: 0.0)
numba.core.ssa - DEBUG - find_def_from_bottom label 18
numba.core.ssa - DEBUG - incoming_def c.1 = $28inplace_add.6
numba.core.ssa - DEBUG - replaced with: $28inplace_add.6 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=c.2, rhs=$26call_method.5, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: c.1 = $28inplace_add.6
numba.core.ssa - DEBUG - on stmt: jump 16
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 34
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708753433d60>
numba.core.ssa - DEBUG - on stmt: $38load_attr.2 = getattr(value=a, attr=size)
numba.core.ssa - DEBUG - on stmt: $40binary_true_divide.3 = c / $38load_attr.2
numba.core.ssa - DEBUG - find_def var='c' stmt=$40binary_true_divide.3 = c / $38load_attr.2
numba.core.ssa - DEBUG - find_def_from_top label 34
numba.core.ssa - DEBUG - idom 16 from label 34
numba.core.ssa - DEBUG - find_def_from_bottom label 16
numba.core.ssa - DEBUG - replaced with: $40binary_true_divide.3 = c.2 / $38load_attr.2
numba.core.ssa - DEBUG - on stmt: $42return_value.4 = cast(value=$40binary_true_divide.3)
numba.core.ssa - DEBUG - on stmt: return $42return_value.4
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2452)
           2	LOAD_FAST(arg=0, lineno=2457)
           4	LOAD_ATTR(arg=0, lineno=2457)
           6	LOAD_CONST(arg=1, lineno=2457)
           8	BINARY_POWER(arg=None, lineno=2457)
          10	LOAD_FAST(arg=0, lineno=2457)
          12	LOAD_ATTR(arg=1, lineno=2457)
          14	LOAD_CONST(arg=1, lineno=2457)
          16	BINARY_POWER(arg=None, lineno=2457)
          18	BINARY_ADD(arg=None, lineno=2457)
          20	RETURN_VALUE(arg=None, lineno=2457)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2452)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2457)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=2457)
numba.core.byteflow - DEBUG - stack ['$x2.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=2457)
numba.core.byteflow - DEBUG - stack ['$4load_attr.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=BINARY_POWER(arg=None, lineno=2457)
numba.core.byteflow - DEBUG - stack ['$4load_attr.1', '$const6.2']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=2457)
numba.core.byteflow - DEBUG - stack ['$8binary_power.3']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_ATTR(arg=1, lineno=2457)
numba.core.byteflow - DEBUG - stack ['$8binary_power.3', '$x10.4']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_CONST(arg=1, lineno=2457)
numba.core.byteflow - DEBUG - stack ['$8binary_power.3', '$12load_attr.5']
numba.core.byteflow - DEBUG - dispatch pc=16, inst=BINARY_POWER(arg=None, lineno=2457)
numba.core.byteflow - DEBUG - stack ['$8binary_power.3', '$12load_attr.5', '$const14.6']
numba.core.byteflow - DEBUG - dispatch pc=18, inst=BINARY_ADD(arg=None, lineno=2457)
numba.core.byteflow - DEBUG - stack ['$8binary_power.3', '$16binary_power.7']
numba.core.byteflow - DEBUG - dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=2457)
numba.core.byteflow - DEBUG - stack ['$18binary_add.8']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - keep phismap: {}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'item': '$x2.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2'}), (8, {'lhs': '$4load_attr.1', 'rhs': '$const6.2', 'res': '$8binary_power.3'}), (10, {'res': '$x10.4'}), (12, {'item': '$x10.4', 'res': '$12load_attr.5'}), (14, {'res': '$const14.6'}), (16, {'lhs': '$12load_attr.5', 'rhs': '$const14.6', 'res': '$16binary_power.7'}), (18, {'lhs': '$8binary_power.3', 'rhs': '$16binary_power.7', 'res': '$18binary_add.8'}), (20, {'retval': '$18binary_add.8', 'castval': '$20return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $4load_attr.1 = getattr(value=x, attr=real) ['$4load_attr.1', 'x']
    $const6.2 = const(int, 2)                ['$const6.2']
    $8binary_power.3 = $4load_attr.1 ** $const6.2 ['$4load_attr.1', '$8binary_power.3', '$const6.2']
    $12load_attr.5 = getattr(value=x, attr=imag) ['$12load_attr.5', 'x']
    $const14.6 = const(int, 2)               ['$const14.6']
    $16binary_power.7 = $12load_attr.5 ** $const14.6 ['$12load_attr.5', '$16binary_power.7', '$const14.6']
    $18binary_add.8 = $8binary_power.3 + $16binary_power.7 ['$16binary_power.7', '$18binary_add.8', '$8binary_power.3']
    $20return_value.9 = cast(value=$18binary_add.8) ['$18binary_add.8', '$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752cfec20>
numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
numba.core.ssa - DEBUG - on stmt: $4load_attr.1 = getattr(value=x, attr=real)
numba.core.ssa - DEBUG - on stmt: $const6.2 = const(int, 2)
numba.core.ssa - DEBUG - on stmt: $8binary_power.3 = $4load_attr.1 ** $const6.2
numba.core.ssa - DEBUG - on stmt: $12load_attr.5 = getattr(value=x, attr=imag)
numba.core.ssa - DEBUG - on stmt: $const14.6 = const(int, 2)
numba.core.ssa - DEBUG - on stmt: $16binary_power.7 = $12load_attr.5 ** $const14.6
numba.core.ssa - DEBUG - on stmt: $18binary_add.8 = $8binary_power.3 + $16binary_power.7
numba.core.ssa - DEBUG - on stmt: $20return_value.9 = cast(value=$18binary_add.8)
numba.core.ssa - DEBUG - on stmt: return $20return_value.9
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$12load_attr.5': [(<numba.core.ir.Assign object at 0x708752cfc1c0>,
                                 0)],
             '$16binary_power.7': [(<numba.core.ir.Assign object at 0x708752cfe5f0>,
                                    0)],
             '$18binary_add.8': [(<numba.core.ir.Assign object at 0x708752cfe770>,
                                  0)],
             '$20return_value.9': [(<numba.core.ir.Assign object at 0x708752cfe8c0>,
                                    0)],
             '$4load_attr.1': [(<numba.core.ir.Assign object at 0x708752cfd2a0>,
                                0)],
             '$8binary_power.3': [(<numba.core.ir.Assign object at 0x708752cfc3d0>,
                                   0)],
             '$const14.6': [(<numba.core.ir.Assign object at 0x708752cfe440>,
                             0)],
             '$const6.2': [(<numba.core.ir.Assign object at 0x708752cfc310>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x708752cfc6d0>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x708752cfec20>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=214)
           2	LOAD_DEREF(arg=1, lineno=216)
           4	LOAD_CONST(arg=1, lineno=216)
           6	CALL_FUNCTION(arg=1, lineno=216)
           8	STORE_FAST(arg=2, lineno=216)
          10	LOAD_DEREF(arg=1, lineno=217)
          12	LOAD_FAST(arg=0, lineno=217)
          14	CALL_FUNCTION(arg=1, lineno=217)
          16	STORE_FAST(arg=0, lineno=217)
          18	LOAD_FAST(arg=1, lineno=218)
          20	LOAD_CONST(arg=2, lineno=218)
          22	COMPARE_OP(arg=0, lineno=218)
          24	POP_JUMP_IF_FALSE(arg=50, lineno=218)
          26	LOAD_CONST(arg=3, lineno=219)
          28	STORE_FAST(arg=3, lineno=219)
          30	LOAD_FAST(arg=1, lineno=220)
          32	UNARY_NEGATIVE(arg=None, lineno=220)
          34	STORE_FAST(arg=4, lineno=220)
          36	LOAD_FAST(arg=4, lineno=221)
          38	LOAD_CONST(arg=2, lineno=221)
          40	COMPARE_OP(arg=0, lineno=221)
          42	POP_JUMP_IF_FALSE(arg=25, lineno=221)
          44	LOAD_GLOBAL(arg=0, lineno=222)
          46	RAISE_VARARGS(arg=1, lineno=222)
>         48	LOAD_DEREF(arg=0, lineno=223)
          50	POP_JUMP_IF_FALSE(arg=49, lineno=223)
          52	LOAD_FAST(arg=0, lineno=224)
          54	LOAD_CONST(arg=2, lineno=224)
          56	COMPARE_OP(arg=2, lineno=224)
          58	POP_JUMP_IF_FALSE(arg=39, lineno=224)
          60	LOAD_DEREF(arg=2, lineno=225)
          62	POP_JUMP_IF_FALSE(arg=35, lineno=225)
          64	LOAD_DEREF(arg=2, lineno=226)
          66	RETURN_VALUE(arg=None, lineno=226)
>         68	LOAD_GLOBAL(arg=1, lineno=228)
          70	LOAD_CONST(arg=4, lineno=228)
          72	CALL_FUNCTION(arg=1, lineno=228)
          74	RAISE_VARARGS(arg=1, lineno=228)
>         76	LOAD_FAST(arg=0, lineno=229)
          78	LOAD_CONST(arg=1, lineno=229)
          80	COMPARE_OP(arg=3, lineno=229)
          82	POP_JUMP_IF_FALSE(arg=49, lineno=229)
          84	LOAD_FAST(arg=0, lineno=229)
          86	LOAD_CONST(arg=5, lineno=229)
          88	COMPARE_OP(arg=3, lineno=229)
          90	POP_JUMP_IF_FALSE(arg=49, lineno=229)
          92	LOAD_CONST(arg=2, lineno=230)
          94	RETURN_VALUE(arg=None, lineno=230)
>         96	JUMP_FORWARD(arg=4, lineno=230)
>         98	LOAD_CONST(arg=6, lineno=232)
         100	STORE_FAST(arg=3, lineno=232)
         102	LOAD_FAST(arg=1, lineno=233)
         104	STORE_FAST(arg=4, lineno=233)
>        106	LOAD_FAST(arg=4, lineno=234)
         108	LOAD_CONST(arg=7, lineno=234)
         110	COMPARE_OP(arg=4, lineno=234)
         112	POP_JUMP_IF_FALSE(arg=66, lineno=234)
         114	LOAD_GLOBAL(arg=2, lineno=236)
         116	LOAD_METHOD(arg=3, lineno=236)
         118	LOAD_FAST(arg=0, lineno=236)
         120	LOAD_GLOBAL(arg=4, lineno=236)
         122	LOAD_FAST(arg=1, lineno=236)
         124	CALL_FUNCTION(arg=1, lineno=236)
         126	CALL_METHOD(arg=2, lineno=236)
         128	RETURN_VALUE(arg=None, lineno=236)
>        130	LOAD_FAST(arg=4, lineno=237)
         132	LOAD_CONST(arg=2, lineno=237)
         134	COMPARE_OP(arg=3, lineno=237)
         136	POP_JUMP_IF_FALSE(arg=90, lineno=237)
>        138	LOAD_FAST(arg=4, lineno=238)
         140	LOAD_CONST(arg=1, lineno=238)
         142	BINARY_AND(arg=None, lineno=238)
         144	POP_JUMP_IF_FALSE(arg=78, lineno=238)
         146	LOAD_FAST(arg=2, lineno=239)
         148	LOAD_FAST(arg=0, lineno=239)
         150	INPLACE_MULTIPLY(arg=None, lineno=239)
         152	STORE_FAST(arg=2, lineno=239)
>        154	LOAD_FAST(arg=4, lineno=240)
         156	LOAD_CONST(arg=1, lineno=240)
         158	INPLACE_RSHIFT(arg=None, lineno=240)
         160	STORE_FAST(arg=4, lineno=240)
         162	LOAD_FAST(arg=0, lineno=241)
         164	LOAD_FAST(arg=0, lineno=241)
         166	INPLACE_MULTIPLY(arg=None, lineno=241)
         168	STORE_FAST(arg=0, lineno=241)
         170	LOAD_FAST(arg=4, lineno=237)
         172	LOAD_CONST(arg=2, lineno=237)
         174	COMPARE_OP(arg=3, lineno=237)
         176	POP_JUMP_IF_TRUE(arg=70, lineno=237)
>        178	LOAD_FAST(arg=3, lineno=243)
         180	POP_JUMP_IF_FALSE(arg=96, lineno=243)
         182	LOAD_CONST(arg=8, lineno=243)
         184	LOAD_FAST(arg=2, lineno=243)
         186	BINARY_TRUE_DIVIDE(arg=None, lineno=243)
         188	RETURN_VALUE(arg=None, lineno=243)
>        190	LOAD_FAST(arg=2, lineno=243)
         192	RETURN_VALUE(arg=None, lineno=243)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=214)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_DEREF(arg=1, lineno=216)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=216)
numba.core.byteflow - DEBUG - stack ['$2load_deref.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=216)
numba.core.byteflow - DEBUG - stack ['$2load_deref.0', '$const4.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=2, lineno=216)
numba.core.byteflow - DEBUG - stack ['$6call_function.2']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_DEREF(arg=1, lineno=217)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=217)
numba.core.byteflow - DEBUG - stack ['$10load_deref.3']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=217)
numba.core.byteflow - DEBUG - stack ['$10load_deref.3', '$a12.4']
numba.core.byteflow - DEBUG - dispatch pc=16, inst=STORE_FAST(arg=0, lineno=217)
numba.core.byteflow - DEBUG - stack ['$14call_function.5']
numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=218)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=218)
numba.core.byteflow - DEBUG - stack ['$b18.6']
numba.core.byteflow - DEBUG - dispatch pc=22, inst=COMPARE_OP(arg=0, lineno=218)
numba.core.byteflow - DEBUG - stack ['$b18.6', '$const20.7']
numba.core.byteflow - DEBUG - dispatch pc=24, inst=POP_JUMP_IF_FALSE(arg=50, lineno=218)
numba.core.byteflow - DEBUG - stack ['$22compare_op.8']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=26, stack=(), blockstack=(), npush=0), Edge(pc=98, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=26 nstack_initial=0), State(pc_initial=98 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=26 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=219)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=28, inst=STORE_FAST(arg=3, lineno=219)
numba.core.byteflow - DEBUG - stack ['$const26.0']
numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_FAST(arg=1, lineno=220)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=32, inst=UNARY_NEGATIVE(arg=None, lineno=220)
numba.core.byteflow - DEBUG - stack ['$b30.1']
numba.core.byteflow - DEBUG - dispatch pc=34, inst=STORE_FAST(arg=4, lineno=220)
numba.core.byteflow - DEBUG - stack ['$32unary_negative.2']
numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=4, lineno=221)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=221)
numba.core.byteflow - DEBUG - stack ['$exp36.3']
numba.core.byteflow - DEBUG - dispatch pc=40, inst=COMPARE_OP(arg=0, lineno=221)
numba.core.byteflow - DEBUG - stack ['$exp36.3', '$const38.4']
numba.core.byteflow - DEBUG - dispatch pc=42, inst=POP_JUMP_IF_FALSE(arg=25, lineno=221)
numba.core.byteflow - DEBUG - stack ['$40compare_op.5']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0), Edge(pc=48, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=98 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=98, inst=LOAD_CONST(arg=6, lineno=232)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=100, inst=STORE_FAST(arg=3, lineno=232)
numba.core.byteflow - DEBUG - stack ['$const98.0']
numba.core.byteflow - DEBUG - dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=233)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=104, inst=STORE_FAST(arg=4, lineno=233)
numba.core.byteflow - DEBUG - stack ['$b102.1']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=44 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=44, inst=LOAD_GLOBAL(arg=0, lineno=222)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=46, inst=RAISE_VARARGS(arg=1, lineno=222)
numba.core.byteflow - DEBUG - stack ['$44load_global.0']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=48 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_DEREF(arg=0, lineno=223)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=50, inst=POP_JUMP_IF_FALSE(arg=49, lineno=223)
numba.core.byteflow - DEBUG - stack ['$48load_deref.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0), Edge(pc=96, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=106 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=106, inst=LOAD_FAST(arg=4, lineno=234)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=7, lineno=234)
numba.core.byteflow - DEBUG - stack ['$exp106.0']
numba.core.byteflow - DEBUG - dispatch pc=110, inst=COMPARE_OP(arg=4, lineno=234)
numba.core.byteflow - DEBUG - stack ['$exp106.0', '$const108.1']
numba.core.byteflow - DEBUG - dispatch pc=112, inst=POP_JUMP_IF_FALSE(arg=66, lineno=234)
numba.core.byteflow - DEBUG - stack ['$110compare_op.2']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=130, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=224)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=224)
numba.core.byteflow - DEBUG - stack ['$a52.0']
numba.core.byteflow - DEBUG - dispatch pc=56, inst=COMPARE_OP(arg=2, lineno=224)
numba.core.byteflow - DEBUG - stack ['$a52.0', '$const54.1']
numba.core.byteflow - DEBUG - dispatch pc=58, inst=POP_JUMP_IF_FALSE(arg=39, lineno=224)
numba.core.byteflow - DEBUG - stack ['$56compare_op.2']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=60, stack=(), blockstack=(), npush=0), Edge(pc=76, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=96 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=96, inst=JUMP_FORWARD(arg=4, lineno=230)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=114 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=114, inst=LOAD_GLOBAL(arg=2, lineno=236)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=116, inst=LOAD_METHOD(arg=3, lineno=236)
numba.core.byteflow - DEBUG - stack ['$114load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=118, inst=LOAD_FAST(arg=0, lineno=236)
numba.core.byteflow - DEBUG - stack ['$116load_method.1']
numba.core.byteflow - DEBUG - dispatch pc=120, inst=LOAD_GLOBAL(arg=4, lineno=236)
numba.core.byteflow - DEBUG - stack ['$116load_method.1', '$a118.2']
numba.core.byteflow - DEBUG - dispatch pc=122, inst=LOAD_FAST(arg=1, lineno=236)
numba.core.byteflow - DEBUG - stack ['$116load_method.1', '$a118.2', '$120load_global.3']
numba.core.byteflow - DEBUG - dispatch pc=124, inst=CALL_FUNCTION(arg=1, lineno=236)
numba.core.byteflow - DEBUG - stack ['$116load_method.1', '$a118.2', '$120load_global.3', '$b122.4']
numba.core.byteflow - DEBUG - dispatch pc=126, inst=CALL_METHOD(arg=2, lineno=236)
numba.core.byteflow - DEBUG - stack ['$116load_method.1', '$a118.2', '$124call_function.5']
numba.core.byteflow - DEBUG - dispatch pc=128, inst=RETURN_VALUE(arg=None, lineno=236)
numba.core.byteflow - DEBUG - stack ['$126call_method.6']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=130 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=130, inst=LOAD_FAST(arg=4, lineno=237)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=237)
numba.core.byteflow - DEBUG - stack ['$exp130.0']
numba.core.byteflow - DEBUG - dispatch pc=134, inst=COMPARE_OP(arg=3, lineno=237)
numba.core.byteflow - DEBUG - stack ['$exp130.0', '$const132.1']
numba.core.byteflow - DEBUG - dispatch pc=136, inst=POP_JUMP_IF_FALSE(arg=90, lineno=237)
numba.core.byteflow - DEBUG - stack ['$134compare_op.2']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=138, stack=(), blockstack=(), npush=0), Edge(pc=178, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=178 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=60 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_DEREF(arg=2, lineno=225)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=62, inst=POP_JUMP_IF_FALSE(arg=35, lineno=225)
numba.core.byteflow - DEBUG - stack ['$60load_deref.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=64, stack=(), blockstack=(), npush=0), Edge(pc=68, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=76 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=76 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=229)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_CONST(arg=1, lineno=229)
numba.core.byteflow - DEBUG - stack ['$a76.0']
numba.core.byteflow - DEBUG - dispatch pc=80, inst=COMPARE_OP(arg=3, lineno=229)
numba.core.byteflow - DEBUG - stack ['$a76.0', '$const78.1']
numba.core.byteflow - DEBUG - dispatch pc=82, inst=POP_JUMP_IF_FALSE(arg=49, lineno=229)
numba.core.byteflow - DEBUG - stack ['$80compare_op.2']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=84, stack=(), blockstack=(), npush=0), Edge(pc=96, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=138 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=138 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=138, inst=LOAD_FAST(arg=4, lineno=238)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=140, inst=LOAD_CONST(arg=1, lineno=238)
numba.core.byteflow - DEBUG - stack ['$exp138.0']
numba.core.byteflow - DEBUG - dispatch pc=142, inst=BINARY_AND(arg=None, lineno=238)
numba.core.byteflow - DEBUG - stack ['$exp138.0', '$const140.1']
numba.core.byteflow - DEBUG - dispatch pc=144, inst=POP_JUMP_IF_FALSE(arg=78, lineno=238)
numba.core.byteflow - DEBUG - stack ['$142binary_and.2']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=146, stack=(), blockstack=(), npush=0), Edge(pc=154, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=178 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=178 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=178, inst=LOAD_FAST(arg=3, lineno=243)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=180, inst=POP_JUMP_IF_FALSE(arg=96, lineno=243)
numba.core.byteflow - DEBUG - stack ['$invert178.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=182, stack=(), blockstack=(), npush=0), Edge(pc=190, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=64 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=64, inst=LOAD_DEREF(arg=2, lineno=226)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=66, inst=RETURN_VALUE(arg=None, lineno=226)
numba.core.byteflow - DEBUG - stack ['$64load_deref.0']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=68 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=68, inst=LOAD_GLOBAL(arg=1, lineno=228)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=228)
numba.core.byteflow - DEBUG - stack ['$68load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=72, inst=CALL_FUNCTION(arg=1, lineno=228)
numba.core.byteflow - DEBUG - stack ['$68load_global.0', '$const70.1']
numba.core.byteflow - DEBUG - dispatch pc=74, inst=RAISE_VARARGS(arg=1, lineno=228)
numba.core.byteflow - DEBUG - stack ['$72call_function.2']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=84 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_FAST(arg=0, lineno=229)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=86, inst=LOAD_CONST(arg=5, lineno=229)
numba.core.byteflow - DEBUG - stack ['$a84.0']
numba.core.byteflow - DEBUG - dispatch pc=88, inst=COMPARE_OP(arg=3, lineno=229)
numba.core.byteflow - DEBUG - stack ['$a84.0', '$const86.1']
numba.core.byteflow - DEBUG - dispatch pc=90, inst=POP_JUMP_IF_FALSE(arg=49, lineno=229)
numba.core.byteflow - DEBUG - stack ['$88compare_op.2']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=92, stack=(), blockstack=(), npush=0), Edge(pc=96, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=146 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=146, inst=LOAD_FAST(arg=2, lineno=239)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=148, inst=LOAD_FAST(arg=0, lineno=239)
numba.core.byteflow - DEBUG - stack ['$r146.0']
numba.core.byteflow - DEBUG - dispatch pc=150, inst=INPLACE_MULTIPLY(arg=None, lineno=239)
numba.core.byteflow - DEBUG - stack ['$r146.0', '$a148.1']
numba.core.byteflow - DEBUG - dispatch pc=152, inst=STORE_FAST(arg=2, lineno=239)
numba.core.byteflow - DEBUG - stack ['$150inplace_multiply.2']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=154, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=154 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=154, inst=LOAD_FAST(arg=4, lineno=240)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=240)
numba.core.byteflow - DEBUG - stack ['$exp154.0']
numba.core.byteflow - DEBUG - dispatch pc=158, inst=INPLACE_RSHIFT(arg=None, lineno=240)
numba.core.byteflow - DEBUG - stack ['$exp154.0', '$const156.1']
numba.core.byteflow - DEBUG - dispatch pc=160, inst=STORE_FAST(arg=4, lineno=240)
numba.core.byteflow - DEBUG - stack ['$158inplace_rshift.2']
numba.core.byteflow - DEBUG - dispatch pc=162, inst=LOAD_FAST(arg=0, lineno=241)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=164, inst=LOAD_FAST(arg=0, lineno=241)
numba.core.byteflow - DEBUG - stack ['$a162.3']
numba.core.byteflow - DEBUG - dispatch pc=166, inst=INPLACE_MULTIPLY(arg=None, lineno=241)
numba.core.byteflow - DEBUG - stack ['$a162.3', '$a164.4']
numba.core.byteflow - DEBUG - dispatch pc=168, inst=STORE_FAST(arg=0, lineno=241)
numba.core.byteflow - DEBUG - stack ['$166inplace_multiply.5']
numba.core.byteflow - DEBUG - dispatch pc=170, inst=LOAD_FAST(arg=4, lineno=237)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=172, inst=LOAD_CONST(arg=2, lineno=237)
numba.core.byteflow - DEBUG - stack ['$exp170.6']
numba.core.byteflow - DEBUG - dispatch pc=174, inst=COMPARE_OP(arg=3, lineno=237)
numba.core.byteflow - DEBUG - stack ['$exp170.6', '$const172.7']
numba.core.byteflow - DEBUG - dispatch pc=176, inst=POP_JUMP_IF_TRUE(arg=70, lineno=237)
numba.core.byteflow - DEBUG - stack ['$174compare_op.8']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=178, stack=(), blockstack=(), npush=0), Edge(pc=138, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=182 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=182, inst=LOAD_CONST(arg=8, lineno=243)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=184, inst=LOAD_FAST(arg=2, lineno=243)
numba.core.byteflow - DEBUG - stack ['$const182.0']
numba.core.byteflow - DEBUG - dispatch pc=186, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=243)
numba.core.byteflow - DEBUG - stack ['$const182.0', '$r184.1']
numba.core.byteflow - DEBUG - dispatch pc=188, inst=RETURN_VALUE(arg=None, lineno=243)
numba.core.byteflow - DEBUG - stack ['$186binary_true_divide.2']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=190 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=190 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=190, inst=LOAD_FAST(arg=2, lineno=243)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=192, inst=RETURN_VALUE(arg=None, lineno=243)
numba.core.byteflow - DEBUG - stack ['$r190.0']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=92 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=92, inst=LOAD_CONST(arg=2, lineno=230)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=94, inst=RETURN_VALUE(arg=None, lineno=230)
numba.core.byteflow - DEBUG - stack ['$const92.0']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=138 nstack_initial=0)])
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=0): set(),
             State(pc_initial=64 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=76 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=0): set(),
             State(pc_initial=96 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=130 nstack_initial=0): set(),
             State(pc_initial=138 nstack_initial=0): set(),
             State(pc_initial=146 nstack_initial=0): set(),
             State(pc_initial=154 nstack_initial=0): set(),
             State(pc_initial=178 nstack_initial=0): set(),
             State(pc_initial=182 nstack_initial=0): set(),
             State(pc_initial=190 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - keep phismap: {}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'res': '$const4.1'}), (6, {'func': '$2load_deref.0', 'args': ['$const4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_deref.3'}), (12, {'res': '$a12.4'}), (14, {'func': '$10load_deref.3', 'args': ['$a12.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5'}), (18, {'res': '$b18.6'}), (20, {'res': '$const20.7'}), (22, {'lhs': '$b18.6', 'rhs': '$const20.7', 'res': '$22compare_op.8'}), (24, {'pred': '$22compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: (), 98: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$const26.0'}), (28, {'value': '$const26.0'}), (30, {'res': '$b30.1'}), (32, {'value': '$b30.1', 'res': '$32unary_negative.2'}), (34, {'value': '$32unary_negative.2'}), (36, {'res': '$exp36.3'}), (38, {'res': '$const38.4'}), (40, {'lhs': '$exp36.3', 'rhs': '$const38.4', 'res': '$40compare_op.5'}), (42, {'pred': '$40compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: (), 48: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$44load_global.0'}), (46, {'exc': '$44load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$48load_deref.0'}), (50, {'pred': '$48load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: (), 96: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$a52.0'}), (54, {'res': '$const54.1'}), (56, {'lhs': '$a52.0', 'rhs': '$const54.1', 'res': '$56compare_op.2'}), (58, {'pred': '$56compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: (), 76: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$60load_deref.0'}), (62, {'pred': '$60load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: (), 68: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=64 nstack_initial=0):
AdaptBlockInfo(insts=((64, {'res': '$64load_deref.0'}), (66, {'retval': '$64load_deref.0', 'castval': '$66return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {'res': '$68load_global.0'}), (70, {'res': '$const70.1'}), (72, {'func': '$68load_global.0', 'args': ['$const70.1'], 'res': '$72call_function.2'}), (74, {'exc': '$72call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=76 nstack_initial=0):
AdaptBlockInfo(insts=((76, {'res': '$a76.0'}), (78, {'res': '$const78.1'}), (80, {'lhs': '$a76.0', 'rhs': '$const78.1', 'res': '$80compare_op.2'}), (82, {'pred': '$80compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: (), 96: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'res': '$a84.0'}), (86, {'res': '$const86.1'}), (88, {'lhs': '$a84.0', 'rhs': '$const86.1', 'res': '$88compare_op.2'}), (90, {'pred': '$88compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: (), 96: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=92 nstack_initial=0):
AdaptBlockInfo(insts=((92, {'res': '$const92.0'}), (94, {'retval': '$const92.0', 'castval': '$94return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=96 nstack_initial=0):
AdaptBlockInfo(insts=((96, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$const98.0'}), (100, {'value': '$const98.0'}), (102, {'res': '$b102.1'}), (104, {'value': '$b102.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$exp106.0'}), (108, {'res': '$const108.1'}), (110, {'lhs': '$exp106.0', 'rhs': '$const108.1', 'res': '$110compare_op.2'}), (112, {'pred': '$110compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 130: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$114load_global.0'}), (116, {'item': '$114load_global.0', 'res': '$116load_method.1'}), (118, {'res': '$a118.2'}), (120, {'res': '$120load_global.3'}), (122, {'res': '$b122.4'}), (124, {'func': '$120load_global.3', 'args': ['$b122.4'], 'res': '$124call_function.5'}), (126, {'func': '$116load_method.1', 'args': ['$a118.2', '$124call_function.5'], 'res': '$126call_method.6'}), (128, {'retval': '$126call_method.6', 'castval': '$128return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=130 nstack_initial=0):
AdaptBlockInfo(insts=((130, {'res': '$exp130.0'}), (132, {'res': '$const132.1'}), (134, {'lhs': '$exp130.0', 'rhs': '$const132.1', 'res': '$134compare_op.2'}), (136, {'pred': '$134compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={138: (), 178: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=138 nstack_initial=0):
AdaptBlockInfo(insts=((138, {'res': '$exp138.0'}), (140, {'res': '$const140.1'}), (142, {'lhs': '$exp138.0', 'rhs': '$const140.1', 'res': '$142binary_and.2'}), (144, {'pred': '$142binary_and.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={146: (), 154: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=146 nstack_initial=0):
AdaptBlockInfo(insts=((146, {'res': '$r146.0'}), (148, {'res': '$a148.1'}), (150, {'lhs': '$r146.0', 'rhs': '$a148.1', 'res': '$150inplace_multiply.2'}), (152, {'value': '$150inplace_multiply.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={154: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=154 nstack_initial=0):
AdaptBlockInfo(insts=((154, {'res': '$exp154.0'}), (156, {'res': '$const156.1'}), (158, {'lhs': '$exp154.0', 'rhs': '$const156.1', 'res': '$158inplace_rshift.2'}), (160, {'value': '$158inplace_rshift.2'}), (162, {'res': '$a162.3'}), (164, {'res': '$a164.4'}), (166, {'lhs': '$a162.3', 'rhs': '$a164.4', 'res': '$166inplace_multiply.5'}), (168, {'value': '$166inplace_multiply.5'}), (170, {'res': '$exp170.6'}), (172, {'res': '$const172.7'}), (174, {'lhs': '$exp170.6', 'rhs': '$const172.7', 'res': '$174compare_op.8'}), (176, {'pred': '$174compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={178: (), 138: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=178 nstack_initial=0):
AdaptBlockInfo(insts=((178, {'res': '$invert178.0'}), (180, {'pred': '$invert178.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={182: (), 190: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=182 nstack_initial=0):
AdaptBlockInfo(insts=((182, {'res': '$const182.0'}), (184, {'res': '$r184.1'}), (186, {'lhs': '$const182.0', 'rhs': '$r184.1', 'res': '$186binary_true_divide.2'}), (188, {'retval': '$186binary_true_divide.2', 'castval': '$188return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=190 nstack_initial=0):
AdaptBlockInfo(insts=((190, {'res': '$r190.0'}), (192, {'retval': '$r190.0', 'castval': '$192return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $2load_deref.0 = freevar(tp: float32)    ['$2load_deref.0']
    $const4.1 = const(int, 1)                ['$const4.1']
    r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_deref.0', '$const4.1', 'r']
    $10load_deref.3 = freevar(tp: float32)   ['$10load_deref.3']
    a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_deref.3', 'a', 'a.1']
    $const20.7 = const(int, 0)               ['$const20.7']
    $22compare_op.8 = b < $const20.7         ['$22compare_op.8', '$const20.7', 'b']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None) ['$22compare_op.8', '$24pred', 'bool24']
    branch $24pred, 26, 98                   ['$24pred']
label 26:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const38.4 = const(int, 0)               ['$const38.4']
    $40compare_op.5 = exp < $const38.4       ['$40compare_op.5', '$const38.4', 'exp']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.5', '$42pred', 'bool42']
    branch $42pred, 44, 48                   ['$42pred']
label 44:
    $44load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$44load_global.0']
    raise $44load_global.0                   ['$44load_global.0']
label 48:
    $48load_deref.0 = freevar(is_integer: False) ['$48load_deref.0']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None) ['$48load_deref.0', '$50pred', 'bool50']
    branch $50pred, 52, 96                   ['$50pred']
label 52:
    $const54.1 = const(int, 0)               ['$const54.1']
    $56compare_op.2 = a.1 == $const54.1      ['$56compare_op.2', '$const54.1', 'a.1']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
    $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None) ['$56compare_op.2', '$58pred', 'bool58']
    branch $58pred, 60, 76                   ['$58pred']
label 60:
    $60load_deref.0 = freevar(zerodiv_return: False) ['$60load_deref.0']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None) ['$60load_deref.0', '$62pred', 'bool62']
    branch $62pred, 64, 68                   ['$62pred']
label 64:
    $64load_deref.0 = freevar(zerodiv_return: False) ['$64load_deref.0']
    $66return_value.1 = cast(value=$64load_deref.0) ['$64load_deref.0', '$66return_value.1']
    return $66return_value.1                 ['$66return_value.1']
label 68:
    $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68load_global.0']
    $const70.1 = const(str, 0 cannot be raised to a negative power) ['$const70.1']
    $72call_function.2 = call $68load_global.0($const70.1, func=$68load_global.0, args=[Var($const70.1, numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72call_function.2', '$const70.1']
    raise $72call_function.2                 ['$72call_function.2']
label 76:
    $const78.1 = const(int, 1)               ['$const78.1']
    $80compare_op.2 = a.1 != $const78.1      ['$80compare_op.2', '$const78.1', 'a.1']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$80compare_op.2', '$82pred', 'bool82']
    branch $82pred, 84, 96                   ['$82pred']
label 84:
    $const86.1 = const(int, -1)              ['$const86.1']
    $88compare_op.2 = a.1 != $const86.1      ['$88compare_op.2', '$const86.1', 'a.1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$88compare_op.2', '$90pred', 'bool90']
    branch $90pred, 92, 96                   ['$90pred']
label 92:
    $const92.0 = const(int, 0)               ['$const92.0']
    $94return_value.1 = cast(value=$const92.0) ['$94return_value.1', '$const92.0']
    return $94return_value.1                 ['$94return_value.1']
label 96:
    jump 106                                 []
label 98:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 106                                 []
label 106:
    $const108.1 = const(int, 65536)          ['$const108.1']
    $110compare_op.2 = exp > $const108.1     ['$110compare_op.2', '$const108.1', 'exp']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None) ['$110compare_op.2', '$112pred', 'bool112']
    branch $112pred, 114, 130                ['$112pred']
label 114:
    $114load_global.0 = global(math: <module 'math' (built-in)>) ['$114load_global.0']
    $116load_method.1 = getattr(value=$114load_global.0, attr=pow) ['$114load_global.0', '$116load_method.1']
    $120load_global.3 = global(float: <class 'float'>) ['$120load_global.3']
    $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.3', '$124call_function.5', 'b']
    $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_method.1', '$124call_function.5', '$126call_method.6', 'a.1']
    $128return_value.7 = cast(value=$126call_method.6) ['$126call_method.6', '$128return_value.7']
    return $128return_value.7                ['$128return_value.7']
label 130:
    $const132.1 = const(int, 0)              ['$const132.1']
    $134compare_op.2 = exp != $const132.1    ['$134compare_op.2', '$const132.1', 'exp']
    bool136 = global(bool: <class 'bool'>)   ['bool136']
    $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$134compare_op.2', '$136pred', 'bool136']
    branch $136pred, 138, 178                ['$136pred']
label 138:
    $const140.1 = const(int, 1)              ['$const140.1']
    $142binary_and.2 = exp & $const140.1     ['$142binary_and.2', '$const140.1', 'exp']
    bool144 = global(bool: <class 'bool'>)   ['bool144']
    $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None) ['$142binary_and.2', '$144pred', 'bool144']
    branch $144pred, 146, 154                ['$144pred']
label 146:
    $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$150inplace_multiply.2', 'a.1', 'r']
    r = $150inplace_multiply.2               ['$150inplace_multiply.2', 'r']
    jump 154                                 []
label 154:
    $const156.1 = const(int, 1)              ['$const156.1']
    $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined) ['$158inplace_rshift.2', '$const156.1', 'exp']
    exp = $158inplace_rshift.2               ['$158inplace_rshift.2', 'exp']
    $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$166inplace_multiply.5', 'a.1', 'a.1']
    a.1 = $166inplace_multiply.5             ['$166inplace_multiply.5', 'a.1']
    $const172.7 = const(int, 0)              ['$const172.7']
    $174compare_op.8 = exp != $const172.7    ['$174compare_op.8', '$const172.7', 'exp']
    bool176 = global(bool: <class 'bool'>)   ['bool176']
    $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$174compare_op.8', '$176pred', 'bool176']
    branch $176pred, 138, 178                ['$176pred']
label 178:
    bool180 = global(bool: <class 'bool'>)   ['bool180']
    $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None) ['$180pred', 'bool180', 'invert']
    branch $180pred, 182, 190                ['$180pred']
label 182:
    $const182.0 = const(float, 1.0)          ['$const182.0']
    $186binary_true_divide.2 = $const182.0 / r ['$186binary_true_divide.2', '$const182.0', 'r']
    $188return_value.3 = cast(value=$186binary_true_divide.2) ['$186binary_true_divide.2', '$188return_value.3']
    return $188return_value.3                ['$188return_value.3']
label 190:
    $192return_value.1 = cast(value=r)       ['$192return_value.1', 'r']
    return $192return_value.1                ['$192return_value.1']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752ca99f0>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
numba.core.ssa - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float32)
numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float32)
numba.core.ssa - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $const20.7 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
numba.core.ssa - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $24pred, 26, 98
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 26
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752ca99f0>
numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
numba.core.ssa - DEBUG - on stmt: $const38.4 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
numba.core.ssa - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $42pred, 44, 48
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 44
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752ca99f0>
numba.core.ssa - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 48
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752ca99f0>
numba.core.ssa - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: jump 96
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 96
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752ca99f0>
numba.core.ssa - DEBUG - on stmt: jump 106
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 98
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752ca99f0>
numba.core.ssa - DEBUG - on stmt: invert = const(bool, False)
numba.core.ssa - DEBUG - on stmt: exp = b
numba.core.ssa - DEBUG - on stmt: jump 106
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 106
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752ca99f0>
numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 65536)
numba.core.ssa - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
numba.core.ssa - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $112pred, 114, 130
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 114
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752ca99f0>
numba.core.ssa - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
numba.core.ssa - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
numba.core.ssa - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
numba.core.ssa - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
numba.core.ssa - DEBUG - on stmt: return $128return_value.7
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 130
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752ca99f0>
numba.core.ssa - DEBUG - on stmt: $const132.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
numba.core.ssa - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $136pred, 138, 178
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 138
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752ca99f0>
numba.core.ssa - DEBUG - on stmt: $const140.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
numba.core.ssa - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $144pred, 146, 154
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 146
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752ca99f0>
numba.core.ssa - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: r = $150inplace_multiply.2
numba.core.ssa - DEBUG - on stmt: jump 154
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 154
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752ca99f0>
numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: exp = $158inplace_rshift.2
numba.core.ssa - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: a.1 = $166inplace_multiply.5
numba.core.ssa - DEBUG - on stmt: $const172.7 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $174compare_op.8 = exp != $const172.7
numba.core.ssa - DEBUG - on stmt: bool176 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $176pred, 138, 178
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 178
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752ca99f0>
numba.core.ssa - DEBUG - on stmt: bool180 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $180pred, 182, 190
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 182
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752ca99f0>
numba.core.ssa - DEBUG - on stmt: $const182.0 = const(float, 1.0)
numba.core.ssa - DEBUG - on stmt: $186binary_true_divide.2 = $const182.0 / r
numba.core.ssa - DEBUG - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
numba.core.ssa - DEBUG - on stmt: return $188return_value.3
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 190
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708752ca99f0>
numba.core.ssa - DEBUG - on stmt: $192return_value.1 = cast(value=r)
numba.core.ssa - DEBUG - on stmt: return $192return_value.1
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10load_deref.3': [(<numba.core.ir.Assign object at 0x708752caa830>,
                                  0)],
             '$110compare_op.2': [(<numba.core.ir.Assign object at 0x708752e22140>,
                                   106)],
             '$112pred': [(<numba.core.ir.Assign object at 0x708752e220e0>,
                           106)],
             '$114load_global.0': [(<numba.core.ir.Assign object at 0x708752e44040>,
                                    114)],
             '$116load_method.1': [(<numba.core.ir.Assign object at 0x708752e441c0>,
                                    114)],
             '$120load_global.3': [(<numba.core.ir.Assign object at 0x708752e44460>,
                                    114)],
             '$124call_function.5': [(<numba.core.ir.Assign object at 0x708752e44760>,
                                      114)],
             '$126call_method.6': [(<numba.core.ir.Assign object at 0x708752e44910>,
                                    114)],
             '$128return_value.7': [(<numba.core.ir.Assign object at 0x708752e44a00>,
                                     114)],
             '$134compare_op.2': [(<numba.core.ir.Assign object at 0x708752e44eb0>,
                                   130)],
             '$136pred': [(<numba.core.ir.Assign object at 0x708752e45120>,
                           130)],
             '$142binary_and.2': [(<numba.core.ir.Assign object at 0x708752e45630>,
                                   138)],
             '$144pred': [(<numba.core.ir.Assign object at 0x708752e458a0>,
                           138)],
             '$150inplace_multiply.2': [(<numba.core.ir.Assign object at 0x708752e45d50>,
                                         146)],
             '$158inplace_rshift.2': [(<numba.core.ir.Assign object at 0x708752e46290>,
                                       154)],
             '$166inplace_multiply.5': [(<numba.core.ir.Assign object at 0x708752e46710>,
                                         154)],
             '$174compare_op.8': [(<numba.core.ir.Assign object at 0x708752e46bf0>,
                                   154)],
             '$176pred': [(<numba.core.ir.Assign object at 0x708752e46e60>,
                           154)],
             '$180pred': [(<numba.core.ir.Assign object at 0x708752e471c0>,
                           178)],
             '$186binary_true_divide.2': [(<numba.core.ir.Assign object at 0x708752e476d0>,
                                           182)],
             '$188return_value.3': [(<numba.core.ir.Assign object at 0x708752e47820>,
                                     182)],
             '$192return_value.1': [(<numba.core.ir.Assign object at 0x708752e47b80>,
                                     190)],
             '$22compare_op.8': [(<numba.core.ir.Assign object at 0x708752cab010>,
                                  0)],
             '$24pred': [(<numba.core.ir.Assign object at 0x708752cab280>, 0)],
             '$2load_deref.0': [(<numba.core.ir.Assign object at 0x708752caa410>,
                                 0)],
             '$40compare_op.5': [(<numba.core.ir.Assign object at 0x708752cabcd0>,
                                  26)],
             '$42pred': [(<numba.core.ir.Assign object at 0x708752cabf40>, 26)],
             '$44load_global.0': [(<numba.core.ir.Assign object at 0x708752e23400>,
                                   44)],
             '$48load_deref.0': [(<numba.core.ir.Assign object at 0x708752e236a0>,
                                  48)],
             '$50pred': [(<numba.core.ir.Assign object at 0x708752e237f0>, 48)],
             '$const108.1': [(<numba.core.ir.Assign object at 0x708752e21ea0>,
                              106)],
             '$const132.1': [(<numba.core.ir.Assign object at 0x708752e44d00>,
                              130)],
             '$const140.1': [(<numba.core.ir.Assign object at 0x708752e45480>,
                              138)],
             '$const156.1': [(<numba.core.ir.Assign object at 0x708752e460e0>,
                              154)],
             '$const172.7': [(<numba.core.ir.Assign object at 0x708752e46a40>,
                              154)],
             '$const182.0': [(<numba.core.ir.Assign object at 0x708752e47400>,
                              182)],
             '$const20.7': [(<numba.core.ir.Assign object at 0x708752caae60>,
                             0)],
             '$const38.4': [(<numba.core.ir.Assign object at 0x708752cabb20>,
                             26)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x708752ca8850>,
                            0)],
             'a': [(<numba.core.ir.Assign object at 0x708752caa170>, 0)],
             'a.1': [(<numba.core.ir.Assign object at 0x708752caab00>, 0),
                     (<numba.core.ir.Assign object at 0x708752e467d0>, 154)],
             'b': [(<numba.core.ir.Assign object at 0x708752caa4d0>, 0)],
             'bool112': [(<numba.core.ir.Assign object at 0x708752e22a40>,
                          106)],
             'bool136': [(<numba.core.ir.Assign object at 0x708752e45000>,
                          130)],
             'bool144': [(<numba.core.ir.Assign object at 0x708752e45780>,
                          138)],
             'bool176': [(<numba.core.ir.Assign object at 0x708752e46d40>,
                          154)],
             'bool180': [(<numba.core.ir.Assign object at 0x708752e470a0>,
                          178)],
             'bool24': [(<numba.core.ir.Assign object at 0x708752cab160>, 0)],
             'bool42': [(<numba.core.ir.Assign object at 0x708752cabe20>, 26)],
             'bool50': [(<numba.core.ir.Assign object at 0x708752e223e0>, 48)],
             'exp': [(<numba.core.ir.Assign object at 0x708752cab760>, 26),
                     (<numba.core.ir.Assign object at 0x708752e20cd0>, 98),
                     (<numba.core.ir.Assign object at 0x708752e46350>, 154)],
             'invert': [(<numba.core.ir.Assign object at 0x708752cab3a0>, 26),
                        (<numba.core.ir.Assign object at 0x708752e21a50>, 98)],
             'r': [(<numba.core.ir.Assign object at 0x708752ca9c90>, 0),
                   (<numba.core.ir.Assign object at 0x708752e45e10>, 146)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x708752ca99f0>
numba.core.ssa - DEBUG - Fix SSA violator on var r
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752caa290>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
numba.core.ssa - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float32)
numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - first assign: r
numba.core.ssa - DEBUG - replaced with: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float32)
numba.core.ssa - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $const20.7 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
numba.core.ssa - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $24pred, 26, 98
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 26
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752caa290>
numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
numba.core.ssa - DEBUG - on stmt: $const38.4 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
numba.core.ssa - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $42pred, 44, 48
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 44
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752caa290>
numba.core.ssa - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752caa290>
numba.core.ssa - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: jump 96
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 96
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752caa290>
numba.core.ssa - DEBUG - on stmt: jump 106
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752caa290>
numba.core.ssa - DEBUG - on stmt: invert = const(bool, False)
numba.core.ssa - DEBUG - on stmt: exp = b
numba.core.ssa - DEBUG - on stmt: jump 106
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 106
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752caa290>
numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 65536)
numba.core.ssa - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
numba.core.ssa - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $112pred, 114, 130
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 114
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752caa290>
numba.core.ssa - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
numba.core.ssa - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
numba.core.ssa - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
numba.core.ssa - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
numba.core.ssa - DEBUG - on stmt: return $128return_value.7
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 130
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752caa290>
numba.core.ssa - DEBUG - on stmt: $const132.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
numba.core.ssa - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $136pred, 138, 178
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 138
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752caa290>
numba.core.ssa - DEBUG - on stmt: $const140.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
numba.core.ssa - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $144pred, 146, 154
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752caa290>
numba.core.ssa - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: r = $150inplace_multiply.2
numba.core.ssa - DEBUG - replaced with: r.1 = $150inplace_multiply.2
numba.core.ssa - DEBUG - on stmt: jump 154
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 154
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752caa290>
numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: exp = $158inplace_rshift.2
numba.core.ssa - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: a.1 = $166inplace_multiply.5
numba.core.ssa - DEBUG - on stmt: $const172.7 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $174compare_op.8 = exp != $const172.7
numba.core.ssa - DEBUG - on stmt: bool176 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $176pred, 138, 178
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752caa290>
numba.core.ssa - DEBUG - on stmt: bool180 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $180pred, 182, 190
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 182
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752caa290>
numba.core.ssa - DEBUG - on stmt: $const182.0 = const(float, 1.0)
numba.core.ssa - DEBUG - on stmt: $186binary_true_divide.2 = $const182.0 / r
numba.core.ssa - DEBUG - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
numba.core.ssa - DEBUG - on stmt: return $188return_value.3
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 190
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752caa290>
numba.core.ssa - DEBUG - on stmt: $192return_value.1 = cast(value=r)
numba.core.ssa - DEBUG - on stmt: return $192return_value.1
numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x708752ca9840>],
             146: [<numba.core.ir.Assign object at 0x708752caa110>]})
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752caa290>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
numba.core.ssa - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float32)
numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float32)
numba.core.ssa - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $const20.7 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
numba.core.ssa - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $24pred, 26, 98
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 26
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752caa290>
numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
numba.core.ssa - DEBUG - on stmt: $const38.4 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
numba.core.ssa - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $42pred, 44, 48
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 44
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752caa290>
numba.core.ssa - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752caa290>
numba.core.ssa - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: jump 96
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 96
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752caa290>
numba.core.ssa - DEBUG - on stmt: jump 106
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752caa290>
numba.core.ssa - DEBUG - on stmt: invert = const(bool, False)
numba.core.ssa - DEBUG - on stmt: exp = b
numba.core.ssa - DEBUG - on stmt: jump 106
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 106
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752caa290>
numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 65536)
numba.core.ssa - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
numba.core.ssa - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $112pred, 114, 130
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 114
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752caa290>
numba.core.ssa - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
numba.core.ssa - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
numba.core.ssa - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
numba.core.ssa - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
numba.core.ssa - DEBUG - on stmt: return $128return_value.7
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 130
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752caa290>
numba.core.ssa - DEBUG - on stmt: $const132.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
numba.core.ssa - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $136pred, 138, 178
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 138
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752caa290>
numba.core.ssa - DEBUG - on stmt: $const140.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
numba.core.ssa - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $144pred, 146, 154
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752caa290>
numba.core.ssa - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def var='r' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def_from_top label 146
numba.core.ssa - DEBUG - idom 138 from label 146
numba.core.ssa - DEBUG - find_def_from_bottom label 138
numba.core.ssa - DEBUG - find_def_from_top label 138
numba.core.ssa - DEBUG - insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 138
numba.core.ssa - DEBUG - find_def_from_bottom label 130
numba.core.ssa - DEBUG - find_def_from_top label 130
numba.core.ssa - DEBUG - idom 106 from label 130
numba.core.ssa - DEBUG - find_def_from_bottom label 106
numba.core.ssa - DEBUG - find_def_from_top label 106
numba.core.ssa - DEBUG - idom 0 from label 106
numba.core.ssa - DEBUG - find_def_from_bottom label 0
numba.core.ssa - DEBUG - incoming_def r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - find_def_from_bottom label 154
numba.core.ssa - DEBUG - find_def_from_top label 154
numba.core.ssa - DEBUG - insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 154
numba.core.ssa - DEBUG - find_def_from_bottom label 138
numba.core.ssa - DEBUG - incoming_def r.2 = phi(incoming_values=[Var(r, numbers.py:216)], incoming_blocks=[130])
numba.core.ssa - DEBUG - find_def_from_bottom label 146
numba.core.ssa - DEBUG - incoming_def r.1 = $150inplace_multiply.2
numba.core.ssa - DEBUG - incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
numba.core.ssa - DEBUG - replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: r.1 = $150inplace_multiply.2
numba.core.ssa - DEBUG - on stmt: jump 154
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 154
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752caa290>
numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: exp = $158inplace_rshift.2
numba.core.ssa - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: a.1 = $166inplace_multiply.5
numba.core.ssa - DEBUG - on stmt: $const172.7 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $174compare_op.8 = exp != $const172.7
numba.core.ssa - DEBUG - on stmt: bool176 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $176pred, 138, 178
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752caa290>
numba.core.ssa - DEBUG - on stmt: bool180 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $180pred, 182, 190
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 182
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752caa290>
numba.core.ssa - DEBUG - on stmt: $const182.0 = const(float, 1.0)
numba.core.ssa - DEBUG - on stmt: $186binary_true_divide.2 = $const182.0 / r
numba.core.ssa - DEBUG - find_def var='r' stmt=$186binary_true_divide.2 = $const182.0 / r
numba.core.ssa - DEBUG - find_def_from_top label 182
numba.core.ssa - DEBUG - idom 178 from label 182
numba.core.ssa - DEBUG - find_def_from_bottom label 178
numba.core.ssa - DEBUG - find_def_from_top label 178
numba.core.ssa - DEBUG - insert phi node r.4 = phi(incoming_values=[], incoming_blocks=[]) at 178
numba.core.ssa - DEBUG - find_def_from_bottom label 130
numba.core.ssa - DEBUG - find_def_from_top label 130
numba.core.ssa - DEBUG - idom 106 from label 130
numba.core.ssa - DEBUG - find_def_from_bottom label 106
numba.core.ssa - DEBUG - find_def_from_top label 106
numba.core.ssa - DEBUG - idom 0 from label 106
numba.core.ssa - DEBUG - find_def_from_bottom label 0
numba.core.ssa - DEBUG - incoming_def r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - find_def_from_bottom label 154
numba.core.ssa - DEBUG - incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
numba.core.ssa - DEBUG - replaced with: $186binary_true_divide.2 = $const182.0 / r.4
numba.core.ssa - DEBUG - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
numba.core.ssa - DEBUG - on stmt: return $188return_value.3
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 190
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752caa290>
numba.core.ssa - DEBUG - on stmt: $192return_value.1 = cast(value=r)
numba.core.ssa - DEBUG - find_def var='r' stmt=$192return_value.1 = cast(value=r)
numba.core.ssa - DEBUG - find_def_from_top label 190
numba.core.ssa - DEBUG - idom 178 from label 190
numba.core.ssa - DEBUG - find_def_from_bottom label 178
numba.core.ssa - DEBUG - replaced with: $192return_value.1 = cast(value=r.4)
numba.core.ssa - DEBUG - on stmt: return $192return_value.1
numba.core.ssa - DEBUG - Fix SSA violator on var a.1
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752caa230>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
numba.core.ssa - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float32)
numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float32)
numba.core.ssa - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - first assign: a.1
numba.core.ssa - DEBUG - replaced with: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $const20.7 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
numba.core.ssa - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $24pred, 26, 98
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 26
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752caa230>
numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
numba.core.ssa - DEBUG - on stmt: $const38.4 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
numba.core.ssa - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $42pred, 44, 48
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 44
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752caa230>
numba.core.ssa - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752caa230>
numba.core.ssa - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: jump 96
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 96
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752caa230>
numba.core.ssa - DEBUG - on stmt: jump 106
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752caa230>
numba.core.ssa - DEBUG - on stmt: invert = const(bool, False)
numba.core.ssa - DEBUG - on stmt: exp = b
numba.core.ssa - DEBUG - on stmt: jump 106
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 106
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752caa230>
numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 65536)
numba.core.ssa - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
numba.core.ssa - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $112pred, 114, 130
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 114
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752caa230>
numba.core.ssa - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
numba.core.ssa - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
numba.core.ssa - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
numba.core.ssa - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
numba.core.ssa - DEBUG - on stmt: return $128return_value.7
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 130
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752caa230>
numba.core.ssa - DEBUG - on stmt: $const132.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
numba.core.ssa - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $136pred, 138, 178
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 138
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752caa230>
numba.core.ssa - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
numba.core.ssa - DEBUG - on stmt: $const140.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
numba.core.ssa - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $144pred, 146, 154
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752caa230>
numba.core.ssa - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: r.1 = $150inplace_multiply.2
numba.core.ssa - DEBUG - on stmt: jump 154
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 154
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752caa230>
numba.core.ssa - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: exp = $158inplace_rshift.2
numba.core.ssa - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: a.1 = $166inplace_multiply.5
numba.core.ssa - DEBUG - replaced with: a.1.1 = $166inplace_multiply.5
numba.core.ssa - DEBUG - on stmt: $const172.7 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $174compare_op.8 = exp != $const172.7
numba.core.ssa - DEBUG - on stmt: bool176 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $176pred, 138, 178
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752caa230>
numba.core.ssa - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
numba.core.ssa - DEBUG - on stmt: bool180 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $180pred, 182, 190
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 182
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752caa230>
numba.core.ssa - DEBUG - on stmt: $const182.0 = const(float, 1.0)
numba.core.ssa - DEBUG - on stmt: $186binary_true_divide.2 = $const182.0 / r.4
numba.core.ssa - DEBUG - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
numba.core.ssa - DEBUG - on stmt: return $188return_value.3
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 190
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752caa230>
numba.core.ssa - DEBUG - on stmt: $192return_value.1 = cast(value=r.4)
numba.core.ssa - DEBUG - on stmt: return $192return_value.1
numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x708752ca9d50>],
             154: [<numba.core.ir.Assign object at 0x708752e47e50>]})
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752cff400>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
numba.core.ssa - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float32)
numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float32)
numba.core.ssa - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $const20.7 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
numba.core.ssa - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $24pred, 26, 98
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 26
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752cff400>
numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
numba.core.ssa - DEBUG - on stmt: $const38.4 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
numba.core.ssa - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $42pred, 44, 48
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 44
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752cff400>
numba.core.ssa - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752cff400>
numba.core.ssa - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: jump 96
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 96
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752cff400>
numba.core.ssa - DEBUG - on stmt: jump 106
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752cff400>
numba.core.ssa - DEBUG - on stmt: invert = const(bool, False)
numba.core.ssa - DEBUG - on stmt: exp = b
numba.core.ssa - DEBUG - on stmt: jump 106
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 106
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752cff400>
numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 65536)
numba.core.ssa - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
numba.core.ssa - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $112pred, 114, 130
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 114
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752cff400>
numba.core.ssa - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
numba.core.ssa - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
numba.core.ssa - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
numba.core.ssa - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - find_def var='a.1' stmt=$126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - find_def_from_top label 114
numba.core.ssa - DEBUG - idom 106 from label 114
numba.core.ssa - DEBUG - find_def_from_bottom label 106
numba.core.ssa - DEBUG - find_def_from_top label 106
numba.core.ssa - DEBUG - idom 0 from label 106
numba.core.ssa - DEBUG - find_def_from_bottom label 0
numba.core.ssa - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
numba.core.ssa - DEBUG - on stmt: return $128return_value.7
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 130
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752cff400>
numba.core.ssa - DEBUG - on stmt: $const132.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
numba.core.ssa - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $136pred, 138, 178
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 138
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752cff400>
numba.core.ssa - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
numba.core.ssa - DEBUG - on stmt: $const140.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
numba.core.ssa - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $144pred, 146, 154
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752cff400>
numba.core.ssa - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def var='a.1' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def_from_top label 146
numba.core.ssa - DEBUG - idom 138 from label 146
numba.core.ssa - DEBUG - find_def_from_bottom label 138
numba.core.ssa - DEBUG - find_def_from_top label 138
numba.core.ssa - DEBUG - insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 138
numba.core.ssa - DEBUG - find_def_from_bottom label 130
numba.core.ssa - DEBUG - find_def_from_top label 130
numba.core.ssa - DEBUG - idom 106 from label 130
numba.core.ssa - DEBUG - find_def_from_bottom label 106
numba.core.ssa - DEBUG - find_def_from_top label 106
numba.core.ssa - DEBUG - idom 0 from label 106
numba.core.ssa - DEBUG - find_def_from_bottom label 0
numba.core.ssa - DEBUG - incoming_def a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - find_def_from_bottom label 154
numba.core.ssa - DEBUG - incoming_def a.1.1 = $166inplace_multiply.5
numba.core.ssa - DEBUG - replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: r.1 = $150inplace_multiply.2
numba.core.ssa - DEBUG - on stmt: jump 154
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 154
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752cff400>
numba.core.ssa - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: exp = $158inplace_rshift.2
numba.core.ssa - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def var='a.1' stmt=$166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def_from_top label 154
numba.core.ssa - DEBUG - idom 138 from label 154
numba.core.ssa - DEBUG - find_def_from_bottom label 138
numba.core.ssa - DEBUG - replaced with: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: a.1.1 = $166inplace_multiply.5
numba.core.ssa - DEBUG - on stmt: $const172.7 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $174compare_op.8 = exp != $const172.7
numba.core.ssa - DEBUG - on stmt: bool176 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $176pred, 138, 178
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752cff400>
numba.core.ssa - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
numba.core.ssa - DEBUG - on stmt: bool180 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $180pred, 182, 190
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 182
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752cff400>
numba.core.ssa - DEBUG - on stmt: $const182.0 = const(float, 1.0)
numba.core.ssa - DEBUG - on stmt: $186binary_true_divide.2 = $const182.0 / r.4
numba.core.ssa - DEBUG - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
numba.core.ssa - DEBUG - on stmt: return $188return_value.3
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 190
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752cff400>
numba.core.ssa - DEBUG - on stmt: $192return_value.1 = cast(value=r.4)
numba.core.ssa - DEBUG - on stmt: return $192return_value.1
numba.core.ssa - DEBUG - Fix SSA violator on var invert
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e47f10>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
numba.core.ssa - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float32)
numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float32)
numba.core.ssa - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $const20.7 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
numba.core.ssa - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $24pred, 26, 98
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 26
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e47f10>
numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
numba.core.ssa - DEBUG - first assign: invert
numba.core.ssa - DEBUG - replaced with: invert = const(bool, True)
numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
numba.core.ssa - DEBUG - on stmt: $const38.4 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
numba.core.ssa - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $42pred, 44, 48
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 44
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e47f10>
numba.core.ssa - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e47f10>
numba.core.ssa - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: jump 96
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 96
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e47f10>
numba.core.ssa - DEBUG - on stmt: jump 106
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e47f10>
numba.core.ssa - DEBUG - on stmt: invert = const(bool, False)
numba.core.ssa - DEBUG - replaced with: invert.1 = const(bool, False)
numba.core.ssa - DEBUG - on stmt: exp = b
numba.core.ssa - DEBUG - on stmt: jump 106
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 106
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e47f10>
numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 65536)
numba.core.ssa - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
numba.core.ssa - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $112pred, 114, 130
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 114
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e47f10>
numba.core.ssa - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
numba.core.ssa - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
numba.core.ssa - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
numba.core.ssa - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
numba.core.ssa - DEBUG - on stmt: return $128return_value.7
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 130
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e47f10>
numba.core.ssa - DEBUG - on stmt: $const132.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
numba.core.ssa - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $136pred, 138, 178
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 138
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e47f10>
numba.core.ssa - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[130, 154])
numba.core.ssa - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
numba.core.ssa - DEBUG - on stmt: $const140.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
numba.core.ssa - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $144pred, 146, 154
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e47f10>
numba.core.ssa - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: r.1 = $150inplace_multiply.2
numba.core.ssa - DEBUG - on stmt: jump 154
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 154
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e47f10>
numba.core.ssa - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: exp = $158inplace_rshift.2
numba.core.ssa - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: a.1.1 = $166inplace_multiply.5
numba.core.ssa - DEBUG - on stmt: $const172.7 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $174compare_op.8 = exp != $const172.7
numba.core.ssa - DEBUG - on stmt: bool176 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $176pred, 138, 178
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e47f10>
numba.core.ssa - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
numba.core.ssa - DEBUG - on stmt: bool180 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $180pred, 182, 190
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 182
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e47f10>
numba.core.ssa - DEBUG - on stmt: $const182.0 = const(float, 1.0)
numba.core.ssa - DEBUG - on stmt: $186binary_true_divide.2 = $const182.0 / r.4
numba.core.ssa - DEBUG - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
numba.core.ssa - DEBUG - on stmt: return $188return_value.3
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 190
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752e47f10>
numba.core.ssa - DEBUG - on stmt: $192return_value.1 = cast(value=r.4)
numba.core.ssa - DEBUG - on stmt: return $192return_value.1
numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x708752ca9d80>],
             98: [<numba.core.ir.Assign object at 0x708752caa1d0>]})
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752caa230>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
numba.core.ssa - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float32)
numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float32)
numba.core.ssa - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $const20.7 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
numba.core.ssa - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $24pred, 26, 98
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 26
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752caa230>
numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
numba.core.ssa - DEBUG - on stmt: $const38.4 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
numba.core.ssa - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $42pred, 44, 48
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 44
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752caa230>
numba.core.ssa - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752caa230>
numba.core.ssa - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: jump 96
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 96
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752caa230>
numba.core.ssa - DEBUG - on stmt: jump 106
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752caa230>
numba.core.ssa - DEBUG - on stmt: invert.1 = const(bool, False)
numba.core.ssa - DEBUG - on stmt: exp = b
numba.core.ssa - DEBUG - on stmt: jump 106
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 106
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752caa230>
numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 65536)
numba.core.ssa - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
numba.core.ssa - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $112pred, 114, 130
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 114
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752caa230>
numba.core.ssa - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
numba.core.ssa - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
numba.core.ssa - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
numba.core.ssa - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
numba.core.ssa - DEBUG - on stmt: return $128return_value.7
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 130
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752caa230>
numba.core.ssa - DEBUG - on stmt: $const132.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
numba.core.ssa - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $136pred, 138, 178
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 138
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752caa230>
numba.core.ssa - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[130, 154])
numba.core.ssa - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
numba.core.ssa - DEBUG - on stmt: $const140.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
numba.core.ssa - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $144pred, 146, 154
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752caa230>
numba.core.ssa - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: r.1 = $150inplace_multiply.2
numba.core.ssa - DEBUG - on stmt: jump 154
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 154
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752caa230>
numba.core.ssa - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: exp = $158inplace_rshift.2
numba.core.ssa - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: a.1.1 = $166inplace_multiply.5
numba.core.ssa - DEBUG - on stmt: $const172.7 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $174compare_op.8 = exp != $const172.7
numba.core.ssa - DEBUG - on stmt: bool176 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $176pred, 138, 178
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752caa230>
numba.core.ssa - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
numba.core.ssa - DEBUG - on stmt: bool180 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - find_def var='invert' stmt=$180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - find_def_from_top label 178
numba.core.ssa - DEBUG - idom 130 from label 178
numba.core.ssa - DEBUG - find_def_from_bottom label 130
numba.core.ssa - DEBUG - find_def_from_top label 130
numba.core.ssa - DEBUG - idom 106 from label 130
numba.core.ssa - DEBUG - find_def_from_bottom label 106
numba.core.ssa - DEBUG - find_def_from_top label 106
numba.core.ssa - DEBUG - insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 106
numba.core.ssa - DEBUG - find_def_from_bottom label 96
numba.core.ssa - DEBUG - find_def_from_top label 96
numba.core.ssa - DEBUG - idom 48 from label 96
numba.core.ssa - DEBUG - find_def_from_bottom label 48
numba.core.ssa - DEBUG - find_def_from_top label 48
numba.core.ssa - DEBUG - idom 26 from label 48
numba.core.ssa - DEBUG - find_def_from_bottom label 26
numba.core.ssa - DEBUG - incoming_def invert = const(bool, True)
numba.core.ssa - DEBUG - find_def_from_bottom label 98
numba.core.ssa - DEBUG - incoming_def invert.1 = const(bool, False)
numba.core.ssa - DEBUG - replaced with: $180pred = call bool180(invert.2, func=bool180, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $180pred, 182, 190
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 182
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752caa230>
numba.core.ssa - DEBUG - on stmt: $const182.0 = const(float, 1.0)
numba.core.ssa - DEBUG - on stmt: $186binary_true_divide.2 = $const182.0 / r.4
numba.core.ssa - DEBUG - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
numba.core.ssa - DEBUG - on stmt: return $188return_value.3
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 190
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752caa230>
numba.core.ssa - DEBUG - on stmt: $192return_value.1 = cast(value=r.4)
numba.core.ssa - DEBUG - on stmt: return $192return_value.1
numba.core.ssa - DEBUG - Fix SSA violator on var exp
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752cff7f0>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
numba.core.ssa - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float32)
numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float32)
numba.core.ssa - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $const20.7 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
numba.core.ssa - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $24pred, 26, 98
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 26
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752cff7f0>
numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
numba.core.ssa - DEBUG - first assign: exp
numba.core.ssa - DEBUG - replaced with: exp = unary(fn=<built-in function neg>, value=b)
numba.core.ssa - DEBUG - on stmt: $const38.4 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
numba.core.ssa - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $42pred, 44, 48
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 44
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752cff7f0>
numba.core.ssa - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752cff7f0>
numba.core.ssa - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: jump 96
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 96
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752cff7f0>
numba.core.ssa - DEBUG - on stmt: jump 106
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752cff7f0>
numba.core.ssa - DEBUG - on stmt: invert.1 = const(bool, False)
numba.core.ssa - DEBUG - on stmt: exp = b
numba.core.ssa - DEBUG - replaced with: exp.1 = b
numba.core.ssa - DEBUG - on stmt: jump 106
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 106
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752cff7f0>
numba.core.ssa - DEBUG - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[96, 98])
numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 65536)
numba.core.ssa - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
numba.core.ssa - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $112pred, 114, 130
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 114
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752cff7f0>
numba.core.ssa - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
numba.core.ssa - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
numba.core.ssa - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
numba.core.ssa - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
numba.core.ssa - DEBUG - on stmt: return $128return_value.7
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 130
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752cff7f0>
numba.core.ssa - DEBUG - on stmt: $const132.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
numba.core.ssa - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $136pred, 138, 178
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 138
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752cff7f0>
numba.core.ssa - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[130, 154])
numba.core.ssa - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
numba.core.ssa - DEBUG - on stmt: $const140.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
numba.core.ssa - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $144pred, 146, 154
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752cff7f0>
numba.core.ssa - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: r.1 = $150inplace_multiply.2
numba.core.ssa - DEBUG - on stmt: jump 154
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 154
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752cff7f0>
numba.core.ssa - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: exp = $158inplace_rshift.2
numba.core.ssa - DEBUG - replaced with: exp.2 = $158inplace_rshift.2
numba.core.ssa - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: a.1.1 = $166inplace_multiply.5
numba.core.ssa - DEBUG - on stmt: $const172.7 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $174compare_op.8 = exp != $const172.7
numba.core.ssa - DEBUG - on stmt: bool176 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $176pred, 138, 178
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752cff7f0>
numba.core.ssa - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
numba.core.ssa - DEBUG - on stmt: bool180 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $180pred = call bool180(invert.2, func=bool180, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $180pred, 182, 190
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 182
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752cff7f0>
numba.core.ssa - DEBUG - on stmt: $const182.0 = const(float, 1.0)
numba.core.ssa - DEBUG - on stmt: $186binary_true_divide.2 = $const182.0 / r.4
numba.core.ssa - DEBUG - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
numba.core.ssa - DEBUG - on stmt: return $188return_value.3
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 190
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752cff7f0>
numba.core.ssa - DEBUG - on stmt: $192return_value.1 = cast(value=r.4)
numba.core.ssa - DEBUG - on stmt: return $192return_value.1
numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x708752caa320>],
             98: [<numba.core.ir.Assign object at 0x708752caa1a0>],
             154: [<numba.core.ir.Assign object at 0x708752e9d030>]})
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e47a00>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
numba.core.ssa - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float32)
numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float32)
numba.core.ssa - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $const20.7 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
numba.core.ssa - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $24pred, 26, 98
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 26
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e47a00>
numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
numba.core.ssa - DEBUG - on stmt: $const38.4 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
numba.core.ssa - DEBUG - find_def var='exp' stmt=$40compare_op.5 = exp < $const38.4
numba.core.ssa - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $42pred, 44, 48
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 44
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e47a00>
numba.core.ssa - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e47a00>
numba.core.ssa - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: jump 96
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 96
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e47a00>
numba.core.ssa - DEBUG - on stmt: jump 106
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e47a00>
numba.core.ssa - DEBUG - on stmt: invert.1 = const(bool, False)
numba.core.ssa - DEBUG - on stmt: exp.1 = b
numba.core.ssa - DEBUG - on stmt: jump 106
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 106
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e47a00>
numba.core.ssa - DEBUG - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[96, 98])
numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 65536)
numba.core.ssa - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
numba.core.ssa - DEBUG - find_def var='exp' stmt=$110compare_op.2 = exp > $const108.1
numba.core.ssa - DEBUG - find_def_from_top label 106
numba.core.ssa - DEBUG - insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 106
numba.core.ssa - DEBUG - find_def_from_bottom label 96
numba.core.ssa - DEBUG - find_def_from_top label 96
numba.core.ssa - DEBUG - idom 48 from label 96
numba.core.ssa - DEBUG - find_def_from_bottom label 48
numba.core.ssa - DEBUG - find_def_from_top label 48
numba.core.ssa - DEBUG - idom 26 from label 48
numba.core.ssa - DEBUG - find_def_from_bottom label 26
numba.core.ssa - DEBUG - incoming_def exp = unary(fn=<built-in function neg>, value=b)
numba.core.ssa - DEBUG - find_def_from_bottom label 98
numba.core.ssa - DEBUG - incoming_def exp.1 = b
numba.core.ssa - DEBUG - replaced with: $110compare_op.2 = exp.3 > $const108.1
numba.core.ssa - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $112pred, 114, 130
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 114
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e47a00>
numba.core.ssa - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
numba.core.ssa - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
numba.core.ssa - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
numba.core.ssa - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
numba.core.ssa - DEBUG - on stmt: return $128return_value.7
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 130
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e47a00>
numba.core.ssa - DEBUG - on stmt: $const132.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
numba.core.ssa - DEBUG - find_def var='exp' stmt=$134compare_op.2 = exp != $const132.1
numba.core.ssa - DEBUG - find_def_from_top label 130
numba.core.ssa - DEBUG - idom 106 from label 130
numba.core.ssa - DEBUG - find_def_from_bottom label 106
numba.core.ssa - DEBUG - replaced with: $134compare_op.2 = exp.3 != $const132.1
numba.core.ssa - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $136pred, 138, 178
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 138
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e47a00>
numba.core.ssa - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[130, 154])
numba.core.ssa - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
numba.core.ssa - DEBUG - on stmt: $const140.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
numba.core.ssa - DEBUG - find_def var='exp' stmt=$142binary_and.2 = exp & $const140.1
numba.core.ssa - DEBUG - find_def_from_top label 138
numba.core.ssa - DEBUG - insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 138
numba.core.ssa - DEBUG - find_def_from_bottom label 130
numba.core.ssa - DEBUG - find_def_from_top label 130
numba.core.ssa - DEBUG - idom 106 from label 130
numba.core.ssa - DEBUG - find_def_from_bottom label 106
numba.core.ssa - DEBUG - incoming_def exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[96, 98])
numba.core.ssa - DEBUG - find_def_from_bottom label 154
numba.core.ssa - DEBUG - incoming_def exp.2 = $158inplace_rshift.2
numba.core.ssa - DEBUG - replaced with: $142binary_and.2 = exp.4 & $const140.1
numba.core.ssa - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $144pred, 146, 154
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e47a00>
numba.core.ssa - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: r.1 = $150inplace_multiply.2
numba.core.ssa - DEBUG - on stmt: jump 154
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 154
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e47a00>
numba.core.ssa - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def var='exp' stmt=$158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def_from_top label 154
numba.core.ssa - DEBUG - idom 138 from label 154
numba.core.ssa - DEBUG - find_def_from_bottom label 138
numba.core.ssa - DEBUG - replaced with: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: exp.2 = $158inplace_rshift.2
numba.core.ssa - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: a.1.1 = $166inplace_multiply.5
numba.core.ssa - DEBUG - on stmt: $const172.7 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $174compare_op.8 = exp != $const172.7
numba.core.ssa - DEBUG - find_def var='exp' stmt=$174compare_op.8 = exp != $const172.7
numba.core.ssa - DEBUG - replaced with: $174compare_op.8 = exp.2 != $const172.7
numba.core.ssa - DEBUG - on stmt: bool176 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $176pred, 138, 178
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e47a00>
numba.core.ssa - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
numba.core.ssa - DEBUG - on stmt: bool180 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $180pred = call bool180(invert.2, func=bool180, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $180pred, 182, 190
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 182
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e47a00>
numba.core.ssa - DEBUG - on stmt: $const182.0 = const(float, 1.0)
numba.core.ssa - DEBUG - on stmt: $186binary_true_divide.2 = $const182.0 / r.4
numba.core.ssa - DEBUG - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
numba.core.ssa - DEBUG - on stmt: return $188return_value.3
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 190
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752e47a00>
numba.core.ssa - DEBUG - on stmt: $192return_value.1 = cast(value=r.4)
numba.core.ssa - DEBUG - on stmt: return $192return_value.1
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2452)
           2	LOAD_FAST(arg=0, lineno=2457)
           4	LOAD_ATTR(arg=0, lineno=2457)
           6	LOAD_CONST(arg=1, lineno=2457)
           8	BINARY_POWER(arg=None, lineno=2457)
          10	LOAD_FAST(arg=0, lineno=2457)
          12	LOAD_ATTR(arg=1, lineno=2457)
          14	LOAD_CONST(arg=1, lineno=2457)
          16	BINARY_POWER(arg=None, lineno=2457)
          18	BINARY_ADD(arg=None, lineno=2457)
          20	RETURN_VALUE(arg=None, lineno=2457)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2452)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=2457)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=2457)
numba.core.byteflow - DEBUG - stack ['$x2.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=2457)
numba.core.byteflow - DEBUG - stack ['$4load_attr.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=BINARY_POWER(arg=None, lineno=2457)
numba.core.byteflow - DEBUG - stack ['$4load_attr.1', '$const6.2']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_FAST(arg=0, lineno=2457)
numba.core.byteflow - DEBUG - stack ['$8binary_power.3']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_ATTR(arg=1, lineno=2457)
numba.core.byteflow - DEBUG - stack ['$8binary_power.3', '$x10.4']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_CONST(arg=1, lineno=2457)
numba.core.byteflow - DEBUG - stack ['$8binary_power.3', '$12load_attr.5']
numba.core.byteflow - DEBUG - dispatch pc=16, inst=BINARY_POWER(arg=None, lineno=2457)
numba.core.byteflow - DEBUG - stack ['$8binary_power.3', '$12load_attr.5', '$const14.6']
numba.core.byteflow - DEBUG - dispatch pc=18, inst=BINARY_ADD(arg=None, lineno=2457)
numba.core.byteflow - DEBUG - stack ['$8binary_power.3', '$16binary_power.7']
numba.core.byteflow - DEBUG - dispatch pc=20, inst=RETURN_VALUE(arg=None, lineno=2457)
numba.core.byteflow - DEBUG - stack ['$18binary_add.8']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - keep phismap: {}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$x2.0'}), (4, {'item': '$x2.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2'}), (8, {'lhs': '$4load_attr.1', 'rhs': '$const6.2', 'res': '$8binary_power.3'}), (10, {'res': '$x10.4'}), (12, {'item': '$x10.4', 'res': '$12load_attr.5'}), (14, {'res': '$const14.6'}), (16, {'lhs': '$12load_attr.5', 'rhs': '$const14.6', 'res': '$16binary_power.7'}), (18, {'lhs': '$8binary_power.3', 'rhs': '$16binary_power.7', 'res': '$18binary_add.8'}), (20, {'retval': '$18binary_add.8', 'castval': '$20return_value.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $4load_attr.1 = getattr(value=x, attr=real) ['$4load_attr.1', 'x']
    $const6.2 = const(int, 2)                ['$const6.2']
    $8binary_power.3 = $4load_attr.1 ** $const6.2 ['$4load_attr.1', '$8binary_power.3', '$const6.2']
    $12load_attr.5 = getattr(value=x, attr=imag) ['$12load_attr.5', 'x']
    $const14.6 = const(int, 2)               ['$const14.6']
    $16binary_power.7 = $12load_attr.5 ** $const14.6 ['$12load_attr.5', '$16binary_power.7', '$const14.6']
    $18binary_add.8 = $8binary_power.3 + $16binary_power.7 ['$16binary_power.7', '$18binary_add.8', '$8binary_power.3']
    $20return_value.9 = cast(value=$18binary_add.8) ['$18binary_add.8', '$20return_value.9']
    return $20return_value.9                 ['$20return_value.9']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x70875289f8e0>
numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
numba.core.ssa - DEBUG - on stmt: $4load_attr.1 = getattr(value=x, attr=real)
numba.core.ssa - DEBUG - on stmt: $const6.2 = const(int, 2)
numba.core.ssa - DEBUG - on stmt: $8binary_power.3 = $4load_attr.1 ** $const6.2
numba.core.ssa - DEBUG - on stmt: $12load_attr.5 = getattr(value=x, attr=imag)
numba.core.ssa - DEBUG - on stmt: $const14.6 = const(int, 2)
numba.core.ssa - DEBUG - on stmt: $16binary_power.7 = $12load_attr.5 ** $const14.6
numba.core.ssa - DEBUG - on stmt: $18binary_add.8 = $8binary_power.3 + $16binary_power.7
numba.core.ssa - DEBUG - on stmt: $20return_value.9 = cast(value=$18binary_add.8)
numba.core.ssa - DEBUG - on stmt: return $20return_value.9
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$12load_attr.5': [(<numba.core.ir.Assign object at 0x7087528b8e50>,
                                 0)],
             '$16binary_power.7': [(<numba.core.ir.Assign object at 0x7087528b9180>,
                                    0)],
             '$18binary_add.8': [(<numba.core.ir.Assign object at 0x7087528b9300>,
                                  0)],
             '$20return_value.9': [(<numba.core.ir.Assign object at 0x7087528b9450>,
                                    0)],
             '$4load_attr.1': [(<numba.core.ir.Assign object at 0x7087528b88b0>,
                                0)],
             '$8binary_power.3': [(<numba.core.ir.Assign object at 0x7087528b8be0>,
                                   0)],
             '$const14.6': [(<numba.core.ir.Assign object at 0x7087528b8fd0>,
                             0)],
             '$const6.2': [(<numba.core.ir.Assign object at 0x7087528b8a30>,
                            0)],
             'x': [(<numba.core.ir.Assign object at 0x7087528b8190>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x70875289f8e0>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=214)
           2	LOAD_DEREF(arg=1, lineno=216)
           4	LOAD_CONST(arg=1, lineno=216)
           6	CALL_FUNCTION(arg=1, lineno=216)
           8	STORE_FAST(arg=2, lineno=216)
          10	LOAD_DEREF(arg=1, lineno=217)
          12	LOAD_FAST(arg=0, lineno=217)
          14	CALL_FUNCTION(arg=1, lineno=217)
          16	STORE_FAST(arg=0, lineno=217)
          18	LOAD_FAST(arg=1, lineno=218)
          20	LOAD_CONST(arg=2, lineno=218)
          22	COMPARE_OP(arg=0, lineno=218)
          24	POP_JUMP_IF_FALSE(arg=50, lineno=218)
          26	LOAD_CONST(arg=3, lineno=219)
          28	STORE_FAST(arg=3, lineno=219)
          30	LOAD_FAST(arg=1, lineno=220)
          32	UNARY_NEGATIVE(arg=None, lineno=220)
          34	STORE_FAST(arg=4, lineno=220)
          36	LOAD_FAST(arg=4, lineno=221)
          38	LOAD_CONST(arg=2, lineno=221)
          40	COMPARE_OP(arg=0, lineno=221)
          42	POP_JUMP_IF_FALSE(arg=25, lineno=221)
          44	LOAD_GLOBAL(arg=0, lineno=222)
          46	RAISE_VARARGS(arg=1, lineno=222)
>         48	LOAD_DEREF(arg=0, lineno=223)
          50	POP_JUMP_IF_FALSE(arg=49, lineno=223)
          52	LOAD_FAST(arg=0, lineno=224)
          54	LOAD_CONST(arg=2, lineno=224)
          56	COMPARE_OP(arg=2, lineno=224)
          58	POP_JUMP_IF_FALSE(arg=39, lineno=224)
          60	LOAD_DEREF(arg=2, lineno=225)
          62	POP_JUMP_IF_FALSE(arg=35, lineno=225)
          64	LOAD_DEREF(arg=2, lineno=226)
          66	RETURN_VALUE(arg=None, lineno=226)
>         68	LOAD_GLOBAL(arg=1, lineno=228)
          70	LOAD_CONST(arg=4, lineno=228)
          72	CALL_FUNCTION(arg=1, lineno=228)
          74	RAISE_VARARGS(arg=1, lineno=228)
>         76	LOAD_FAST(arg=0, lineno=229)
          78	LOAD_CONST(arg=1, lineno=229)
          80	COMPARE_OP(arg=3, lineno=229)
          82	POP_JUMP_IF_FALSE(arg=49, lineno=229)
          84	LOAD_FAST(arg=0, lineno=229)
          86	LOAD_CONST(arg=5, lineno=229)
          88	COMPARE_OP(arg=3, lineno=229)
          90	POP_JUMP_IF_FALSE(arg=49, lineno=229)
          92	LOAD_CONST(arg=2, lineno=230)
          94	RETURN_VALUE(arg=None, lineno=230)
>         96	JUMP_FORWARD(arg=4, lineno=230)
>         98	LOAD_CONST(arg=6, lineno=232)
         100	STORE_FAST(arg=3, lineno=232)
         102	LOAD_FAST(arg=1, lineno=233)
         104	STORE_FAST(arg=4, lineno=233)
>        106	LOAD_FAST(arg=4, lineno=234)
         108	LOAD_CONST(arg=7, lineno=234)
         110	COMPARE_OP(arg=4, lineno=234)
         112	POP_JUMP_IF_FALSE(arg=66, lineno=234)
         114	LOAD_GLOBAL(arg=2, lineno=236)
         116	LOAD_METHOD(arg=3, lineno=236)
         118	LOAD_FAST(arg=0, lineno=236)
         120	LOAD_GLOBAL(arg=4, lineno=236)
         122	LOAD_FAST(arg=1, lineno=236)
         124	CALL_FUNCTION(arg=1, lineno=236)
         126	CALL_METHOD(arg=2, lineno=236)
         128	RETURN_VALUE(arg=None, lineno=236)
>        130	LOAD_FAST(arg=4, lineno=237)
         132	LOAD_CONST(arg=2, lineno=237)
         134	COMPARE_OP(arg=3, lineno=237)
         136	POP_JUMP_IF_FALSE(arg=90, lineno=237)
>        138	LOAD_FAST(arg=4, lineno=238)
         140	LOAD_CONST(arg=1, lineno=238)
         142	BINARY_AND(arg=None, lineno=238)
         144	POP_JUMP_IF_FALSE(arg=78, lineno=238)
         146	LOAD_FAST(arg=2, lineno=239)
         148	LOAD_FAST(arg=0, lineno=239)
         150	INPLACE_MULTIPLY(arg=None, lineno=239)
         152	STORE_FAST(arg=2, lineno=239)
>        154	LOAD_FAST(arg=4, lineno=240)
         156	LOAD_CONST(arg=1, lineno=240)
         158	INPLACE_RSHIFT(arg=None, lineno=240)
         160	STORE_FAST(arg=4, lineno=240)
         162	LOAD_FAST(arg=0, lineno=241)
         164	LOAD_FAST(arg=0, lineno=241)
         166	INPLACE_MULTIPLY(arg=None, lineno=241)
         168	STORE_FAST(arg=0, lineno=241)
         170	LOAD_FAST(arg=4, lineno=237)
         172	LOAD_CONST(arg=2, lineno=237)
         174	COMPARE_OP(arg=3, lineno=237)
         176	POP_JUMP_IF_TRUE(arg=70, lineno=237)
>        178	LOAD_FAST(arg=3, lineno=243)
         180	POP_JUMP_IF_FALSE(arg=96, lineno=243)
         182	LOAD_CONST(arg=8, lineno=243)
         184	LOAD_FAST(arg=2, lineno=243)
         186	BINARY_TRUE_DIVIDE(arg=None, lineno=243)
         188	RETURN_VALUE(arg=None, lineno=243)
>        190	LOAD_FAST(arg=2, lineno=243)
         192	RETURN_VALUE(arg=None, lineno=243)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=214)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_DEREF(arg=1, lineno=216)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_CONST(arg=1, lineno=216)
numba.core.byteflow - DEBUG - stack ['$2load_deref.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=216)
numba.core.byteflow - DEBUG - stack ['$2load_deref.0', '$const4.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=2, lineno=216)
numba.core.byteflow - DEBUG - stack ['$6call_function.2']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_DEREF(arg=1, lineno=217)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=0, lineno=217)
numba.core.byteflow - DEBUG - stack ['$10load_deref.3']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=217)
numba.core.byteflow - DEBUG - stack ['$10load_deref.3', '$a12.4']
numba.core.byteflow - DEBUG - dispatch pc=16, inst=STORE_FAST(arg=0, lineno=217)
numba.core.byteflow - DEBUG - stack ['$14call_function.5']
numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=218)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_CONST(arg=2, lineno=218)
numba.core.byteflow - DEBUG - stack ['$b18.6']
numba.core.byteflow - DEBUG - dispatch pc=22, inst=COMPARE_OP(arg=0, lineno=218)
numba.core.byteflow - DEBUG - stack ['$b18.6', '$const20.7']
numba.core.byteflow - DEBUG - dispatch pc=24, inst=POP_JUMP_IF_FALSE(arg=50, lineno=218)
numba.core.byteflow - DEBUG - stack ['$22compare_op.8']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=26, stack=(), blockstack=(), npush=0), Edge(pc=98, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=26 nstack_initial=0), State(pc_initial=98 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=26 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=26, inst=LOAD_CONST(arg=3, lineno=219)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=28, inst=STORE_FAST(arg=3, lineno=219)
numba.core.byteflow - DEBUG - stack ['$const26.0']
numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_FAST(arg=1, lineno=220)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=32, inst=UNARY_NEGATIVE(arg=None, lineno=220)
numba.core.byteflow - DEBUG - stack ['$b30.1']
numba.core.byteflow - DEBUG - dispatch pc=34, inst=STORE_FAST(arg=4, lineno=220)
numba.core.byteflow - DEBUG - stack ['$32unary_negative.2']
numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=4, lineno=221)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_CONST(arg=2, lineno=221)
numba.core.byteflow - DEBUG - stack ['$exp36.3']
numba.core.byteflow - DEBUG - dispatch pc=40, inst=COMPARE_OP(arg=0, lineno=221)
numba.core.byteflow - DEBUG - stack ['$exp36.3', '$const38.4']
numba.core.byteflow - DEBUG - dispatch pc=42, inst=POP_JUMP_IF_FALSE(arg=25, lineno=221)
numba.core.byteflow - DEBUG - stack ['$40compare_op.5']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=44, stack=(), blockstack=(), npush=0), Edge(pc=48, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=98 nstack_initial=0), State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=98 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=98, inst=LOAD_CONST(arg=6, lineno=232)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=100, inst=STORE_FAST(arg=3, lineno=232)
numba.core.byteflow - DEBUG - stack ['$const98.0']
numba.core.byteflow - DEBUG - dispatch pc=102, inst=LOAD_FAST(arg=1, lineno=233)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=104, inst=STORE_FAST(arg=4, lineno=233)
numba.core.byteflow - DEBUG - stack ['$b102.1']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=44 nstack_initial=0), State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=44 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=44, inst=LOAD_GLOBAL(arg=0, lineno=222)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=46, inst=RAISE_VARARGS(arg=1, lineno=222)
numba.core.byteflow - DEBUG - stack ['$44load_global.0']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=48 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=48 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_DEREF(arg=0, lineno=223)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=50, inst=POP_JUMP_IF_FALSE(arg=49, lineno=223)
numba.core.byteflow - DEBUG - stack ['$48load_deref.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=52, stack=(), blockstack=(), npush=0), Edge(pc=96, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=52 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=106 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=106, inst=LOAD_FAST(arg=4, lineno=234)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=108, inst=LOAD_CONST(arg=7, lineno=234)
numba.core.byteflow - DEBUG - stack ['$exp106.0']
numba.core.byteflow - DEBUG - dispatch pc=110, inst=COMPARE_OP(arg=4, lineno=234)
numba.core.byteflow - DEBUG - stack ['$exp106.0', '$const108.1']
numba.core.byteflow - DEBUG - dispatch pc=112, inst=POP_JUMP_IF_FALSE(arg=66, lineno=234)
numba.core.byteflow - DEBUG - stack ['$110compare_op.2']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=114, stack=(), blockstack=(), npush=0), Edge(pc=130, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=52 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=52 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=224)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_CONST(arg=2, lineno=224)
numba.core.byteflow - DEBUG - stack ['$a52.0']
numba.core.byteflow - DEBUG - dispatch pc=56, inst=COMPARE_OP(arg=2, lineno=224)
numba.core.byteflow - DEBUG - stack ['$a52.0', '$const54.1']
numba.core.byteflow - DEBUG - dispatch pc=58, inst=POP_JUMP_IF_FALSE(arg=39, lineno=224)
numba.core.byteflow - DEBUG - stack ['$56compare_op.2']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=60, stack=(), blockstack=(), npush=0), Edge(pc=76, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=96 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=96, inst=JUMP_FORWARD(arg=4, lineno=230)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=106, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=114 nstack_initial=0), State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=114 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=114, inst=LOAD_GLOBAL(arg=2, lineno=236)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=116, inst=LOAD_METHOD(arg=3, lineno=236)
numba.core.byteflow - DEBUG - stack ['$114load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=118, inst=LOAD_FAST(arg=0, lineno=236)
numba.core.byteflow - DEBUG - stack ['$116load_method.1']
numba.core.byteflow - DEBUG - dispatch pc=120, inst=LOAD_GLOBAL(arg=4, lineno=236)
numba.core.byteflow - DEBUG - stack ['$116load_method.1', '$a118.2']
numba.core.byteflow - DEBUG - dispatch pc=122, inst=LOAD_FAST(arg=1, lineno=236)
numba.core.byteflow - DEBUG - stack ['$116load_method.1', '$a118.2', '$120load_global.3']
numba.core.byteflow - DEBUG - dispatch pc=124, inst=CALL_FUNCTION(arg=1, lineno=236)
numba.core.byteflow - DEBUG - stack ['$116load_method.1', '$a118.2', '$120load_global.3', '$b122.4']
numba.core.byteflow - DEBUG - dispatch pc=126, inst=CALL_METHOD(arg=2, lineno=236)
numba.core.byteflow - DEBUG - stack ['$116load_method.1', '$a118.2', '$124call_function.5']
numba.core.byteflow - DEBUG - dispatch pc=128, inst=RETURN_VALUE(arg=None, lineno=236)
numba.core.byteflow - DEBUG - stack ['$126call_method.6']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=130 nstack_initial=0), State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=106 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=130 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=130, inst=LOAD_FAST(arg=4, lineno=237)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=132, inst=LOAD_CONST(arg=2, lineno=237)
numba.core.byteflow - DEBUG - stack ['$exp130.0']
numba.core.byteflow - DEBUG - dispatch pc=134, inst=COMPARE_OP(arg=3, lineno=237)
numba.core.byteflow - DEBUG - stack ['$exp130.0', '$const132.1']
numba.core.byteflow - DEBUG - dispatch pc=136, inst=POP_JUMP_IF_FALSE(arg=90, lineno=237)
numba.core.byteflow - DEBUG - stack ['$134compare_op.2']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=138, stack=(), blockstack=(), npush=0), Edge(pc=178, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=60 nstack_initial=0), State(pc_initial=76 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=178 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=60 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_DEREF(arg=2, lineno=225)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=62, inst=POP_JUMP_IF_FALSE(arg=35, lineno=225)
numba.core.byteflow - DEBUG - stack ['$60load_deref.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=64, stack=(), blockstack=(), npush=0), Edge(pc=68, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=76 nstack_initial=0), State(pc_initial=106 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=76 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=76, inst=LOAD_FAST(arg=0, lineno=229)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_CONST(arg=1, lineno=229)
numba.core.byteflow - DEBUG - stack ['$a76.0']
numba.core.byteflow - DEBUG - dispatch pc=80, inst=COMPARE_OP(arg=3, lineno=229)
numba.core.byteflow - DEBUG - stack ['$a76.0', '$const78.1']
numba.core.byteflow - DEBUG - dispatch pc=82, inst=POP_JUMP_IF_FALSE(arg=49, lineno=229)
numba.core.byteflow - DEBUG - stack ['$80compare_op.2']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=84, stack=(), blockstack=(), npush=0), Edge(pc=96, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=106 nstack_initial=0), State(pc_initial=138 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=138 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=138 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=138, inst=LOAD_FAST(arg=4, lineno=238)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=140, inst=LOAD_CONST(arg=1, lineno=238)
numba.core.byteflow - DEBUG - stack ['$exp138.0']
numba.core.byteflow - DEBUG - dispatch pc=142, inst=BINARY_AND(arg=None, lineno=238)
numba.core.byteflow - DEBUG - stack ['$exp138.0', '$const140.1']
numba.core.byteflow - DEBUG - dispatch pc=144, inst=POP_JUMP_IF_FALSE(arg=78, lineno=238)
numba.core.byteflow - DEBUG - stack ['$142binary_and.2']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=146, stack=(), blockstack=(), npush=0), Edge(pc=154, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=178 nstack_initial=0), State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=178 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=178, inst=LOAD_FAST(arg=3, lineno=243)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=180, inst=POP_JUMP_IF_FALSE(arg=96, lineno=243)
numba.core.byteflow - DEBUG - stack ['$invert178.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=182, stack=(), blockstack=(), npush=0), Edge(pc=190, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=64 nstack_initial=0), State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=64 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=64, inst=LOAD_DEREF(arg=2, lineno=226)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=66, inst=RETURN_VALUE(arg=None, lineno=226)
numba.core.byteflow - DEBUG - stack ['$64load_deref.0']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=68 nstack_initial=0), State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=68 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=68, inst=LOAD_GLOBAL(arg=1, lineno=228)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_CONST(arg=4, lineno=228)
numba.core.byteflow - DEBUG - stack ['$68load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=72, inst=CALL_FUNCTION(arg=1, lineno=228)
numba.core.byteflow - DEBUG - stack ['$68load_global.0', '$const70.1']
numba.core.byteflow - DEBUG - dispatch pc=74, inst=RAISE_VARARGS(arg=1, lineno=228)
numba.core.byteflow - DEBUG - stack ['$72call_function.2']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=84 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=84 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_FAST(arg=0, lineno=229)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=86, inst=LOAD_CONST(arg=5, lineno=229)
numba.core.byteflow - DEBUG - stack ['$a84.0']
numba.core.byteflow - DEBUG - dispatch pc=88, inst=COMPARE_OP(arg=3, lineno=229)
numba.core.byteflow - DEBUG - stack ['$a84.0', '$const86.1']
numba.core.byteflow - DEBUG - dispatch pc=90, inst=POP_JUMP_IF_FALSE(arg=49, lineno=229)
numba.core.byteflow - DEBUG - stack ['$88compare_op.2']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=92, stack=(), blockstack=(), npush=0), Edge(pc=96, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=146 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=146 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=146, inst=LOAD_FAST(arg=2, lineno=239)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=148, inst=LOAD_FAST(arg=0, lineno=239)
numba.core.byteflow - DEBUG - stack ['$r146.0']
numba.core.byteflow - DEBUG - dispatch pc=150, inst=INPLACE_MULTIPLY(arg=None, lineno=239)
numba.core.byteflow - DEBUG - stack ['$r146.0', '$a148.1']
numba.core.byteflow - DEBUG - dispatch pc=152, inst=STORE_FAST(arg=2, lineno=239)
numba.core.byteflow - DEBUG - stack ['$150inplace_multiply.2']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=154, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=154 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=154 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=154, inst=LOAD_FAST(arg=4, lineno=240)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=156, inst=LOAD_CONST(arg=1, lineno=240)
numba.core.byteflow - DEBUG - stack ['$exp154.0']
numba.core.byteflow - DEBUG - dispatch pc=158, inst=INPLACE_RSHIFT(arg=None, lineno=240)
numba.core.byteflow - DEBUG - stack ['$exp154.0', '$const156.1']
numba.core.byteflow - DEBUG - dispatch pc=160, inst=STORE_FAST(arg=4, lineno=240)
numba.core.byteflow - DEBUG - stack ['$158inplace_rshift.2']
numba.core.byteflow - DEBUG - dispatch pc=162, inst=LOAD_FAST(arg=0, lineno=241)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=164, inst=LOAD_FAST(arg=0, lineno=241)
numba.core.byteflow - DEBUG - stack ['$a162.3']
numba.core.byteflow - DEBUG - dispatch pc=166, inst=INPLACE_MULTIPLY(arg=None, lineno=241)
numba.core.byteflow - DEBUG - stack ['$a162.3', '$a164.4']
numba.core.byteflow - DEBUG - dispatch pc=168, inst=STORE_FAST(arg=0, lineno=241)
numba.core.byteflow - DEBUG - stack ['$166inplace_multiply.5']
numba.core.byteflow - DEBUG - dispatch pc=170, inst=LOAD_FAST(arg=4, lineno=237)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=172, inst=LOAD_CONST(arg=2, lineno=237)
numba.core.byteflow - DEBUG - stack ['$exp170.6']
numba.core.byteflow - DEBUG - dispatch pc=174, inst=COMPARE_OP(arg=3, lineno=237)
numba.core.byteflow - DEBUG - stack ['$exp170.6', '$const172.7']
numba.core.byteflow - DEBUG - dispatch pc=176, inst=POP_JUMP_IF_TRUE(arg=70, lineno=237)
numba.core.byteflow - DEBUG - stack ['$174compare_op.8']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=178, stack=(), blockstack=(), npush=0), Edge(pc=138, stack=(), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=182 nstack_initial=0), State(pc_initial=190 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=182 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=182, inst=LOAD_CONST(arg=8, lineno=243)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=184, inst=LOAD_FAST(arg=2, lineno=243)
numba.core.byteflow - DEBUG - stack ['$const182.0']
numba.core.byteflow - DEBUG - dispatch pc=186, inst=BINARY_TRUE_DIVIDE(arg=None, lineno=243)
numba.core.byteflow - DEBUG - stack ['$const182.0', '$r184.1']
numba.core.byteflow - DEBUG - dispatch pc=188, inst=RETURN_VALUE(arg=None, lineno=243)
numba.core.byteflow - DEBUG - stack ['$186binary_true_divide.2']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=190 nstack_initial=0), State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=190 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=190, inst=LOAD_FAST(arg=2, lineno=243)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=192, inst=RETURN_VALUE(arg=None, lineno=243)
numba.core.byteflow - DEBUG - stack ['$r190.0']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=92 nstack_initial=0), State(pc_initial=96 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=92 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=92, inst=LOAD_CONST(arg=2, lineno=230)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=94, inst=RETURN_VALUE(arg=None, lineno=230)
numba.core.byteflow - DEBUG - stack ['$const92.0']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=96 nstack_initial=0), State(pc_initial=154 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=154 nstack_initial=0), State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=178 nstack_initial=0), State(pc_initial=138 nstack_initial=0)])
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=138 nstack_initial=0)])
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=0): set(),
             State(pc_initial=44 nstack_initial=0): set(),
             State(pc_initial=48 nstack_initial=0): set(),
             State(pc_initial=52 nstack_initial=0): set(),
             State(pc_initial=60 nstack_initial=0): set(),
             State(pc_initial=64 nstack_initial=0): set(),
             State(pc_initial=68 nstack_initial=0): set(),
             State(pc_initial=76 nstack_initial=0): set(),
             State(pc_initial=84 nstack_initial=0): set(),
             State(pc_initial=92 nstack_initial=0): set(),
             State(pc_initial=96 nstack_initial=0): set(),
             State(pc_initial=98 nstack_initial=0): set(),
             State(pc_initial=106 nstack_initial=0): set(),
             State(pc_initial=114 nstack_initial=0): set(),
             State(pc_initial=130 nstack_initial=0): set(),
             State(pc_initial=138 nstack_initial=0): set(),
             State(pc_initial=146 nstack_initial=0): set(),
             State(pc_initial=154 nstack_initial=0): set(),
             State(pc_initial=178 nstack_initial=0): set(),
             State(pc_initial=182 nstack_initial=0): set(),
             State(pc_initial=190 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - keep phismap: {}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_deref.0'}), (4, {'res': '$const4.1'}), (6, {'func': '$2load_deref.0', 'args': ['$const4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_deref.3'}), (12, {'res': '$a12.4'}), (14, {'func': '$10load_deref.3', 'args': ['$a12.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5'}), (18, {'res': '$b18.6'}), (20, {'res': '$const20.7'}), (22, {'lhs': '$b18.6', 'rhs': '$const20.7', 'res': '$22compare_op.8'}), (24, {'pred': '$22compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: (), 98: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=26 nstack_initial=0):
AdaptBlockInfo(insts=((26, {'res': '$const26.0'}), (28, {'value': '$const26.0'}), (30, {'res': '$b30.1'}), (32, {'value': '$b30.1', 'res': '$32unary_negative.2'}), (34, {'value': '$32unary_negative.2'}), (36, {'res': '$exp36.3'}), (38, {'res': '$const38.4'}), (40, {'lhs': '$exp36.3', 'rhs': '$const38.4', 'res': '$40compare_op.5'}), (42, {'pred': '$40compare_op.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={44: (), 48: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=44 nstack_initial=0):
AdaptBlockInfo(insts=((44, {'res': '$44load_global.0'}), (46, {'exc': '$44load_global.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=48 nstack_initial=0):
AdaptBlockInfo(insts=((48, {'res': '$48load_deref.0'}), (50, {'pred': '$48load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={52: (), 96: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=52 nstack_initial=0):
AdaptBlockInfo(insts=((52, {'res': '$a52.0'}), (54, {'res': '$const54.1'}), (56, {'lhs': '$a52.0', 'rhs': '$const54.1', 'res': '$56compare_op.2'}), (58, {'pred': '$56compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: (), 76: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=60 nstack_initial=0):
AdaptBlockInfo(insts=((60, {'res': '$60load_deref.0'}), (62, {'pred': '$60load_deref.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={64: (), 68: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=64 nstack_initial=0):
AdaptBlockInfo(insts=((64, {'res': '$64load_deref.0'}), (66, {'retval': '$64load_deref.0', 'castval': '$66return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=68 nstack_initial=0):
AdaptBlockInfo(insts=((68, {'res': '$68load_global.0'}), (70, {'res': '$const70.1'}), (72, {'func': '$68load_global.0', 'args': ['$const70.1'], 'res': '$72call_function.2'}), (74, {'exc': '$72call_function.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=76 nstack_initial=0):
AdaptBlockInfo(insts=((76, {'res': '$a76.0'}), (78, {'res': '$const78.1'}), (80, {'lhs': '$a76.0', 'rhs': '$const78.1', 'res': '$80compare_op.2'}), (82, {'pred': '$80compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={84: (), 96: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=84 nstack_initial=0):
AdaptBlockInfo(insts=((84, {'res': '$a84.0'}), (86, {'res': '$const86.1'}), (88, {'lhs': '$a84.0', 'rhs': '$const86.1', 'res': '$88compare_op.2'}), (90, {'pred': '$88compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={92: (), 96: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=92 nstack_initial=0):
AdaptBlockInfo(insts=((92, {'res': '$const92.0'}), (94, {'retval': '$const92.0', 'castval': '$94return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=96 nstack_initial=0):
AdaptBlockInfo(insts=((96, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=98 nstack_initial=0):
AdaptBlockInfo(insts=((98, {'res': '$const98.0'}), (100, {'value': '$const98.0'}), (102, {'res': '$b102.1'}), (104, {'value': '$b102.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={106: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=106 nstack_initial=0):
AdaptBlockInfo(insts=((106, {'res': '$exp106.0'}), (108, {'res': '$const108.1'}), (110, {'lhs': '$exp106.0', 'rhs': '$const108.1', 'res': '$110compare_op.2'}), (112, {'pred': '$110compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={114: (), 130: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=114 nstack_initial=0):
AdaptBlockInfo(insts=((114, {'res': '$114load_global.0'}), (116, {'item': '$114load_global.0', 'res': '$116load_method.1'}), (118, {'res': '$a118.2'}), (120, {'res': '$120load_global.3'}), (122, {'res': '$b122.4'}), (124, {'func': '$120load_global.3', 'args': ['$b122.4'], 'res': '$124call_function.5'}), (126, {'func': '$116load_method.1', 'args': ['$a118.2', '$124call_function.5'], 'res': '$126call_method.6'}), (128, {'retval': '$126call_method.6', 'castval': '$128return_value.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=130 nstack_initial=0):
AdaptBlockInfo(insts=((130, {'res': '$exp130.0'}), (132, {'res': '$const132.1'}), (134, {'lhs': '$exp130.0', 'rhs': '$const132.1', 'res': '$134compare_op.2'}), (136, {'pred': '$134compare_op.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={138: (), 178: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=138 nstack_initial=0):
AdaptBlockInfo(insts=((138, {'res': '$exp138.0'}), (140, {'res': '$const140.1'}), (142, {'lhs': '$exp138.0', 'rhs': '$const140.1', 'res': '$142binary_and.2'}), (144, {'pred': '$142binary_and.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={146: (), 154: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=146 nstack_initial=0):
AdaptBlockInfo(insts=((146, {'res': '$r146.0'}), (148, {'res': '$a148.1'}), (150, {'lhs': '$r146.0', 'rhs': '$a148.1', 'res': '$150inplace_multiply.2'}), (152, {'value': '$150inplace_multiply.2'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={154: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=154 nstack_initial=0):
AdaptBlockInfo(insts=((154, {'res': '$exp154.0'}), (156, {'res': '$const156.1'}), (158, {'lhs': '$exp154.0', 'rhs': '$const156.1', 'res': '$158inplace_rshift.2'}), (160, {'value': '$158inplace_rshift.2'}), (162, {'res': '$a162.3'}), (164, {'res': '$a164.4'}), (166, {'lhs': '$a162.3', 'rhs': '$a164.4', 'res': '$166inplace_multiply.5'}), (168, {'value': '$166inplace_multiply.5'}), (170, {'res': '$exp170.6'}), (172, {'res': '$const172.7'}), (174, {'lhs': '$exp170.6', 'rhs': '$const172.7', 'res': '$174compare_op.8'}), (176, {'pred': '$174compare_op.8'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={178: (), 138: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=178 nstack_initial=0):
AdaptBlockInfo(insts=((178, {'res': '$invert178.0'}), (180, {'pred': '$invert178.0'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={182: (), 190: ()})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=182 nstack_initial=0):
AdaptBlockInfo(insts=((182, {'res': '$const182.0'}), (184, {'res': '$r184.1'}), (186, {'lhs': '$const182.0', 'rhs': '$r184.1', 'res': '$186binary_true_divide.2'}), (188, {'retval': '$186binary_true_divide.2', 'castval': '$188return_value.3'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=190 nstack_initial=0):
AdaptBlockInfo(insts=((190, {'res': '$r190.0'}), (192, {'retval': '$r190.0', 'castval': '$192return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    a = arg(0, name=a)                       ['a']
    b = arg(1, name=b)                       ['b']
    $2load_deref.0 = freevar(tp: float64)    ['$2load_deref.0']
    $const4.1 = const(int, 1)                ['$const4.1']
    r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_deref.0', '$const4.1', 'r']
    $10load_deref.3 = freevar(tp: float64)   ['$10load_deref.3']
    a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_deref.3', 'a', 'a.1']
    $const20.7 = const(int, 0)               ['$const20.7']
    $22compare_op.8 = b < $const20.7         ['$22compare_op.8', '$const20.7', 'b']
    bool24 = global(bool: <class 'bool'>)    ['bool24']
    $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None) ['$22compare_op.8', '$24pred', 'bool24']
    branch $24pred, 26, 98                   ['$24pred']
label 26:
    invert = const(bool, True)               ['invert']
    exp = unary(fn=<built-in function neg>, value=b) ['b', 'exp']
    $const38.4 = const(int, 0)               ['$const38.4']
    $40compare_op.5 = exp < $const38.4       ['$40compare_op.5', '$const38.4', 'exp']
    bool42 = global(bool: <class 'bool'>)    ['bool42']
    $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None) ['$40compare_op.5', '$42pred', 'bool42']
    branch $42pred, 44, 48                   ['$42pred']
label 44:
    $44load_global.0 = global(OverflowError: <class 'OverflowError'>) ['$44load_global.0']
    raise $44load_global.0                   ['$44load_global.0']
label 48:
    $48load_deref.0 = freevar(is_integer: False) ['$48load_deref.0']
    bool50 = global(bool: <class 'bool'>)    ['bool50']
    $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None) ['$48load_deref.0', '$50pred', 'bool50']
    branch $50pred, 52, 96                   ['$50pred']
label 52:
    $const54.1 = const(int, 0)               ['$const54.1']
    $56compare_op.2 = a.1 == $const54.1      ['$56compare_op.2', '$const54.1', 'a.1']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
    $58pred = call bool58($56compare_op.2, func=bool58, args=(Var($56compare_op.2, numbers.py:224),), kws=(), vararg=None, varkwarg=None, target=None) ['$56compare_op.2', '$58pred', 'bool58']
    branch $58pred, 60, 76                   ['$58pred']
label 60:
    $60load_deref.0 = freevar(zerodiv_return: False) ['$60load_deref.0']
    bool62 = global(bool: <class 'bool'>)    ['bool62']
    $62pred = call bool62($60load_deref.0, func=bool62, args=(Var($60load_deref.0, numbers.py:225),), kws=(), vararg=None, varkwarg=None, target=None) ['$60load_deref.0', '$62pred', 'bool62']
    branch $62pred, 64, 68                   ['$62pred']
label 64:
    $64load_deref.0 = freevar(zerodiv_return: False) ['$64load_deref.0']
    $66return_value.1 = cast(value=$64load_deref.0) ['$64load_deref.0', '$66return_value.1']
    return $66return_value.1                 ['$66return_value.1']
label 68:
    $68load_global.0 = global(ZeroDivisionError: <class 'ZeroDivisionError'>) ['$68load_global.0']
    $const70.1 = const(str, 0 cannot be raised to a negative power) ['$const70.1']
    $72call_function.2 = call $68load_global.0($const70.1, func=$68load_global.0, args=[Var($const70.1, numbers.py:228)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.0', '$72call_function.2', '$const70.1']
    raise $72call_function.2                 ['$72call_function.2']
label 76:
    $const78.1 = const(int, 1)               ['$const78.1']
    $80compare_op.2 = a.1 != $const78.1      ['$80compare_op.2', '$const78.1', 'a.1']
    bool82 = global(bool: <class 'bool'>)    ['bool82']
    $82pred = call bool82($80compare_op.2, func=bool82, args=(Var($80compare_op.2, numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$80compare_op.2', '$82pred', 'bool82']
    branch $82pred, 84, 96                   ['$82pred']
label 84:
    $const86.1 = const(int, -1)              ['$const86.1']
    $88compare_op.2 = a.1 != $const86.1      ['$88compare_op.2', '$const86.1', 'a.1']
    bool90 = global(bool: <class 'bool'>)    ['bool90']
    $90pred = call bool90($88compare_op.2, func=bool90, args=(Var($88compare_op.2, numbers.py:229),), kws=(), vararg=None, varkwarg=None, target=None) ['$88compare_op.2', '$90pred', 'bool90']
    branch $90pred, 92, 96                   ['$90pred']
label 92:
    $const92.0 = const(int, 0)               ['$const92.0']
    $94return_value.1 = cast(value=$const92.0) ['$94return_value.1', '$const92.0']
    return $94return_value.1                 ['$94return_value.1']
label 96:
    jump 106                                 []
label 98:
    invert = const(bool, False)              ['invert']
    exp = b                                  ['b', 'exp']
    jump 106                                 []
label 106:
    $const108.1 = const(int, 65536)          ['$const108.1']
    $110compare_op.2 = exp > $const108.1     ['$110compare_op.2', '$const108.1', 'exp']
    bool112 = global(bool: <class 'bool'>)   ['bool112']
    $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None) ['$110compare_op.2', '$112pred', 'bool112']
    branch $112pred, 114, 130                ['$112pred']
label 114:
    $114load_global.0 = global(math: <module 'math' (built-in)>) ['$114load_global.0']
    $116load_method.1 = getattr(value=$114load_global.0, attr=pow) ['$114load_global.0', '$116load_method.1']
    $120load_global.3 = global(float: <class 'float'>) ['$120load_global.3']
    $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.3', '$124call_function.5', 'b']
    $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None) ['$116load_method.1', '$124call_function.5', '$126call_method.6', 'a.1']
    $128return_value.7 = cast(value=$126call_method.6) ['$126call_method.6', '$128return_value.7']
    return $128return_value.7                ['$128return_value.7']
label 130:
    $const132.1 = const(int, 0)              ['$const132.1']
    $134compare_op.2 = exp != $const132.1    ['$134compare_op.2', '$const132.1', 'exp']
    bool136 = global(bool: <class 'bool'>)   ['bool136']
    $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$134compare_op.2', '$136pred', 'bool136']
    branch $136pred, 138, 178                ['$136pred']
label 138:
    $const140.1 = const(int, 1)              ['$const140.1']
    $142binary_and.2 = exp & $const140.1     ['$142binary_and.2', '$const140.1', 'exp']
    bool144 = global(bool: <class 'bool'>)   ['bool144']
    $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None) ['$142binary_and.2', '$144pred', 'bool144']
    branch $144pred, 146, 154                ['$144pred']
label 146:
    $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$150inplace_multiply.2', 'a.1', 'r']
    r = $150inplace_multiply.2               ['$150inplace_multiply.2', 'r']
    jump 154                                 []
label 154:
    $const156.1 = const(int, 1)              ['$const156.1']
    $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined) ['$158inplace_rshift.2', '$const156.1', 'exp']
    exp = $158inplace_rshift.2               ['$158inplace_rshift.2', 'exp']
    $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined) ['$166inplace_multiply.5', 'a.1', 'a.1']
    a.1 = $166inplace_multiply.5             ['$166inplace_multiply.5', 'a.1']
    $const172.7 = const(int, 0)              ['$const172.7']
    $174compare_op.8 = exp != $const172.7    ['$174compare_op.8', '$const172.7', 'exp']
    bool176 = global(bool: <class 'bool'>)   ['bool176']
    $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None) ['$174compare_op.8', '$176pred', 'bool176']
    branch $176pred, 138, 178                ['$176pred']
label 178:
    bool180 = global(bool: <class 'bool'>)   ['bool180']
    $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None) ['$180pred', 'bool180', 'invert']
    branch $180pred, 182, 190                ['$180pred']
label 182:
    $const182.0 = const(float, 1.0)          ['$const182.0']
    $186binary_true_divide.2 = $const182.0 / r ['$186binary_true_divide.2', '$const182.0', 'r']
    $188return_value.3 = cast(value=$186binary_true_divide.2) ['$186binary_true_divide.2', '$188return_value.3']
    return $188return_value.3                ['$188return_value.3']
label 190:
    $192return_value.1 = cast(value=r)       ['$192return_value.1', 'r']
    return $192return_value.1                ['$192return_value.1']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087528b8550>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
numba.core.ssa - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
numba.core.ssa - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $const20.7 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
numba.core.ssa - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $24pred, 26, 98
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 26
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087528b8550>
numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
numba.core.ssa - DEBUG - on stmt: $const38.4 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
numba.core.ssa - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $42pred, 44, 48
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 44
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087528b8550>
numba.core.ssa - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 48
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087528b8550>
numba.core.ssa - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: jump 96
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 96
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087528b8550>
numba.core.ssa - DEBUG - on stmt: jump 106
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 98
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087528b8550>
numba.core.ssa - DEBUG - on stmt: invert = const(bool, False)
numba.core.ssa - DEBUG - on stmt: exp = b
numba.core.ssa - DEBUG - on stmt: jump 106
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 106
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087528b8550>
numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 65536)
numba.core.ssa - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
numba.core.ssa - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $112pred, 114, 130
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 114
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087528b8550>
numba.core.ssa - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
numba.core.ssa - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
numba.core.ssa - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
numba.core.ssa - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
numba.core.ssa - DEBUG - on stmt: return $128return_value.7
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 130
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087528b8550>
numba.core.ssa - DEBUG - on stmt: $const132.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
numba.core.ssa - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $136pred, 138, 178
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 138
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087528b8550>
numba.core.ssa - DEBUG - on stmt: $const140.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
numba.core.ssa - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $144pred, 146, 154
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 146
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087528b8550>
numba.core.ssa - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: r = $150inplace_multiply.2
numba.core.ssa - DEBUG - on stmt: jump 154
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 154
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087528b8550>
numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: exp = $158inplace_rshift.2
numba.core.ssa - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: a.1 = $166inplace_multiply.5
numba.core.ssa - DEBUG - on stmt: $const172.7 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $174compare_op.8 = exp != $const172.7
numba.core.ssa - DEBUG - on stmt: bool176 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $176pred, 138, 178
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 178
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087528b8550>
numba.core.ssa - DEBUG - on stmt: bool180 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $180pred, 182, 190
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 182
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087528b8550>
numba.core.ssa - DEBUG - on stmt: $const182.0 = const(float, 1.0)
numba.core.ssa - DEBUG - on stmt: $186binary_true_divide.2 = $const182.0 / r
numba.core.ssa - DEBUG - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
numba.core.ssa - DEBUG - on stmt: return $188return_value.3
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 190
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087528b8550>
numba.core.ssa - DEBUG - on stmt: $192return_value.1 = cast(value=r)
numba.core.ssa - DEBUG - on stmt: return $192return_value.1
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10load_deref.3': [(<numba.core.ir.Assign object at 0x7087528c8070>,
                                  0)],
             '$110compare_op.2': [(<numba.core.ir.Assign object at 0x7087528d9db0>,
                                   106)],
             '$112pred': [(<numba.core.ir.Assign object at 0x7087528da020>,
                           106)],
             '$114load_global.0': [(<numba.core.ir.Assign object at 0x7087528da260>,
                                    114)],
             '$116load_method.1': [(<numba.core.ir.Assign object at 0x7087528da3e0>,
                                    114)],
             '$120load_global.3': [(<numba.core.ir.Assign object at 0x70875289e650>,
                                    114)],
             '$124call_function.5': [(<numba.core.ir.Assign object at 0x70875289f040>,
                                      114)],
             '$126call_method.6': [(<numba.core.ir.Assign object at 0x70875289e260>,
                                    114)],
             '$128return_value.7': [(<numba.core.ir.Assign object at 0x70875289e320>,
                                     114)],
             '$134compare_op.2': [(<numba.core.ir.Assign object at 0x70875289df00>,
                                   130)],
             '$136pred': [(<numba.core.ir.Assign object at 0x70875289d8d0>,
                           130)],
             '$142binary_and.2': [(<numba.core.ir.Assign object at 0x70875289d4b0>,
                                   138)],
             '$144pred': [(<numba.core.ir.Assign object at 0x70875289e680>,
                           138)],
             '$150inplace_multiply.2': [(<numba.core.ir.Assign object at 0x70875289c9d0>,
                                         146)],
             '$158inplace_rshift.2': [(<numba.core.ir.Assign object at 0x70875289cd00>,
                                       154)],
             '$166inplace_multiply.5': [(<numba.core.ir.Assign object at 0x70875289c670>,
                                         154)],
             '$174compare_op.8': [(<numba.core.ir.Assign object at 0x70875289c0d0>,
                                   154)],
             '$176pred': [(<numba.core.ir.Assign object at 0x70875289ea70>,
                           154)],
             '$180pred': [(<numba.core.ir.Assign object at 0x70875289c880>,
                           178)],
             '$186binary_true_divide.2': [(<numba.core.ir.Assign object at 0x708752830d00>,
                                           182)],
             '$188return_value.3': [(<numba.core.ir.Assign object at 0x708752833f10>,
                                     182)],
             '$192return_value.1': [(<numba.core.ir.Assign object at 0x708752833a60>,
                                     190)],
             '$22compare_op.8': [(<numba.core.ir.Assign object at 0x7087528c9270>,
                                  0)],
             '$24pred': [(<numba.core.ir.Assign object at 0x7087528c94e0>, 0)],
             '$2load_deref.0': [(<numba.core.ir.Assign object at 0x7087528c82e0>,
                                 0)],
             '$40compare_op.5': [(<numba.core.ir.Assign object at 0x7087528c9f30>,
                                  26)],
             '$42pred': [(<numba.core.ir.Assign object at 0x7087528ca1a0>, 26)],
             '$44load_global.0': [(<numba.core.ir.Assign object at 0x7087528ca2c0>,
                                   44)],
             '$48load_deref.0': [(<numba.core.ir.Assign object at 0x7087528ca5c0>,
                                  48)],
             '$50pred': [(<numba.core.ir.Assign object at 0x7087528ca860>, 48)],
             '$const108.1': [(<numba.core.ir.Assign object at 0x7087528d9c00>,
                              106)],
             '$const132.1': [(<numba.core.ir.Assign object at 0x70875289dc30>,
                              130)],
             '$const140.1': [(<numba.core.ir.Assign object at 0x70875289dbd0>,
                              138)],
             '$const156.1': [(<numba.core.ir.Assign object at 0x70875289c7c0>,
                              154)],
             '$const172.7': [(<numba.core.ir.Assign object at 0x70875289c790>,
                              154)],
             '$const182.0': [(<numba.core.ir.Assign object at 0x7087528336a0>,
                              182)],
             '$const20.7': [(<numba.core.ir.Assign object at 0x7087528c90c0>,
                             0)],
             '$const38.4': [(<numba.core.ir.Assign object at 0x7087528c9d80>,
                             26)],
             '$const4.1': [(<numba.core.ir.Assign object at 0x7087528c8ac0>,
                            0)],
             'a': [(<numba.core.ir.Assign object at 0x7087528c85e0>, 0)],
             'a.1': [(<numba.core.ir.Assign object at 0x7087528c8d60>, 0),
                     (<numba.core.ir.Assign object at 0x70875289c460>, 154)],
             'b': [(<numba.core.ir.Assign object at 0x7087528c86d0>, 0)],
             'bool112': [(<numba.core.ir.Assign object at 0x7087528d9f00>,
                          106)],
             'bool136': [(<numba.core.ir.Assign object at 0x70875289dae0>,
                          130)],
             'bool144': [(<numba.core.ir.Assign object at 0x70875289d570>,
                          138)],
             'bool176': [(<numba.core.ir.Assign object at 0x70875289ece0>,
                          154)],
             'bool180': [(<numba.core.ir.Assign object at 0x70875289ea10>,
                          178)],
             'bool24': [(<numba.core.ir.Assign object at 0x7087528c93c0>, 0)],
             'bool42': [(<numba.core.ir.Assign object at 0x7087528ca080>, 26)],
             'bool50': [(<numba.core.ir.Assign object at 0x7087528ca740>, 48)],
             'exp': [(<numba.core.ir.Assign object at 0x7087528c99c0>, 26),
                     (<numba.core.ir.Assign object at 0x7087528d9990>, 98),
                     (<numba.core.ir.Assign object at 0x70875289eda0>, 154)],
             'invert': [(<numba.core.ir.Assign object at 0x7087528c9600>, 26),
                        (<numba.core.ir.Assign object at 0x7087528d96c0>, 98)],
             'r': [(<numba.core.ir.Assign object at 0x7087528c88e0>, 0),
                   (<numba.core.ir.Assign object at 0x70875289d2a0>, 146)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7087528b8550>
numba.core.ssa - DEBUG - Fix SSA violator on var r
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752831e40>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
numba.core.ssa - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - first assign: r
numba.core.ssa - DEBUG - replaced with: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
numba.core.ssa - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $const20.7 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
numba.core.ssa - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $24pred, 26, 98
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 26
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752831e40>
numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
numba.core.ssa - DEBUG - on stmt: $const38.4 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
numba.core.ssa - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $42pred, 44, 48
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 44
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752831e40>
numba.core.ssa - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752831e40>
numba.core.ssa - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: jump 96
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 96
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752831e40>
numba.core.ssa - DEBUG - on stmt: jump 106
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752831e40>
numba.core.ssa - DEBUG - on stmt: invert = const(bool, False)
numba.core.ssa - DEBUG - on stmt: exp = b
numba.core.ssa - DEBUG - on stmt: jump 106
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 106
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752831e40>
numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 65536)
numba.core.ssa - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
numba.core.ssa - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $112pred, 114, 130
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 114
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752831e40>
numba.core.ssa - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
numba.core.ssa - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
numba.core.ssa - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
numba.core.ssa - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
numba.core.ssa - DEBUG - on stmt: return $128return_value.7
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 130
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752831e40>
numba.core.ssa - DEBUG - on stmt: $const132.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
numba.core.ssa - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $136pred, 138, 178
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 138
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752831e40>
numba.core.ssa - DEBUG - on stmt: $const140.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
numba.core.ssa - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $144pred, 146, 154
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752831e40>
numba.core.ssa - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: r = $150inplace_multiply.2
numba.core.ssa - DEBUG - replaced with: r.1 = $150inplace_multiply.2
numba.core.ssa - DEBUG - on stmt: jump 154
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 154
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752831e40>
numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: exp = $158inplace_rshift.2
numba.core.ssa - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: a.1 = $166inplace_multiply.5
numba.core.ssa - DEBUG - on stmt: $const172.7 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $174compare_op.8 = exp != $const172.7
numba.core.ssa - DEBUG - on stmt: bool176 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $176pred, 138, 178
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752831e40>
numba.core.ssa - DEBUG - on stmt: bool180 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $180pred, 182, 190
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 182
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752831e40>
numba.core.ssa - DEBUG - on stmt: $const182.0 = const(float, 1.0)
numba.core.ssa - DEBUG - on stmt: $186binary_true_divide.2 = $const182.0 / r
numba.core.ssa - DEBUG - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
numba.core.ssa - DEBUG - on stmt: return $188return_value.3
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 190
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752831e40>
numba.core.ssa - DEBUG - on stmt: $192return_value.1 = cast(value=r)
numba.core.ssa - DEBUG - on stmt: return $192return_value.1
numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x708752832500>],
             146: [<numba.core.ir.Assign object at 0x708752831b70>]})
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752831e40>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
numba.core.ssa - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
numba.core.ssa - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $const20.7 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
numba.core.ssa - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $24pred, 26, 98
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 26
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752831e40>
numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
numba.core.ssa - DEBUG - on stmt: $const38.4 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
numba.core.ssa - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $42pred, 44, 48
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 44
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752831e40>
numba.core.ssa - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752831e40>
numba.core.ssa - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: jump 96
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 96
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752831e40>
numba.core.ssa - DEBUG - on stmt: jump 106
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752831e40>
numba.core.ssa - DEBUG - on stmt: invert = const(bool, False)
numba.core.ssa - DEBUG - on stmt: exp = b
numba.core.ssa - DEBUG - on stmt: jump 106
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 106
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752831e40>
numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 65536)
numba.core.ssa - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
numba.core.ssa - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $112pred, 114, 130
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 114
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752831e40>
numba.core.ssa - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
numba.core.ssa - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
numba.core.ssa - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
numba.core.ssa - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
numba.core.ssa - DEBUG - on stmt: return $128return_value.7
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 130
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752831e40>
numba.core.ssa - DEBUG - on stmt: $const132.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
numba.core.ssa - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $136pred, 138, 178
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 138
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752831e40>
numba.core.ssa - DEBUG - on stmt: $const140.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
numba.core.ssa - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $144pred, 146, 154
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752831e40>
numba.core.ssa - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def var='r' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def_from_top label 146
numba.core.ssa - DEBUG - idom 138 from label 146
numba.core.ssa - DEBUG - find_def_from_bottom label 138
numba.core.ssa - DEBUG - find_def_from_top label 138
numba.core.ssa - DEBUG - insert phi node r.2 = phi(incoming_values=[], incoming_blocks=[]) at 138
numba.core.ssa - DEBUG - find_def_from_bottom label 130
numba.core.ssa - DEBUG - find_def_from_top label 130
numba.core.ssa - DEBUG - idom 106 from label 130
numba.core.ssa - DEBUG - find_def_from_bottom label 106
numba.core.ssa - DEBUG - find_def_from_top label 106
numba.core.ssa - DEBUG - idom 0 from label 106
numba.core.ssa - DEBUG - find_def_from_bottom label 0
numba.core.ssa - DEBUG - incoming_def r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - find_def_from_bottom label 154
numba.core.ssa - DEBUG - find_def_from_top label 154
numba.core.ssa - DEBUG - insert phi node r.3 = phi(incoming_values=[], incoming_blocks=[]) at 154
numba.core.ssa - DEBUG - find_def_from_bottom label 138
numba.core.ssa - DEBUG - incoming_def r.2 = phi(incoming_values=[Var(r, numbers.py:216)], incoming_blocks=[130])
numba.core.ssa - DEBUG - find_def_from_bottom label 146
numba.core.ssa - DEBUG - incoming_def r.1 = $150inplace_multiply.2
numba.core.ssa - DEBUG - incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
numba.core.ssa - DEBUG - replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: r.1 = $150inplace_multiply.2
numba.core.ssa - DEBUG - on stmt: jump 154
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 154
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752831e40>
numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: exp = $158inplace_rshift.2
numba.core.ssa - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: a.1 = $166inplace_multiply.5
numba.core.ssa - DEBUG - on stmt: $const172.7 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $174compare_op.8 = exp != $const172.7
numba.core.ssa - DEBUG - on stmt: bool176 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $176pred, 138, 178
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752831e40>
numba.core.ssa - DEBUG - on stmt: bool180 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $180pred, 182, 190
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 182
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752831e40>
numba.core.ssa - DEBUG - on stmt: $const182.0 = const(float, 1.0)
numba.core.ssa - DEBUG - on stmt: $186binary_true_divide.2 = $const182.0 / r
numba.core.ssa - DEBUG - find_def var='r' stmt=$186binary_true_divide.2 = $const182.0 / r
numba.core.ssa - DEBUG - find_def_from_top label 182
numba.core.ssa - DEBUG - idom 178 from label 182
numba.core.ssa - DEBUG - find_def_from_bottom label 178
numba.core.ssa - DEBUG - find_def_from_top label 178
numba.core.ssa - DEBUG - insert phi node r.4 = phi(incoming_values=[], incoming_blocks=[]) at 178
numba.core.ssa - DEBUG - find_def_from_bottom label 130
numba.core.ssa - DEBUG - find_def_from_top label 130
numba.core.ssa - DEBUG - idom 106 from label 130
numba.core.ssa - DEBUG - find_def_from_bottom label 106
numba.core.ssa - DEBUG - find_def_from_top label 106
numba.core.ssa - DEBUG - idom 0 from label 106
numba.core.ssa - DEBUG - find_def_from_bottom label 0
numba.core.ssa - DEBUG - incoming_def r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - find_def_from_bottom label 154
numba.core.ssa - DEBUG - incoming_def r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
numba.core.ssa - DEBUG - replaced with: $186binary_true_divide.2 = $const182.0 / r.4
numba.core.ssa - DEBUG - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
numba.core.ssa - DEBUG - on stmt: return $188return_value.3
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 190
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752831e40>
numba.core.ssa - DEBUG - on stmt: $192return_value.1 = cast(value=r)
numba.core.ssa - DEBUG - find_def var='r' stmt=$192return_value.1 = cast(value=r)
numba.core.ssa - DEBUG - find_def_from_top label 190
numba.core.ssa - DEBUG - idom 178 from label 190
numba.core.ssa - DEBUG - find_def_from_bottom label 178
numba.core.ssa - DEBUG - replaced with: $192return_value.1 = cast(value=r.4)
numba.core.ssa - DEBUG - on stmt: return $192return_value.1
numba.core.ssa - DEBUG - Fix SSA violator on var a.1
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752832650>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
numba.core.ssa - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
numba.core.ssa - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - first assign: a.1
numba.core.ssa - DEBUG - replaced with: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $const20.7 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
numba.core.ssa - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $24pred, 26, 98
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 26
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752832650>
numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
numba.core.ssa - DEBUG - on stmt: $const38.4 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
numba.core.ssa - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $42pred, 44, 48
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 44
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752832650>
numba.core.ssa - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752832650>
numba.core.ssa - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: jump 96
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 96
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752832650>
numba.core.ssa - DEBUG - on stmt: jump 106
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752832650>
numba.core.ssa - DEBUG - on stmt: invert = const(bool, False)
numba.core.ssa - DEBUG - on stmt: exp = b
numba.core.ssa - DEBUG - on stmt: jump 106
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 106
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752832650>
numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 65536)
numba.core.ssa - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
numba.core.ssa - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $112pred, 114, 130
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 114
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752832650>
numba.core.ssa - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
numba.core.ssa - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
numba.core.ssa - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
numba.core.ssa - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
numba.core.ssa - DEBUG - on stmt: return $128return_value.7
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 130
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752832650>
numba.core.ssa - DEBUG - on stmt: $const132.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
numba.core.ssa - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $136pred, 138, 178
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 138
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752832650>
numba.core.ssa - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
numba.core.ssa - DEBUG - on stmt: $const140.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
numba.core.ssa - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $144pred, 146, 154
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752832650>
numba.core.ssa - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: r.1 = $150inplace_multiply.2
numba.core.ssa - DEBUG - on stmt: jump 154
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 154
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752832650>
numba.core.ssa - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: exp = $158inplace_rshift.2
numba.core.ssa - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: a.1 = $166inplace_multiply.5
numba.core.ssa - DEBUG - replaced with: a.1.1 = $166inplace_multiply.5
numba.core.ssa - DEBUG - on stmt: $const172.7 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $174compare_op.8 = exp != $const172.7
numba.core.ssa - DEBUG - on stmt: bool176 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $176pred, 138, 178
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752832650>
numba.core.ssa - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
numba.core.ssa - DEBUG - on stmt: bool180 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $180pred, 182, 190
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 182
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752832650>
numba.core.ssa - DEBUG - on stmt: $const182.0 = const(float, 1.0)
numba.core.ssa - DEBUG - on stmt: $186binary_true_divide.2 = $const182.0 / r.4
numba.core.ssa - DEBUG - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
numba.core.ssa - DEBUG - on stmt: return $188return_value.3
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 190
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752832650>
numba.core.ssa - DEBUG - on stmt: $192return_value.1 = cast(value=r.4)
numba.core.ssa - DEBUG - on stmt: return $192return_value.1
numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x708752831690>],
             154: [<numba.core.ir.Assign object at 0x708752831bd0>]})
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752833700>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
numba.core.ssa - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
numba.core.ssa - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $const20.7 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
numba.core.ssa - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $24pred, 26, 98
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 26
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752833700>
numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
numba.core.ssa - DEBUG - on stmt: $const38.4 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
numba.core.ssa - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $42pred, 44, 48
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 44
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752833700>
numba.core.ssa - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752833700>
numba.core.ssa - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: jump 96
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 96
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752833700>
numba.core.ssa - DEBUG - on stmt: jump 106
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752833700>
numba.core.ssa - DEBUG - on stmt: invert = const(bool, False)
numba.core.ssa - DEBUG - on stmt: exp = b
numba.core.ssa - DEBUG - on stmt: jump 106
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 106
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752833700>
numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 65536)
numba.core.ssa - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
numba.core.ssa - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $112pred, 114, 130
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 114
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752833700>
numba.core.ssa - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
numba.core.ssa - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
numba.core.ssa - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
numba.core.ssa - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - find_def var='a.1' stmt=$126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - find_def_from_top label 114
numba.core.ssa - DEBUG - idom 106 from label 114
numba.core.ssa - DEBUG - find_def_from_bottom label 106
numba.core.ssa - DEBUG - find_def_from_top label 106
numba.core.ssa - DEBUG - idom 0 from label 106
numba.core.ssa - DEBUG - find_def_from_bottom label 0
numba.core.ssa - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
numba.core.ssa - DEBUG - on stmt: return $128return_value.7
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 130
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752833700>
numba.core.ssa - DEBUG - on stmt: $const132.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
numba.core.ssa - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $136pred, 138, 178
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 138
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752833700>
numba.core.ssa - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
numba.core.ssa - DEBUG - on stmt: $const140.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
numba.core.ssa - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $144pred, 146, 154
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752833700>
numba.core.ssa - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def var='a.1' stmt=$150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def_from_top label 146
numba.core.ssa - DEBUG - idom 138 from label 146
numba.core.ssa - DEBUG - find_def_from_bottom label 138
numba.core.ssa - DEBUG - find_def_from_top label 138
numba.core.ssa - DEBUG - insert phi node a.1.2 = phi(incoming_values=[], incoming_blocks=[]) at 138
numba.core.ssa - DEBUG - find_def_from_bottom label 130
numba.core.ssa - DEBUG - find_def_from_top label 130
numba.core.ssa - DEBUG - idom 106 from label 130
numba.core.ssa - DEBUG - find_def_from_bottom label 106
numba.core.ssa - DEBUG - find_def_from_top label 106
numba.core.ssa - DEBUG - idom 0 from label 106
numba.core.ssa - DEBUG - find_def_from_bottom label 0
numba.core.ssa - DEBUG - incoming_def a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - find_def_from_bottom label 154
numba.core.ssa - DEBUG - incoming_def a.1.1 = $166inplace_multiply.5
numba.core.ssa - DEBUG - replaced with: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: r.1 = $150inplace_multiply.2
numba.core.ssa - DEBUG - on stmt: jump 154
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 154
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752833700>
numba.core.ssa - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: exp = $158inplace_rshift.2
numba.core.ssa - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def var='a.1' stmt=$166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1, rhs=a.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def_from_top label 154
numba.core.ssa - DEBUG - idom 138 from label 154
numba.core.ssa - DEBUG - find_def_from_bottom label 138
numba.core.ssa - DEBUG - replaced with: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: a.1.1 = $166inplace_multiply.5
numba.core.ssa - DEBUG - on stmt: $const172.7 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $174compare_op.8 = exp != $const172.7
numba.core.ssa - DEBUG - on stmt: bool176 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $176pred, 138, 178
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752833700>
numba.core.ssa - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
numba.core.ssa - DEBUG - on stmt: bool180 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $180pred, 182, 190
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 182
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752833700>
numba.core.ssa - DEBUG - on stmt: $const182.0 = const(float, 1.0)
numba.core.ssa - DEBUG - on stmt: $186binary_true_divide.2 = $const182.0 / r.4
numba.core.ssa - DEBUG - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
numba.core.ssa - DEBUG - on stmt: return $188return_value.3
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 190
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708752833700>
numba.core.ssa - DEBUG - on stmt: $192return_value.1 = cast(value=r.4)
numba.core.ssa - DEBUG - on stmt: return $192return_value.1
numba.core.ssa - DEBUG - Fix SSA violator on var invert
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752832e30>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
numba.core.ssa - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
numba.core.ssa - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $const20.7 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
numba.core.ssa - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $24pred, 26, 98
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 26
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752832e30>
numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
numba.core.ssa - DEBUG - first assign: invert
numba.core.ssa - DEBUG - replaced with: invert = const(bool, True)
numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
numba.core.ssa - DEBUG - on stmt: $const38.4 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
numba.core.ssa - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $42pred, 44, 48
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 44
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752832e30>
numba.core.ssa - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752832e30>
numba.core.ssa - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: jump 96
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 96
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752832e30>
numba.core.ssa - DEBUG - on stmt: jump 106
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752832e30>
numba.core.ssa - DEBUG - on stmt: invert = const(bool, False)
numba.core.ssa - DEBUG - replaced with: invert.1 = const(bool, False)
numba.core.ssa - DEBUG - on stmt: exp = b
numba.core.ssa - DEBUG - on stmt: jump 106
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 106
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752832e30>
numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 65536)
numba.core.ssa - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
numba.core.ssa - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $112pred, 114, 130
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 114
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752832e30>
numba.core.ssa - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
numba.core.ssa - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
numba.core.ssa - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
numba.core.ssa - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
numba.core.ssa - DEBUG - on stmt: return $128return_value.7
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 130
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752832e30>
numba.core.ssa - DEBUG - on stmt: $const132.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
numba.core.ssa - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $136pred, 138, 178
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 138
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752832e30>
numba.core.ssa - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[130, 154])
numba.core.ssa - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
numba.core.ssa - DEBUG - on stmt: $const140.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
numba.core.ssa - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $144pred, 146, 154
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752832e30>
numba.core.ssa - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: r.1 = $150inplace_multiply.2
numba.core.ssa - DEBUG - on stmt: jump 154
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 154
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752832e30>
numba.core.ssa - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: exp = $158inplace_rshift.2
numba.core.ssa - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: a.1.1 = $166inplace_multiply.5
numba.core.ssa - DEBUG - on stmt: $const172.7 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $174compare_op.8 = exp != $const172.7
numba.core.ssa - DEBUG - on stmt: bool176 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $176pred, 138, 178
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752832e30>
numba.core.ssa - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
numba.core.ssa - DEBUG - on stmt: bool180 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $180pred, 182, 190
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 182
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752832e30>
numba.core.ssa - DEBUG - on stmt: $const182.0 = const(float, 1.0)
numba.core.ssa - DEBUG - on stmt: $186binary_true_divide.2 = $const182.0 / r.4
numba.core.ssa - DEBUG - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
numba.core.ssa - DEBUG - on stmt: return $188return_value.3
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 190
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752832e30>
numba.core.ssa - DEBUG - on stmt: $192return_value.1 = cast(value=r.4)
numba.core.ssa - DEBUG - on stmt: return $192return_value.1
numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x7087528319c0>],
             98: [<numba.core.ir.Assign object at 0x7087528329e0>]})
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087528330d0>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
numba.core.ssa - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
numba.core.ssa - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $const20.7 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
numba.core.ssa - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $24pred, 26, 98
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 26
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087528330d0>
numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
numba.core.ssa - DEBUG - on stmt: $const38.4 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
numba.core.ssa - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $42pred, 44, 48
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 44
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087528330d0>
numba.core.ssa - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087528330d0>
numba.core.ssa - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: jump 96
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 96
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087528330d0>
numba.core.ssa - DEBUG - on stmt: jump 106
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087528330d0>
numba.core.ssa - DEBUG - on stmt: invert.1 = const(bool, False)
numba.core.ssa - DEBUG - on stmt: exp = b
numba.core.ssa - DEBUG - on stmt: jump 106
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 106
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087528330d0>
numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 65536)
numba.core.ssa - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
numba.core.ssa - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $112pred, 114, 130
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 114
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087528330d0>
numba.core.ssa - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
numba.core.ssa - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
numba.core.ssa - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
numba.core.ssa - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
numba.core.ssa - DEBUG - on stmt: return $128return_value.7
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 130
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087528330d0>
numba.core.ssa - DEBUG - on stmt: $const132.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
numba.core.ssa - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $136pred, 138, 178
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 138
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087528330d0>
numba.core.ssa - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[130, 154])
numba.core.ssa - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
numba.core.ssa - DEBUG - on stmt: $const140.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
numba.core.ssa - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $144pred, 146, 154
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087528330d0>
numba.core.ssa - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: r.1 = $150inplace_multiply.2
numba.core.ssa - DEBUG - on stmt: jump 154
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 154
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087528330d0>
numba.core.ssa - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: exp = $158inplace_rshift.2
numba.core.ssa - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: a.1.1 = $166inplace_multiply.5
numba.core.ssa - DEBUG - on stmt: $const172.7 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $174compare_op.8 = exp != $const172.7
numba.core.ssa - DEBUG - on stmt: bool176 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $176pred, 138, 178
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087528330d0>
numba.core.ssa - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
numba.core.ssa - DEBUG - on stmt: bool180 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - find_def var='invert' stmt=$180pred = call bool180(invert, func=bool180, args=(Var(invert, numbers.py:219),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - find_def_from_top label 178
numba.core.ssa - DEBUG - idom 130 from label 178
numba.core.ssa - DEBUG - find_def_from_bottom label 130
numba.core.ssa - DEBUG - find_def_from_top label 130
numba.core.ssa - DEBUG - idom 106 from label 130
numba.core.ssa - DEBUG - find_def_from_bottom label 106
numba.core.ssa - DEBUG - find_def_from_top label 106
numba.core.ssa - DEBUG - insert phi node invert.2 = phi(incoming_values=[], incoming_blocks=[]) at 106
numba.core.ssa - DEBUG - find_def_from_bottom label 96
numba.core.ssa - DEBUG - find_def_from_top label 96
numba.core.ssa - DEBUG - idom 48 from label 96
numba.core.ssa - DEBUG - find_def_from_bottom label 48
numba.core.ssa - DEBUG - find_def_from_top label 48
numba.core.ssa - DEBUG - idom 26 from label 48
numba.core.ssa - DEBUG - find_def_from_bottom label 26
numba.core.ssa - DEBUG - incoming_def invert = const(bool, True)
numba.core.ssa - DEBUG - find_def_from_bottom label 98
numba.core.ssa - DEBUG - incoming_def invert.1 = const(bool, False)
numba.core.ssa - DEBUG - replaced with: $180pred = call bool180(invert.2, func=bool180, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $180pred, 182, 190
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 182
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087528330d0>
numba.core.ssa - DEBUG - on stmt: $const182.0 = const(float, 1.0)
numba.core.ssa - DEBUG - on stmt: $186binary_true_divide.2 = $const182.0 / r.4
numba.core.ssa - DEBUG - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
numba.core.ssa - DEBUG - on stmt: return $188return_value.3
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 190
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087528330d0>
numba.core.ssa - DEBUG - on stmt: $192return_value.1 = cast(value=r.4)
numba.core.ssa - DEBUG - on stmt: return $192return_value.1
numba.core.ssa - DEBUG - Fix SSA violator on var exp
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752833220>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
numba.core.ssa - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
numba.core.ssa - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $const20.7 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
numba.core.ssa - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $24pred, 26, 98
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 26
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752833220>
numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
numba.core.ssa - DEBUG - first assign: exp
numba.core.ssa - DEBUG - replaced with: exp = unary(fn=<built-in function neg>, value=b)
numba.core.ssa - DEBUG - on stmt: $const38.4 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
numba.core.ssa - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $42pred, 44, 48
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 44
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752833220>
numba.core.ssa - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752833220>
numba.core.ssa - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: jump 96
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 96
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752833220>
numba.core.ssa - DEBUG - on stmt: jump 106
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752833220>
numba.core.ssa - DEBUG - on stmt: invert.1 = const(bool, False)
numba.core.ssa - DEBUG - on stmt: exp = b
numba.core.ssa - DEBUG - replaced with: exp.1 = b
numba.core.ssa - DEBUG - on stmt: jump 106
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 106
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752833220>
numba.core.ssa - DEBUG - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[96, 98])
numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 65536)
numba.core.ssa - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
numba.core.ssa - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $112pred, 114, 130
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 114
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752833220>
numba.core.ssa - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
numba.core.ssa - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
numba.core.ssa - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
numba.core.ssa - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
numba.core.ssa - DEBUG - on stmt: return $128return_value.7
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 130
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752833220>
numba.core.ssa - DEBUG - on stmt: $const132.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
numba.core.ssa - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $136pred, 138, 178
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 138
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752833220>
numba.core.ssa - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[130, 154])
numba.core.ssa - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
numba.core.ssa - DEBUG - on stmt: $const140.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
numba.core.ssa - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $144pred, 146, 154
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752833220>
numba.core.ssa - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: r.1 = $150inplace_multiply.2
numba.core.ssa - DEBUG - on stmt: jump 154
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 154
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752833220>
numba.core.ssa - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: exp = $158inplace_rshift.2
numba.core.ssa - DEBUG - replaced with: exp.2 = $158inplace_rshift.2
numba.core.ssa - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: a.1.1 = $166inplace_multiply.5
numba.core.ssa - DEBUG - on stmt: $const172.7 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $174compare_op.8 = exp != $const172.7
numba.core.ssa - DEBUG - on stmt: bool176 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $176pred, 138, 178
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752833220>
numba.core.ssa - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
numba.core.ssa - DEBUG - on stmt: bool180 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $180pred = call bool180(invert.2, func=bool180, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $180pred, 182, 190
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 182
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752833220>
numba.core.ssa - DEBUG - on stmt: $const182.0 = const(float, 1.0)
numba.core.ssa - DEBUG - on stmt: $186binary_true_divide.2 = $const182.0 / r.4
numba.core.ssa - DEBUG - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
numba.core.ssa - DEBUG - on stmt: return $188return_value.3
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 190
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708752833220>
numba.core.ssa - DEBUG - on stmt: $192return_value.1 = cast(value=r.4)
numba.core.ssa - DEBUG - on stmt: return $192return_value.1
numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {26: [<numba.core.ir.Assign object at 0x708752830160>],
             98: [<numba.core.ir.Assign object at 0x7087528325f0>],
             154: [<numba.core.ir.Assign object at 0x708752833400>]})
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087528333d0>
numba.core.ssa - DEBUG - on stmt: a = arg(0, name=a)
numba.core.ssa - DEBUG - on stmt: b = arg(1, name=b)
numba.core.ssa - DEBUG - on stmt: $2load_deref.0 = freevar(tp: float64)
numba.core.ssa - DEBUG - on stmt: $const4.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: r = call $2load_deref.0($const4.1, func=$2load_deref.0, args=[Var($const4.1, numbers.py:216)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $10load_deref.3 = freevar(tp: float64)
numba.core.ssa - DEBUG - on stmt: a.1 = call $10load_deref.3(a, func=$10load_deref.3, args=[Var(a, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $const20.7 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $22compare_op.8 = b < $const20.7
numba.core.ssa - DEBUG - on stmt: bool24 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $24pred = call bool24($22compare_op.8, func=bool24, args=(Var($22compare_op.8, numbers.py:218),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $24pred, 26, 98
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 26
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087528333d0>
numba.core.ssa - DEBUG - on stmt: invert = const(bool, True)
numba.core.ssa - DEBUG - on stmt: exp = unary(fn=<built-in function neg>, value=b)
numba.core.ssa - DEBUG - on stmt: $const38.4 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $40compare_op.5 = exp < $const38.4
numba.core.ssa - DEBUG - find_def var='exp' stmt=$40compare_op.5 = exp < $const38.4
numba.core.ssa - DEBUG - on stmt: bool42 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $42pred = call bool42($40compare_op.5, func=bool42, args=(Var($40compare_op.5, numbers.py:221),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $42pred, 44, 48
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 44
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087528333d0>
numba.core.ssa - DEBUG - on stmt: $44load_global.0 = global(OverflowError: <class 'OverflowError'>)
numba.core.ssa - DEBUG - on stmt: <static> raise <class 'OverflowError'>
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 48
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087528333d0>
numba.core.ssa - DEBUG - on stmt: $48load_deref.0 = freevar(is_integer: False)
numba.core.ssa - DEBUG - on stmt: bool50 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $50pred = call bool50($48load_deref.0, func=bool50, args=(Var($48load_deref.0, numbers.py:223),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: jump 96
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 96
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087528333d0>
numba.core.ssa - DEBUG - on stmt: jump 106
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 98
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087528333d0>
numba.core.ssa - DEBUG - on stmt: invert.1 = const(bool, False)
numba.core.ssa - DEBUG - on stmt: exp.1 = b
numba.core.ssa - DEBUG - on stmt: jump 106
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 106
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087528333d0>
numba.core.ssa - DEBUG - on stmt: invert.2 = phi(incoming_values=[Var(invert, numbers.py:219), Var(invert.1, numbers.py:232)], incoming_blocks=[96, 98])
numba.core.ssa - DEBUG - on stmt: $const108.1 = const(int, 65536)
numba.core.ssa - DEBUG - on stmt: $110compare_op.2 = exp > $const108.1
numba.core.ssa - DEBUG - find_def var='exp' stmt=$110compare_op.2 = exp > $const108.1
numba.core.ssa - DEBUG - find_def_from_top label 106
numba.core.ssa - DEBUG - insert phi node exp.3 = phi(incoming_values=[], incoming_blocks=[]) at 106
numba.core.ssa - DEBUG - find_def_from_bottom label 96
numba.core.ssa - DEBUG - find_def_from_top label 96
numba.core.ssa - DEBUG - idom 48 from label 96
numba.core.ssa - DEBUG - find_def_from_bottom label 48
numba.core.ssa - DEBUG - find_def_from_top label 48
numba.core.ssa - DEBUG - idom 26 from label 48
numba.core.ssa - DEBUG - find_def_from_bottom label 26
numba.core.ssa - DEBUG - incoming_def exp = unary(fn=<built-in function neg>, value=b)
numba.core.ssa - DEBUG - find_def_from_bottom label 98
numba.core.ssa - DEBUG - incoming_def exp.1 = b
numba.core.ssa - DEBUG - replaced with: $110compare_op.2 = exp.3 > $const108.1
numba.core.ssa - DEBUG - on stmt: bool112 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $112pred = call bool112($110compare_op.2, func=bool112, args=(Var($110compare_op.2, numbers.py:234),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $112pred, 114, 130
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 114
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087528333d0>
numba.core.ssa - DEBUG - on stmt: $114load_global.0 = global(math: <module 'math' (built-in)>)
numba.core.ssa - DEBUG - on stmt: $116load_method.1 = getattr(value=$114load_global.0, attr=pow)
numba.core.ssa - DEBUG - on stmt: $120load_global.3 = global(float: <class 'float'>)
numba.core.ssa - DEBUG - on stmt: $124call_function.5 = call $120load_global.3(b, func=$120load_global.3, args=[Var(b, numbers.py:214)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $126call_method.6 = call $116load_method.1(a.1, $124call_function.5, func=$116load_method.1, args=[Var(a.1, numbers.py:217), Var($124call_function.5, numbers.py:236)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $128return_value.7 = cast(value=$126call_method.6)
numba.core.ssa - DEBUG - on stmt: return $128return_value.7
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 130
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087528333d0>
numba.core.ssa - DEBUG - on stmt: $const132.1 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $134compare_op.2 = exp != $const132.1
numba.core.ssa - DEBUG - find_def var='exp' stmt=$134compare_op.2 = exp != $const132.1
numba.core.ssa - DEBUG - find_def_from_top label 130
numba.core.ssa - DEBUG - idom 106 from label 130
numba.core.ssa - DEBUG - find_def_from_bottom label 106
numba.core.ssa - DEBUG - replaced with: $134compare_op.2 = exp.3 != $const132.1
numba.core.ssa - DEBUG - on stmt: bool136 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $136pred = call bool136($134compare_op.2, func=bool136, args=(Var($134compare_op.2, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $136pred, 138, 178
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 138
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087528333d0>
numba.core.ssa - DEBUG - on stmt: a.1.2 = phi(incoming_values=[Var(a.1, numbers.py:217), Var(a.1.1, numbers.py:241)], incoming_blocks=[130, 154])
numba.core.ssa - DEBUG - on stmt: r.2 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
numba.core.ssa - DEBUG - on stmt: $const140.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $142binary_and.2 = exp & $const140.1
numba.core.ssa - DEBUG - find_def var='exp' stmt=$142binary_and.2 = exp & $const140.1
numba.core.ssa - DEBUG - find_def_from_top label 138
numba.core.ssa - DEBUG - insert phi node exp.4 = phi(incoming_values=[], incoming_blocks=[]) at 138
numba.core.ssa - DEBUG - find_def_from_bottom label 130
numba.core.ssa - DEBUG - find_def_from_top label 130
numba.core.ssa - DEBUG - idom 106 from label 130
numba.core.ssa - DEBUG - find_def_from_bottom label 106
numba.core.ssa - DEBUG - incoming_def exp.3 = phi(incoming_values=[Var(exp, numbers.py:220), Var(exp.1, numbers.py:233)], incoming_blocks=[96, 98])
numba.core.ssa - DEBUG - find_def_from_bottom label 154
numba.core.ssa - DEBUG - incoming_def exp.2 = $158inplace_rshift.2
numba.core.ssa - DEBUG - replaced with: $142binary_and.2 = exp.4 & $const140.1
numba.core.ssa - DEBUG - on stmt: bool144 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $144pred = call bool144($142binary_and.2, func=bool144, args=(Var($142binary_and.2, numbers.py:238),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $144pred, 146, 154
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 146
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087528333d0>
numba.core.ssa - DEBUG - on stmt: $150inplace_multiply.2 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=r.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: r.1 = $150inplace_multiply.2
numba.core.ssa - DEBUG - on stmt: jump 154
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 154
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087528333d0>
numba.core.ssa - DEBUG - on stmt: r.3 = phi(incoming_values=[Var(r.2, numbers.py:239), Var(r.1, numbers.py:239)], incoming_blocks=[138, 146])
numba.core.ssa - DEBUG - on stmt: $const156.1 = const(int, 1)
numba.core.ssa - DEBUG - on stmt: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def var='exp' stmt=$158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - find_def_from_top label 154
numba.core.ssa - DEBUG - idom 138 from label 154
numba.core.ssa - DEBUG - find_def_from_bottom label 138
numba.core.ssa - DEBUG - replaced with: $158inplace_rshift.2 = inplace_binop(fn=<built-in function irshift>, immutable_fn=<built-in function rshift>, lhs=exp.4, rhs=$const156.1, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: exp.2 = $158inplace_rshift.2
numba.core.ssa - DEBUG - on stmt: $166inplace_multiply.5 = inplace_binop(fn=<built-in function imul>, immutable_fn=<built-in function mul>, lhs=a.1.2, rhs=a.1.2, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: a.1.1 = $166inplace_multiply.5
numba.core.ssa - DEBUG - on stmt: $const172.7 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $174compare_op.8 = exp != $const172.7
numba.core.ssa - DEBUG - find_def var='exp' stmt=$174compare_op.8 = exp != $const172.7
numba.core.ssa - DEBUG - replaced with: $174compare_op.8 = exp.2 != $const172.7
numba.core.ssa - DEBUG - on stmt: bool176 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $176pred = call bool176($174compare_op.8, func=bool176, args=(Var($174compare_op.8, numbers.py:237),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $176pred, 138, 178
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 178
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087528333d0>
numba.core.ssa - DEBUG - on stmt: r.4 = phi(incoming_values=[Var(r, numbers.py:216), Var(r.3, numbers.py:239)], incoming_blocks=[130, 154])
numba.core.ssa - DEBUG - on stmt: bool180 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $180pred = call bool180(invert.2, func=bool180, args=(Var(invert.2, numbers.py:243),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $180pred, 182, 190
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 182
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087528333d0>
numba.core.ssa - DEBUG - on stmt: $const182.0 = const(float, 1.0)
numba.core.ssa - DEBUG - on stmt: $186binary_true_divide.2 = $const182.0 / r.4
numba.core.ssa - DEBUG - on stmt: $188return_value.3 = cast(value=$186binary_true_divide.2)
numba.core.ssa - DEBUG - on stmt: return $188return_value.3
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 190
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x7087528333d0>
numba.core.ssa - DEBUG - on stmt: $192return_value.1 = cast(value=r.4)
numba.core.ssa - DEBUG - on stmt: return $192return_value.1
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2504)
           2	LOAD_GLOBAL(arg=0, lineno=2508)
           4	LOAD_METHOD(arg=1, lineno=2508)
           6	LOAD_FAST(arg=0, lineno=2508)
           8	CALL_METHOD(arg=1, lineno=2508)
          10	LOAD_CONST(arg=1, lineno=2508)
          12	LOAD_GLOBAL(arg=0, lineno=2508)
          14	LOAD_METHOD(arg=2, lineno=2508)
          16	LOAD_FAST(arg=0, lineno=2508)
          18	CALL_METHOD(arg=1, lineno=2508)
          20	BINARY_MULTIPLY(arg=None, lineno=2508)
          22	BINARY_ADD(arg=None, lineno=2508)
          24	RETURN_VALUE(arg=None, lineno=2508)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2504)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=2508)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_METHOD(arg=1, lineno=2508)
numba.core.byteflow - DEBUG - stack ['$2load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=2508)
numba.core.byteflow - DEBUG - stack ['$4load_method.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=CALL_METHOD(arg=1, lineno=2508)
numba.core.byteflow - DEBUG - stack ['$4load_method.1', '$x6.2']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=2508)
numba.core.byteflow - DEBUG - stack ['$8call_method.3']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_GLOBAL(arg=0, lineno=2508)
numba.core.byteflow - DEBUG - stack ['$8call_method.3', '$const10.4']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_METHOD(arg=2, lineno=2508)
numba.core.byteflow - DEBUG - stack ['$8call_method.3', '$const10.4', '$12load_global.5']
numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=2508)
numba.core.byteflow - DEBUG - stack ['$8call_method.3', '$const10.4', '$14load_method.6']
numba.core.byteflow - DEBUG - dispatch pc=18, inst=CALL_METHOD(arg=1, lineno=2508)
numba.core.byteflow - DEBUG - stack ['$8call_method.3', '$const10.4', '$14load_method.6', '$x16.7']
numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_MULTIPLY(arg=None, lineno=2508)
numba.core.byteflow - DEBUG - stack ['$8call_method.3', '$const10.4', '$18call_method.8']
numba.core.byteflow - DEBUG - dispatch pc=22, inst=BINARY_ADD(arg=None, lineno=2508)
numba.core.byteflow - DEBUG - stack ['$8call_method.3', '$20binary_multiply.9']
numba.core.byteflow - DEBUG - dispatch pc=24, inst=RETURN_VALUE(arg=None, lineno=2508)
numba.core.byteflow - DEBUG - stack ['$22binary_add.10']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - keep phismap: {}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_method.1'}), (6, {'res': '$x6.2'}), (8, {'func': '$4load_method.1', 'args': ['$x6.2'], 'res': '$8call_method.3'}), (10, {'res': '$const10.4'}), (12, {'res': '$12load_global.5'}), (14, {'item': '$12load_global.5', 'res': '$14load_method.6'}), (16, {'res': '$x16.7'}), (18, {'func': '$14load_method.6', 'args': ['$x16.7'], 'res': '$18call_method.8'}), (20, {'lhs': '$const10.4', 'rhs': '$18call_method.8', 'res': '$20binary_multiply.9'}), (22, {'lhs': '$8call_method.3', 'rhs': '$20binary_multiply.9', 'res': '$22binary_add.10'}), (24, {'retval': '$22binary_add.10', 'castval': '$24return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $2load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_method.1 = getattr(value=$2load_global.0, attr=cos) ['$2load_global.0', '$4load_method.1']
    $8call_method.3 = call $4load_method.1(x, func=$4load_method.1, args=[Var(x, utils.py:2504)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_method.1', '$8call_method.3', 'x']
    $const10.4 = const(complex, 1j)          ['$const10.4']
    $12load_global.5 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$12load_global.5']
    $14load_method.6 = getattr(value=$12load_global.5, attr=sin) ['$12load_global.5', '$14load_method.6']
    $18call_method.8 = call $14load_method.6(x, func=$14load_method.6, args=[Var(x, utils.py:2504)], kws=(), vararg=None, varkwarg=None, target=None) ['$14load_method.6', '$18call_method.8', 'x']
    $20binary_multiply.9 = $const10.4 * $18call_method.8 ['$18call_method.8', '$20binary_multiply.9', '$const10.4']
    $22binary_add.10 = $8call_method.3 + $20binary_multiply.9 ['$20binary_multiply.9', '$22binary_add.10', '$8call_method.3']
    $24return_value.11 = cast(value=$22binary_add.10) ['$22binary_add.10', '$24return_value.11']
    return $24return_value.11                ['$24return_value.11']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087528f51e0>
numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=cos)
numba.core.ssa - DEBUG - on stmt: $8call_method.3 = call $4load_method.1(x, func=$4load_method.1, args=[Var(x, utils.py:2504)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $const10.4 = const(complex, 1j)
numba.core.ssa - DEBUG - on stmt: $12load_global.5 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $14load_method.6 = getattr(value=$12load_global.5, attr=sin)
numba.core.ssa - DEBUG - on stmt: $18call_method.8 = call $14load_method.6(x, func=$14load_method.6, args=[Var(x, utils.py:2504)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $20binary_multiply.9 = $const10.4 * $18call_method.8
numba.core.ssa - DEBUG - on stmt: $22binary_add.10 = $8call_method.3 + $20binary_multiply.9
numba.core.ssa - DEBUG - on stmt: $24return_value.11 = cast(value=$22binary_add.10)
numba.core.ssa - DEBUG - on stmt: return $24return_value.11
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$12load_global.5': [(<numba.core.ir.Assign object at 0x7087528ebe80>,
                                   0)],
             '$14load_method.6': [(<numba.core.ir.Assign object at 0x7087528f4040>,
                                   0)],
             '$18call_method.8': [(<numba.core.ir.Assign object at 0x7087528eb460>,
                                   0)],
             '$20binary_multiply.9': [(<numba.core.ir.Assign object at 0x7087528eb340>,
                                       0)],
             '$22binary_add.10': [(<numba.core.ir.Assign object at 0x7087528ea5c0>,
                                   0)],
             '$24return_value.11': [(<numba.core.ir.Assign object at 0x7087528eac50>,
                                     0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7087528eb760>,
                                  0)],
             '$4load_method.1': [(<numba.core.ir.Assign object at 0x7087528eb8e0>,
                                  0)],
             '$8call_method.3': [(<numba.core.ir.Assign object at 0x7087528ebc10>,
                                  0)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x7087528ebd00>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x7087528ead40>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7087528f51e0>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=2504)
           2	LOAD_GLOBAL(arg=0, lineno=2508)
           4	LOAD_METHOD(arg=1, lineno=2508)
           6	LOAD_FAST(arg=0, lineno=2508)
           8	CALL_METHOD(arg=1, lineno=2508)
          10	LOAD_CONST(arg=1, lineno=2508)
          12	LOAD_GLOBAL(arg=0, lineno=2508)
          14	LOAD_METHOD(arg=2, lineno=2508)
          16	LOAD_FAST(arg=0, lineno=2508)
          18	CALL_METHOD(arg=1, lineno=2508)
          20	BINARY_MULTIPLY(arg=None, lineno=2508)
          22	BINARY_ADD(arg=None, lineno=2508)
          24	RETURN_VALUE(arg=None, lineno=2508)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=2504)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=2508)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_METHOD(arg=1, lineno=2508)
numba.core.byteflow - DEBUG - stack ['$2load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=2508)
numba.core.byteflow - DEBUG - stack ['$4load_method.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=CALL_METHOD(arg=1, lineno=2508)
numba.core.byteflow - DEBUG - stack ['$4load_method.1', '$x6.2']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=2508)
numba.core.byteflow - DEBUG - stack ['$8call_method.3']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_GLOBAL(arg=0, lineno=2508)
numba.core.byteflow - DEBUG - stack ['$8call_method.3', '$const10.4']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_METHOD(arg=2, lineno=2508)
numba.core.byteflow - DEBUG - stack ['$8call_method.3', '$const10.4', '$12load_global.5']
numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=0, lineno=2508)
numba.core.byteflow - DEBUG - stack ['$8call_method.3', '$const10.4', '$14load_method.6']
numba.core.byteflow - DEBUG - dispatch pc=18, inst=CALL_METHOD(arg=1, lineno=2508)
numba.core.byteflow - DEBUG - stack ['$8call_method.3', '$const10.4', '$14load_method.6', '$x16.7']
numba.core.byteflow - DEBUG - dispatch pc=20, inst=BINARY_MULTIPLY(arg=None, lineno=2508)
numba.core.byteflow - DEBUG - stack ['$8call_method.3', '$const10.4', '$18call_method.8']
numba.core.byteflow - DEBUG - dispatch pc=22, inst=BINARY_ADD(arg=None, lineno=2508)
numba.core.byteflow - DEBUG - stack ['$8call_method.3', '$20binary_multiply.9']
numba.core.byteflow - DEBUG - dispatch pc=24, inst=RETURN_VALUE(arg=None, lineno=2508)
numba.core.byteflow - DEBUG - stack ['$22binary_add.10']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - DEBUG - keep phismap: {}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_method.1'}), (6, {'res': '$x6.2'}), (8, {'func': '$4load_method.1', 'args': ['$x6.2'], 'res': '$8call_method.3'}), (10, {'res': '$const10.4'}), (12, {'res': '$12load_global.5'}), (14, {'item': '$12load_global.5', 'res': '$14load_method.6'}), (16, {'res': '$x16.7'}), (18, {'func': '$14load_method.6', 'args': ['$x16.7'], 'res': '$18call_method.8'}), (20, {'lhs': '$const10.4', 'rhs': '$18call_method.8', 'res': '$20binary_multiply.9'}), (22, {'lhs': '$8call_method.3', 'rhs': '$20binary_multiply.9', 'res': '$22binary_add.10'}), (24, {'retval': '$22binary_add.10', 'castval': '$24return_value.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    $2load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_method.1 = getattr(value=$2load_global.0, attr=cos) ['$2load_global.0', '$4load_method.1']
    $8call_method.3 = call $4load_method.1(x, func=$4load_method.1, args=[Var(x, utils.py:2504)], kws=(), vararg=None, varkwarg=None, target=None) ['$4load_method.1', '$8call_method.3', 'x']
    $const10.4 = const(complex, 1j)          ['$const10.4']
    $12load_global.5 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>) ['$12load_global.5']
    $14load_method.6 = getattr(value=$12load_global.5, attr=sin) ['$12load_global.5', '$14load_method.6']
    $18call_method.8 = call $14load_method.6(x, func=$14load_method.6, args=[Var(x, utils.py:2504)], kws=(), vararg=None, varkwarg=None, target=None) ['$14load_method.6', '$18call_method.8', 'x']
    $20binary_multiply.9 = $const10.4 * $18call_method.8 ['$18call_method.8', '$20binary_multiply.9', '$const10.4']
    $22binary_add.10 = $8call_method.3 + $20binary_multiply.9 ['$20binary_multiply.9', '$22binary_add.10', '$8call_method.3']
    $24return_value.11 = cast(value=$22binary_add.10) ['$22binary_add.10', '$24return_value.11']
    return $24return_value.11                ['$24return_value.11']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x7087528f5840>
numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $4load_method.1 = getattr(value=$2load_global.0, attr=cos)
numba.core.ssa - DEBUG - on stmt: $8call_method.3 = call $4load_method.1(x, func=$4load_method.1, args=[Var(x, utils.py:2504)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $const10.4 = const(complex, 1j)
numba.core.ssa - DEBUG - on stmt: $12load_global.5 = global(np: <module 'numpy' from '/home/venkat/.local/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - DEBUG - on stmt: $14load_method.6 = getattr(value=$12load_global.5, attr=sin)
numba.core.ssa - DEBUG - on stmt: $18call_method.8 = call $14load_method.6(x, func=$14load_method.6, args=[Var(x, utils.py:2504)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $20binary_multiply.9 = $const10.4 * $18call_method.8
numba.core.ssa - DEBUG - on stmt: $22binary_add.10 = $8call_method.3 + $20binary_multiply.9
numba.core.ssa - DEBUG - on stmt: $24return_value.11 = cast(value=$22binary_add.10)
numba.core.ssa - DEBUG - on stmt: return $24return_value.11
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$12load_global.5': [(<numba.core.ir.Assign object at 0x708752833370>,
                                   0)],
             '$14load_method.6': [(<numba.core.ir.Assign object at 0x708752833790>,
                                   0)],
             '$18call_method.8': [(<numba.core.ir.Assign object at 0x708752831d20>,
                                   0)],
             '$20binary_multiply.9': [(<numba.core.ir.Assign object at 0x7087528f53c0>,
                                       0)],
             '$22binary_add.10': [(<numba.core.ir.Assign object at 0x7087528f76a0>,
                                   0)],
             '$24return_value.11': [(<numba.core.ir.Assign object at 0x7087528f6e30>,
                                     0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x708752832770>,
                                  0)],
             '$4load_method.1': [(<numba.core.ir.Assign object at 0x708752833910>,
                                  0)],
             '$8call_method.3': [(<numba.core.ir.Assign object at 0x708752831db0>,
                                  0)],
             '$const10.4': [(<numba.core.ir.Assign object at 0x7087528319f0>,
                             0)],
             'x': [(<numba.core.ir.Assign object at 0x708752ed1bd0>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x7087528f5840>
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=629)
           2	LOAD_FAST(arg=1, lineno=636)
           4	LOAD_ATTR(arg=0, lineno=636)
           6	LOAD_CONST(arg=1, lineno=636)
           8	BINARY_SUBSCR(arg=None, lineno=636)
          10	STORE_FAST(arg=3, lineno=636)
          12	LOAD_FAST(arg=3, lineno=637)
          14	STORE_FAST(arg=4, lineno=637)
          16	LOAD_GLOBAL(arg=1, lineno=638)
          18	LOAD_FAST(arg=1, lineno=638)
          20	LOAD_ATTR(arg=0, lineno=638)
          22	LOAD_CONST(arg=2, lineno=638)
          24	BINARY_SUBSCR(arg=None, lineno=638)
          26	CALL_FUNCTION(arg=1, lineno=638)
          28	GET_ITER(arg=None, lineno=638)
>         30	FOR_ITER(arg=43, lineno=638)
          32	STORE_FAST(arg=5, lineno=638)
          34	LOAD_FAST(arg=5, lineno=639)
          36	LOAD_FAST(arg=2, lineno=639)
          38	BINARY_MULTIPLY(arg=None, lineno=639)
          40	STORE_FAST(arg=6, lineno=639)
          42	LOAD_FAST(arg=4, lineno=640)
          44	LOAD_FAST(arg=0, lineno=640)
          46	LOAD_ATTR(arg=0, lineno=640)
          48	LOAD_CONST(arg=2, lineno=640)
          50	BINARY_SUBSCR(arg=None, lineno=640)
          52	LOAD_FAST(arg=6, lineno=640)
          54	BINARY_SUBTRACT(arg=None, lineno=640)
          56	COMPARE_OP(arg=4, lineno=640)
          58	POP_JUMP_IF_FALSE(arg=38, lineno=640)
          60	LOAD_FAST(arg=0, lineno=641)
          62	LOAD_ATTR(arg=0, lineno=641)
          64	LOAD_CONST(arg=2, lineno=641)
          66	BINARY_SUBSCR(arg=None, lineno=641)
          68	LOAD_FAST(arg=6, lineno=641)
          70	BINARY_SUBTRACT(arg=None, lineno=641)
          72	STORE_FAST(arg=4, lineno=641)
>         74	LOAD_FAST(arg=0, lineno=643)
          76	LOAD_CONST(arg=3, lineno=643)
          78	LOAD_FAST(arg=6, lineno=643)
          80	LOAD_FAST(arg=6, lineno=643)
          82	LOAD_FAST(arg=4, lineno=643)
          84	BINARY_ADD(arg=None, lineno=643)
          86	BUILD_SLICE(arg=2, lineno=643)
          88	BUILD_TUPLE(arg=2, lineno=643)
          90	DUP_TOP_TWO(arg=None, lineno=643)
          92	BINARY_SUBSCR(arg=None, lineno=643)
          94	LOAD_FAST(arg=1, lineno=643)
          96	LOAD_CONST(arg=3, lineno=643)
          98	LOAD_CONST(arg=0, lineno=643)
         100	LOAD_FAST(arg=4, lineno=643)
         102	BUILD_SLICE(arg=2, lineno=643)
         104	LOAD_FAST(arg=5, lineno=643)
         106	BUILD_TUPLE(arg=3, lineno=643)
         108	BINARY_SUBSCR(arg=None, lineno=643)
         110	INPLACE_ADD(arg=None, lineno=643)
         112	ROT_THREE(arg=None, lineno=643)
         114	STORE_SUBSCR(arg=None, lineno=643)
         116	JUMP_ABSOLUTE(arg=16, lineno=643)
>        118	LOAD_CONST(arg=0, lineno=638)
         120	RETURN_VALUE(arg=None, lineno=638)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=629)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_FAST(arg=1, lineno=636)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_ATTR(arg=0, lineno=636)
numba.core.byteflow - DEBUG - stack ['$ytmp2.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_CONST(arg=1, lineno=636)
numba.core.byteflow - DEBUG - stack ['$4load_attr.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=BINARY_SUBSCR(arg=None, lineno=636)
numba.core.byteflow - DEBUG - stack ['$4load_attr.1', '$const6.2']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=STORE_FAST(arg=3, lineno=636)
numba.core.byteflow - DEBUG - stack ['$8binary_subscr.3']
numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=3, lineno=637)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=14, inst=STORE_FAST(arg=4, lineno=637)
numba.core.byteflow - DEBUG - stack ['$n_fft12.4']
numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_GLOBAL(arg=1, lineno=638)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_FAST(arg=1, lineno=638)
numba.core.byteflow - DEBUG - stack ['$16load_global.5']
numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_ATTR(arg=0, lineno=638)
numba.core.byteflow - DEBUG - stack ['$16load_global.5', '$ytmp18.6']
numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_CONST(arg=2, lineno=638)
numba.core.byteflow - DEBUG - stack ['$16load_global.5', '$20load_attr.7']
numba.core.byteflow - DEBUG - dispatch pc=24, inst=BINARY_SUBSCR(arg=None, lineno=638)
numba.core.byteflow - DEBUG - stack ['$16load_global.5', '$20load_attr.7', '$const22.8']
numba.core.byteflow - DEBUG - dispatch pc=26, inst=CALL_FUNCTION(arg=1, lineno=638)
numba.core.byteflow - DEBUG - stack ['$16load_global.5', '$24binary_subscr.9']
numba.core.byteflow - DEBUG - dispatch pc=28, inst=GET_ITER(arg=None, lineno=638)
numba.core.byteflow - DEBUG - stack ['$26call_function.10']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=30, stack=('$28get_iter.11',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=30 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi30.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=30 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=30, inst=FOR_ITER(arg=43, lineno=638)
numba.core.byteflow - DEBUG - stack ['$phi30.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=118, stack=(), blockstack=(), npush=0), Edge(pc=32, stack=('$phi30.0', '$30for_iter.2'), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=118 nstack_initial=0), State(pc_initial=32 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=118 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=118, inst=LOAD_CONST(arg=0, lineno=638)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=120, inst=RETURN_VALUE(arg=None, lineno=638)
numba.core.byteflow - DEBUG - stack ['$const118.0']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=32 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: ['$phi32.0', '$phi32.1']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=32 nstack_initial=2)
numba.core.byteflow - DEBUG - dispatch pc=32, inst=STORE_FAST(arg=5, lineno=638)
numba.core.byteflow - DEBUG - stack ['$phi32.0', '$phi32.1']
numba.core.byteflow - DEBUG - dispatch pc=34, inst=LOAD_FAST(arg=5, lineno=639)
numba.core.byteflow - DEBUG - stack ['$phi32.0']
numba.core.byteflow - DEBUG - dispatch pc=36, inst=LOAD_FAST(arg=2, lineno=639)
numba.core.byteflow - DEBUG - stack ['$phi32.0', '$frame34.2']
numba.core.byteflow - DEBUG - dispatch pc=38, inst=BINARY_MULTIPLY(arg=None, lineno=639)
numba.core.byteflow - DEBUG - stack ['$phi32.0', '$frame34.2', '$hop_length36.3']
numba.core.byteflow - DEBUG - dispatch pc=40, inst=STORE_FAST(arg=6, lineno=639)
numba.core.byteflow - DEBUG - stack ['$phi32.0', '$38binary_multiply.4']
numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_FAST(arg=4, lineno=640)
numba.core.byteflow - DEBUG - stack ['$phi32.0']
numba.core.byteflow - DEBUG - dispatch pc=44, inst=LOAD_FAST(arg=0, lineno=640)
numba.core.byteflow - DEBUG - stack ['$phi32.0', '$N42.5']
numba.core.byteflow - DEBUG - dispatch pc=46, inst=LOAD_ATTR(arg=0, lineno=640)
numba.core.byteflow - DEBUG - stack ['$phi32.0', '$N42.5', '$y44.6']
numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_CONST(arg=2, lineno=640)
numba.core.byteflow - DEBUG - stack ['$phi32.0', '$N42.5', '$46load_attr.7']
numba.core.byteflow - DEBUG - dispatch pc=50, inst=BINARY_SUBSCR(arg=None, lineno=640)
numba.core.byteflow - DEBUG - stack ['$phi32.0', '$N42.5', '$46load_attr.7', '$const48.8']
numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=6, lineno=640)
numba.core.byteflow - DEBUG - stack ['$phi32.0', '$N42.5', '$50binary_subscr.9']
numba.core.byteflow - DEBUG - dispatch pc=54, inst=BINARY_SUBTRACT(arg=None, lineno=640)
numba.core.byteflow - DEBUG - stack ['$phi32.0', '$N42.5', '$50binary_subscr.9', '$sample52.10']
numba.core.byteflow - DEBUG - dispatch pc=56, inst=COMPARE_OP(arg=4, lineno=640)
numba.core.byteflow - DEBUG - stack ['$phi32.0', '$N42.5', '$54binary_subtract.11']
numba.core.byteflow - DEBUG - dispatch pc=58, inst=POP_JUMP_IF_FALSE(arg=38, lineno=640)
numba.core.byteflow - DEBUG - stack ['$phi32.0', '$56compare_op.12']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=60, stack=('$phi32.0',), blockstack=(), npush=0), Edge(pc=74, stack=('$phi32.0',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=60 nstack_initial=1), State(pc_initial=74 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi60.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=60 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_FAST(arg=0, lineno=641)
numba.core.byteflow - DEBUG - stack ['$phi60.0']
numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_ATTR(arg=0, lineno=641)
numba.core.byteflow - DEBUG - stack ['$phi60.0', '$y60.1']
numba.core.byteflow - DEBUG - dispatch pc=64, inst=LOAD_CONST(arg=2, lineno=641)
numba.core.byteflow - DEBUG - stack ['$phi60.0', '$62load_attr.2']
numba.core.byteflow - DEBUG - dispatch pc=66, inst=BINARY_SUBSCR(arg=None, lineno=641)
numba.core.byteflow - DEBUG - stack ['$phi60.0', '$62load_attr.2', '$const64.3']
numba.core.byteflow - DEBUG - dispatch pc=68, inst=LOAD_FAST(arg=6, lineno=641)
numba.core.byteflow - DEBUG - stack ['$phi60.0', '$66binary_subscr.4']
numba.core.byteflow - DEBUG - dispatch pc=70, inst=BINARY_SUBTRACT(arg=None, lineno=641)
numba.core.byteflow - DEBUG - stack ['$phi60.0', '$66binary_subscr.4', '$sample68.5']
numba.core.byteflow - DEBUG - dispatch pc=72, inst=STORE_FAST(arg=4, lineno=641)
numba.core.byteflow - DEBUG - stack ['$phi60.0', '$70binary_subtract.6']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=74, stack=('$phi60.0',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=1), State(pc_initial=74 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi74.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=74 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=0, lineno=643)
numba.core.byteflow - DEBUG - stack ['$phi74.0']
numba.core.byteflow - DEBUG - dispatch pc=76, inst=LOAD_CONST(arg=3, lineno=643)
numba.core.byteflow - DEBUG - stack ['$phi74.0', '$y74.1']
numba.core.byteflow - DEBUG - dispatch pc=78, inst=LOAD_FAST(arg=6, lineno=643)
numba.core.byteflow - DEBUG - stack ['$phi74.0', '$y74.1', '$const76.2']
numba.core.byteflow - DEBUG - dispatch pc=80, inst=LOAD_FAST(arg=6, lineno=643)
numba.core.byteflow - DEBUG - stack ['$phi74.0', '$y74.1', '$const76.2', '$sample78.3']
numba.core.byteflow - DEBUG - dispatch pc=82, inst=LOAD_FAST(arg=4, lineno=643)
numba.core.byteflow - DEBUG - stack ['$phi74.0', '$y74.1', '$const76.2', '$sample78.3', '$sample80.4']
numba.core.byteflow - DEBUG - dispatch pc=84, inst=BINARY_ADD(arg=None, lineno=643)
numba.core.byteflow - DEBUG - stack ['$phi74.0', '$y74.1', '$const76.2', '$sample78.3', '$sample80.4', '$N82.5']
numba.core.byteflow - DEBUG - dispatch pc=86, inst=BUILD_SLICE(arg=2, lineno=643)
numba.core.byteflow - DEBUG - stack ['$phi74.0', '$y74.1', '$const76.2', '$sample78.3', '$84binary_add.6']
numba.core.byteflow - DEBUG - dispatch pc=88, inst=BUILD_TUPLE(arg=2, lineno=643)
numba.core.byteflow - DEBUG - stack ['$phi74.0', '$y74.1', '$const76.2', '$86build_slice.8']
numba.core.byteflow - DEBUG - dispatch pc=90, inst=DUP_TOP_TWO(arg=None, lineno=643)
numba.core.byteflow - DEBUG - stack ['$phi74.0', '$y74.1', '$88build_tuple.9']
numba.core.byteflow - DEBUG - dispatch pc=92, inst=BINARY_SUBSCR(arg=None, lineno=643)
numba.core.byteflow - DEBUG - stack ['$phi74.0', '$y74.1', '$88build_tuple.9', '$90dup_top_two.10', '$90dup_top_two.11']
numba.core.byteflow - DEBUG - dispatch pc=94, inst=LOAD_FAST(arg=1, lineno=643)
numba.core.byteflow - DEBUG - stack ['$phi74.0', '$y74.1', '$88build_tuple.9', '$92binary_subscr.12']
numba.core.byteflow - DEBUG - dispatch pc=96, inst=LOAD_CONST(arg=3, lineno=643)
numba.core.byteflow - DEBUG - stack ['$phi74.0', '$y74.1', '$88build_tuple.9', '$92binary_subscr.12', '$ytmp94.13']
numba.core.byteflow - DEBUG - dispatch pc=98, inst=LOAD_CONST(arg=0, lineno=643)
numba.core.byteflow - DEBUG - stack ['$phi74.0', '$y74.1', '$88build_tuple.9', '$92binary_subscr.12', '$ytmp94.13', '$const96.14']
numba.core.byteflow - DEBUG - dispatch pc=100, inst=LOAD_FAST(arg=4, lineno=643)
numba.core.byteflow - DEBUG - stack ['$phi74.0', '$y74.1', '$88build_tuple.9', '$92binary_subscr.12', '$ytmp94.13', '$const96.14', '$const98.15']
numba.core.byteflow - DEBUG - dispatch pc=102, inst=BUILD_SLICE(arg=2, lineno=643)
numba.core.byteflow - DEBUG - stack ['$phi74.0', '$y74.1', '$88build_tuple.9', '$92binary_subscr.12', '$ytmp94.13', '$const96.14', '$const98.15', '$N100.16']
numba.core.byteflow - DEBUG - dispatch pc=104, inst=LOAD_FAST(arg=5, lineno=643)
numba.core.byteflow - DEBUG - stack ['$phi74.0', '$y74.1', '$88build_tuple.9', '$92binary_subscr.12', '$ytmp94.13', '$const96.14', '$102build_slice.18']
numba.core.byteflow - DEBUG - dispatch pc=106, inst=BUILD_TUPLE(arg=3, lineno=643)
numba.core.byteflow - DEBUG - stack ['$phi74.0', '$y74.1', '$88build_tuple.9', '$92binary_subscr.12', '$ytmp94.13', '$const96.14', '$102build_slice.18', '$frame104.19']
numba.core.byteflow - DEBUG - dispatch pc=108, inst=BINARY_SUBSCR(arg=None, lineno=643)
numba.core.byteflow - DEBUG - stack ['$phi74.0', '$y74.1', '$88build_tuple.9', '$92binary_subscr.12', '$ytmp94.13', '$106build_tuple.20']
numba.core.byteflow - DEBUG - dispatch pc=110, inst=INPLACE_ADD(arg=None, lineno=643)
numba.core.byteflow - DEBUG - stack ['$phi74.0', '$y74.1', '$88build_tuple.9', '$92binary_subscr.12', '$108binary_subscr.21']
numba.core.byteflow - DEBUG - dispatch pc=112, inst=ROT_THREE(arg=None, lineno=643)
numba.core.byteflow - DEBUG - stack ['$phi74.0', '$y74.1', '$88build_tuple.9', '$110inplace_add.22']
numba.core.byteflow - DEBUG - dispatch pc=114, inst=STORE_SUBSCR(arg=None, lineno=643)
numba.core.byteflow - DEBUG - stack ['$phi74.0', '$110inplace_add.22', '$y74.1', '$88build_tuple.9']
numba.core.byteflow - DEBUG - dispatch pc=116, inst=JUMP_ABSOLUTE(arg=16, lineno=643)
numba.core.byteflow - DEBUG - stack ['$phi74.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=30, stack=('$phi74.0',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=74 nstack_initial=1), State(pc_initial=30 nstack_initial=1)])
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=30 nstack_initial=1)])
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=30 nstack_initial=1): {'$phi30.0'},
             State(pc_initial=32 nstack_initial=2): {'$phi32.1'},
             State(pc_initial=60 nstack_initial=1): set(),
             State(pc_initial=74 nstack_initial=1): set(),
             State(pc_initial=118 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {'$phi30.0': State(pc_initial=0 nstack_initial=0),
 '$phi32.1': State(pc_initial=30 nstack_initial=1)}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.11',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi32.0': {('$phi30.0', State(pc_initial=30 nstack_initial=1))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))},
             '$phi60.0': {('$phi32.0', State(pc_initial=32 nstack_initial=2))},
             '$phi74.0': {('$phi32.0', State(pc_initial=32 nstack_initial=2)),
                          ('$phi60.0', State(pc_initial=60 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.11',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=2)),
                          ('$phi60.0', State(pc_initial=60 nstack_initial=1))},
             '$phi32.0': {('$28get_iter.11',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi32.0', State(pc_initial=32 nstack_initial=2)),
                          ('$phi60.0', State(pc_initial=60 nstack_initial=1))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))},
             '$phi60.0': {('$28get_iter.11',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi60.0', State(pc_initial=60 nstack_initial=1))},
             '$phi74.0': {('$28get_iter.11',
                           State(pc_initial=0 nstack_initial=0))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.11',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$28get_iter.11',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))},
             '$phi60.0': {('$28get_iter.11',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi74.0': {('$28get_iter.11',
                           State(pc_initial=0 nstack_initial=0))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi30.0': {('$28get_iter.11',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.0': {('$28get_iter.11',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi32.1': {('$30for_iter.2',
                           State(pc_initial=30 nstack_initial=1))},
             '$phi60.0': {('$28get_iter.11',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi74.0': {('$28get_iter.11',
                           State(pc_initial=0 nstack_initial=0))}})
numba.core.byteflow - DEBUG - keep phismap: {'$phi30.0': {('$28get_iter.11', State(pc_initial=0 nstack_initial=0))},
 '$phi32.1': {('$30for_iter.2', State(pc_initial=30 nstack_initial=1))}}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi30.0': '$28get_iter.11'},
             State(pc_initial=30 nstack_initial=1): {'$phi32.1': '$30for_iter.2'}})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$ytmp2.0'}), (4, {'item': '$ytmp2.0', 'res': '$4load_attr.1'}), (6, {'res': '$const6.2'}), (8, {'index': '$const6.2', 'target': '$4load_attr.1', 'res': '$8binary_subscr.3'}), (10, {'value': '$8binary_subscr.3'}), (12, {'res': '$n_fft12.4'}), (14, {'value': '$n_fft12.4'}), (16, {'res': '$16load_global.5'}), (18, {'res': '$ytmp18.6'}), (20, {'item': '$ytmp18.6', 'res': '$20load_attr.7'}), (22, {'res': '$const22.8'}), (24, {'index': '$const22.8', 'target': '$20load_attr.7', 'res': '$24binary_subscr.9'}), (26, {'func': '$16load_global.5', 'args': ['$24binary_subscr.9'], 'res': '$26call_function.10'}), (28, {'value': '$26call_function.10', 'res': '$28get_iter.11'})), outgoing_phis={'$phi30.0': '$28get_iter.11'}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$28get_iter.11',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=30 nstack_initial=1):
AdaptBlockInfo(insts=((30, {'iterator': '$phi30.0', 'pair': '$30for_iter.1', 'indval': '$30for_iter.2', 'pred': '$30for_iter.3'}),), outgoing_phis={'$phi32.1': '$30for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={118: (), 32: ('$phi30.0', '$30for_iter.2')})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=32 nstack_initial=2):
AdaptBlockInfo(insts=((32, {'value': '$phi32.1'}), (34, {'res': '$frame34.2'}), (36, {'res': '$hop_length36.3'}), (38, {'lhs': '$frame34.2', 'rhs': '$hop_length36.3', 'res': '$38binary_multiply.4'}), (40, {'value': '$38binary_multiply.4'}), (42, {'res': '$N42.5'}), (44, {'res': '$y44.6'}), (46, {'item': '$y44.6', 'res': '$46load_attr.7'}), (48, {'res': '$const48.8'}), (50, {'index': '$const48.8', 'target': '$46load_attr.7', 'res': '$50binary_subscr.9'}), (52, {'res': '$sample52.10'}), (54, {'lhs': '$50binary_subscr.9', 'rhs': '$sample52.10', 'res': '$54binary_subtract.11'}), (56, {'lhs': '$N42.5', 'rhs': '$54binary_subtract.11', 'res': '$56compare_op.12'}), (58, {'pred': '$56compare_op.12'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={60: ('$phi32.0',), 74: ('$phi32.0',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=60 nstack_initial=1):
AdaptBlockInfo(insts=((60, {'res': '$y60.1'}), (62, {'item': '$y60.1', 'res': '$62load_attr.2'}), (64, {'res': '$const64.3'}), (66, {'index': '$const64.3', 'target': '$62load_attr.2', 'res': '$66binary_subscr.4'}), (68, {'res': '$sample68.5'}), (70, {'lhs': '$66binary_subscr.4', 'rhs': '$sample68.5', 'res': '$70binary_subtract.6'}), (72, {'value': '$70binary_subtract.6'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: ('$phi60.0',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=74 nstack_initial=1):
AdaptBlockInfo(insts=((74, {'res': '$y74.1'}), (76, {'res': '$const76.2'}), (78, {'res': '$sample78.3'}), (80, {'res': '$sample80.4'}), (82, {'res': '$N82.5'}), (84, {'lhs': '$sample80.4', 'rhs': '$N82.5', 'res': '$84binary_add.6'}), (86, {'start': '$sample78.3', 'stop': '$84binary_add.6', 'step': None, 'res': '$86build_slice.8', 'slicevar': '$86build_slice.7'}), (88, {'items': ['$const76.2', '$86build_slice.8'], 'res': '$88build_tuple.9'}), (90, {'orig': ['$y74.1', '$88build_tuple.9'], 'duped': ['$90dup_top_two.10', '$90dup_top_two.11']}), (92, {'index': '$90dup_top_two.11', 'target': '$90dup_top_two.10', 'res': '$92binary_subscr.12'}), (94, {'res': '$ytmp94.13'}), (96, {'res': '$const96.14'}), (98, {'res': '$const98.15'}), (100, {'res': '$N100.16'}), (102, {'start': '$const98.15', 'stop': '$N100.16', 'step': None, 'res': '$102build_slice.18', 'slicevar': '$102build_slice.17'}), (104, {'res': '$frame104.19'}), (106, {'items': ['$const96.14', '$102build_slice.18', '$frame104.19'], 'res': '$106build_tuple.20'}), (108, {'index': '$106build_tuple.20', 'target': '$ytmp94.13', 'res': '$108binary_subscr.21'}), (110, {'lhs': '$92binary_subscr.12', 'rhs': '$108binary_subscr.21', 'res': '$110inplace_add.22'}), (114, {'target': '$y74.1', 'index': '$88build_tuple.9', 'value': '$110inplace_add.22'}), (116, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={30: ('$phi74.0',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=118 nstack_initial=0):
AdaptBlockInfo(insts=((118, {'res': '$const118.0'}), (120, {'retval': '$const118.0', 'castval': '$120return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    y = arg(0, name=y)                       ['y']
    ytmp = arg(1, name=ytmp)                 ['ytmp']
    hop_length = arg(2, name=hop_length)     ['hop_length']
    $4load_attr.1 = getattr(value=ytmp, attr=shape) ['$4load_attr.1', 'ytmp']
    $const6.2 = const(int, -2)               ['$const6.2']
    n_fft = getitem(value=$4load_attr.1, index=$const6.2, fn=<built-in function getitem>) ['$4load_attr.1', '$const6.2', 'n_fft']
    N = n_fft                                ['N', 'n_fft']
    $16load_global.5 = global(range: <class 'range'>) ['$16load_global.5']
    $20load_attr.7 = getattr(value=ytmp, attr=shape) ['$20load_attr.7', 'ytmp']
    $const22.8 = const(int, -1)              ['$const22.8']
    $24binary_subscr.9 = getitem(value=$20load_attr.7, index=$const22.8, fn=<built-in function getitem>) ['$20load_attr.7', '$24binary_subscr.9', '$const22.8']
    $26call_function.10 = call $16load_global.5($24binary_subscr.9, func=$16load_global.5, args=[Var($24binary_subscr.9, spectrum.py:638)], kws=(), vararg=None, varkwarg=None, target=None) ['$16load_global.5', '$24binary_subscr.9', '$26call_function.10']
    $28get_iter.11 = getiter(value=$26call_function.10) ['$26call_function.10', '$28get_iter.11']
    $phi30.0 = $28get_iter.11                ['$28get_iter.11', '$phi30.0']
    jump 30                                  []
label 30:
    $30for_iter.1 = iternext(value=$phi30.0) ['$30for_iter.1', '$phi30.0']
    $30for_iter.2 = pair_first(value=$30for_iter.1) ['$30for_iter.1', '$30for_iter.2']
    $30for_iter.3 = pair_second(value=$30for_iter.1) ['$30for_iter.1', '$30for_iter.3']
    $phi32.1 = $30for_iter.2                 ['$30for_iter.2', '$phi32.1']
    branch $30for_iter.3, 32, 118            ['$30for_iter.3']
label 32:
    frame = $phi32.1                         ['$phi32.1', 'frame']
    sample = frame * hop_length              ['frame', 'hop_length', 'sample']
    $46load_attr.7 = getattr(value=y, attr=shape) ['$46load_attr.7', 'y']
    $const48.8 = const(int, -1)              ['$const48.8']
    $50binary_subscr.9 = getitem(value=$46load_attr.7, index=$const48.8, fn=<built-in function getitem>) ['$46load_attr.7', '$50binary_subscr.9', '$const48.8']
    $54binary_subtract.11 = $50binary_subscr.9 - sample ['$50binary_subscr.9', '$54binary_subtract.11', 'sample']
    $56compare_op.12 = N > $54binary_subtract.11 ['$54binary_subtract.11', '$56compare_op.12', 'N']
    bool58 = global(bool: <class 'bool'>)    ['bool58']
    $58pred = call bool58($56compare_op.12, func=bool58, args=(Var($56compare_op.12, spectrum.py:640),), kws=(), vararg=None, varkwarg=None, target=None) ['$56compare_op.12', '$58pred', 'bool58']
    branch $58pred, 60, 74                   ['$58pred']
label 60:
    $62load_attr.2 = getattr(value=y, attr=shape) ['$62load_attr.2', 'y']
    $const64.3 = const(int, -1)              ['$const64.3']
    $66binary_subscr.4 = getitem(value=$62load_attr.2, index=$const64.3, fn=<built-in function getitem>) ['$62load_attr.2', '$66binary_subscr.4', '$const64.3']
    N = $66binary_subscr.4 - sample          ['$66binary_subscr.4', 'N', 'sample']
    jump 74                                  []
label 74:
    $const76.2 = const(ellipsis, Ellipsis)   ['$const76.2']
    $84binary_add.6 = sample + N             ['$84binary_add.6', 'N', 'sample']
    $86build_slice.7 = global(slice: <class 'slice'>) ['$86build_slice.7']
    $86build_slice.8 = call $86build_slice.7(sample, $84binary_add.6, func=$86build_slice.7, args=(Var(sample, spectrum.py:639), Var($84binary_add.6, spectrum.py:643)), kws=(), vararg=None, varkwarg=None, target=None) ['$84binary_add.6', '$86build_slice.7', '$86build_slice.8', 'sample']
    $88build_tuple.9 = build_tuple(items=[Var($const76.2, spectrum.py:643), Var($86build_slice.8, spectrum.py:643)]) ['$86build_slice.8', '$88build_tuple.9', '$const76.2']
    $92binary_subscr.12 = getitem(value=y, index=$88build_tuple.9, fn=<built-in function getitem>) ['$88build_tuple.9', '$92binary_subscr.12', 'y']
    $const96.14 = const(ellipsis, Ellipsis)  ['$const96.14']
    $const98.15 = const(NoneType, None)      ['$const98.15']
    $102build_slice.17 = global(slice: <class 'slice'>) ['$102build_slice.17']
    $102build_slice.18 = call $102build_slice.17($const98.15, N, func=$102build_slice.17, args=(Var($const98.15, spectrum.py:643), Var(N, spectrum.py:637)), kws=(), vararg=None, varkwarg=None, target=None) ['$102build_slice.17', '$102build_slice.18', '$const98.15', 'N']
    $106build_tuple.20 = build_tuple(items=[Var($const96.14, spectrum.py:643), Var($102build_slice.18, spectrum.py:643), Var(frame, spectrum.py:638)]) ['$102build_slice.18', '$106build_tuple.20', '$const96.14', 'frame']
    $108binary_subscr.21 = getitem(value=ytmp, index=$106build_tuple.20, fn=<built-in function getitem>) ['$106build_tuple.20', '$108binary_subscr.21', 'ytmp']
    $110inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$92binary_subscr.12, rhs=$108binary_subscr.21, static_lhs=Undefined, static_rhs=Undefined) ['$108binary_subscr.21', '$110inplace_add.22', '$92binary_subscr.12']
    y[$88build_tuple.9] = $110inplace_add.22 ['$110inplace_add.22', '$88build_tuple.9', 'y']
    jump 30                                  []
label 118:
    $const118.0 = const(NoneType, None)      ['$const118.0']
    $120return_value.1 = cast(value=$const118.0) ['$120return_value.1', '$const118.0']
    return $120return_value.1                ['$120return_value.1']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708753063010>
numba.core.ssa - DEBUG - on stmt: y = arg(0, name=y)
numba.core.ssa - DEBUG - on stmt: ytmp = arg(1, name=ytmp)
numba.core.ssa - DEBUG - on stmt: hop_length = arg(2, name=hop_length)
numba.core.ssa - DEBUG - on stmt: $4load_attr.1 = getattr(value=ytmp, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const6.2 = const(int, -2)
numba.core.ssa - DEBUG - on stmt: n_fft = static_getitem(value=$4load_attr.1, index=-2, index_var=$const6.2, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: N = n_fft
numba.core.ssa - DEBUG - on stmt: $16load_global.5 = global(range: <class 'range'>)
numba.core.ssa - DEBUG - on stmt: $20load_attr.7 = getattr(value=ytmp, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const22.8 = const(int, -1)
numba.core.ssa - DEBUG - on stmt: $24binary_subscr.9 = static_getitem(value=$20load_attr.7, index=-1, index_var=$const22.8, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $26call_function.10 = call $16load_global.5($24binary_subscr.9, func=$16load_global.5, args=[Var($24binary_subscr.9, spectrum.py:638)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $28get_iter.11 = getiter(value=$26call_function.10)
numba.core.ssa - DEBUG - on stmt: $phi30.0 = $28get_iter.11
numba.core.ssa - DEBUG - on stmt: jump 30
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 30
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708753063010>
numba.core.ssa - DEBUG - on stmt: $30for_iter.1 = iternext(value=$phi30.0)
numba.core.ssa - DEBUG - on stmt: $30for_iter.2 = pair_first(value=$30for_iter.1)
numba.core.ssa - DEBUG - on stmt: $30for_iter.3 = pair_second(value=$30for_iter.1)
numba.core.ssa - DEBUG - on stmt: $phi32.1 = $30for_iter.2
numba.core.ssa - DEBUG - on stmt: branch $30for_iter.3, 32, 118
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 32
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708753063010>
numba.core.ssa - DEBUG - on stmt: frame = $phi32.1
numba.core.ssa - DEBUG - on stmt: sample = frame * hop_length
numba.core.ssa - DEBUG - on stmt: $46load_attr.7 = getattr(value=y, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const48.8 = const(int, -1)
numba.core.ssa - DEBUG - on stmt: $50binary_subscr.9 = static_getitem(value=$46load_attr.7, index=-1, index_var=$const48.8, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $54binary_subtract.11 = $50binary_subscr.9 - sample
numba.core.ssa - DEBUG - on stmt: $56compare_op.12 = N > $54binary_subtract.11
numba.core.ssa - DEBUG - on stmt: bool58 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $58pred = call bool58($56compare_op.12, func=bool58, args=(Var($56compare_op.12, spectrum.py:640),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $58pred, 60, 74
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 60
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708753063010>
numba.core.ssa - DEBUG - on stmt: $62load_attr.2 = getattr(value=y, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const64.3 = const(int, -1)
numba.core.ssa - DEBUG - on stmt: $66binary_subscr.4 = static_getitem(value=$62load_attr.2, index=-1, index_var=$const64.3, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: N = $66binary_subscr.4 - sample
numba.core.ssa - DEBUG - on stmt: jump 74
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 74
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708753063010>
numba.core.ssa - DEBUG - on stmt: $const76.2 = const(ellipsis, Ellipsis)
numba.core.ssa - DEBUG - on stmt: $84binary_add.6 = sample + N
numba.core.ssa - DEBUG - on stmt: $86build_slice.7 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $86build_slice.8 = call $86build_slice.7(sample, $84binary_add.6, func=$86build_slice.7, args=(Var(sample, spectrum.py:639), Var($84binary_add.6, spectrum.py:643)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $88build_tuple.9 = build_tuple(items=[Var($const76.2, spectrum.py:643), Var($86build_slice.8, spectrum.py:643)])
numba.core.ssa - DEBUG - on stmt: $92binary_subscr.12 = getitem(value=y, index=$88build_tuple.9, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $const96.14 = const(ellipsis, Ellipsis)
numba.core.ssa - DEBUG - on stmt: $const98.15 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $102build_slice.17 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $102build_slice.18 = call $102build_slice.17($const98.15, N, func=$102build_slice.17, args=(Var($const98.15, spectrum.py:643), Var(N, spectrum.py:637)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $106build_tuple.20 = build_tuple(items=[Var($const96.14, spectrum.py:643), Var($102build_slice.18, spectrum.py:643), Var(frame, spectrum.py:638)])
numba.core.ssa - DEBUG - on stmt: $108binary_subscr.21 = getitem(value=ytmp, index=$106build_tuple.20, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $110inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$92binary_subscr.12, rhs=$108binary_subscr.21, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: y[$88build_tuple.9] = $110inplace_add.22
numba.core.ssa - DEBUG - on stmt: jump 30
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 118
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x708753063010>
numba.core.ssa - DEBUG - on stmt: $const118.0 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $120return_value.1 = cast(value=$const118.0)
numba.core.ssa - DEBUG - on stmt: return $120return_value.1
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$102build_slice.17': [(<numba.core.ir.Assign object at 0x708752900670>,
                                     74)],
             '$102build_slice.18': [(<numba.core.ir.Assign object at 0x7087529000a0>,
                                     74)],
             '$106build_tuple.20': [(<numba.core.ir.Assign object at 0x708752900460>,
                                     74)],
             '$108binary_subscr.21': [(<numba.core.ir.Assign object at 0x708752900220>,
                                       74)],
             '$110inplace_add.22': [(<numba.core.ir.Assign object at 0x708752900c10>,
                                     74)],
             '$120return_value.1': [(<numba.core.ir.Assign object at 0x7087529001f0>,
                                     118)],
             '$16load_global.5': [(<numba.core.ir.Assign object at 0x708752719fc0>,
                                   0)],
             '$20load_attr.7': [(<numba.core.ir.Assign object at 0x708752833a60>,
                                 0)],
             '$24binary_subscr.9': [(<numba.core.ir.Assign object at 0x708752fc2140>,
                                     0)],
             '$26call_function.10': [(<numba.core.ir.Assign object at 0x708752901f30>,
                                      0)],
             '$28get_iter.11': [(<numba.core.ir.Assign object at 0x708752903d00>,
                                 0)],
             '$30for_iter.1': [(<numba.core.ir.Assign object at 0x708752903e20>,
                                30)],
             '$30for_iter.2': [(<numba.core.ir.Assign object at 0x708752903d60>,
                                30)],
             '$30for_iter.3': [(<numba.core.ir.Assign object at 0x708752903ac0>,
                                30)],
             '$46load_attr.7': [(<numba.core.ir.Assign object at 0x708752901810>,
                                 32)],
             '$4load_attr.1': [(<numba.core.ir.Assign object at 0x708752718880>,
                                0)],
             '$50binary_subscr.9': [(<numba.core.ir.Assign object at 0x708752fc3370>,
                                     32)],
             '$54binary_subtract.11': [(<numba.core.ir.Assign object at 0x7087529024a0>,
                                        32)],
             '$56compare_op.12': [(<numba.core.ir.Assign object at 0x708752902650>,
                                   32)],
             '$58pred': [(<numba.core.ir.Assign object at 0x708752901cf0>, 32)],
             '$62load_attr.2': [(<numba.core.ir.Assign object at 0x708752900280>,
                                 60)],
             '$66binary_subscr.4': [(<numba.core.ir.Assign object at 0x708752fc2530>,
                                     60)],
             '$84binary_add.6': [(<numba.core.ir.Assign object at 0x708752719600>,
                                  74)],
             '$86build_slice.7': [(<numba.core.ir.Assign object at 0x708752902ce0>,
                                   74)],
             '$86build_slice.8': [(<numba.core.ir.Assign object at 0x708752902e00>,
                                   74)],
             '$88build_tuple.9': [(<numba.core.ir.Assign object at 0x708752903100>,
                                   74)],
             '$92binary_subscr.12': [(<numba.core.ir.Assign object at 0x708752903310>,
                                      74)],
             '$const118.0': [(<numba.core.ir.Assign object at 0x7087529032e0>,
                              118)],
             '$const22.8': [(<numba.core.ir.Assign object at 0x7087529037c0>,
                             0)],
             '$const48.8': [(<numba.core.ir.Assign object at 0x708752901990>,
                             32)],
             '$const6.2': [(<numba.core.ir.Assign object at 0x7087527181f0>,
                            0)],
             '$const64.3': [(<numba.core.ir.Assign object at 0x708752902980>,
                             60)],
             '$const76.2': [(<numba.core.ir.Assign object at 0x708752719150>,
                             74)],
             '$const96.14': [(<numba.core.ir.Assign object at 0x708752901300>,
                              74)],
             '$const98.15': [(<numba.core.ir.Assign object at 0x708752901210>,
                              74)],
             '$phi30.0': [(<numba.core.ir.Assign object at 0x708752831090>, 0)],
             '$phi32.1': [(<numba.core.ir.Assign object at 0x708752903e80>,
                           30)],
             'N': [(<numba.core.ir.Assign object at 0x70875271bc10>, 0),
                   (<numba.core.ir.Assign object at 0x708752902e90>, 60)],
             'bool58': [(<numba.core.ir.Assign object at 0x708752902860>, 32)],
             'frame': [(<numba.core.ir.Assign object at 0x7087529039a0>, 32)],
             'hop_length': [(<numba.core.ir.Assign object at 0x708752718940>,
                             0)],
             'n_fft': [(<numba.core.ir.Assign object at 0x708752fc0940>, 0)],
             'sample': [(<numba.core.ir.Assign object at 0x708752900f70>, 32)],
             'y': [(<numba.core.ir.Assign object at 0x708752718af0>, 0)],
             'ytmp': [(<numba.core.ir.Assign object at 0x708752718760>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x708753063010>
numba.core.ssa - DEBUG - Fix SSA violator on var N
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708753060b20>
numba.core.ssa - DEBUG - on stmt: y = arg(0, name=y)
numba.core.ssa - DEBUG - on stmt: ytmp = arg(1, name=ytmp)
numba.core.ssa - DEBUG - on stmt: hop_length = arg(2, name=hop_length)
numba.core.ssa - DEBUG - on stmt: $4load_attr.1 = getattr(value=ytmp, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const6.2 = const(int, -2)
numba.core.ssa - DEBUG - on stmt: n_fft = static_getitem(value=$4load_attr.1, index=-2, index_var=$const6.2, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: N = n_fft
numba.core.ssa - DEBUG - first assign: N
numba.core.ssa - DEBUG - replaced with: N = n_fft
numba.core.ssa - DEBUG - on stmt: $16load_global.5 = global(range: <class 'range'>)
numba.core.ssa - DEBUG - on stmt: $20load_attr.7 = getattr(value=ytmp, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const22.8 = const(int, -1)
numba.core.ssa - DEBUG - on stmt: $24binary_subscr.9 = static_getitem(value=$20load_attr.7, index=-1, index_var=$const22.8, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $26call_function.10 = call $16load_global.5($24binary_subscr.9, func=$16load_global.5, args=[Var($24binary_subscr.9, spectrum.py:638)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $28get_iter.11 = getiter(value=$26call_function.10)
numba.core.ssa - DEBUG - on stmt: $phi30.0 = $28get_iter.11
numba.core.ssa - DEBUG - on stmt: jump 30
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 30
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708753060b20>
numba.core.ssa - DEBUG - on stmt: $30for_iter.1 = iternext(value=$phi30.0)
numba.core.ssa - DEBUG - on stmt: $30for_iter.2 = pair_first(value=$30for_iter.1)
numba.core.ssa - DEBUG - on stmt: $30for_iter.3 = pair_second(value=$30for_iter.1)
numba.core.ssa - DEBUG - on stmt: $phi32.1 = $30for_iter.2
numba.core.ssa - DEBUG - on stmt: branch $30for_iter.3, 32, 118
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 32
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708753060b20>
numba.core.ssa - DEBUG - on stmt: frame = $phi32.1
numba.core.ssa - DEBUG - on stmt: sample = frame * hop_length
numba.core.ssa - DEBUG - on stmt: $46load_attr.7 = getattr(value=y, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const48.8 = const(int, -1)
numba.core.ssa - DEBUG - on stmt: $50binary_subscr.9 = static_getitem(value=$46load_attr.7, index=-1, index_var=$const48.8, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $54binary_subtract.11 = $50binary_subscr.9 - sample
numba.core.ssa - DEBUG - on stmt: $56compare_op.12 = N > $54binary_subtract.11
numba.core.ssa - DEBUG - on stmt: bool58 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $58pred = call bool58($56compare_op.12, func=bool58, args=(Var($56compare_op.12, spectrum.py:640),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $58pred, 60, 74
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 60
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708753060b20>
numba.core.ssa - DEBUG - on stmt: $62load_attr.2 = getattr(value=y, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const64.3 = const(int, -1)
numba.core.ssa - DEBUG - on stmt: $66binary_subscr.4 = static_getitem(value=$62load_attr.2, index=-1, index_var=$const64.3, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: N = $66binary_subscr.4 - sample
numba.core.ssa - DEBUG - replaced with: N.1 = $66binary_subscr.4 - sample
numba.core.ssa - DEBUG - on stmt: jump 74
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 74
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708753060b20>
numba.core.ssa - DEBUG - on stmt: $const76.2 = const(ellipsis, Ellipsis)
numba.core.ssa - DEBUG - on stmt: $84binary_add.6 = sample + N
numba.core.ssa - DEBUG - on stmt: $86build_slice.7 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $86build_slice.8 = call $86build_slice.7(sample, $84binary_add.6, func=$86build_slice.7, args=(Var(sample, spectrum.py:639), Var($84binary_add.6, spectrum.py:643)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $88build_tuple.9 = build_tuple(items=[Var($const76.2, spectrum.py:643), Var($86build_slice.8, spectrum.py:643)])
numba.core.ssa - DEBUG - on stmt: $92binary_subscr.12 = getitem(value=y, index=$88build_tuple.9, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $const96.14 = const(ellipsis, Ellipsis)
numba.core.ssa - DEBUG - on stmt: $const98.15 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $102build_slice.17 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $102build_slice.18 = call $102build_slice.17($const98.15, N, func=$102build_slice.17, args=(Var($const98.15, spectrum.py:643), Var(N, spectrum.py:637)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $106build_tuple.20 = build_tuple(items=[Var($const96.14, spectrum.py:643), Var($102build_slice.18, spectrum.py:643), Var(frame, spectrum.py:638)])
numba.core.ssa - DEBUG - on stmt: $108binary_subscr.21 = getitem(value=ytmp, index=$106build_tuple.20, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $110inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$92binary_subscr.12, rhs=$108binary_subscr.21, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: y[$88build_tuple.9] = $110inplace_add.22
numba.core.ssa - DEBUG - on stmt: jump 30
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 118
numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x708753060b20>
numba.core.ssa - DEBUG - on stmt: $const118.0 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $120return_value.1 = cast(value=$const118.0)
numba.core.ssa - DEBUG - on stmt: return $120return_value.1
numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x7087530632b0>],
             60: [<numba.core.ir.Assign object at 0x708752c41f00>]})
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708753060b20>
numba.core.ssa - DEBUG - on stmt: y = arg(0, name=y)
numba.core.ssa - DEBUG - on stmt: ytmp = arg(1, name=ytmp)
numba.core.ssa - DEBUG - on stmt: hop_length = arg(2, name=hop_length)
numba.core.ssa - DEBUG - on stmt: $4load_attr.1 = getattr(value=ytmp, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const6.2 = const(int, -2)
numba.core.ssa - DEBUG - on stmt: n_fft = static_getitem(value=$4load_attr.1, index=-2, index_var=$const6.2, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: N = n_fft
numba.core.ssa - DEBUG - on stmt: $16load_global.5 = global(range: <class 'range'>)
numba.core.ssa - DEBUG - on stmt: $20load_attr.7 = getattr(value=ytmp, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const22.8 = const(int, -1)
numba.core.ssa - DEBUG - on stmt: $24binary_subscr.9 = static_getitem(value=$20load_attr.7, index=-1, index_var=$const22.8, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $26call_function.10 = call $16load_global.5($24binary_subscr.9, func=$16load_global.5, args=[Var($24binary_subscr.9, spectrum.py:638)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $28get_iter.11 = getiter(value=$26call_function.10)
numba.core.ssa - DEBUG - on stmt: $phi30.0 = $28get_iter.11
numba.core.ssa - DEBUG - on stmt: jump 30
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 30
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708753060b20>
numba.core.ssa - DEBUG - on stmt: $30for_iter.1 = iternext(value=$phi30.0)
numba.core.ssa - DEBUG - on stmt: $30for_iter.2 = pair_first(value=$30for_iter.1)
numba.core.ssa - DEBUG - on stmt: $30for_iter.3 = pair_second(value=$30for_iter.1)
numba.core.ssa - DEBUG - on stmt: $phi32.1 = $30for_iter.2
numba.core.ssa - DEBUG - on stmt: branch $30for_iter.3, 32, 118
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 32
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708753060b20>
numba.core.ssa - DEBUG - on stmt: frame = $phi32.1
numba.core.ssa - DEBUG - on stmt: sample = frame * hop_length
numba.core.ssa - DEBUG - on stmt: $46load_attr.7 = getattr(value=y, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const48.8 = const(int, -1)
numba.core.ssa - DEBUG - on stmt: $50binary_subscr.9 = static_getitem(value=$46load_attr.7, index=-1, index_var=$const48.8, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $54binary_subtract.11 = $50binary_subscr.9 - sample
numba.core.ssa - DEBUG - on stmt: $56compare_op.12 = N > $54binary_subtract.11
numba.core.ssa - DEBUG - find_def var='N' stmt=$56compare_op.12 = N > $54binary_subtract.11
numba.core.ssa - DEBUG - find_def_from_top label 32
numba.core.ssa - DEBUG - idom 30 from label 32
numba.core.ssa - DEBUG - find_def_from_bottom label 30
numba.core.ssa - DEBUG - find_def_from_top label 30
numba.core.ssa - DEBUG - insert phi node N.2 = phi(incoming_values=[], incoming_blocks=[]) at 30
numba.core.ssa - DEBUG - find_def_from_bottom label 0
numba.core.ssa - DEBUG - incoming_def N = n_fft
numba.core.ssa - DEBUG - find_def_from_bottom label 74
numba.core.ssa - DEBUG - find_def_from_top label 74
numba.core.ssa - DEBUG - insert phi node N.3 = phi(incoming_values=[], incoming_blocks=[]) at 74
numba.core.ssa - DEBUG - find_def_from_bottom label 32
numba.core.ssa - DEBUG - find_def_from_top label 32
numba.core.ssa - DEBUG - idom 30 from label 32
numba.core.ssa - DEBUG - find_def_from_bottom label 30
numba.core.ssa - DEBUG - incoming_def N.2 = phi(incoming_values=[Var(N, spectrum.py:637)], incoming_blocks=[0])
numba.core.ssa - DEBUG - find_def_from_bottom label 60
numba.core.ssa - DEBUG - incoming_def N.1 = $66binary_subscr.4 - sample
numba.core.ssa - DEBUG - incoming_def N.3 = phi(incoming_values=[Var(N.2, spectrum.py:638), Var(N.1, spectrum.py:641)], incoming_blocks=[32, 60])
numba.core.ssa - DEBUG - replaced with: $56compare_op.12 = N.2 > $54binary_subtract.11
numba.core.ssa - DEBUG - on stmt: bool58 = global(bool: <class 'bool'>)
numba.core.ssa - DEBUG - on stmt: $58pred = call bool58($56compare_op.12, func=bool58, args=(Var($56compare_op.12, spectrum.py:640),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: branch $58pred, 60, 74
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 60
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708753060b20>
numba.core.ssa - DEBUG - on stmt: $62load_attr.2 = getattr(value=y, attr=shape)
numba.core.ssa - DEBUG - on stmt: $const64.3 = const(int, -1)
numba.core.ssa - DEBUG - on stmt: $66binary_subscr.4 = static_getitem(value=$62load_attr.2, index=-1, index_var=$const64.3, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: N.1 = $66binary_subscr.4 - sample
numba.core.ssa - DEBUG - on stmt: jump 74
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 74
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708753060b20>
numba.core.ssa - DEBUG - on stmt: $const76.2 = const(ellipsis, Ellipsis)
numba.core.ssa - DEBUG - on stmt: $84binary_add.6 = sample + N
numba.core.ssa - DEBUG - find_def var='N' stmt=$84binary_add.6 = sample + N
numba.core.ssa - DEBUG - replaced with: $84binary_add.6 = sample + N.3
numba.core.ssa - DEBUG - on stmt: $86build_slice.7 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $86build_slice.8 = call $86build_slice.7(sample, $84binary_add.6, func=$86build_slice.7, args=(Var(sample, spectrum.py:639), Var($84binary_add.6, spectrum.py:643)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $88build_tuple.9 = build_tuple(items=[Var($const76.2, spectrum.py:643), Var($86build_slice.8, spectrum.py:643)])
numba.core.ssa - DEBUG - on stmt: $92binary_subscr.12 = getitem(value=y, index=$88build_tuple.9, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $const96.14 = const(ellipsis, Ellipsis)
numba.core.ssa - DEBUG - on stmt: $const98.15 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $102build_slice.17 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $102build_slice.18 = call $102build_slice.17($const98.15, N, func=$102build_slice.17, args=(Var($const98.15, spectrum.py:643), Var(N, spectrum.py:637)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - find_def var='N' stmt=$102build_slice.18 = call $102build_slice.17($const98.15, N, func=$102build_slice.17, args=(Var($const98.15, spectrum.py:643), Var(N, spectrum.py:637)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - replaced with: $102build_slice.18 = call $102build_slice.17($const98.15, N.3, func=$102build_slice.17, args=(Var($const98.15, spectrum.py:643), Var(N.3, spectrum.py:638)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $106build_tuple.20 = build_tuple(items=[Var($const96.14, spectrum.py:643), Var($102build_slice.18, spectrum.py:643), Var(frame, spectrum.py:638)])
numba.core.ssa - DEBUG - on stmt: $108binary_subscr.21 = getitem(value=ytmp, index=$106build_tuple.20, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $110inplace_add.22 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$92binary_subscr.12, rhs=$108binary_subscr.21, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: y[$88build_tuple.9] = $110inplace_add.22
numba.core.ssa - DEBUG - on stmt: jump 30
numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 118
numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x708753060b20>
numba.core.ssa - DEBUG - on stmt: $const118.0 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $120return_value.1 = cast(value=$const118.0)
numba.core.ssa - DEBUG - on stmt: return $120return_value.1
numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=1520)
           2	LOAD_GLOBAL(arg=0, lineno=1523)
           4	LOAD_FAST(arg=0, lineno=1523)
           6	CALL_FUNCTION(arg=1, lineno=1523)
           8	STORE_FAST(arg=4, lineno=1523)
          10	LOAD_GLOBAL(arg=0, lineno=1524)
          12	LOAD_FAST(arg=1, lineno=1524)
          14	CALL_FUNCTION(arg=1, lineno=1524)
          16	STORE_FAST(arg=5, lineno=1524)
          18	LOAD_GLOBAL(arg=1, lineno=1525)
          20	LOAD_FAST(arg=2, lineno=1525)
          22	CALL_FUNCTION(arg=1, lineno=1525)
          24	GET_ITER(arg=None, lineno=1525)
>         26	FOR_ITER(arg=33, lineno=1525)
          28	STORE_FAST(arg=6, lineno=1525)
          30	LOAD_FAST(arg=6, lineno=1526)
          32	LOAD_FAST(arg=3, lineno=1526)
          34	BINARY_MULTIPLY(arg=None, lineno=1526)
          36	STORE_FAST(arg=7, lineno=1526)
          38	LOAD_FAST(arg=0, lineno=1527)
          40	LOAD_FAST(arg=7, lineno=1527)
          42	LOAD_GLOBAL(arg=2, lineno=1527)
          44	LOAD_FAST(arg=4, lineno=1527)
          46	LOAD_FAST(arg=7, lineno=1527)
          48	LOAD_FAST(arg=5, lineno=1527)
          50	BINARY_ADD(arg=None, lineno=1527)
          52	CALL_FUNCTION(arg=2, lineno=1527)
          54	BUILD_SLICE(arg=2, lineno=1527)
          56	DUP_TOP_TWO(arg=None, lineno=1527)
          58	BINARY_SUBSCR(arg=None, lineno=1527)
          60	LOAD_FAST(arg=1, lineno=1527)
          62	LOAD_CONST(arg=1, lineno=1527)
          64	LOAD_GLOBAL(arg=3, lineno=1527)
          66	LOAD_CONST(arg=2, lineno=1527)
          68	LOAD_GLOBAL(arg=2, lineno=1527)
          70	LOAD_FAST(arg=5, lineno=1527)
          72	LOAD_FAST(arg=4, lineno=1527)
          74	LOAD_FAST(arg=7, lineno=1527)
          76	BINARY_SUBTRACT(arg=None, lineno=1527)
          78	CALL_FUNCTION(arg=2, lineno=1527)
          80	CALL_FUNCTION(arg=2, lineno=1527)
          82	BUILD_SLICE(arg=2, lineno=1527)
          84	BINARY_SUBSCR(arg=None, lineno=1527)
          86	INPLACE_ADD(arg=None, lineno=1527)
          88	ROT_THREE(arg=None, lineno=1527)
          90	STORE_SUBSCR(arg=None, lineno=1527)
          92	JUMP_ABSOLUTE(arg=14, lineno=1527)
>         94	LOAD_CONST(arg=1, lineno=1525)
          96	RETURN_VALUE(arg=None, lineno=1525)
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=1520)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=1523)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=1523)
numba.core.byteflow - DEBUG - stack ['$2load_global.0']
numba.core.byteflow - DEBUG - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=1523)
numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1']
numba.core.byteflow - DEBUG - dispatch pc=8, inst=STORE_FAST(arg=4, lineno=1523)
numba.core.byteflow - DEBUG - stack ['$6call_function.2']
numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_GLOBAL(arg=0, lineno=1524)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=1, lineno=1524)
numba.core.byteflow - DEBUG - stack ['$10load_global.3']
numba.core.byteflow - DEBUG - dispatch pc=14, inst=CALL_FUNCTION(arg=1, lineno=1524)
numba.core.byteflow - DEBUG - stack ['$10load_global.3', '$win_sq12.4']
numba.core.byteflow - DEBUG - dispatch pc=16, inst=STORE_FAST(arg=5, lineno=1524)
numba.core.byteflow - DEBUG - stack ['$14call_function.5']
numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_GLOBAL(arg=1, lineno=1525)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=20, inst=LOAD_FAST(arg=2, lineno=1525)
numba.core.byteflow - DEBUG - stack ['$18load_global.6']
numba.core.byteflow - DEBUG - dispatch pc=22, inst=CALL_FUNCTION(arg=1, lineno=1525)
numba.core.byteflow - DEBUG - stack ['$18load_global.6', '$n_frames20.7']
numba.core.byteflow - DEBUG - dispatch pc=24, inst=GET_ITER(arg=None, lineno=1525)
numba.core.byteflow - DEBUG - stack ['$22call_function.8']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=26, stack=('$24get_iter.9',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=26 nstack_initial=1)])
numba.core.byteflow - DEBUG - stack: ['$phi26.0']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=26 nstack_initial=1)
numba.core.byteflow - DEBUG - dispatch pc=26, inst=FOR_ITER(arg=33, lineno=1525)
numba.core.byteflow - DEBUG - stack ['$phi26.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=94, stack=(), blockstack=(), npush=0), Edge(pc=28, stack=('$phi26.0', '$26for_iter.2'), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=94 nstack_initial=0), State(pc_initial=28 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: []
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=94 nstack_initial=0)
numba.core.byteflow - DEBUG - dispatch pc=94, inst=LOAD_CONST(arg=1, lineno=1525)
numba.core.byteflow - DEBUG - stack []
numba.core.byteflow - DEBUG - dispatch pc=96, inst=RETURN_VALUE(arg=None, lineno=1525)
numba.core.byteflow - DEBUG - stack ['$const94.0']
numba.core.byteflow - DEBUG - end state. edges=[]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=28 nstack_initial=2)])
numba.core.byteflow - DEBUG - stack: ['$phi28.0', '$phi28.1']
numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=28 nstack_initial=2)
numba.core.byteflow - DEBUG - dispatch pc=28, inst=STORE_FAST(arg=6, lineno=1525)
numba.core.byteflow - DEBUG - stack ['$phi28.0', '$phi28.1']
numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_FAST(arg=6, lineno=1526)
numba.core.byteflow - DEBUG - stack ['$phi28.0']
numba.core.byteflow - DEBUG - dispatch pc=32, inst=LOAD_FAST(arg=3, lineno=1526)
numba.core.byteflow - DEBUG - stack ['$phi28.0', '$i30.2']
numba.core.byteflow - DEBUG - dispatch pc=34, inst=BINARY_MULTIPLY(arg=None, lineno=1526)
numba.core.byteflow - DEBUG - stack ['$phi28.0', '$i30.2', '$hop_length32.3']
numba.core.byteflow - DEBUG - dispatch pc=36, inst=STORE_FAST(arg=7, lineno=1526)
numba.core.byteflow - DEBUG - stack ['$phi28.0', '$34binary_multiply.4']
numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_FAST(arg=0, lineno=1527)
numba.core.byteflow - DEBUG - stack ['$phi28.0']
numba.core.byteflow - DEBUG - dispatch pc=40, inst=LOAD_FAST(arg=7, lineno=1527)
numba.core.byteflow - DEBUG - stack ['$phi28.0', '$x38.5']
numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_GLOBAL(arg=2, lineno=1527)
numba.core.byteflow - DEBUG - stack ['$phi28.0', '$x38.5', '$sample40.6']
numba.core.byteflow - DEBUG - dispatch pc=44, inst=LOAD_FAST(arg=4, lineno=1527)
numba.core.byteflow - DEBUG - stack ['$phi28.0', '$x38.5', '$sample40.6', '$42load_global.7']
numba.core.byteflow - DEBUG - dispatch pc=46, inst=LOAD_FAST(arg=7, lineno=1527)
numba.core.byteflow - DEBUG - stack ['$phi28.0', '$x38.5', '$sample40.6', '$42load_global.7', '$n44.8']
numba.core.byteflow - DEBUG - dispatch pc=48, inst=LOAD_FAST(arg=5, lineno=1527)
numba.core.byteflow - DEBUG - stack ['$phi28.0', '$x38.5', '$sample40.6', '$42load_global.7', '$n44.8', '$sample46.9']
numba.core.byteflow - DEBUG - dispatch pc=50, inst=BINARY_ADD(arg=None, lineno=1527)
numba.core.byteflow - DEBUG - stack ['$phi28.0', '$x38.5', '$sample40.6', '$42load_global.7', '$n44.8', '$sample46.9', '$n_fft48.10']
numba.core.byteflow - DEBUG - dispatch pc=52, inst=CALL_FUNCTION(arg=2, lineno=1527)
numba.core.byteflow - DEBUG - stack ['$phi28.0', '$x38.5', '$sample40.6', '$42load_global.7', '$n44.8', '$50binary_add.11']
numba.core.byteflow - DEBUG - dispatch pc=54, inst=BUILD_SLICE(arg=2, lineno=1527)
numba.core.byteflow - DEBUG - stack ['$phi28.0', '$x38.5', '$sample40.6', '$52call_function.12']
numba.core.byteflow - DEBUG - dispatch pc=56, inst=DUP_TOP_TWO(arg=None, lineno=1527)
numba.core.byteflow - DEBUG - stack ['$phi28.0', '$x38.5', '$54build_slice.14']
numba.core.byteflow - DEBUG - dispatch pc=58, inst=BINARY_SUBSCR(arg=None, lineno=1527)
numba.core.byteflow - DEBUG - stack ['$phi28.0', '$x38.5', '$54build_slice.14', '$56dup_top_two.15', '$56dup_top_two.16']
numba.core.byteflow - DEBUG - dispatch pc=60, inst=LOAD_FAST(arg=1, lineno=1527)
numba.core.byteflow - DEBUG - stack ['$phi28.0', '$x38.5', '$54build_slice.14', '$58binary_subscr.17']
numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_CONST(arg=1, lineno=1527)
numba.core.byteflow - DEBUG - stack ['$phi28.0', '$x38.5', '$54build_slice.14', '$58binary_subscr.17', '$win_sq60.18']
numba.core.byteflow - DEBUG - dispatch pc=64, inst=LOAD_GLOBAL(arg=3, lineno=1527)
numba.core.byteflow - DEBUG - stack ['$phi28.0', '$x38.5', '$54build_slice.14', '$58binary_subscr.17', '$win_sq60.18', '$const62.19']
numba.core.byteflow - DEBUG - dispatch pc=66, inst=LOAD_CONST(arg=2, lineno=1527)
numba.core.byteflow - DEBUG - stack ['$phi28.0', '$x38.5', '$54build_slice.14', '$58binary_subscr.17', '$win_sq60.18', '$const62.19', '$64load_global.20']
numba.core.byteflow - DEBUG - dispatch pc=68, inst=LOAD_GLOBAL(arg=2, lineno=1527)
numba.core.byteflow - DEBUG - stack ['$phi28.0', '$x38.5', '$54build_slice.14', '$58binary_subscr.17', '$win_sq60.18', '$const62.19', '$64load_global.20', '$const66.21']
numba.core.byteflow - DEBUG - dispatch pc=70, inst=LOAD_FAST(arg=5, lineno=1527)
numba.core.byteflow - DEBUG - stack ['$phi28.0', '$x38.5', '$54build_slice.14', '$58binary_subscr.17', '$win_sq60.18', '$const62.19', '$64load_global.20', '$const66.21', '$68load_global.22']
numba.core.byteflow - DEBUG - dispatch pc=72, inst=LOAD_FAST(arg=4, lineno=1527)
numba.core.byteflow - DEBUG - stack ['$phi28.0', '$x38.5', '$54build_slice.14', '$58binary_subscr.17', '$win_sq60.18', '$const62.19', '$64load_global.20', '$const66.21', '$68load_global.22', '$n_fft70.23']
numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=7, lineno=1527)
numba.core.byteflow - DEBUG - stack ['$phi28.0', '$x38.5', '$54build_slice.14', '$58binary_subscr.17', '$win_sq60.18', '$const62.19', '$64load_global.20', '$const66.21', '$68load_global.22', '$n_fft70.23', '$n72.24']
numba.core.byteflow - DEBUG - dispatch pc=76, inst=BINARY_SUBTRACT(arg=None, lineno=1527)
numba.core.byteflow - DEBUG - stack ['$phi28.0', '$x38.5', '$54build_slice.14', '$58binary_subscr.17', '$win_sq60.18', '$const62.19', '$64load_global.20', '$const66.21', '$68load_global.22', '$n_fft70.23', '$n72.24', '$sample74.25']
numba.core.byteflow - DEBUG - dispatch pc=78, inst=CALL_FUNCTION(arg=2, lineno=1527)
numba.core.byteflow - DEBUG - stack ['$phi28.0', '$x38.5', '$54build_slice.14', '$58binary_subscr.17', '$win_sq60.18', '$const62.19', '$64load_global.20', '$const66.21', '$68load_global.22', '$n_fft70.23', '$76binary_subtract.26']
numba.core.byteflow - DEBUG - dispatch pc=80, inst=CALL_FUNCTION(arg=2, lineno=1527)
numba.core.byteflow - DEBUG - stack ['$phi28.0', '$x38.5', '$54build_slice.14', '$58binary_subscr.17', '$win_sq60.18', '$const62.19', '$64load_global.20', '$const66.21', '$78call_function.27']
numba.core.byteflow - DEBUG - dispatch pc=82, inst=BUILD_SLICE(arg=2, lineno=1527)
numba.core.byteflow - DEBUG - stack ['$phi28.0', '$x38.5', '$54build_slice.14', '$58binary_subscr.17', '$win_sq60.18', '$const62.19', '$80call_function.28']
numba.core.byteflow - DEBUG - dispatch pc=84, inst=BINARY_SUBSCR(arg=None, lineno=1527)
numba.core.byteflow - DEBUG - stack ['$phi28.0', '$x38.5', '$54build_slice.14', '$58binary_subscr.17', '$win_sq60.18', '$82build_slice.30']
numba.core.byteflow - DEBUG - dispatch pc=86, inst=INPLACE_ADD(arg=None, lineno=1527)
numba.core.byteflow - DEBUG - stack ['$phi28.0', '$x38.5', '$54build_slice.14', '$58binary_subscr.17', '$84binary_subscr.31']
numba.core.byteflow - DEBUG - dispatch pc=88, inst=ROT_THREE(arg=None, lineno=1527)
numba.core.byteflow - DEBUG - stack ['$phi28.0', '$x38.5', '$54build_slice.14', '$86inplace_add.32']
numba.core.byteflow - DEBUG - dispatch pc=90, inst=STORE_SUBSCR(arg=None, lineno=1527)
numba.core.byteflow - DEBUG - stack ['$phi28.0', '$86inplace_add.32', '$x38.5', '$54build_slice.14']
numba.core.byteflow - DEBUG - dispatch pc=92, inst=JUMP_ABSOLUTE(arg=14, lineno=1527)
numba.core.byteflow - DEBUG - stack ['$phi28.0']
numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=26, stack=('$phi28.0',), blockstack=(), npush=0)]
numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=26 nstack_initial=1)])
numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=26 nstack_initial=1): {'$phi26.0'},
             State(pc_initial=28 nstack_initial=2): {'$phi28.1'},
             State(pc_initial=94 nstack_initial=0): set()})
numba.core.byteflow - DEBUG - defmap: {'$phi26.0': State(pc_initial=0 nstack_initial=0),
 '$phi28.1': State(pc_initial=26 nstack_initial=1)}
numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi26.0': {('$24get_iter.9',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi28.0', State(pc_initial=28 nstack_initial=2))},
             '$phi28.0': {('$phi26.0', State(pc_initial=26 nstack_initial=1))},
             '$phi28.1': {('$26for_iter.2',
                           State(pc_initial=26 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi26.0': {('$24get_iter.9',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi26.0', State(pc_initial=26 nstack_initial=1))},
             '$phi28.0': {('$24get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi28.1': {('$26for_iter.2',
                           State(pc_initial=26 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi26.0': {('$24get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi28.0': {('$24get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi28.1': {('$26for_iter.2',
                           State(pc_initial=26 nstack_initial=1))}})
numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi26.0': {('$24get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi28.0': {('$24get_iter.9',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi28.1': {('$26for_iter.2',
                           State(pc_initial=26 nstack_initial=1))}})
numba.core.byteflow - DEBUG - keep phismap: {'$phi26.0': {('$24get_iter.9', State(pc_initial=0 nstack_initial=0))},
 '$phi28.1': {('$26for_iter.2', State(pc_initial=26 nstack_initial=1))}}
numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi26.0': '$24get_iter.9'},
             State(pc_initial=26 nstack_initial=1): {'$phi28.1': '$26for_iter.2'}})
numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$x4.1'}), (6, {'func': '$2load_global.0', 'args': ['$x4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_global.3'}), (12, {'res': '$win_sq12.4'}), (14, {'func': '$10load_global.3', 'args': ['$win_sq12.4'], 'res': '$14call_function.5'}), (16, {'value': '$14call_function.5'}), (18, {'res': '$18load_global.6'}), (20, {'res': '$n_frames20.7'}), (22, {'func': '$18load_global.6', 'args': ['$n_frames20.7'], 'res': '$22call_function.8'}), (24, {'value': '$22call_function.8', 'res': '$24get_iter.9'})), outgoing_phis={'$phi26.0': '$24get_iter.9'}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: ('$24get_iter.9',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=26 nstack_initial=1):
AdaptBlockInfo(insts=((26, {'iterator': '$phi26.0', 'pair': '$26for_iter.1', 'indval': '$26for_iter.2', 'pred': '$26for_iter.3'}),), outgoing_phis={'$phi28.1': '$26for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={94: (), 28: ('$phi26.0', '$26for_iter.2')})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=28 nstack_initial=2):
AdaptBlockInfo(insts=((28, {'value': '$phi28.1'}), (30, {'res': '$i30.2'}), (32, {'res': '$hop_length32.3'}), (34, {'lhs': '$i30.2', 'rhs': '$hop_length32.3', 'res': '$34binary_multiply.4'}), (36, {'value': '$34binary_multiply.4'}), (38, {'res': '$x38.5'}), (40, {'res': '$sample40.6'}), (42, {'res': '$42load_global.7'}), (44, {'res': '$n44.8'}), (46, {'res': '$sample46.9'}), (48, {'res': '$n_fft48.10'}), (50, {'lhs': '$sample46.9', 'rhs': '$n_fft48.10', 'res': '$50binary_add.11'}), (52, {'func': '$42load_global.7', 'args': ['$n44.8', '$50binary_add.11'], 'res': '$52call_function.12'}), (54, {'start': '$sample40.6', 'stop': '$52call_function.12', 'step': None, 'res': '$54build_slice.14', 'slicevar': '$54build_slice.13'}), (56, {'orig': ['$x38.5', '$54build_slice.14'], 'duped': ['$56dup_top_two.15', '$56dup_top_two.16']}), (58, {'index': '$56dup_top_two.16', 'target': '$56dup_top_two.15', 'res': '$58binary_subscr.17'}), (60, {'res': '$win_sq60.18'}), (62, {'res': '$const62.19'}), (64, {'res': '$64load_global.20'}), (66, {'res': '$const66.21'}), (68, {'res': '$68load_global.22'}), (70, {'res': '$n_fft70.23'}), (72, {'res': '$n72.24'}), (74, {'res': '$sample74.25'}), (76, {'lhs': '$n72.24', 'rhs': '$sample74.25', 'res': '$76binary_subtract.26'}), (78, {'func': '$68load_global.22', 'args': ['$n_fft70.23', '$76binary_subtract.26'], 'res': '$78call_function.27'}), (80, {'func': '$64load_global.20', 'args': ['$const66.21', '$78call_function.27'], 'res': '$80call_function.28'}), (82, {'start': '$const62.19', 'stop': '$80call_function.28', 'step': None, 'res': '$82build_slice.30', 'slicevar': '$82build_slice.29'}), (84, {'index': '$82build_slice.30', 'target': '$win_sq60.18', 'res': '$84binary_subscr.31'}), (86, {'lhs': '$58binary_subscr.17', 'rhs': '$84binary_subscr.31', 'res': '$86inplace_add.32'}), (90, {'target': '$x38.5', 'index': '$54build_slice.14', 'value': '$86inplace_add.32'}), (92, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={26: ('$phi28.0',)})
numba.core.byteflow - DEBUG - block_infos State(pc_initial=94 nstack_initial=0):
AdaptBlockInfo(insts=((94, {'res': '$const94.0'}), (96, {'retval': '$const94.0', 'castval': '$96return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    win_sq = arg(1, name=win_sq)             ['win_sq']
    n_frames = arg(2, name=n_frames)         ['n_frames']
    hop_length = arg(3, name=hop_length)     ['hop_length']
    $2load_global.0 = global(len: <built-in function len>) ['$2load_global.0']
    n = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, filters.py:1520)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'n', 'x']
    $10load_global.3 = global(len: <built-in function len>) ['$10load_global.3']
    n_fft = call $10load_global.3(win_sq, func=$10load_global.3, args=[Var(win_sq, filters.py:1520)], kws=(), vararg=None, varkwarg=None, target=None) ['$10load_global.3', 'n_fft', 'win_sq']
    $18load_global.6 = global(range: <class 'range'>) ['$18load_global.6']
    $22call_function.8 = call $18load_global.6(n_frames, func=$18load_global.6, args=[Var(n_frames, filters.py:1520)], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_global.6', '$22call_function.8', 'n_frames']
    $24get_iter.9 = getiter(value=$22call_function.8) ['$22call_function.8', '$24get_iter.9']
    $phi26.0 = $24get_iter.9                 ['$24get_iter.9', '$phi26.0']
    jump 26                                  []
label 26:
    $26for_iter.1 = iternext(value=$phi26.0) ['$26for_iter.1', '$phi26.0']
    $26for_iter.2 = pair_first(value=$26for_iter.1) ['$26for_iter.1', '$26for_iter.2']
    $26for_iter.3 = pair_second(value=$26for_iter.1) ['$26for_iter.1', '$26for_iter.3']
    $phi28.1 = $26for_iter.2                 ['$26for_iter.2', '$phi28.1']
    branch $26for_iter.3, 28, 94             ['$26for_iter.3']
label 28:
    i = $phi28.1                             ['$phi28.1', 'i']
    sample = i * hop_length                  ['hop_length', 'i', 'sample']
    $42load_global.7 = global(min: <built-in function min>) ['$42load_global.7']
    $50binary_add.11 = sample + n_fft        ['$50binary_add.11', 'n_fft', 'sample']
    $52call_function.12 = call $42load_global.7(n, $50binary_add.11, func=$42load_global.7, args=[Var(n, filters.py:1523), Var($50binary_add.11, filters.py:1527)], kws=(), vararg=None, varkwarg=None, target=None) ['$42load_global.7', '$50binary_add.11', '$52call_function.12', 'n']
    $54build_slice.13 = global(slice: <class 'slice'>) ['$54build_slice.13']
    $54build_slice.14 = call $54build_slice.13(sample, $52call_function.12, func=$54build_slice.13, args=(Var(sample, filters.py:1526), Var($52call_function.12, filters.py:1527)), kws=(), vararg=None, varkwarg=None, target=None) ['$52call_function.12', '$54build_slice.13', '$54build_slice.14', 'sample']
    $58binary_subscr.17 = getitem(value=x, index=$54build_slice.14, fn=<built-in function getitem>) ['$54build_slice.14', '$58binary_subscr.17', 'x']
    $const62.19 = const(NoneType, None)      ['$const62.19']
    $64load_global.20 = global(max: <built-in function max>) ['$64load_global.20']
    $const66.21 = const(int, 0)              ['$const66.21']
    $68load_global.22 = global(min: <built-in function min>) ['$68load_global.22']
    $76binary_subtract.26 = n - sample       ['$76binary_subtract.26', 'n', 'sample']
    $78call_function.27 = call $68load_global.22(n_fft, $76binary_subtract.26, func=$68load_global.22, args=[Var(n_fft, filters.py:1524), Var($76binary_subtract.26, filters.py:1527)], kws=(), vararg=None, varkwarg=None, target=None) ['$68load_global.22', '$76binary_subtract.26', '$78call_function.27', 'n_fft']
    $80call_function.28 = call $64load_global.20($const66.21, $78call_function.27, func=$64load_global.20, args=[Var($const66.21, filters.py:1527), Var($78call_function.27, filters.py:1527)], kws=(), vararg=None, varkwarg=None, target=None) ['$64load_global.20', '$78call_function.27', '$80call_function.28', '$const66.21']
    $82build_slice.29 = global(slice: <class 'slice'>) ['$82build_slice.29']
    $82build_slice.30 = call $82build_slice.29($const62.19, $80call_function.28, func=$82build_slice.29, args=(Var($const62.19, filters.py:1527), Var($80call_function.28, filters.py:1527)), kws=(), vararg=None, varkwarg=None, target=None) ['$80call_function.28', '$82build_slice.29', '$82build_slice.30', '$const62.19']
    $84binary_subscr.31 = getitem(value=win_sq, index=$82build_slice.30, fn=<built-in function getitem>) ['$82build_slice.30', '$84binary_subscr.31', 'win_sq']
    $86inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$58binary_subscr.17, rhs=$84binary_subscr.31, static_lhs=Undefined, static_rhs=Undefined) ['$58binary_subscr.17', '$84binary_subscr.31', '$86inplace_add.32']
    x[$54build_slice.14] = $86inplace_add.32 ['$54build_slice.14', '$86inplace_add.32', 'x']
    jump 26                                  []
label 94:
    $const94.0 = const(NoneType, None)       ['$const94.0']
    $96return_value.1 = cast(value=$const94.0) ['$96return_value.1', '$const94.0']
    return $96return_value.1                 ['$96return_value.1']

numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x70875271a290>
numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
numba.core.ssa - DEBUG - on stmt: win_sq = arg(1, name=win_sq)
numba.core.ssa - DEBUG - on stmt: n_frames = arg(2, name=n_frames)
numba.core.ssa - DEBUG - on stmt: hop_length = arg(3, name=hop_length)
numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(len: <built-in function len>)
numba.core.ssa - DEBUG - on stmt: n = call $2load_global.0(x, func=$2load_global.0, args=[Var(x, filters.py:1520)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $10load_global.3 = global(len: <built-in function len>)
numba.core.ssa - DEBUG - on stmt: n_fft = call $10load_global.3(win_sq, func=$10load_global.3, args=[Var(win_sq, filters.py:1520)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $18load_global.6 = global(range: <class 'range'>)
numba.core.ssa - DEBUG - on stmt: $22call_function.8 = call $18load_global.6(n_frames, func=$18load_global.6, args=[Var(n_frames, filters.py:1520)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $24get_iter.9 = getiter(value=$22call_function.8)
numba.core.ssa - DEBUG - on stmt: $phi26.0 = $24get_iter.9
numba.core.ssa - DEBUG - on stmt: jump 26
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 26
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x70875271a290>
numba.core.ssa - DEBUG - on stmt: $26for_iter.1 = iternext(value=$phi26.0)
numba.core.ssa - DEBUG - on stmt: $26for_iter.2 = pair_first(value=$26for_iter.1)
numba.core.ssa - DEBUG - on stmt: $26for_iter.3 = pair_second(value=$26for_iter.1)
numba.core.ssa - DEBUG - on stmt: $phi28.1 = $26for_iter.2
numba.core.ssa - DEBUG - on stmt: branch $26for_iter.3, 28, 94
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 28
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x70875271a290>
numba.core.ssa - DEBUG - on stmt: i = $phi28.1
numba.core.ssa - DEBUG - on stmt: sample = i * hop_length
numba.core.ssa - DEBUG - on stmt: $42load_global.7 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $50binary_add.11 = sample + n_fft
numba.core.ssa - DEBUG - on stmt: $52call_function.12 = call $42load_global.7(n, $50binary_add.11, func=$42load_global.7, args=[Var(n, filters.py:1523), Var($50binary_add.11, filters.py:1527)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $54build_slice.13 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $54build_slice.14 = call $54build_slice.13(sample, $52call_function.12, func=$54build_slice.13, args=(Var(sample, filters.py:1526), Var($52call_function.12, filters.py:1527)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $58binary_subscr.17 = getitem(value=x, index=$54build_slice.14, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $const62.19 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $64load_global.20 = global(max: <built-in function max>)
numba.core.ssa - DEBUG - on stmt: $const66.21 = const(int, 0)
numba.core.ssa - DEBUG - on stmt: $68load_global.22 = global(min: <built-in function min>)
numba.core.ssa - DEBUG - on stmt: $76binary_subtract.26 = n - sample
numba.core.ssa - DEBUG - on stmt: $78call_function.27 = call $68load_global.22(n_fft, $76binary_subtract.26, func=$68load_global.22, args=[Var(n_fft, filters.py:1524), Var($76binary_subtract.26, filters.py:1527)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $80call_function.28 = call $64load_global.20($const66.21, $78call_function.27, func=$64load_global.20, args=[Var($const66.21, filters.py:1527), Var($78call_function.27, filters.py:1527)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $82build_slice.29 = global(slice: <class 'slice'>)
numba.core.ssa - DEBUG - on stmt: $82build_slice.30 = call $82build_slice.29($const62.19, $80call_function.28, func=$82build_slice.29, args=(Var($const62.19, filters.py:1527), Var($80call_function.28, filters.py:1527)), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - DEBUG - on stmt: $84binary_subscr.31 = getitem(value=win_sq, index=$82build_slice.30, fn=<built-in function getitem>)
numba.core.ssa - DEBUG - on stmt: $86inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$58binary_subscr.17, rhs=$84binary_subscr.31, static_lhs=Undefined, static_rhs=Undefined)
numba.core.ssa - DEBUG - on stmt: x[$54build_slice.14] = $86inplace_add.32
numba.core.ssa - DEBUG - on stmt: jump 26
numba.core.ssa - DEBUG - ==== SSA block analysis pass on 94
numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x70875271a290>
numba.core.ssa - DEBUG - on stmt: $const94.0 = const(NoneType, None)
numba.core.ssa - DEBUG - on stmt: $96return_value.1 = cast(value=$const94.0)
numba.core.ssa - DEBUG - on stmt: return $96return_value.1
numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$10load_global.3': [(<numba.core.ir.Assign object at 0x708751acd510>,
                                   0)],
             '$18load_global.6': [(<numba.core.ir.Assign object at 0x708751acda50>,
                                   0)],
             '$22call_function.8': [(<numba.core.ir.Assign object at 0x708751acdd50>,
                                     0)],
             '$24get_iter.9': [(<numba.core.ir.Assign object at 0x708751acde70>,
                                0)],
             '$26for_iter.1': [(<numba.core.ir.Assign object at 0x708751ace020>,
                                26)],
             '$26for_iter.2': [(<numba.core.ir.Assign object at 0x708751ace140>,
                                26)],
             '$26for_iter.3': [(<numba.core.ir.Assign object at 0x7087527180a0>,
                                26)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x708751accfd0>,
                                  0)],
             '$42load_global.7': [(<numba.core.ir.Assign object at 0x708751ace470>,
                                   28)],
             '$50binary_add.11': [(<numba.core.ir.Assign object at 0x708751ace980>,
                                   28)],
             '$52call_function.12': [(<numba.core.ir.Assign object at 0x708751aceb30>,
                                      28)],
             '$54build_slice.13': [(<numba.core.ir.Assign object at 0x708751acec50>,
                                    28)],
             '$54build_slice.14': [(<numba.core.ir.Assign object at 0x708751aced70>,
                                    28)],
             '$58binary_subscr.17': [(<numba.core.ir.Assign object at 0x708751acf100>,
                                      28)],
             '$64load_global.20': [(<numba.core.ir.Assign object at 0x708751acf4f0>,
                                    28)],
             '$68load_global.22': [(<numba.core.ir.Assign object at 0x708751acf7f0>,
                                    28)],
             '$76binary_subtract.26': [(<numba.core.ir.Assign object at 0x708751acfd00>,
                                        28)],
             '$78call_function.27': [(<numba.core.ir.Assign object at 0x708751acfeb0>,
                                      28)],
             '$80call_function.28': [(<numba.core.ir.Assign object at 0x708751aaa0b0>,
                                      28)],
             '$82build_slice.29': [(<numba.core.ir.Assign object at 0x708751aaabf0>,
                                    28)],
             '$82build_slice.30': [(<numba.core.ir.Assign object at 0x708751aabf10>,
                                    28)],
             '$84binary_subscr.31': [(<numba.core.ir.Assign object at 0x708751aabdc0>,
                                      28)],
             '$86inplace_add.32': [(<numba.core.ir.Assign object at 0x708751aabca0>,
                                    28)],
             '$96return_value.1': [(<numba.core.ir.Assign object at 0x708751acf1f0>,
                                    94)],
             '$const62.19': [(<numba.core.ir.Assign object at 0x708751acf370>,
                              28)],
             '$const66.21': [(<numba.core.ir.Assign object at 0x708751acf670>,
                              28)],
             '$const94.0': [(<numba.core.ir.Assign object at 0x708751ace6b0>,
                             94)],
             '$phi26.0': [(<numba.core.ir.Assign object at 0x708751acd0f0>, 0)],
             '$phi28.1': [(<numba.core.ir.Assign object at 0x70875271af20>,
                           26)],
             'hop_length': [(<numba.core.ir.Assign object at 0x708752ed13f0>,
                             0)],
             'i': [(<numba.core.ir.Assign object at 0x708752719d80>, 28)],
             'n': [(<numba.core.ir.Assign object at 0x708751acd2d0>, 0)],
             'n_fft': [(<numba.core.ir.Assign object at 0x708751acd810>, 0)],
             'n_frames': [(<numba.core.ir.Assign object at 0x708752719a80>, 0)],
             'sample': [(<numba.core.ir.Assign object at 0x708752c437f0>, 28)],
             'win_sq': [(<numba.core.ir.Assign object at 0x708752719810>, 0)],
             'x': [(<numba.core.ir.Assign object at 0x708752719750>, 0)]})
numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x70875271a290>
root - DEBUG - Audio preprocessed in 14.32 seconds
root - INFO - Transcribing audio
root - DEBUG - Audio transcribed in 1.05 seconds
